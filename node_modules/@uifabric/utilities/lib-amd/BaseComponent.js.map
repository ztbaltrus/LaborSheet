{"version":3,"file":"BaseComponent.js","sourceRoot":"../src/","sources":["BaseComponent.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Async } from './Async';\r\nimport { EventGroup } from './EventGroup';\r\nimport { IDisposable } from './IDisposable';\r\nimport { warnDeprecations, warnMutuallyExclusive, warnConditionallyRequiredProps, ISettingsMap } from './warn';\r\nimport { initializeFocusRects } from './initializeFocusRects';\r\nimport { initializeDir } from './initializeDir';\r\n\r\n/**\r\n * BaseProps interface.\r\n *\r\n * @public\r\n */\r\n// tslint:disable-next-line:no-any\r\nexport interface IBaseProps<T = any> {\r\n  componentRef?: (ref: T | null) => (void | T);\r\n}\r\n\r\n/**\r\n * BaseComponent class, which provides basic helpers for all components.\r\n *\r\n * @public\r\n */\r\nexport class BaseComponent<P extends IBaseProps = {}, S = {}> extends React.Component<P, S> {\r\n  /**\r\n   * @deprecated Use React's error boundaries instead.\r\n   */\r\n  // tslint:disable-next-line:no-any\r\n  public static onError: ((errorMessage?: string, ex?: any) => void);\r\n\r\n  /**\r\n   * Controls whether the componentRef prop will be resolved by this component instance. If you are\r\n   * implementing a passthrough (higher-order component), you would set this to false and pass through\r\n   * the props to the inner component, allowing it to resolve the componentRef.\r\n   */\r\n  protected _shouldUpdateComponentRef: boolean;\r\n\r\n  // tslint:disable:variable-name\r\n  private __async: Async;\r\n  private __events: EventGroup;\r\n  private __disposables: IDisposable[] | null;\r\n  private __resolves: { [name: string]: (ref: React.ReactNode) => React.ReactNode };\r\n  private __className: string;\r\n  // tslint:enable:variable-name\r\n\r\n  /**\r\n   * BaseComponent constructor\r\n   * @param props - The props for the component.\r\n   * @param context - The context for the component.\r\n   */\r\n  // tslint:disable-next-line:no-any\r\n  constructor(props: P, context?: any) {\r\n    super(props, context);\r\n\r\n    // Ensure basic assumptions about the environment.\r\n    initializeFocusRects();\r\n    initializeDir();\r\n\r\n    this._shouldUpdateComponentRef = true;\r\n\r\n    _makeAllSafe(this, BaseComponent.prototype, [\r\n      'componentWillMount',\r\n      'componentDidMount',\r\n      'shouldComponentUpdate',\r\n      'componentWillUpdate',\r\n      'componentWillReceiveProps',\r\n      'render',\r\n      'componentDidUpdate',\r\n      'componentWillUnmount'\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * When the component will receive props, make sure the componentRef is updated.\r\n   */\r\n  // tslint:disable-next-line:no-any\r\n  public componentWillReceiveProps(newProps: Readonly<P>, newContext: any): void {\r\n    this._updateComponentRef(this.props, newProps);\r\n  }\r\n\r\n  /**\r\n   * When the component has mounted, update the componentRef.\r\n   */\r\n  public componentDidMount(): void {\r\n    this._updateComponentRef(undefined, this.props);\r\n  }\r\n\r\n  /**\r\n   * If we have disposables, dispose them automatically on unmount.\r\n   */\r\n  public componentWillUnmount(): void {\r\n    if (this.__disposables) {\r\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\r\n        let disposable = this.__disposables[i];\r\n\r\n        if (disposable.dispose) {\r\n          disposable.dispose();\r\n        }\r\n      }\r\n      this.__disposables = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the object's class name.\r\n   */\r\n  public get className(): string {\r\n    if (!this.__className) {\r\n      let funcNameRegex = /function (.{1,})\\(/;\r\n      let results = (funcNameRegex).exec((this).constructor.toString());\r\n\r\n      this.__className = (results && results.length > 1) ? results[1] : '';\r\n    }\r\n\r\n    return this.__className;\r\n  }\r\n\r\n  /**\r\n   * Allows subclasses to push things to this._disposables to be auto disposed.\r\n   */\r\n  protected get _disposables(): IDisposable[] {\r\n    if (!this.__disposables) {\r\n      this.__disposables = [];\r\n    }\r\n    return this.__disposables;\r\n  }\r\n\r\n  /**\r\n   * Gets the async instance associated with the component, created on demand. The async instance gives\r\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\r\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\r\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\r\n   */\r\n  protected get _async(): Async {\r\n    if (!this.__async) {\r\n      this.__async = new Async(this);\r\n      this._disposables.push(this.__async);\r\n    }\r\n\r\n    return this.__async;\r\n  }\r\n\r\n  /**\r\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\r\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\r\n   * will be automatically disconnected after unmounting. The helpers within the events object also\r\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\r\n   */\r\n  protected get _events(): EventGroup {\r\n    if (!this.__events) {\r\n      this.__events = new EventGroup(this);\r\n      this._disposables.push(this.__events);\r\n    }\r\n\r\n    return this.__events;\r\n  }\r\n\r\n  /**\r\n   * Helper to return a memoized ref resolver function.\r\n   * @param refName - Name of the member to assign the ref to.\r\n   * @returns A function instance keyed from the given refname.\r\n   * @deprecated Use `createRef` from `@uifabric/utilities`\r\n   */\r\n  protected _resolveRef(refName: string): (ref: React.ReactNode) => React.ReactNode {\r\n    if (!this.__resolves) {\r\n      this.__resolves = {};\r\n    }\r\n    if (!this.__resolves[refName]) {\r\n      // tslint:disable-next-line:no-any\r\n      this.__resolves[refName] = (ref: React.ReactNode) => {\r\n        // tslint:disable-next-line:no-any\r\n        return (this as any)[refName] = ref;\r\n      };\r\n    }\r\n\r\n    return this.__resolves[refName];\r\n  }\r\n\r\n  /**\r\n   * Updates the componentRef (by calling it with \"this\" when necessary.)\r\n   */\r\n  protected _updateComponentRef(currentProps: IBaseProps | undefined, newProps: IBaseProps = {}): void {\r\n    if (this._shouldUpdateComponentRef &&\r\n      ((!currentProps && newProps.componentRef) ||\r\n        (currentProps && currentProps.componentRef !== newProps.componentRef))) {\r\n\r\n      if (currentProps && currentProps.componentRef) {\r\n        currentProps.componentRef(null);\r\n      }\r\n\r\n      if (newProps.componentRef) {\r\n        newProps.componentRef(this);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Warns when a deprecated props are being used.\r\n   *\r\n   * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\r\n   * either null or a replacement prop name.\r\n   */\r\n  protected _warnDeprecations(deprecationMap: ISettingsMap<P>): void {\r\n    warnDeprecations(this.className, this.props, deprecationMap);\r\n  }\r\n\r\n  /**\r\n   * Warns when props which are mutually exclusive with each other are both used.\r\n   *\r\n   * @param mutuallyExclusiveMap - The map of mutually exclusive props.\r\n   */\r\n  protected _warnMutuallyExclusive(mutuallyExclusiveMap: ISettingsMap<P>): void {\r\n    warnMutuallyExclusive(this.className, this.props, mutuallyExclusiveMap);\r\n  }\r\n\r\n  /**\r\n   * Warns when props are required if a condition is met.\r\n   *\r\n   * @param requiredProps - The name of the props that are required when the condition is met.\r\n   * @param conditionalPropName - The name of the prop that the condition is based on.\r\n   * @param condition - Whether the condition is met.\r\n   */\r\n  protected _warnConditionallyRequiredProps(requiredProps: string[], conditionalPropName: string, condition: boolean): void {\r\n    warnConditionallyRequiredProps(this.className, this.props, requiredProps, conditionalPropName, condition);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\r\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\r\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\r\n */\r\nfunction _makeAllSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodNames: string[]): void {\r\n  for (let i = 0, len = methodNames.length; i < len; i++) {\r\n    _makeSafe(obj, prototype, methodNames[i]);\r\n  }\r\n}\r\n\r\nfunction _makeSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodName: string): void {\r\n  // tslint:disable:no-any\r\n  let classMethod = (obj as any)[methodName];\r\n  let prototypeMethod = (prototype as any)[methodName];\r\n  // tslint:enable:no-any\r\n\r\n  if (classMethod || prototypeMethod) {\r\n    // tslint:disable-next-line:no-any\r\n    (obj as any)[methodName] = function (): any {\r\n      let retVal;\r\n\r\n      if (prototypeMethod) {\r\n        retVal = prototypeMethod.apply(this, arguments);\r\n      }\r\n      if (classMethod !== prototypeMethod) {\r\n        retVal = classMethod.apply(this, arguments);\r\n      }\r\n\r\n      return retVal;\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Simple constant function for returning null, used to render empty templates in JSX.\r\n *\r\n * @public\r\n */\r\nexport function nullRender(): JSX.Element | null { return null; }\r\n"]}