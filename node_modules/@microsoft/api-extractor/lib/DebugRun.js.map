{"version":3,"sources":["DebugRun.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,yDAAyD;AACzD,oEAAoE;AAEpE,qDAAkD;AAClD,6BAA6B;AAE7B,MAAM,SAAS,GAAc,IAAI,qBAAS,CACxC;IACE,QAAQ,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,gBAAgB,EAAE;YAChB,iBAAiB,EAAE;gBACjB,QAAQ,EAAE,KAAK;gBACf,kCAAkC,EAAE,IAAI;gBACxC,QAAQ,EAAE,UAAU;gBACpB,aAAa,EAAE,IAAI;gBACnB,WAAW,EAAE,IAAI;gBACjB,wBAAwB,EAAE,IAAI;gBAC9B,OAAO,EAAE;oBACP,MAAM;iBACP;gBACD,KAAK,EAAE;oBACL,KAAK;oBACL,YAAY;oBACZ,mBAAmB;oBACnB,gBAAgB;oBAChB,iBAAiB;oBACjB,KAAK;iBACN;gBACD,kBAAkB,EAAE,IAAI;aACzB;YACD,SAAS,EAAE,CAAE,eAAe,CAAE;SAC/B;QACD,UAAU,EAAE,mCAAmC;KAChD;IACD,OAAO,EAAE;QACP,oBAAoB,EAAE,gBAAgB;QACtC,uBAAuB,EAAE,EAAG;KAC7B;IACD,aAAa,EAAE;QACb,OAAO,EAAE,KAAK;QACd,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;KAC/C;IACD,WAAW,EAAE;QACX,OAAO,EAAE,IAAI;QACb,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;KAC5C;IACD,SAAS,EAAE;QACT,OAAO,EAAE,IAAI;QACb,wBAAwB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC;QAChE,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;QACxD,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC;KAC7D;CACF,CACF,CAAC;AAEF,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;AAEjF,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAChC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;AACnD,CAAC;AAAC,IAAI,CAAC,CAAC;IACN,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAC5C,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC","file":"DebugRun.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// NOTE: THIS SOURCE FILE IS FOR DEBUGGING PURPOSES ONLY.\r\n//       IT IS INVOKED BY THE 'Run.cmd' AND 'Debug.cmd' BATCH FILES.\r\n\r\nimport { Extractor } from './extractor/Extractor';\r\nimport * as path from 'path';\r\n\r\nconst extractor: Extractor = new Extractor(\r\n  {\r\n    compiler: {\r\n      configType: 'tsconfig',\r\n      overrideTsconfig: {\r\n        'compilerOptions': {\r\n          'target': 'es6',\r\n          'forceConsistentCasingInFileNames': true,\r\n          'module': 'commonjs',\r\n          'declaration': true,\r\n          'sourceMap': true,\r\n          'experimentalDecorators': true,\r\n          'types': [\r\n            'node'\r\n          ],\r\n          'lib': [\r\n            'es5',\r\n            'scripthost',\r\n            'es2015.collection',\r\n            'es2015.promise',\r\n            'es2015.iterable',\r\n            'dom'\r\n          ],\r\n          'strictNullChecks': true\r\n        },\r\n        'include': [ 'lib/**/*.d.ts' ]\r\n      },\r\n      rootFolder: '../../libraries/node-core-library'\r\n    },\r\n    project: {\r\n      entryPointSourceFile: 'lib/index.d.ts',\r\n      externalJsonFileFolders: [ ]\r\n    },\r\n    apiReviewFile: {\r\n      enabled: false,\r\n      apiReviewFolder: path.join(__dirname, 'debug')\r\n    },\r\n    apiJsonFile: {\r\n      enabled: true,\r\n      outputFolder: path.join(__dirname, 'debug')\r\n    },\r\n    dtsRollup: {\r\n      enabled: true,\r\n      publishFolderForInternal: path.join(__dirname, 'debug/internal'),\r\n      publishFolderForBeta: path.join(__dirname, 'debug/beta'),\r\n      publishFolderForPublic: path.join(__dirname, 'debug/public')\r\n    }\r\n  }\r\n);\r\n\r\nconsole.log('CONFIG:' + JSON.stringify(extractor.actualConfig, undefined, '  '));\r\n\r\nif (!extractor.processProject()) {\r\n  console.log('processProject() failed the build');\r\n} else {\r\n  console.log('processProject() succeeded');\r\n}\r\n\r\nconsole.log('DebugRun completed.');\r\n"],"sourceRoot":"../src"}