import { AstSymbol } from './AstSymbol';
/**
 * Constructor parameters for DtsEntry
 */
export interface IDtsEntryParameters {
    readonly astSymbol: AstSymbol;
    readonly originalName: string;
    readonly exported: boolean;
}
/**
 * This is a data structure used by DtsRollupGenerator to track an AstSymbol that may be
 * emitted in the *.d.ts file.
 * @remarks
 * The additional contextual state beyond AstSymbol is:
 * - Whether it's an export of this entry point or not
 * - The calculated ReleaseTag, which we use for trimming
 * - The nameForEmit, which may get renamed by DtsRollupGenerator._makeUniqueNames()
 */
export declare class DtsEntry {
    /**
     * The AstSymbol that this entry represents.
     */
    readonly astSymbol: AstSymbol;
    /**
     * The original name, prior to any renaming by DtsRollupGenerator._makeUniqueNames()
     */
    readonly originalName: string;
    /**
     * Whether this API item is exported by the *.t.s file
     */
    readonly exported: boolean;
    private _nameForEmit;
    private _sortKey;
    constructor(parameters: IDtsEntryParameters);
    /**
     * The originalName, possibly renamed to ensure that all the top-level exports have unique names.
     */
    nameForEmit: string | undefined;
    /**
     * A sorting key used by DtsRollupGenerator._makeUniqueNames()
     */
    getSortKey(): string;
}
