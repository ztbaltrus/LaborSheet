{"version":3,"sources":["generators/dtsRollup/DtsEntry.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAa3D;;;;;;;;GAQG;AACH;IAoBE,YAAmB,UAA+B;QAJ1C,iBAAY,GAAuB,SAAS,CAAC;QAE7C,aAAQ,GAAuB,SAAS,CAAC;QAG/C,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,IAAW,WAAW;QACpB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAW,WAAW,CAAC,KAAyB;QAC9C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,8BAA8B;IAC3D,CAAC;IAED;;OAEG;IACI,UAAU;QACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,GAAW,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC;YAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC9B,yEAAyE;gBACzE,oFAAoF;gBACpF,+FAA+F;gBAC/F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AAvDD,4BAuDC","file":"DtsEntry.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { AstSymbol } from './AstSymbol';\r\n\r\n/**\r\n * Constructor parameters for DtsEntry\r\n */\r\nexport interface IDtsEntryParameters {\r\n  readonly astSymbol: AstSymbol;\r\n  readonly originalName: string;\r\n  readonly exported: boolean;\r\n}\r\n\r\n/**\r\n * This is a data structure used by DtsRollupGenerator to track an AstSymbol that may be\r\n * emitted in the *.d.ts file.\r\n * @remarks\r\n * The additional contextual state beyond AstSymbol is:\r\n * - Whether it's an export of this entry point or not\r\n * - The calculated ReleaseTag, which we use for trimming\r\n * - The nameForEmit, which may get renamed by DtsRollupGenerator._makeUniqueNames()\r\n */\r\nexport class DtsEntry {\r\n  /**\r\n   * The AstSymbol that this entry represents.\r\n   */\r\n  public readonly astSymbol: AstSymbol;\r\n\r\n  /**\r\n   * The original name, prior to any renaming by DtsRollupGenerator._makeUniqueNames()\r\n   */\r\n  public readonly originalName: string;\r\n\r\n  /**\r\n   * Whether this API item is exported by the *.t.s file\r\n   */\r\n  public readonly exported: boolean;\r\n\r\n  private _nameForEmit: string | undefined = undefined;\r\n\r\n  private _sortKey: string | undefined = undefined;\r\n\r\n  public constructor(parameters: IDtsEntryParameters) {\r\n    this.astSymbol = parameters.astSymbol;\r\n    this.originalName = parameters.originalName;\r\n    this.exported = parameters.exported;\r\n  }\r\n\r\n  /**\r\n   * The originalName, possibly renamed to ensure that all the top-level exports have unique names.\r\n   */\r\n  public get nameForEmit(): string | undefined {\r\n    return this._nameForEmit;\r\n  }\r\n\r\n  public set nameForEmit(value: string | undefined) {\r\n    this._nameForEmit = value;\r\n    this._sortKey = undefined; // invalidate the cached value\r\n  }\r\n\r\n  /**\r\n   * A sorting key used by DtsRollupGenerator._makeUniqueNames()\r\n   */\r\n  public getSortKey(): string {\r\n    if (!this._sortKey) {\r\n      const name: string = this.nameForEmit || this.originalName;\r\n      if (name.substr(0, 1) === '_') {\r\n        // Removes the leading underscore, for example: \"_example\" --> \"example*\"\r\n        // This causes internal definitions to sort alphabetically with regular definitions.\r\n        // The star is appended to preserve uniqueness, since \"*\" is not a legal  identifier character.\r\n        this._sortKey = name.substr(1) + '*';\r\n      } else {\r\n        this._sortKey = name;\r\n      }\r\n    }\r\n    return this._sortKey;\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../src"}