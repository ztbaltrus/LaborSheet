var FieldCustomizerDuplicateInstances = (function () {
    function FieldCustomizerDuplicateInstances(serverURL) {
        this._serverURL = serverURL;
        this._listName = 'TABTestFieldCustomizerListTest';
        this._numberOfRowsInList = 3;
        this._numberOfTestedFields = 2;
    }
    FieldCustomizerDuplicateInstances.prototype.TestName = function () {
        return 'FieldCustomizer: two instances of same FC';
    };
    FieldCustomizerDuplicateInstances.prototype.TestOwner = function () {
        return 'dagaeta';
    };
    FieldCustomizerDuplicateInstances.prototype.TestIncludeScripts = function () {
        return [
            '<ProductScriptsLocation>msajaxbundle.debug.js',
            '<ProductScriptsLocation>sp.runtime.debug.js',
            '<ProductScriptsLocation>sp.debug.js',
            '<TestLocation>/TabTaskLib.debug.js',
            '<AzureTaskLibLocation>/sp-tab-tasklib.js'
        ];
    };
    FieldCustomizerDuplicateInstances.prototype.TestSetup = function () {
        var azurePath = TAB.Settings.Get('AzurePath');
        var loaderUrl = azurePath + "/listview-host-assembly_default.js";
        SPTaskLib.PageUtil.SetDebugManifests({ loaderUrl: loaderUrl });
        TAB.Log.Comment('FieldCustomizer test start');
        SPTaskLib.ExtensionUtil.loadList(this._listName);
    };
    FieldCustomizerDuplicateInstances.prototype.TestRun = function () {
        var _this = this;
        var customListPagePath = "/Lists/" + this._listName + "/AllItems.aspx";
        var fieldCustomizers = '{' +
            '"Percent":{"id":"c60bc741-08cf-4187-b914-39875486cb54"},' +
            '"Rating":{"id":"c60bc741-08cf-4187-b914-39875486cb54"}' +
            '}';
        var spQueryParams = {
            loadSPFX: true,
            fieldCustomizers: fieldCustomizers,
            params: 'disableFeatures=851'
        };
        var pageUrl = SPTaskLib.PageUtil.CreatePageUrl(customListPagePath, spQueryParams);
        TAB.AddTask(TAB.LoadPage(pageUrl));
        TAB.AddTask(TAB.MakeTask(function () {
            SPTaskLib.Utilities.ClientFeatures.SetOverrideFeature(851, false); 
        }), TAB.MakeWaiter(function () {
            return TAB.GetElements(TAB.Win, TAB.searchBy.customQuery, "[data-automation-id='fieldCustomizerDataContainer']").length === (_this._numberOfRowsInList * _this._numberOfTestedFields);
        }));
        TAB.AddTask(TAB.MakeTask(function () {
            TAB.Log.Comment('Validating field value\'s inner text was set' +
                'by FieldCustomizer (should be \'test-field-customizer\').');
            var customizedFields = TAB.GetElements(TAB.Win, TAB.searchBy.customQuery, "[data-automation-id='fieldCustomizerDataContainer']");
            if (customizedFields.length === 0) {
                TAB.Log.AddTaskFail('Row Fields for column (Percent) are not present');
            }
            if (customizedFields.length !== (_this._numberOfRowsInList * _this._numberOfTestedFields)) {
                TAB.Log.AddTaskFail('Two duplicate Field Customizer instances on same list not functioning');
            }
            for (var _i = 0, customizedFields_1 = customizedFields; _i < customizedFields_1.length; _i++) {
                var field = customizedFields_1[_i];
                if (!(field.innerText.trim() === 'test-field-customizer')) {
                    TAB.Log.AddTaskFail('Row Field innerText was not modified by FieldCustomizer');
                }
            }
        }));
        TAB.Log.AddTaskPass('Test complete');
    };
    return FieldCustomizerDuplicateInstances;
}());
TabTest = FieldCustomizerDuplicateInstances;
