define("0773bd53-a69e-4293-87e6-ba80ea4d614b_1.6.0", ["@microsoft/sp-component-base","@ms/sp-telemetry","@microsoft/sp-diagnostics","@microsoft/decorators","@microsoft/sp-core-library","@microsoft/sp-loader","resx-strings"], function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: external "@microsoft/decorators"
var decorators_ = __webpack_require__(4);
var decorators__default = /*#__PURE__*/__webpack_require__.n(decorators_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(1);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(2);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@microsoft/sp-component-base"
var sp_component_base_ = __webpack_require__(0);
var sp_component_base__default = /*#__PURE__*/__webpack_require__.n(sp_component_base_);

// CONCATENATED MODULE: ./lib/BaseExtension.js
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var BaseExtension_BaseExtension = (function (_super) {
    __extends(BaseExtension, _super);
    function BaseExtension() {
        var _this = _super.call(this) || this;
        _this._properties = {};
        return _this;
    }
    BaseExtension.prototype._init = function (context, propertiesJson) {
        var _this = this;
        this._initializeContext(context);
        this._deserializeProperties(propertiesJson);
        var logSource = this.context.serviceScope.consume(sp_diagnostics_["_logSourceServiceKey"]);
        var perflogKey = logSource + '.Extension.Init';
        sp_telemetry_["_PerformanceLogger"].startMarkForComponent(perflogKey);
        this._initPromise = this.onInit();
        this._initPromise.then(function () {
            sp_telemetry_["_PerformanceLogger"].endMarkForComponent(perflogKey);
            sp_telemetry_["_PerformanceLogger"].logPerformanceMetricToConsole(perflogKey, 'Extension.Init', _this.context.manifest.id, _this.context.manifest.alias);
        });
        return this._initPromise;
    };
    Object.defineProperty(BaseExtension.prototype, "properties", {
        get: function () {
            return this._properties;
        },
        enumerable: true,
        configurable: true
    });
    BaseExtension.prototype.onInit = function () {
        return Promise.resolve();
    };
    BaseExtension.prototype._deserializeProperties = function (propertiesJson) {
        this._properties = {};
        try {
            if (propertiesJson && propertiesJson.trim() !== '') {
                this._properties = JSON.parse(propertiesJson);
            }
        }
        catch (e) {
            var logSource = this.context.serviceScope.consume(sp_diagnostics_["_logSourceServiceKey"]);
            sp_diagnostics_["_TraceLogger"].logError(logSource, new Error("Failed to deserialize properties for extension \"" + this.context.manifest.alias + "\"\n          + \" with id=" + this.context.manifest.id + ": " + e.message));
        }
    };
    __decorate([
        decorators_["virtual"]
    ], BaseExtension.prototype, "onInit", null);
    return BaseExtension;
}(sp_component_base_["BaseComponent"]));
/* harmony default export */ var lib_BaseExtension = (BaseExtension_BaseExtension);

// CONCATENATED MODULE: ./lib/ExtensionContext.js
var ExtensionContext___extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var ExtensionContext = (function (_super) {
    ExtensionContext___extends(ExtensionContext, _super);
    function ExtensionContext(parameters) {
        return _super.call(this, parameters) || this;
    }
    return ExtensionContext;
}(sp_component_base_["BaseComponentContext"]));
/* harmony default export */ var lib_ExtensionContext = (ExtensionContext);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/sp-loader"
var sp_loader_ = __webpack_require__(6);
var sp_loader__default = /*#__PURE__*/__webpack_require__.n(sp_loader_);

// CONCATENATED MODULE: ./lib/ExtensionStrings.resx.js
var key = '_i/mWZag7vFX4034jbvvZkw';
var allStrings = ( false) ?
    require("./resx-strings/en-us.json") :
    __webpack_require__(7);
var strings = allStrings[key];
/* harmony default export */ var ExtensionStrings_resx = (strings);

// CONCATENATED MODULE: ./lib/ExtensionManager.js







var ExtensionManager_ExtensionManager = (function () {
    function ExtensionManager(serviceScope, expectedType) {
        this._serviceScope = serviceScope;
        this._expectedType = expectedType;
        this._extensions = [];
    }
    ExtensionManager.prototype.createExtension = function (componentId, propertiesJson, contextCreator) {
        var _this = this;
        var qosMonitor = new sp_diagnostics_["_QosMonitor"]('Extension.Create', true);
        var manifest = sp_loader_["SPComponentLoader"].tryGetManifestById(componentId);
        if (!manifest) {
            var manifestError = new Error(sp_core_library_["Text"].format(ExtensionStrings_resx.manifestNotFound, componentId));
            qosMonitor.writeUnexpectedFailure('ManifestNotFound', manifestError, { componentId: componentId });
            return Promise.reject(manifestError);
        }
        var instanceId = sp_core_library_["Guid"].newGuid().toString();
        var loggingTag = "Extension." + manifest.id + "." + instanceId;
        var context = contextCreator({
            manifest: manifest,
            parentServiceScope: this._serviceScope,
            instanceId: instanceId,
            loggingTag: loggingTag
        });
        var perfLogKeyCreate = loggingTag + '.Extension.Create';
        var perfLogKeyScriptLoad = loggingTag + '.Extension.ScriptLoad';
        sp_telemetry_["_PerformanceLogger"].startMarkForComponent(perfLogKeyCreate);
        var error = undefined;
        var extraData = this._createQosExtraData(manifest);
        try {
            sp_telemetry_["_PerformanceLogger"].startMarkForComponent(perfLogKeyScriptLoad);
            var modulePromise = sp_loader_["SPComponentLoader"].loadComponent(manifest);
            modulePromise.then(function () {
                sp_telemetry_["_PerformanceLogger"].endMarkForComponent(perfLogKeyScriptLoad);
                sp_telemetry_["_PerformanceLogger"].logPerformanceMetricToConsole(perfLogKeyScriptLoad, 'Extension.ScriptLoad', manifest.id, manifest.alias);
            });
            var createPromise = modulePromise.then(function (component) {
                var extensionClass = component.default;
                var extension = new extensionClass();
                if (!(extension instanceof lib_BaseExtension)) {
                    error = new Error(ExtensionStrings_resx.expectingBaseExtension);
                    qosMonitor.writeExpectedFailure('DoesNotExtendBaseExtension', error, extraData);
                    throw error;
                }
                if (!(extension instanceof _this._expectedType)) {
                    error = Error(sp_core_library_["Text"].format(ExtensionStrings_resx.wrongExtensionType, _this._expectedType));
                    qosMonitor.writeExpectedFailure('WrongExtensionType', error, extraData);
                    throw error;
                }
                return extension._init(context, propertiesJson).then(function () {
                    return extension;
                }).catch(function (e) {
                    error = new Error(sp_core_library_["Text"].format(ExtensionStrings_resx.extensionInitFailure, componentId));
                    qosMonitor.writeExpectedFailure('ExtensionInitFailure', error, extraData);
                    throw error;
                });
            }, function (e) {
                if (!error) {
                    error = new Error(sp_core_library_["Text"].format(ExtensionStrings_resx.extensionLoadFailure, componentId));
                    qosMonitor.writeExpectedFailure('ExtensionLoadFailure', error, extraData);
                }
                throw error;
            }).then(function (extension) {
                qosMonitor.writeSuccess(extraData);
                return extension;
            });
            createPromise.then(function (moduleLibrary) {
                sp_telemetry_["_PerformanceLogger"].endMarkForComponent(perfLogKeyCreate);
                sp_telemetry_["_PerformanceLogger"].logPerformanceMetricToConsole(perfLogKeyScriptLoad, 'Extension.Create', manifest.id, manifest.alias);
                _this._extensions.push(moduleLibrary);
            });
            sp_component_base_["_LegacyThirdPartyFabricCoreLoader"].load(manifest.isInternal);
            return createPromise;
        }
        catch (e) {
            qosMonitor.writeUnexpectedFailure('UnhandledCreateError', e, extraData);
            return Promise.reject(e);
        }
    };
    ExtensionManager.prototype.dispose = function () {
        if (!this._isDisposed) {
            this.disposeExtensions();
            delete this._serviceScope;
            delete this._extensions;
            delete this._expectedType;
        }
        this._isDisposed = true;
    };
    Object.defineProperty(ExtensionManager.prototype, "isDisposed", {
        get: function () {
            return this._isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    ExtensionManager.prototype.disposeExtensions = function () {
        for (var _i = 0, _a = this._extensions; _i < _a.length; _i++) {
            var extension = _a[_i];
            try {
                extension.dispose();
            }
            catch (e) {
                var manifest = extension.manifest;
                sp_diagnostics_["_TraceLogger"].logError(ExtensionManager._logSource, new Error("Failed to dispose extension \"" + manifest.alias + "\"\n            + \" with id=" + manifest.id + ": " + e.message));
            }
        }
        this._extensions = [];
    };
    ExtensionManager.prototype._createQosExtraData = function (manifest) {
        var qosExtraData = {
            alias: manifest.alias,
            isInternal: manifest.isInternal,
            manifestId: manifest.id,
            extensionType: manifest.extensionType
        };
        return qosExtraData;
    };
    ExtensionManager._logSource = sp_diagnostics_["_LogSource"].create('ExtensionManager');
    return ExtensionManager;
}());
/* harmony default export */ var lib_ExtensionManager = (ExtensionManager_ExtensionManager);

// CONCATENATED MODULE: ./lib/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "BaseExtension", function() { return lib_BaseExtension; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ExtensionContext", function() { return lib_ExtensionContext; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_ExtensionManager", function() { return lib_ExtensionManager; });





/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ })
/******/ ])});;
//# sourceMappingURL=sp-extension-base.js.map