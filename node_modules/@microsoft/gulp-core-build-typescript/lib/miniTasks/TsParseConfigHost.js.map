{"version":3,"sources":["miniTasks/TsParseConfigHost.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAG3D,oEAA0D;AAE1D;;GAEG;AACH;IAAA;QACS,8BAAyB,GAAY,KAAK,CAAC;IAapD,CAAC;IAXQ,aAAa,CAAC,OAAe,EAAE,UAAoB,EAAE,QAAkB,EAAE,QAAkB;QAChG,MAAM,CAAC,8BAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAEM,UAAU,CAAC,IAAY;QAC5B,MAAM,CAAC,8BAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,QAAQ,CAAC,IAAY;QAC1B,MAAM,CAAC,8BAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;CACF;AAdD,8CAcC","file":"TsParseConfigHost.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as typescript from 'typescript';\r\nimport { FileSystem } from '@microsoft/node-core-library';\r\n\r\n/**\r\n * Used as a helper to parse tsconfig.json files.\r\n */\r\nexport class TsParseConfigHost implements typescript.ParseConfigHost {\r\n  public useCaseSensitiveFileNames: boolean = false;\r\n\r\n  public readDirectory(rootDir: string, extensions: string[], excludes: string[], includes: string[]): string[] {\r\n    return FileSystem.readFolder(rootDir);\r\n  }\r\n\r\n  public fileExists(path: string): boolean {\r\n    return FileSystem.exists(path);\r\n  }\r\n\r\n  public readFile(path: string): string {\r\n    return FileSystem.readFile(path);\r\n  }\r\n}\r\n"],"sourceRoot":"../../../src"}