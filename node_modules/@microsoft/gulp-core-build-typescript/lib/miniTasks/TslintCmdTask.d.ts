/// <reference types="node" />
import { BaseCmdTask, IBaseCmdTaskConfig } from './BaseCmdTask';
/**
 * @public
 */
export interface ITslintCmdTaskConfig extends IBaseCmdTaskConfig {
    /**
     * Optional list of custom args to pass to the tool
     *
     * @remarks
     * Specifying a custom formatter will disable the standard error/warning reporting.
     */
    customArgs?: string[];
    /**
     * If true, displays warnings as errors. Defaults to false.
     */
    displayAsError?: boolean;
}
/**
 * @alpha
 */
export declare class TslintCmdTask extends BaseCmdTask<ITslintCmdTaskConfig> {
    constructor();
    loadSchema(): Object;
    executeTask(gulp: Object, completeCallback: (error?: string) => void): Promise<void> | undefined;
    protected _getArgs(): string[];
    protected _onClose(code: number, hasErrors: boolean, resolve: () => void, reject: (error: Error) => void): void;
    protected _onData(data: Buffer): void;
    private readonly _customFormatterSpecified;
}
