import LogFeature from './LogFeature';
import LogType from './LogType';
var LogEntry = (function () {
    function LogEntry(moduleName, logFeature, logType, logProperties) {
        if (logFeature === void 0) { logFeature = LogFeature.None; }
        if (logType === void 0) { logType = LogType.Trace; }
        if (moduleName) {
            this.moduleName = moduleName;
            this.logFeature = logFeature;
            this.logType = logType;
            this.logProperties = logProperties;
        }
        else {
            throw new Error('moduleName is invalid');
        }
    }
    LogEntry.prototype.toString = function () {
        var serializedLogProps = undefined;
        if (this.logProperties) {
            try {
                serializedLogProps = JSON.stringify(this.logProperties);
            }
            catch (e) {
                console.log('Error happens in toString():' + e);
            }
        }
        return this.moduleName + " | " + this.logFeature + " | " + this.logType + " | " + serializedLogProps;
    };
    return LogEntry;
}());
export default LogEntry;
