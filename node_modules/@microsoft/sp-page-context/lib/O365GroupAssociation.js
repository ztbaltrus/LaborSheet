import { Guid, Validate } from '@microsoft/sp-core-library';
export var O365GroupAssociationType;
(function (O365GroupAssociationType) {
    O365GroupAssociationType[O365GroupAssociationType["Unknown"] = 0] = "Unknown";
    O365GroupAssociationType[O365GroupAssociationType["Private"] = 1] = "Private";
    O365GroupAssociationType[O365GroupAssociationType["Public"] = 2] = "Public";
})(O365GroupAssociationType = O365GroupAssociationType || (O365GroupAssociationType = {}));
var O365GroupAssociation = (function () {
    function O365GroupAssociation(data) {
        this._validate(data);
        this._id = Guid.parse(data.id);
        switch (data.type) {
            case 'Private':
                this._type = O365GroupAssociationType.Private;
                break;
            case 'Public':
                this._type = O365GroupAssociationType.Public;
                break;
            default:
                this._type = O365GroupAssociationType.Unknown;
                break;
        }
    }
    O365GroupAssociation.prototype._serialize = function () {
        return {
            id: this.id.toString(),
            type: this.type
        };
    };
    Object.defineProperty(O365GroupAssociation.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(O365GroupAssociation.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    O365GroupAssociation.prototype._validate = function (data) {
        Validate.isNotNullOrUndefined(data, 'IO365GroupData object');
        Validate.isNotNullOrUndefined(data.id, 'data.id');
    };
    return O365GroupAssociation;
}());
export default O365GroupAssociation;
