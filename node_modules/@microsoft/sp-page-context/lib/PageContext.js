import { ServiceKey, Validate } from '@microsoft/sp-core-library';
import { _LogSource, _TraceLogger } from '@microsoft/sp-diagnostics';
import { _DynamicDataManager } from '@microsoft/sp-dynamic-data';
import AzureActiveDirectoryInfo from './AzureActiveDirectoryInfo';
import CultureInfo from './CultureInfo';
import SPList from './SPList';
import SPListItem from './SPListItem';
import SPSite from './SPSite';
import SPUser from './SPUser';
import SPWeb from './SPWeb';
var PageContext = (function () {
    function PageContext(serviceScope) {
        var _this = this;
        this._isInitialized = false;
        this._serviceScope = serviceScope;
        this._serviceScope.whenFinished(function () {
            _this._dynamicDataManager = serviceScope.consume(_DynamicDataManager.serviceKey);
            _this._dynamicDataManager.addSource(_this._buildDataSource());
        });
    }
    PageContext.prototype.initialize = function (options, legacyPageContext) {
        var _this = this;
        Validate.isNotNullOrUndefined(options, 'options');
        try {
            this._aadInfo = options.aadInfo ? new AzureActiveDirectoryInfo(options.aadInfo) : undefined;
            this._cultureInfo = new CultureInfo(options.cultureInfo);
            this._list = options.list ? new SPList(options.list) : undefined;
            this._listItem = options.listItem ? new SPListItem(options.listItem) : undefined;
            this._site = new SPSite(options.site);
            this._teamsContext = options.teams || undefined;
            this._user = new SPUser(options.user);
            this._web = new SPWeb(options.web);
            this._legacyPageContext = legacyPageContext;
        }
        catch (e) {
            _TraceLogger.logError(PageContext._logSource, e, 'initialize');
            throw e;
        }
        this._serviceScope.whenFinished(function () {
            _this._dynamicDataManager.notifySourceChanged(PageContext._dataSourceId);
        });
        this._isInitialized = true;
    };
    PageContext.prototype._serialize = function () {
        return {
            aadInfo: this.aadInfo ? this.aadInfo._serialize() : undefined,
            cultureInfo: this.cultureInfo._serialize(),
            list: this.list ? this.list._serialize() : undefined,
            listItem: this.listItem ? this.listItem._serialize() : undefined,
            site: this.site._serialize(),
            user: this.user._serialize(),
            web: this.web._serialize()
        };
    };
    Object.defineProperty(PageContext.prototype, "aadInfo", {
        get: function () {
            return this._aadInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "cultureInfo", {
        get: function () {
            return this._cultureInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "list", {
        get: function () {
            return this._list;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "listItem", {
        get: function () {
            return this._listItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "page", {
        get: function () {
            return this._page;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "site", {
        get: function () {
            return this._site;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "teams", {
        get: function () {
            return this._teamsContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "user", {
        get: function () {
            return this._user;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "web", {
        get: function () {
            return this._web;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "legacyPageContext", {
        get: function () {
            return this._legacyPageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "isInitialized", {
        get: function () {
            return this._isInitialized;
        },
        enumerable: true,
        configurable: true
    });
    PageContext.prototype._buildDataSource = function () {
        var _this = this;
        return {
            id: PageContext._dataSourceId,
            metadata: {
                title: 'Page Context',
                description: 'This includes some metadata about the page'
            },
            getPropertyDefinitions: function () { return [
                { id: 'aadInfo', title: 'AAD info' },
                { id: 'cultureInfo', title: 'Culture information' },
                { id: 'list', title: 'List' },
                { id: 'listItem', title: 'List item' },
                { id: 'site', title: 'Site' },
                { id: 'teams', title: 'Teams' },
                { id: 'user', title: 'User' },
                { id: 'web', title: 'Web' }
            ]; },
            getPropertyValue: function (propertyId) {
                switch (propertyId) {
                    case 'aadInfo':
                        return _this.aadInfo ? _this.aadInfo._serialize() : undefined;
                    case 'cultureInfo':
                        return _this.cultureInfo._serialize();
                    case 'list':
                        return _this.list ? _this.list._serialize() : undefined;
                    case 'listItem':
                        return _this.listItem ? _this.listItem._serialize() : undefined;
                    case 'site':
                        return _this.site ? _this.site._serialize() : undefined;
                    case 'teams':
                        if (_this.teams) {
                            return {
                                channelId: _this.teams.channelId,
                                channelName: _this.teams.channelName,
                                chatId: _this.teams.chatId,
                                entityId: _this.teams.entityId,
                                groupId: _this.teams.groupId,
                                hostClientType: _this.teams.hostClientType,
                                isFullScreen: _this.teams.isFullScreen,
                                isTeamArchived: _this.teams.isTeamArchived,
                                locale: _this.teams.locale,
                                loginHint: _this.teams.loginHint,
                                sessionId: _this.teams.sessionId,
                                subEntityId: _this.teams.subEntityId
                            };
                        }
                        else {
                            return undefined;
                        }
                    case 'user':
                        return _this.user ? _this.user._serialize() : undefined;
                    case 'web':
                        return _this.web ? _this.web._serialize() : undefined;
                    default:
                        return undefined;
                }
            }
        };
    };
    PageContext.serviceKey = ServiceKey.create('sp-page-context:PageContext', PageContext);
    PageContext._logSource = _LogSource.create('PageContext');
    PageContext._dataSourceId = 'PageContext';
    return PageContext;
}());
export default PageContext;
