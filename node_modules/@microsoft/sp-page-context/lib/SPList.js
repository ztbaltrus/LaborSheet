import SPPermission from './SPPermission';
import { Guid, Validate } from '@microsoft/sp-core-library';
var SPList = (function () {
    function SPList(data) {
        this._validate(data);
        this._baseTemplate = data.baseTemplate;
        this._id = Guid.parse(data.id);
        this._permissions = new SPPermission(data.permissions);
        this._serverRelativeUrl = data.serverRelativeUrl;
        this._title = data.title;
    }
    SPList.prototype._serialize = function () {
        return {
            id: this.id.toString(),
            title: this.title,
            permissions: this.permissions._serialize(),
            serverRelativeUrl: this.serverRelativeUrl
        };
    };
    Object.defineProperty(SPList.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPList.prototype, "permissions", {
        get: function () {
            return this._permissions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPList.prototype, "serverRelativeUrl", {
        get: function () {
            return this._serverRelativeUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPList.prototype, "title", {
        get: function () {
            return this._title;
        },
        enumerable: true,
        configurable: true
    });
    SPList.prototype._validate = function (data) {
        Validate.isNotNullOrUndefined(data, 'ISPListData object');
        Validate.isNotNullOrUndefined(data.baseTemplate, 'baseTemplate');
        Validate.isNotNullOrUndefined(Guid.tryParse(data.id), 'id');
        Validate.isNotNullOrUndefined(data.permissions, 'permissions');
        Validate.isNotNullOrUndefined(data.serverRelativeUrl, 'serverRelativeUrl');
        Validate.isNotNullOrUndefined(data.title, 'title');
    };
    return SPList;
}());
export default SPList;
