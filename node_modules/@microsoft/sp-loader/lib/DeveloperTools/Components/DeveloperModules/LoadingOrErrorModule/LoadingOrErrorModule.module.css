.loadingModule_f023ea70,.module_f023ea70{text-align:center;vertical-align:middle;height:100%;display:table;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.loadingModule_f023ea70>div{display:table-cell;text-align:center;vertical-align:middle}.errorText_f023ea70{font-size:17px;font-weight:300;display:table-cell;text-align:center;vertical-align:middle}.screenReaderErrorMessage_f023ea70{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
