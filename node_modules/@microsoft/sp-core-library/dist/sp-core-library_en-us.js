define("7263c7d0-1d6a-45ec-8d85-d4d1d234171b_1.6.0", ["@microsoft/sp-lodash-subset"], function(__WEBPACK_EXTERNAL_MODULE_2__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1),__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// CONCATENATED MODULE: ./lib/SPCoreLibraryStrings.resx.js
var key = '_gIErrcTokcw+/VVwa+ReIA';
var allStrings = ( false) ?
    require("./resx-strings/en-us.json") :
    __webpack_require__(1);
var strings = allStrings[key];
/* harmony default export */ var SPCoreLibraryStrings_resx = (strings);

// CONCATENATED MODULE: ./lib/Text.js

var Text_Text = (function () {
    function Text() {
    }
    Text.format = function (s) {
        var values = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            values[_i - 1] = arguments[_i];
        }
        if (s === null) {
            throw new Error(SPCoreLibraryStrings_resx.isNullValidateError.replace('{0}', 's'));
        }
        if (s === undefined) {
            throw new Error(SPCoreLibraryStrings_resx.isUndefinedValidateError.replace('{0}', 's'));
        }
        return s.replace(Text.FORMAT_REGEX, function (match) {
            var matchId = parseInt(match.replace(Text.FORMAT_ARGS_REGEX, ''), 10);
            var matchValue = values[matchId];
            if (matchId >= values.length || matchId < 0) {
                matchValue = match;
            }
            if (matchValue === null) {
                matchValue = 'null';
            }
            else if (matchValue === undefined) {
                matchValue = 'undefined';
            }
            return matchValue;
        });
    };
    Text.replaceAll = function (input, searchValue, replaceValue) {
        return input.split(searchValue).join(replaceValue);
    };
    Text.FORMAT_REGEX = /\{\d+\}/g;
    Text.FORMAT_ARGS_REGEX = /[\{\}]/g;
    return Text;
}());
/* harmony default export */ var lib_Text = (Text_Text);

// CONCATENATED MODULE: ./lib/Validate.js


var Validate_Validate = (function () {
    function Validate() {
    }
    Validate.isTrue = function (value, variableName) {
        if (!value) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.isFalseValidateError, variableName));
        }
    };
    Validate.isNotNullOrUndefined = function (value, variableName) {
        if (value === null) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.isNullValidateError, variableName));
        }
        if (value === undefined) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.isUndefinedValidateError, variableName));
        }
    };
    Validate.isNonemptyString = function (value, variableName) {
        Validate.isNotNullOrUndefined(value, variableName);
        if (!value || value && value.length === 0) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.isEmptyStringValidateError, variableName));
        }
    };
    Validate.isNotDisposed = function (value, className) {
        if (value.isDisposed) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.isDisposedValidateError, className));
        }
    };
    return Validate;
}());
/* harmony default export */ var lib_Validate = (Validate_Validate);

// CONCATENATED MODULE: ./lib/Version.js



var Version_Version = (function () {
    function Version(major, minor, patch, revision) {
        this._major = major;
        this._minor = minor;
        this._patch = patch;
        this._revision = revision;
    }
    Version.isValid = function (versionString) {
        return Version.tryParse(versionString) !== undefined;
    };
    Version.parse = function (versionString) {
        var version = Version.tryParse(versionString);
        if (version) {
            return version;
        }
        throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.invalidVersionStringError, versionString));
    };
    Version.tryParse = function (versionString) {
        if (versionString) {
            var versionRegex = /^([0-9]+)\.([0-9]+)(?:\.([0-9]+)(?:\.([0-9]+))?)?$/g;
            var regexExecRes = versionRegex.exec(versionString);
            if (regexExecRes) {
                return new Version(parseInt(regexExecRes[1], 10), parseInt(regexExecRes[2], 10), regexExecRes[3] !== undefined ? parseInt(regexExecRes[3], 10) : undefined, regexExecRes[4] !== undefined ? parseInt(regexExecRes[4], 10) : undefined);
            }
        }
        return undefined;
    };
    Version.compare = function (v1, v2) {
        lib_Validate.isNotNullOrUndefined(v1, 'v1');
        lib_Validate.isNotNullOrUndefined(v2, 'v2');
        if (v1.major !== v2.major) {
            return v1.major > v2.major ? 1 : -1;
        }
        if (v1.minor !== v2.minor) {
            return v1.minor > v2.minor ? 1 : -1;
        }
        if ((v1.patch || 0) !== (v2.patch || 0)) {
            return (v1.patch || 0) > (v2.patch || 0) ? 1 : -1;
        }
        if ((v1.revision || 0) !== (v2.revision || 0)) {
            return (v1.revision || 0) > (v2.revision || 0) ? 1 : -1;
        }
        return 0;
    };
    Object.defineProperty(Version.prototype, "major", {
        get: function () {
            return this._major;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Version.prototype, "minor", {
        get: function () {
            return this._minor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Version.prototype, "patch", {
        get: function () {
            return this._patch;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Version.prototype, "revision", {
        get: function () {
            return this._revision;
        },
        enumerable: true,
        configurable: true
    });
    Version.prototype.lessThan = function (compareWith) {
        return Version.compare(this, compareWith) < 0;
    };
    Version.prototype.greaterThan = function (compareWith) {
        return Version.compare(this, compareWith) > 0;
    };
    Version.prototype.equals = function (compareWith) {
        return Version.compare(this, compareWith) === 0;
    };
    Version.prototype.satisfies = function (compareWith) {
        lib_Validate.isNotNullOrUndefined(compareWith, 'compareWith');
        return this.major === compareWith.major && !this.lessThan(compareWith);
    };
    Version.prototype.toString = function () {
        var str = this.major + "." + this.minor;
        if (this.patch !== undefined) {
            str += "." + this.patch;
            if (this.revision !== undefined) {
                str += "." + this.revision;
            }
        }
        return str;
    };
    return Version;
}());
/* harmony default export */ var lib_Version = (Version_Version);

// CONCATENATED MODULE: ./lib/BrowserDetection.js

var BrowserDetection_BrowserDetection = (function () {
    function BrowserDetection() {
    }
    BrowserDetection.getBrowserInformation = function (userAgent) {
        var agent = userAgent || BrowserDetection.getUserAgent();
        return BrowserDetection.buildBrowserInformation(agent);
    };
    BrowserDetection.getUserAgent = function () {
        return (window && window.navigator && navigator.userAgent) || '';
    };
    BrowserDetection.buildBrowserInformation = function (userAgent) {
        var agent = userAgent.toLowerCase();
        var browserInfo = {
            browser: 0 ,
            browserVersion: undefined,
            os: 0 ,
            osVersion: undefined,
            userAgent: userAgent
        };
        browserInfo = BrowserDetection.fillBrowser(browserInfo, agent);
        browserInfo = BrowserDetection.fillOS(browserInfo, agent);
        return browserInfo;
    };
    BrowserDetection.fillBrowser = function (browserInfo, userAgent) {
        var browser = 0 ;
        var browserVersion = undefined;
        var match;
        if (match = /msie (\d+)([\d.]*)/.exec(userAgent)) {
            browser = 4 ;
        }
        else if (match = /trident.*rv:(\d+)([\d.]*)/.exec(userAgent)) {
            browser = 4 ;
        }
        else if (match = /edge\/(\d+)([\d.]*)/.exec(userAgent)) {
            browser = 2 ;
        }
        else if (match = /(?:firefox|fxios)\/(\d+)([\d.]*)/.exec(userAgent)) {
            browser = 3 ;
        }
        else if (match = /(?:chrome|crios)\/(\d+)([\d.]*)/.exec(userAgent)) {
            browser = 1 ;
        }
        else if (match = /safari\/(\d+)/.exec(userAgent)) {
            browser = 5 ;
            match = /version\/(\d+)([\d.]*)/.exec(userAgent);
        }
        if (match) {
            var browserMajor = parseInt(match[1], 10) || 0;
            var browserMinor = '0';
            var browserMinorVersion = match[2];
            if (browserMinorVersion) {
                var minorStart = browserMinorVersion.indexOf('.');
                if (minorStart >= 0 && minorStart < browserMinorVersion.length - 1) {
                    browserMinor = browserMinorVersion.substr(minorStart + 1);
                }
            }
            browserVersion = lib_Version.parse(browserMajor + "." + browserMinor);
        }
        browserInfo.browser = browser;
        browserInfo.browserVersion = browserVersion;
        return browserInfo;
    };
    BrowserDetection.fillOS = function (browserInfo, userAgent) {
        var os = 0 ;
        var osVersion = undefined;
        var osVersionMatch = /[\s\(](os|os x|windows phone|windows nt|android) ([\d._]+)/.exec(userAgent);
        osVersion = osVersionMatch ? osVersionMatch[2] : undefined;
        var deviceMatch = userAgent.match(/windows phone|wpdesktop/) || userAgent.match(/ipad|iphone|ipod|android/);
        if (deviceMatch) {
            var device = deviceMatch[0];
            if (device === 'windows phone' || device === 'wpdesktop') {
                os = 6 ;
            }
            if (device === 'android') {
                os = 1 ;
            }
            if (device === 'ipad' || device === 'ipod' || device === 'iphone') {
                os = 2 ;
            }
        }
        else {
            if (userAgent.indexOf('macintosh') !== -1) {
                os = 4 ;
            }
            if (userAgent.indexOf('windows nt') !== -1) {
                os = 5 ;
            }
            if (/(windows 8\.1|windows nt 6\.3)/.test(userAgent)) {
                os = 5 ;
                osVersion = '8.1';
            }
            if (userAgent.indexOf('windows nt 10') !== -1) {
                os = 5 ;
                osVersion = '10';
            }
            if (userAgent.indexOf('windows nt 6.1') !== -1) {
                os = 5 ;
                osVersion = '7';
            }
        }
        browserInfo.os = os;
        browserInfo.osVersion = osVersion;
        return browserInfo;
    };
    return BrowserDetection;
}());
/* harmony default export */ var lib_BrowserDetection = (BrowserDetection_BrowserDetection);

// CONCATENATED MODULE: ./lib/DisplayMode.js
var DisplayMode;
(function (DisplayMode) {
    DisplayMode[DisplayMode["Read"] = 1] = "Read";
    DisplayMode[DisplayMode["Edit"] = 2] = "Edit";
})(DisplayMode || (DisplayMode = {}));
/* harmony default export */ var lib_DisplayMode = (DisplayMode);

// CONCATENATED MODULE: ./lib/Guid.js



var Guid_Guid = (function () {
    function Guid(guid) {
        this._guid = guid;
    }
    Guid.newGuid = function (randomNumberGenerator) {
        return new Guid(Guid._generateGuid(randomNumberGenerator));
    };
    Guid.parse = function (guidString) {
        var guid = Guid.tryParse(guidString);
        if (!guid) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.invalidGuidStringError, guidString));
        }
        return guid;
    };
    Guid.tryParse = function (guid) {
        if (guid) {
            guid = Guid._normalize(guid);
            if (Guid._guidRegEx.test(guid)) {
                return new Guid(guid);
            }
        }
        return undefined;
    };
    Guid.isValid = function (guid) {
        if (guid) {
            guid = Guid._normalize(guid);
            if (Guid._guidRegEx.test(guid)) {
                return true;
            }
        }
        return false;
    };
    Guid._normalize = function (guid) {
        lib_Validate.isNonemptyString(guid, 'guid');
        var result = /^Guid\((.*)\)/i.exec(guid); 
        if (result) {
            guid = result[1];
        }
        if (guid.length === 38) {
            guid = guid.substr(1, 36);
        }
        return guid.toLowerCase();
    };
    Guid._generateGuid = function (randomNumberGenerator) {
        return 'AAAAAAAA-AAAA-4AAA-BAAA-AAAAAAAAAAAA'.replace(/[AB]/g, 
        function (character) {
            var randomNumber = randomNumberGenerator ? randomNumberGenerator.generate() : Math.random();
            var num = randomNumber * 16 | 0;
            var masked = character === 'A' ? num : (num & 0x3 | 0x8);
            return masked.toString(16);
        });
    };
    Guid.prototype.equals = function (guid) {
        lib_Validate.isNotNullOrUndefined(guid, 'guid');
        return guid && this._guid.toString() === guid.toString();
    };
    Guid.prototype.toString = function () {
        return this._guid;
    };
    Guid.empty = new Guid('00000000-0000-0000-0000-000000000000');
    Guid._guidRegEx = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
    return Guid;
}());
/* harmony default export */ var lib_Guid = (Guid_Guid);

// CONCATENATED MODULE: ./lib/JsonUtilities.js
var JsonUtilities = (function () {
    function JsonUtilities() {
    }
    JsonUtilities.encode = function (json) {
        if (!json) {
            return undefined;
        }
        JsonUtilities._escapableChars.lastIndex = 0;
        return JsonUtilities._escapableChars.test(json) ? json.replace(this._escapableChars, function (a) {
            var c = JsonUtilities._substibuteChars[a];
            return typeof c === 'string' ? c : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
        }) : json;
    };
    JsonUtilities._escapableChars = /[\\\"\'\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
    JsonUtilities._substibuteChars = {
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"': '\\"',
        '\'': '\\\'',
        '\\': '\\\\'
    };
    return JsonUtilities;
}());
/* harmony default export */ var lib_JsonUtilities = (JsonUtilities);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(2);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// CONCATENATED MODULE: ./lib/url/UrlUtilities.js


var URL_PROTOCOL_REGEX = /^\w+\:\/\//;
var BASE64_IMAGE_REGEX = /^data:(\w+\/\w+)?(;charset=[\w-]+)?(;base64)?,.*/i;
var UrlUtilities_UrlUtilities = (function () {
    function UrlUtilities() {
    }
    UrlUtilities.resolve = function (url, baseUrl) {
        lib_Validate.isNonemptyString(url, 'url');
        lib_Validate.isNonemptyString(baseUrl, 'baseUrl');
        var isRelativeUrl = !url.match(URL_PROTOCOL_REGEX);
        if (isRelativeUrl) {
            return UrlUtilities.removeEndSlash(baseUrl) + "/" + UrlUtilities.removeLeadingSlash(url);
        }
        else {
            return url;
        }
    };
    UrlUtilities.removeEndSlash = function (url) {
        return sp_lodash_subset_["trimEnd"](url, '/');
    };
    UrlUtilities.removeLeadingSlash = function (url) {
        return sp_lodash_subset_["trimStart"](url, '/');
    };
    UrlUtilities.convertToODataStringLiteral = function (value) {
        lib_Validate.isNotNullOrUndefined(value, 'value');
        value = value.replace(/'/g, "''");
        value = "'" + value + "'";
        return value;
    };
    UrlUtilities.isDataUrl = function (url) {
        lib_Validate.isNotNullOrUndefined(url, 'url');
        return !!url.match(BASE64_IMAGE_REGEX);
    };
    return UrlUtilities;
}());
/* harmony default export */ var url_UrlUtilities = (UrlUtilities_UrlUtilities);

// CONCATENATED MODULE: ./lib/url/UrlQueryParameterCollection.js
var UrlQueryParameterCollection = (function () {
    function UrlQueryParameterCollection(url) {
        this._queryParameterList = this._getUrlQueryParameterArray(url);
    }
    UrlQueryParameterCollection.prototype.getValue = function (param) {
        for (var _i = 0, _a = this._queryParameterList; _i < _a.length; _i++) {
            var queryParam = _a[_i];
            if (param === undefined) {
                if (queryParam.key === undefined) {
                    return queryParam.value;
                }
                continue;
            }
            else if (param.toUpperCase() === queryParam.key) {
                return queryParam.value;
            }
        }
        return undefined;
    };
    UrlQueryParameterCollection.prototype.getValues = function (param) {
        var queryParams = [];
        for (var _i = 0, _a = this._queryParameterList; _i < _a.length; _i++) {
            var queryParam = _a[_i];
            if (param === undefined) {
                if (queryParam.key === undefined) {
                    queryParams.push(queryParam.value);
                }
                continue;
            }
            else if (param.toUpperCase() === queryParam.key) {
                queryParams.push(queryParam.value);
            }
        }
        return queryParams.length > 0 ? queryParams : undefined;
    };
    UrlQueryParameterCollection.prototype._getUrlQueryParameterArray = function (url) {
        var queryParameterList = [];
        var urlParser = document.createElement('a');
        urlParser.href = url;
        var queryParams = urlParser.search.substring(1).split('&');
        for (var _i = 0, queryParams_1 = queryParams; _i < queryParams_1.length; _i++) {
            var queryParam = queryParams_1[_i];
            if (queryParam !== '') {
                var equalsIndex = queryParam.indexOf('=');
                var key = void 0;
                var value = void 0;
                if (equalsIndex < 0) {
                    key = queryParam;
                    value = undefined;
                }
                else if (equalsIndex === 0) {
                    key = '';
                    value = queryParam.length === 1 ? '' : queryParam.substring(1);
                }
                else {
                    key = queryParam.substring(0, equalsIndex);
                    value =
                        queryParam.substring(equalsIndex).length === 1 ?
                            '' :
                            queryParam.substring(equalsIndex + 1);
                }
                queryParameterList.push({
                    key: decodeURIComponent(key.toUpperCase()),
                    value: value
                });
            }
            else {
                queryParameterList.push({
                    key: undefined,
                    value: undefined
                });
            }
        }
        return queryParameterList;
    };
    return UrlQueryParameterCollection;
}());
/* harmony default export */ var url_UrlQueryParameterCollection = (UrlQueryParameterCollection);

// CONCATENATED MODULE: ./lib/serviceScope/ServiceKey.js


var SERVICEKEY_LASTID_WINDOW_VAR = '_SPFX_ServiceKey_lastId';
var ServiceKey_ServiceKey = (function () {
    function ServiceKey(id, name, defaultCreator) {
        this.id = id;
        this.name = name;
        this.defaultCreator = defaultCreator;
    }
    ServiceKey.create = function (name, serviceClass) {
        lib_Validate.isNotNullOrUndefined(serviceClass, 'serviceClass');
        return ServiceKey.createCustom(name, function (serviceScope) {
            return new serviceClass(serviceScope);
        });
    };
    ServiceKey.createCustom = function (name, defaultCreator) {
        lib_Validate.isNonemptyString(name, 'name');
        lib_Validate.isNotNullOrUndefined(defaultCreator, 'defaultCreator');
        var numericId;
        var lastId = window[SERVICEKEY_LASTID_WINDOW_VAR];
        if (lastId !== undefined && typeof (lastId) === 'number') {
            numericId = lastId + 1;
            if (numericId === lastId) {
                throw new Error('ServiceKey.createCustom() counter overflow');
            }
        }
        else {
            numericId = 1;
        }
        window[SERVICEKEY_LASTID_WINDOW_VAR] = numericId;
        var id = lib_Text.replaceAll(name, ' ', '') + '_' + numericId;
        return new ServiceKey(id, name, defaultCreator);
    };
    return ServiceKey;
}());
/* harmony default export */ var serviceScope_ServiceKey = (ServiceKey_ServiceKey);

// CONCATENATED MODULE: ./lib/serviceScope/provider/TimeProvider.js

var TimeProvider_TimeProvider = (function () {
    function TimeProvider(serviceScope) {
    }
    TimeProvider.prototype.getDate = function () {
        return new Date();
    };
    TimeProvider.prototype.getTimestamp = function () {
        return performance.now();
    };
    TimeProvider.serviceKey = serviceScope_ServiceKey.create('sp-core-library:TimeProvider', TimeProvider);
    return TimeProvider;
}());
/* harmony default export */ var provider_TimeProvider = (TimeProvider_TimeProvider);

// CONCATENATED MODULE: ./lib/serviceScope/provider/RandomNumberGenerator.js

var RandomNumberGenerator_RandomNumberGenerator = (function () {
    function RandomNumberGenerator(serviceScope) {
    }
    RandomNumberGenerator.prototype.generate = function () {
        return Math.random();
    };
    RandomNumberGenerator.serviceKey = serviceScope_ServiceKey.create('sp-core-library:RandomNumberGenerator', RandomNumberGenerator);
    return RandomNumberGenerator;
}());
/* harmony default export */ var provider_RandomNumberGenerator = (RandomNumberGenerator_RandomNumberGenerator);

// CONCATENATED MODULE: ./lib/serviceScope/ServiceScope.js


var ServiceScope_ServiceScope = (function () {
    function ServiceScope(parent) {
        this._parent = parent;
        this._registrations = {};
        this._pendingCallbacks = [];
        this._finished = false;
        this._autocreating = false;
    }
    ServiceScope.startNewRoot = function () {
        return new ServiceScope(undefined);
    };
    ServiceScope.prototype.createAndProvide = function (serviceKey, simpleServiceClass) {
        return this.provide(serviceKey, new simpleServiceClass(this));
    };
    ServiceScope.prototype.createDefaultAndProvide = function (serviceKey) {
        var service = serviceKey.defaultCreator(this);
        return this.provide(serviceKey, service);
    };
    ServiceScope.prototype.consume = function (serviceKey) {
        if (!this._finished) {
            throw new Error(SPCoreLibraryStrings_resx.serviceScopeConsumingBeforeFinished);
        }
        if (this._autocreating) {
            throw new Error(SPCoreLibraryStrings_resx.serviceScopeConsumingDuringAutoCreation);
        }
        var registration = this._registrations[serviceKey.id];
        if (registration) {
            return registration.service;
        }
        if (this._parent) {
            return this._parent.consume(serviceKey);
        }
        var autocreatedService = undefined;
        this._autocreating = true;
        try {
            autocreatedService = serviceKey.defaultCreator(this);
            this._registerService(serviceKey, autocreatedService);
        }
        finally {
            this._autocreating = false;
        }
        if (autocreatedService === undefined) {
            throw Error('ServiceKey must have an type');
        }
        this._processPendingCallbacks();
        return autocreatedService;
    };
    ServiceScope.prototype.finish = function () {
        if (this._finished) {
            throw new Error(SPCoreLibraryStrings_resx.serviceScopeAlreadyFinishedError);
        }
        this._finished = true;
        this._processPendingCallbacks();
    };
    ServiceScope.prototype.getParent = function () {
        return this._parent;
    };
    ServiceScope.prototype.whenFinished = function (callback) {
        if (this._finished && !this._autocreating) {
            callback();
        }
        else {
            this._pendingCallbacks.push(callback);
        }
    };
    ServiceScope.prototype.provide = function (serviceKey, service) {
        if (this._finished) {
            throw new Error(SPCoreLibraryStrings_resx.serviceScopeProvideServiceAfterFinishedError);
        }
        if (this._registrations[serviceKey.id]) {
            throw new Error(lib_Text.format(SPCoreLibraryStrings_resx.serviceScopeProvideServiceThatAlreadyExists, serviceKey.name));
        }
        this._registerService(serviceKey, service);
        return service;
    };
    ServiceScope.prototype.startNewChild = function () {
        return new ServiceScope(this);
    };
    ServiceScope.prototype._registerService = function (serviceKey, service) {
        this._registrations[serviceKey.id] = { serviceKey: serviceKey, service: service };
    };
    ServiceScope.prototype._processPendingCallbacks = function () {
        var pendingCallbacks = this._pendingCallbacks;
        this._pendingCallbacks = [];
        for (var _i = 0, pendingCallbacks_1 = pendingCallbacks; _i < pendingCallbacks_1.length; _i++) {
            var pendingCallback = pendingCallbacks_1[_i];
            pendingCallback();
        }
    };
    return ServiceScope;
}());
/* harmony default export */ var serviceScope_ServiceScope = (ServiceScope_ServiceScope);

// CONCATENATED MODULE: ./lib/log/DefaultLogHandler.js


var DefaultLogHandler_DefaultLogHandler = (function () {
    function DefaultLogHandler() {
    }
    DefaultLogHandler.prototype.verbose = function (source, message, scope) {
        if (true) {
            console.log(lib_Text.format(SPCoreLibraryStrings_resx.logVerboseLevelMessage, source));
        }
    };
    DefaultLogHandler.prototype.info = function (source, message, scope) {
        if (true) {
            console.info(lib_Text.format(SPCoreLibraryStrings_resx.logInfoLevelMessage, source));
        }
    };
    DefaultLogHandler.prototype.warn = function (source, message, scope) {
        if (true) {
            console.warn(lib_Text.format(SPCoreLibraryStrings_resx.logWarningLevelMessage, source));
        }
    };
    DefaultLogHandler.prototype.error = function (source, error, scope) {
        if (true) {
            console.error(lib_Text.format(SPCoreLibraryStrings_resx.logErrorLevelMessage, source, error.message));
        }
    };
    return DefaultLogHandler;
}());
/* harmony default export */ var log_DefaultLogHandler = (DefaultLogHandler_DefaultLogHandler);

// CONCATENATED MODULE: ./lib/log/Log.js

var Log_Log = (function () {
    function Log() {
    }
    Log._initialize = function (logHandler) {
        Log._logHandler = logHandler;
    };
    Log.verbose = function (source, message, scope) {
        Log._logHandler.verbose(source, message, scope);
    };
    Log.info = function (source, message, scope) {
        Log._logHandler.info(source, message, scope);
    };
    Log.warn = function (source, message, scope) {
        Log._logHandler.warn(source, message, scope);
    };
    Log.error = function (source, error, scope) {
        Log._logHandler.error(source, error, scope);
    };
    Log._logHandler = new log_DefaultLogHandler();
    return Log;
}());
/* harmony default export */ var log_Log = (Log_Log);

// CONCATENATED MODULE: ./lib/Session.js



var Session_Session = (function () {
    function Session() {
    }
    Session._initialize = function (data) {
        lib_Validate.isNotNullOrUndefined(data, 'data');
        Session._applicationId = lib_Guid.tryParse(data.applicationId) || lib_Guid.empty;
        var pageIdGuid = lib_Guid.tryParse(data.pageId);
        if (!pageIdGuid) {
            log_Log.warn('Session', 'The pageId parameter was undefined or invalid. Generating a new Guid', undefined);
            pageIdGuid = lib_Guid.newGuid();
        }
        Session._pageId = pageIdGuid;
    };
    Session._changePage = function () {
        Session._pageId = lib_Guid.newGuid();
    };
    Object.defineProperty(Session, "applicationId", {
        get: function () {
            return this._applicationId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Session, "pageId", {
        get: function () {
            return this._pageId;
        },
        enumerable: true,
        configurable: true
    });
    return Session;
}());
/* harmony default export */ var lib_Session = (Session_Session);

// CONCATENATED MODULE: ./lib/Environment.js


var EnvironmentType;
(function (EnvironmentType) {
    EnvironmentType[EnvironmentType["Test"] = 0] = "Test";
    EnvironmentType[EnvironmentType["Local"] = 1] = "Local";
    EnvironmentType[EnvironmentType["SharePoint"] = 2] = "SharePoint";
    EnvironmentType[EnvironmentType["ClassicSharePoint"] = 3] = "ClassicSharePoint";
})(EnvironmentType = EnvironmentType || (EnvironmentType = {}));
var Environment_Environment = (function () {
    function Environment() {
    }
    Environment._initialize = function (data) {
        lib_Validate.isNotNullOrUndefined(data, 'data');
        Environment._type = data.type;
        lib_Validate.isNotNullOrUndefined(Environment._type, 'environmentType');
        if (!EnvironmentType.hasOwnProperty(data.type.toString())) {
            throw new Error(SPCoreLibraryStrings_resx.invalidEnvironmentTypeError);
        }
    };
    Object.defineProperty(Environment, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    return Environment;
}());
/* harmony default export */ var lib_Environment = (Environment_Environment);

// CONCATENATED MODULE: ./lib/SPFlight.js
var DISABLED_FLIGHT_PREFIX = '!';
var SPFX_DEBUG_FLIGHT_ID = 205;
var SPFlight = (function () {
    function SPFlight() {
    }
    SPFlight.initialize = function (flights) {
        this._isInitialized = true;
        this._enabledFlightsMap = flights || [];
        this._forceEnabledFlights = [];
        this._forceDisabledFlights = [];
    };
    Object.defineProperty(SPFlight, "isDebugFlightEnabled", {
        get: function () {
            return SPFlight.isEnabled(SPFX_DEBUG_FLIGHT_ID);
        },
        enumerable: true,
        configurable: true
    });
    SPFlight.setDebugFlights = function (debugFlights) {
        if (!this._isInitialized) {
            throw new Error('Flights are not initialized. Can\'t set debug flights.');
        }
        if (debugFlights && debugFlights.length > 0) {
            try {
                var debugFlightStrings = debugFlights.split(',');
                this._forceEnabledFlights = debugFlightStrings
                    .filter(function (value) { return value[0] !== DISABLED_FLIGHT_PREFIX; })
                    .map(function (value) { return parseInt(value, 10); })
                    .filter(function (value) { return !isNaN(value); });
                this._forceDisabledFlights = debugFlightStrings
                    .filter(function (value) { return value[0] === DISABLED_FLIGHT_PREFIX; })
                    .map(function (value) { return parseInt(value.slice(1), 10); })
                    .filter(function (value) { return !isNaN(value); });
                console.log("Debug flights are enabled.");
                if (this._forceEnabledFlights.length > 0) {
                    console.log("Enabled flights: " + this._forceEnabledFlights.join(', '));
                }
                if (this._forceDisabledFlights.length > 0) {
                    console.log("Disabled flights: " + this._forceDisabledFlights.join(', '));
                }
            }
            catch (error) {
                this._forceEnabledFlights = [];
                this._forceDisabledFlights = [];
                console.log("Error parsing debugFlights query string parameter: " + error);
            }
        }
        this._validateDebugFlights();
    };
    SPFlight.isEnabled = function (flight) {
        if (!this._isInitialized && !false) {
            throw new Error("Flights are not initialized. Flight requested: " + flight);
        }
        if (!flight || flight < 0) {
            return false;
        }
        if (this._forceEnabledFlights.indexOf(flight) !== -1) {
            return true;
        }
        if (this._forceDisabledFlights.indexOf(flight) !== -1) {
            return false;
        }
        var enabledFlightsIndex = flight >> 5;
        if (enabledFlightsIndex < 0 || enabledFlightsIndex >= this._enabledFlightsMap.length) {
            return false;
        }
        var bitMask = 1 << (flight & 31);
        return (this._enabledFlightsMap[enabledFlightsIndex] & bitMask) !== 0;
    };
    SPFlight._validateDebugFlights = function () {
        var debugFlightsSet = new Set(this._forceEnabledFlights.concat(this._forceDisabledFlights));
        if (debugFlightsSet.size < (this._forceEnabledFlights.length + this._forceDisabledFlights.length)) {
            throw new Error('There are flights that are forced to be both enabled and disabled');
        }
    };
    SPFlight._isInitialized = false;
    SPFlight._forceEnabledFlights = [];
    SPFlight._forceDisabledFlights = [];
    SPFlight._enabledFlightsMap = [];
    return SPFlight;
}());
/* harmony default export */ var lib_SPFlight = (SPFlight);

// CONCATENATED MODULE: ./lib/SPKillSwitch.js

var SPKillSwitch_SPKillSwitch = (function () {
    function SPKillSwitch() {
    }
    SPKillSwitch.initialize = function (killSwitchGuids) {
        this._isInitialized = true;
        this._activatedKillSwitches = new Map();
        if (killSwitchGuids) {
            for (var _i = 0, _a = Object.keys(killSwitchGuids); _i < _a.length; _i++) {
                var killSwitchGuid = _a[_i];
                var normalizedKillSwitchGuid = lib_Guid.tryParse(killSwitchGuid);
                if (normalizedKillSwitchGuid) {
                    this._activatedKillSwitches.set(normalizedKillSwitchGuid.toString(), true);
                }
            }
        }
    };
    SPKillSwitch.setDebugKillswitches = function (debugKillswitches) {
        if (!this._isInitialized && !false) {
            throw new Error('Killswitches are not initialized. Can\'t set debug killswitched.');
        }
        if (debugKillswitches && debugKillswitches.length) {
            try {
                for (var _i = 0, _a = debugKillswitches.split(',').map(function (value) { return lib_Guid.tryParse(value); }); _i < _a.length; _i++) {
                    var killSwitch = _a[_i];
                    if (killSwitch) {
                        this._activatedKillSwitches.set(killSwitch.toString(), true);
                    }
                }
            }
            catch (error) {
                console.log("Error parsing killSwitches query string parameter: " + error);
            }
        }
    };
    SPKillSwitch.isActivated = function (killSwitchGuid, date, featureName) {
        if (!this._isInitialized && !false) {
            throw new Error("Killswitches are not initialized. Killswitch requested: " + killSwitchGuid);
        }
        if (!killSwitchGuid) {
            return false;
        }
        return !!this._activatedKillSwitches.get(killSwitchGuid.toString());
    };
    SPKillSwitch._isInitialized = false;
    SPKillSwitch._activatedKillSwitches = new Map();
    return SPKillSwitch;
}());
/* harmony default export */ var lib_SPKillSwitch = (SPKillSwitch_SPKillSwitch);

// CONCATENATED MODULE: ./lib/SPError.js
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var SPError_SPError = (function (_super) {
    __extends(SPError, _super);
    function SPError(errorCode, message, logProperties) {
        var _this = _super.call(this, message) || this;
        _this.__proto__ = SPError.prototype; 
        lib_Validate.isNonemptyString(errorCode, 'errorCode');
        lib_Validate.isNonemptyString(message, 'message');
        _this._errorCode = errorCode;
        _this.message = message;
        _this._logProperties = logProperties;
        _this.stack = (new Error()).stack || SPError._generateErrorStackForIE();
        return _this;
    }
    Object.defineProperty(SPError.prototype, "id", {
        get: function () {
            return -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPError.prototype, "category", {
        get: function () {
            return 'SPError';
        },
        enumerable: true,
        configurable: true
    });
    SPError._generateErrorStackForIE = function () {
        try {
            throw new Error();
        }
        catch (e) {
            return e.stack;
        }
    };
    SPError.prototype.toStringForUI = function () {
        return this._toString(true);
    };
    SPError.prototype.toString = function () {
        return this._toString();
    };
    SPError.prototype._toString = function (logDebug) {
        if (!this._errorString) {
            var errorMessageArray = [
                "[" + this.category + "." + this._errorCode + "]:",
                "" + this.message,
                ''
            ];
            if (logDebug || true) {
                if (this.innerError) {
                    errorMessageArray = errorMessageArray.concat([
                        SPCoreLibraryStrings_resx.spErrorInnerErrorText,
                        this.innerError.message
                    ]);
                }
                if (this.stack) {
                    errorMessageArray = errorMessageArray.concat([
                        SPCoreLibraryStrings_resx.spErrorCallStackText,
                        this.stack
                    ]);
                }
                if (this._logProperties) {
                    errorMessageArray = errorMessageArray.concat([
                        SPCoreLibraryStrings_resx.spErrorLogPropertiesText,
                        JSON.stringify(this._logProperties)
                    ]);
                }
            }
            this._errorString = errorMessageArray.join('\r\n');
        }
        return this._errorString;
    };
    return SPError;
}(Error));
/* harmony default export */ var lib_SPError = (SPError_SPError);

// CONCATENATED MODULE: ./lib/events/SPEventManager.js



var SPEventManager_SPEventManager = (function () {
    function SPEventManager() {
        this._listeners = new Map();
        this._raisedEvents = new Map();
    }
    Object.defineProperty(SPEventManager, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new SPEventManager();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    SPEventManager.prototype.raiseEvent = function (eventName, eventArgs) {
        lib_Validate.isNonemptyString(eventName, 'eventName');
        lib_Validate.isNotNullOrUndefined(eventArgs, 'eventArgs');
        return this._raiseEventInternal(eventName, eventArgs);
    };
    SPEventManager.prototype.raiseStickyEvent = function (eventName, eventArgs) {
        lib_Validate.isNonemptyString(eventName, 'eventName');
        lib_Validate.isNotNullOrUndefined(eventArgs, 'eventArgs');
        this._raisedEvents.set(eventName, eventArgs);
        return this._raiseEventInternal(eventName, eventArgs);
    };
    SPEventManager.prototype.registerEvent = function (eventName, observer, eventHandler) {
        lib_Validate.isNonemptyString(eventName, 'eventName');
        lib_Validate.isNotNullOrUndefined(observer, 'component');
        lib_Validate.isNotNullOrUndefined(eventHandler, 'eventHandler');
        if (!this._listeners.has(eventName)) {
            this._listeners.set(eventName, []);
        }
        this._listeners.get(eventName).push({ observer: observer, eventHandler: eventHandler });
        if (this._raisedEvents.has(eventName)) {
            eventHandler.call(observer, this._raisedEvents.get(eventName));
        }
    };
    SPEventManager.prototype.unregisterEvent = function (eventName, observer, eventHandler) {
        lib_Validate.isNonemptyString(eventName, 'eventName');
        lib_Validate.isNotNullOrUndefined(observer, 'component');
        lib_Validate.isNotNullOrUndefined(eventHandler, 'eventHandler');
        if (!this._listeners.has(eventName)) {
            return;
        }
        var listeners = this._listeners.get(eventName);
        var filteredListeners = listeners.filter(function (el) { return el.observer !== observer || el.eventHandler !== eventHandler; });
        if (filteredListeners.length === listeners.length) {
            var errorMessage = lib_Text.format(
            'Failed to remove event handler for component "{0}". Event handler was not registered.', observer.componentId);
            log_Log.error(SPEventManager._logSource, new Error(errorMessage));
        }
        this._listeners.set(eventName, filteredListeners);
    };
    SPEventManager.prototype.removeEvent = function (eventName) {
        lib_Validate.isNonemptyString(eventName, 'eventName');
        this._listeners.delete(eventName);
    };
    SPEventManager.prototype.removeEventsByPrefix = function (eventNamePrefix) {
        var _this = this;
        lib_Validate.isNonemptyString(eventNamePrefix, 'eventNamePrefix');
        var matchedKeys = [];
        this._listeners.forEach(function (value, key) {
            if (key.indexOf(eventNamePrefix) === 0) {
                matchedKeys.push(key);
            }
        });
        matchedKeys.forEach(function (key) { return _this._listeners.delete(key); });
    };
    SPEventManager.prototype._raiseEventInternal = function (eventName, eventArgs) {
        var _this = this;
        if (!this._listeners.has(eventName)) {
            return;
        }
        this._listeners.get(eventName).forEach(function (listener) {
            if (listener.observer.isDisposed) {
                _this.unregisterEvent(eventName, listener.observer, listener.eventHandler);
            }
            else {
                try {
                    listener.eventHandler.call(listener.observer, eventArgs);
                }
                catch (e) {
                    var errorMessage = lib_Text.format(
                    'Failed to execute event handler for component "{0}"', listener.observer.componentId);
                    log_Log.error(SPEventManager._logSource, new Error(errorMessage));
                }
            }
        });
    };
    SPEventManager._logSource = 'SPEventManager';
    return SPEventManager;
}());
/* harmony default export */ var events_SPEventManager = (SPEventManager_SPEventManager);

// CONCATENATED MODULE: ./lib/events/SPEvent.js


var SPEvent_SPEvent = (function () {
    function SPEvent(name) {
        lib_Validate.isNonemptyString(name, 'name');
        this._name = name;
    }
    SPEvent.prototype.add = function (observer, eventHandler) {
        lib_Validate.isNotNullOrUndefined(observer, 'component');
        lib_Validate.isNotNullOrUndefined(eventHandler, 'eventHandler');
        events_SPEventManager.instance.registerEvent(this._name, observer, eventHandler);
    };
    SPEvent.prototype.remove = function (observer, eventHandler) {
        lib_Validate.isNotNullOrUndefined(observer, 'component');
        lib_Validate.isNotNullOrUndefined(eventHandler, 'eventHandler');
        events_SPEventManager.instance.unregisterEvent(this._name, observer, eventHandler);
    };
    return SPEvent;
}());
/* harmony default export */ var events_SPEvent = (SPEvent_SPEvent);

// CONCATENATED MODULE: ./lib/events/SPEventArgs.js
var SPEventArgs = (function () {
    function SPEventArgs() {
    }
    return SPEventArgs;
}());
/* harmony default export */ var events_SPEventArgs = (SPEventArgs);

// CONCATENATED MODULE: ./lib/deferredClass/DeferredClass.js
var DeferredClass = (function () {
    function DeferredClass() {
        var _this = this;
        this._onAfterLoadPromise = new Promise(function (resolve) { return _this._resolveOnAfterLoadCallbacks = resolve; });
    }
    DeferredClass._getInstance = function () {
        if (!this._internalInstance) {
            this._internalInstance = new this();
        }
        return this._internalInstance;
    };
    Object.defineProperty(DeferredClass.prototype, "isLoaded", {
        get: function () {
            return !!this._classType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeferredClass.prototype, "shouldLoad", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    DeferredClass.prototype.load = function () {
        var _this = this;
        if (!this._loadPromise) {
            if (this.shouldLoad) {
                this._loadPromise = this._internalLoad();
                this._loadPromise.then(function (type) {
                    _this._classType = type;
                    _this._resolveOnAfterLoadCallbacks();
                });
            }
            else {
                this._loadPromise = Promise.reject(new Error('shouldLoad returns false'));
            }
        }
        return this._loadPromise;
    };
    DeferredClass.prototype.onAfterLoad = function () {
        return this._onAfterLoadPromise;
    };
    return DeferredClass;
}());
/* harmony default export */ var deferredClass_DeferredClass = (DeferredClass);

// CONCATENATED MODULE: ./lib/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return Event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventArgs", function() { return EventArgs; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_BrowserDetection", function() { return lib_BrowserDetection; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "DisplayMode", function() { return lib_DisplayMode; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Guid", function() { return lib_Guid; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "JsonUtilities", function() { return lib_JsonUtilities; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Text", function() { return lib_Text; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Version", function() { return lib_Version; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Validate", function() { return lib_Validate; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "UrlUtilities", function() { return url_UrlUtilities; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "UrlQueryParameterCollection", function() { return url_UrlQueryParameterCollection; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "TimeProvider", function() { return provider_TimeProvider; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "RandomNumberGenerator", function() { return provider_RandomNumberGenerator; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ServiceKey", function() { return serviceScope_ServiceKey; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ServiceScope", function() { return serviceScope_ServiceScope; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Session", function() { return lib_Session; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Environment", function() { return lib_Environment; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "EnvironmentType", function() { return EnvironmentType; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_SPFlight", function() { return lib_SPFlight; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_SPKillSwitch", function() { return lib_SPKillSwitch; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "SPError", function() { return lib_SPError; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Log", function() { return log_Log; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "SPEvent", function() { return events_SPEvent; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "SPEventArgs", function() { return events_SPEventArgs; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_SPEventManager", function() { return events_SPEventManager; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_DeferredClass", function() { return deferredClass_DeferredClass; });
var lib___extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
























var Event = (function (_super) {
    lib___extends(Event, _super);
    function Event() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Event;
}(events_SPEvent));

var EventArgs = (function (_super) {
    lib___extends(EventArgs, _super);
    function EventArgs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EventArgs;
}(events_SPEventArgs));




/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ })
/******/ ])}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
  var strings = {
    "_gIErrcTokcw+/VVwa+ReIA": {
      "invalidEnvironmentTypeError": "***EnvironmentType is invalid",
      "invalidGuidStringError": "***Invalid GUID string: \"{0}\"",
      "isFalseValidateError": "***The value for \"{0}\" is false",
      "isNullValidateError": "***The value for \"{0}\" must not be null",
      "isUndefinedValidateError": "***The value for \"{0}\" must not be undefined",
      "isEmptyStringValidateError": "***The value for \"{0}\" must not be an empty string",
      "isDisposedValidateError": "***The \"{0}\" object cannot be used because it has been disposed.",
      "invalidVersionStringError": "***Invalid version string: \"{0}\"",
      "logVerboseLevelMessage": "***{0}: VERBOSE {1}",
      "logInfoLevelMessage": "***{0}: {1}",
      "logWarningLevelMessage": "***{0}: WARNING {1}",
      "logErrorLevelMessage": "***{0}: ERROR: {1}",
      "serviceScopeConsumingBeforeFinished": "***Cannot consume services because the scope is not finished yet",
      "serviceScopeConsumingDuringAutoCreation": "***Cannot consume services during ServiceScope autocreation",
      "serviceScopeAlreadyFinishedError": "***The ServiceScope is already finished",
      "serviceScopeProvideServiceAfterFinishedError": "***Cannot register service because the scope is already finished",
      "serviceScopeProvideServiceThatAlreadyExists": "***The service key \"{0}\" has already been registered in this scope",
      "spErrorInnerErrorText": "***INNERERROR:",
      "spErrorCallStackText": "***CALLSTACK:",
      "spErrorLogPropertiesText": "***LOGPROPERTIES:",
      "dynamicDataManagerSourceAlreadyExists": "***A source with id \"{0}\" already exists.",
      "dynamicDataManagerSourceDoesntExist": "***No source with id \"{0}\" found."
    }
  };

  strings.default = strings;
  return strings;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ })
/******/ ])});;
//# sourceMappingURL=sp-core-library_en-us.js.map