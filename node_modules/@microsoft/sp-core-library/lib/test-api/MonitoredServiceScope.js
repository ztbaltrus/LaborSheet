var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { ServiceScope } from '../index';
var MonitoredServiceScope = (function (_super) {
    __extends(MonitoredServiceScope, _super);
    function MonitoredServiceScope(parent) {
        var _this = _super.call(this, parent) || this;
        _this._children = [];
        _this._level = 0;
        _this._serviceNames = [];
        _this._scopeSequenceId = 0;
        _this._totalNumberOfScopes = 0;
        if (parent) {
            _this._totalNumberOfScopes = ++parent._totalNumberOfScopes;
            _this._scopeSequenceId = _this._totalNumberOfScopes;
            _this._level = parent._level + 1;
            parent._children.push({
                children: _this.children,
                level: _this.level,
                scopeSequenceId: _this.scopeSequenceId,
                serviceNames: _this.serviceNames
            });
        }
        return _this;
    }
    MonitoredServiceScope.startNewMonitoredRoot = function () {
        return new MonitoredServiceScope(undefined);
    };
    MonitoredServiceScope.prototype.getParent = function () {
        return _super.prototype.getParent.call(this);
    };
    MonitoredServiceScope.prototype.startNewChild = function () {
        return new MonitoredServiceScope(this);
    };
    Object.defineProperty(MonitoredServiceScope.prototype, "children", {
        get: function () {
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonitoredServiceScope.prototype, "level", {
        get: function () {
            return this._level;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonitoredServiceScope.prototype, "scopeSequenceId", {
        get: function () {
            return this._scopeSequenceId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonitoredServiceScope.prototype, "serviceNames", {
        get: function () {
            return this._serviceNames;
        },
        enumerable: true,
        configurable: true
    });
    MonitoredServiceScope.prototype._registerService = function (serviceKey, service) {
        _super.prototype._registerService.call(this, serviceKey, service);
        this._serviceNames.push(serviceKey.name);
    };
    return MonitoredServiceScope;
}(ServiceScope));
export default MonitoredServiceScope;
