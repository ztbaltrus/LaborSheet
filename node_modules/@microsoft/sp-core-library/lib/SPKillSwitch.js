import Guid from './Guid';
var SPKillSwitch = (function () {
    function SPKillSwitch() {
    }
    SPKillSwitch.initialize = function (killSwitchGuids) {
        this._isInitialized = true;
        this._activatedKillSwitches = new Map();
        if (killSwitchGuids) {
            for (var _i = 0, _a = Object.keys(killSwitchGuids); _i < _a.length; _i++) {
                var killSwitchGuid = _a[_i];
                var normalizedKillSwitchGuid = Guid.tryParse(killSwitchGuid);
                if (normalizedKillSwitchGuid) {
                    this._activatedKillSwitches.set(normalizedKillSwitchGuid.toString(), true);
                }
            }
        }
    };
    SPKillSwitch.setDebugKillswitches = function (debugKillswitches) {
        if (!this._isInitialized && !DEPRECATED_UNIT_TEST) {
            throw new Error('Killswitches are not initialized. Can\'t set debug killswitched.');
        }
        if (debugKillswitches && debugKillswitches.length) {
            try {
                for (var _i = 0, _a = debugKillswitches.split(',').map(function (value) { return Guid.tryParse(value); }); _i < _a.length; _i++) {
                    var killSwitch = _a[_i];
                    if (killSwitch) {
                        this._activatedKillSwitches.set(killSwitch.toString(), true);
                    }
                }
            }
            catch (error) {
                console.log("Error parsing killSwitches query string parameter: " + error);
            }
        }
    };
    SPKillSwitch.isActivated = function (killSwitchGuid, date, featureName) {
        if (!this._isInitialized && !DEPRECATED_UNIT_TEST) {
            throw new Error("Killswitches are not initialized. Killswitch requested: " + killSwitchGuid);
        }
        if (!killSwitchGuid) {
            return false;
        }
        return !!this._activatedKillSwitches.get(killSwitchGuid.toString());
    };
    SPKillSwitch._isInitialized = false;
    SPKillSwitch._activatedKillSwitches = new Map();
    return SPKillSwitch;
}());
export default SPKillSwitch;
