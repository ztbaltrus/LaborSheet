import Validate from './Validate';
import strings from './SPCoreLibraryStrings.resx';
export var EnvironmentType;
(function (EnvironmentType) {
    EnvironmentType[EnvironmentType["Test"] = 0] = "Test";
    EnvironmentType[EnvironmentType["Local"] = 1] = "Local";
    EnvironmentType[EnvironmentType["SharePoint"] = 2] = "SharePoint";
    EnvironmentType[EnvironmentType["ClassicSharePoint"] = 3] = "ClassicSharePoint";
})(EnvironmentType = EnvironmentType || (EnvironmentType = {}));
var Environment = (function () {
    function Environment() {
    }
    Environment._initialize = function (data) {
        Validate.isNotNullOrUndefined(data, 'data');
        Environment._type = data.type;
        Validate.isNotNullOrUndefined(Environment._type, 'environmentType');
        if (!EnvironmentType.hasOwnProperty(data.type.toString())) {
            throw new Error(strings.invalidEnvironmentTypeError);
        }
    };
    Object.defineProperty(Environment, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    return Environment;
}());
export default Environment;
