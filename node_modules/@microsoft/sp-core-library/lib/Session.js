import Guid from './Guid';
import Validate from './Validate';
import Log from './log/Log';
var Session = (function () {
    function Session() {
    }
    Session._initialize = function (data) {
        Validate.isNotNullOrUndefined(data, 'data');
        Session._applicationId = Guid.tryParse(data.applicationId) || Guid.empty;
        var pageIdGuid = Guid.tryParse(data.pageId);
        if (!pageIdGuid) {
            Log.warn('Session', 'The pageId parameter was undefined or invalid. Generating a new Guid', undefined);
            pageIdGuid = Guid.newGuid();
        }
        Session._pageId = pageIdGuid;
    };
    Session._changePage = function () {
        Session._pageId = Guid.newGuid();
    };
    Object.defineProperty(Session, "applicationId", {
        get: function () {
            return this._applicationId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Session, "pageId", {
        get: function () {
            return this._pageId;
        },
        enumerable: true,
        configurable: true
    });
    return Session;
}());
export default Session;
