import strings from './SPCoreLibraryStrings.resx';
var Text = (function () {
    function Text() {
    }
    Text.format = function (s) {
        var values = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            values[_i - 1] = arguments[_i];
        }
        if (s === null) {
            throw new Error(strings.isNullValidateError.replace('{0}', 's'));
        }
        if (s === undefined) {
            throw new Error(strings.isUndefinedValidateError.replace('{0}', 's'));
        }
        return s.replace(Text.FORMAT_REGEX, function (match) {
            var matchId = parseInt(match.replace(Text.FORMAT_ARGS_REGEX, ''), 10);
            var matchValue = values[matchId];
            if (matchId >= values.length || matchId < 0) {
                matchValue = match;
            }
            if (matchValue === null) {
                matchValue = 'null';
            }
            else if (matchValue === undefined) {
                matchValue = 'undefined';
            }
            return matchValue;
        });
    };
    Text.replaceAll = function (input, searchValue, replaceValue) {
        return input.split(searchValue).join(replaceValue);
    };
    Text.FORMAT_REGEX = /\{\d+\}/g;
    Text.FORMAT_ARGS_REGEX = /[\{\}]/g;
    return Text;
}());
export default Text;
