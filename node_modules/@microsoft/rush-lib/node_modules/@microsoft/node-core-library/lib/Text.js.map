{"version":3,"sources":["Text.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D;;;;;;;;GAQG;AACH;IAGE;;;;;;OAMG;IACI,MAAM,CAAC,UAAU,CAAC,KAAa,EAAE,WAAmB,EAAE,YAAoB;QAC/E,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,aAAa,CAAC,KAAa;QACvC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,WAAW,CAAC,KAAa;QACrC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;;AAzBuB,kBAAa,GAAW,kBAAkB,CAAC;AADrE,oBA4BC","file":"Text.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * Operations for working with strings that contain text.\r\n *\r\n * @remarks\r\n * The utilities provided by this class are intended to be simple, small, and very\r\n * broadly applicable.\r\n *\r\n * @public\r\n */\r\nexport class Text {\r\n  private static readonly _newLineRegEx: RegExp = /\\r\\n|\\n\\r|\\r|\\n/g;\r\n\r\n  /**\r\n   * Returns the same thing as targetString.replace(searchValue, replaceValue), except that\r\n   * all matches are replaced, rather than just the first match.\r\n   * @param input         - The string to be modified\r\n   * @param searchValue   - The value to search for\r\n   * @param replaceValue  - The replacement text\r\n   */\r\n  public static replaceAll(input: string, searchValue: string, replaceValue: string): string {\r\n    return input.split(searchValue).join(replaceValue);\r\n  }\r\n\r\n  /**\r\n   * Converts all newlines in the provided string to use Windows-style CRLF end of line characters.\r\n   */\r\n  public static convertToCrLf(input: string): string {\r\n    return input.replace(Text._newLineRegEx, '\\r\\n');\r\n  }\r\n\r\n  /**\r\n   * Converts all newlines in the provided string to use Unix-style LF end of line characters.\r\n   */\r\n  public static convertToLf(input: string): string {\r\n    return input.replace(Text._newLineRegEx, '\\n');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"../src"}