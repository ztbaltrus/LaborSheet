{"version":3,"sources":["IPackageJson.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","file":"IPackageJson.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * This interface is part of the IPackageJson file format.  It is used for the\r\n * \"dependencies\", \"optionalDependencies\", and \"devDependencies\" fields.\r\n * @public\r\n */\r\nexport interface IPackageJsonDependencyTable {\r\n  /**\r\n   * The key is the name of a dependency.  The value is a Semantic Versioning (SemVer)\r\n   * range specifier.\r\n   */\r\n  [dependencyName: string]: string;\r\n}\r\n\r\n/**\r\n * This interface is part of the IPackageJson file format.  It is used for the\r\n * \"scripts\" field.\r\n * @public\r\n */\r\nexport interface IPackageJsonScriptTable {\r\n  /**\r\n   * The key is the name of the script hook.  The value is the script body which may\r\n   * be a file path or shell script command.\r\n   */\r\n  [scriptName: string]: string;\r\n}\r\n\r\n/**\r\n * This interface is part of the IPackageJson file format.  It is used for the\r\n * \"tsdoc\" field.\r\n * @beta\r\n */\r\nexport interface IPackageJsonTsdocConfiguration {\r\n  /**\r\n   * A token indicating the dialect of TSDoc syntax used by *.d.ts files in this\r\n   * package.\r\n   */\r\n  tsdocFlavor?: string;\r\n}\r\n\r\n/**\r\n * An interface for accessing common fields from a package.json file.\r\n *\r\n * @remarks\r\n * More fields may be added to this interface in the future.  Most fields are optional.\r\n * For documentation about this file format, see the\r\n * {@link http://wiki.commonjs.org/wiki/Packages/1.0 | CommonJS Packages specification}\r\n * and the {@link https://docs.npmjs.com/files/package.json | NPM manual page}.\r\n * @public\r\n */\r\nexport interface IPackageJson {\r\n  /**\r\n   * The name of the package.\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * A version number conforming to the Semantic Versioning (SemVer) standard.\r\n   */\r\n  version: string;\r\n\r\n  /**\r\n   * Indicates whether this package is allowed to be published or not.\r\n   */\r\n  private?: boolean;\r\n\r\n  /**\r\n   * A brief description of the package.\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * The URL to the project's web page.\r\n   */\r\n  homepage?: string;\r\n\r\n  /**\r\n   * The name of the license.\r\n   */\r\n  license?: string;\r\n\r\n  /**\r\n   * The path to the module file that will act as the main entry point.\r\n   */\r\n  main?: string;\r\n\r\n  /**\r\n   * The path to the TypeScript *.d.ts file describing the module file\r\n   * that will act as the main entry point.\r\n   */\r\n  typings?: string;\r\n\r\n  /**\r\n   * Describes the documentation comment syntax used for the *.d.ts files\r\n   * exposed by this package.\r\n   * @beta\r\n   */\r\n  tsdoc?: IPackageJsonTsdocConfiguration;\r\n\r\n  /**\r\n   * The main entry point for the package.\r\n   */\r\n  bin?: string;\r\n\r\n  /**\r\n   * An array of dependencies that must always be installed for this package.\r\n   */\r\n  dependencies?: IPackageJsonDependencyTable;\r\n\r\n  /**\r\n   * An array of optional dependencies that may be installed for this package.\r\n   */\r\n  optionalDependencies?: IPackageJsonDependencyTable;\r\n\r\n  /**\r\n   * An array of dependencies that must only be installed for developers who will\r\n   * build this package.\r\n   */\r\n  devDependencies?: IPackageJsonDependencyTable;\r\n\r\n  /**\r\n   * An array of dependencies that must be installed by a consumer of this package,\r\n   * but which will not be automatically installed by this package.\r\n   */\r\n  peerDependencies?: IPackageJsonDependencyTable;\r\n\r\n  /**\r\n   * A table of script hooks that a package manager or build tool may invoke.\r\n   */\r\n  scripts?: IPackageJsonScriptTable;\r\n}\r\n"],"sourceRoot":"../src"}