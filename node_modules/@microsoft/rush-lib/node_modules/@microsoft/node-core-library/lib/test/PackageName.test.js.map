{"version":3,"sources":["test/PackageName.test.ts"],"names":[],"mappings":"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","file":"PackageName.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/// <reference types='mocha' />\r\n\r\nimport { PackageName } from '../PackageName';\r\nimport { assert } from 'chai';\r\n\r\ndescribe('PackageName', () => {\r\n  describe('Test', () => {\r\n\r\n    it('isValidName() positive test', () => {\r\n      assert.isTrue(PackageName.isValidName('@microsoft/node-core-library'));\r\n    });\r\n\r\n    it('isValidName() negative test', () => {\r\n      assert.isFalse(PackageName.isValidName('@microsoft/node-core-library/path'));\r\n    });\r\n\r\n    it('tryParse() tests', () => {\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@microsoft/node-core-library'),\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: 'node-core-library',\r\n          error: ''\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse(''),\r\n        {\r\n          scope: '',\r\n          unscopedName: '',\r\n          error: 'The package name must not be empty'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse(undefined as any), // tslint:disable-line:no-any\r\n        {\r\n          scope: '',\r\n          unscopedName: '',\r\n          error: 'The package name must not be null or undefined'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@microsoft'),\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: '',\r\n          error: 'Error parsing \"@microsoft\": The scope must be followed by a slash'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@/node-core-library'),\r\n        {\r\n          scope: '@',\r\n          unscopedName: 'node-core-library',\r\n          error: 'Error parsing \"@/node-core-library\": The scope name cannot be empty'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@Microsoft/node-core-library'),\r\n        {\r\n          scope: '@Microsoft',\r\n          unscopedName: 'node-core-library',\r\n          error: 'The package scope \"@Microsoft\" must not contain upper case characters'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@micro!soft/node-core-library'),\r\n        {\r\n          scope: '@micro!soft',\r\n          unscopedName: 'node-core-library',\r\n          error: 'The package name \"@micro!soft/node-core-library\" contains an invalid character: \\\"!\\\"'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@microsoft/node-co~re-library'),\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: 'node-co~re-library',\r\n          error: 'The package name \"@microsoft/node-co~re-library\" contains an invalid character: \\\"~\\\"'\r\n        }\r\n      );\r\n\r\n      assert.deepEqual(\r\n        PackageName.tryParse('@microsoft/node-core-library/path'),\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: 'node-core-library/path',\r\n          error: 'The package name \"@microsoft/node-core-library/path\" contains an invalid character: \\\"/\\\"'\r\n        }\r\n      );\r\n\r\n    });\r\n  });\r\n\r\n  it('parse() test', () => {\r\n    assert.throws(() => { PackageName.parse('@'); }, 'The scope must be followed by a slash');\r\n  });\r\n\r\n  it('combineParts() tests', () => {\r\n    assert.equal(PackageName.combineParts('@microsoft', 'node-core-library'),\r\n      '@microsoft/node-core-library');\r\n\r\n    assert.equal(PackageName.combineParts('', 'node-core-library'),\r\n      'node-core-library');\r\n  });\r\n\r\n  it('combineParts() errors', () => {\r\n    assert.throws(() => { PackageName.combineParts('', '@microsoft/node-core-library'); },\r\n      'The unscopedName cannot start with an \"@\" character');\r\n\r\n    assert.throws(() => { PackageName.combineParts('@micr!osoft', 'node-core-library'); },\r\n      'The package name \"@micr!osoft/node-core-library\" contains an invalid character: \"!\"');\r\n\r\n    assert.throws(() => { PackageName.combineParts('', ''); },\r\n      'The package name must not be empty');\r\n   });\r\n\r\n});\r\n"],"sourceRoot":"../../../src"}