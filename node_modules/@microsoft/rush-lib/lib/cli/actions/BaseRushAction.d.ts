import { CommandLineAction, ICommandLineActionOptions } from '@microsoft/ts-command-line';
import { RushConfiguration } from '../../data/RushConfiguration';
import { EventHooksManager } from '../logic/EventHooksManager';
import { RushCommandLineParser } from './RushCommandLineParser';
export interface IRushCommandLineActionOptions extends ICommandLineActionOptions {
    /**
     * If true, no locking mechanism will be enforced when this action is run.
     * Note this defaults to false (which is a safer assumption in case this value
     *  is omitted).
     */
    safeForSimultaneousRushProcesses?: boolean;
    /**
     * The rush parser.
     */
    parser: RushCommandLineParser;
}
/**
 * The base Rush action that all Rush actions should extend.
 */
export declare abstract class BaseRushAction extends CommandLineAction {
    private _parser;
    private _eventHooksManager;
    private _safeForSimultaneousRushProcesses;
    protected readonly rushConfiguration: RushConfiguration;
    protected readonly parser: RushCommandLineParser;
    constructor(options: IRushCommandLineActionOptions);
    protected onExecute(): Promise<void>;
    /**
     * All Rush actions need to implement this method. This method runs after
     * environment has been set up by the base class.
     */
    protected abstract run(): Promise<void>;
    protected readonly eventHooksManager: EventHooksManager;
    private _ensureEnvironment();
}
