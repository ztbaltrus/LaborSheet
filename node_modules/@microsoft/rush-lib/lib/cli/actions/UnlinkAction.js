"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const fsx = require("fs-extra");
const os = require("os");
const path = require("path");
const Utilities_1 = require("../../utilities/Utilities");
const BaseRushAction_1 = require("./BaseRushAction");
class UnlinkAction extends BaseRushAction_1.BaseRushAction {
    constructor(parser) {
        super({
            actionName: 'unlink',
            summary: 'Delete node_modules symlinks for all projects in the repo',
            documentation: 'This removes the symlinks created by the "rush link" command. This is useful for'
                + ' cleaning a repo using "git clean" without accidentally deleting source files, or for using standard NPM'
                + ' commands on a project.',
            parser
        });
    }
    onDefineParameters() {
        // No parameters
    }
    run() {
        // Delete the flag file if it exists; this will ensure that
        // a full "rush link" is required next time
        Utilities_1.Utilities.deleteFile(this.rushConfiguration.rushLinkJsonFilename);
        let didAnything = false;
        for (const rushProject of this.rushConfiguration.projects) {
            const localModuleFolder = path.join(rushProject.projectFolder, 'node_modules');
            if (fsx.existsSync(localModuleFolder)) {
                console.log('Purging ' + localModuleFolder);
                Utilities_1.Utilities.dangerouslyDeletePath(localModuleFolder);
                didAnything = true;
            }
        }
        if (!didAnything) {
            console.log('Nothing to do.');
        }
        else {
            console.log(os.EOL + 'Done.');
        }
        return Promise.resolve();
    }
}
exports.UnlinkAction = UnlinkAction;

//# sourceMappingURL=UnlinkAction.js.map
