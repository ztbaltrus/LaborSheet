import { CustomOption } from '../../data/CommandLineConfiguration';
import { ICommandLineActionOptions } from '@microsoft/ts-command-line';
import { RushCommandLineParser } from './RushCommandLineParser';
import { BaseRushAction } from './BaseRushAction';
export declare class CustomRushAction extends BaseRushAction {
    private _parallelized;
    private _ignoreMissingScript;
    private customOptions;
    private _changedProjectsOnly;
    private _fromFlag;
    private _toFlag;
    private _toVersionPolicy;
    private _verboseParameter;
    private _parallelismParameter;
    constructor(parser: RushCommandLineParser, options: ICommandLineActionOptions, _parallelized?: boolean, _ignoreMissingScript?: boolean);
    /**
     * Registers a custom option to a task. This custom option is then registered during onDefineParameters()
     * @param longName the long name of the option, e.g. "--verbose"
     * @param option the Custom Option definition
     */
    addCustomOption(longName: string, option: CustomOption): void;
    run(): Promise<void>;
    protected onDefineParameters(): void;
    private _mergeToProjects();
    private _isParallelized();
    private _doBeforeTask();
    private _doAfterTask(stopwatch, success);
    private _collectTelemetry(stopwatch, success);
}
