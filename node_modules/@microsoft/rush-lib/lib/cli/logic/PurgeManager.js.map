{"version":3,"sources":["cli/logic/PurgeManager.ts"],"names":[],"mappings":"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","file":"PurgeManager.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as colors from 'colors';\r\nimport * as path from 'path';\r\n\r\nimport { AsyncRecycler } from '../../utilities/AsyncRecycler';\r\nimport { RushConfiguration } from '../../data/RushConfiguration';\r\nimport { RushConstants } from '../../RushConstants';\r\n\r\n/**\r\n * This class implements the logic for \"rush purge\"\r\n */\r\nexport class PurgeManager {\r\n  private _rushConfiguration: RushConfiguration;\r\n  private _commonTempFolderRecycler: AsyncRecycler;\r\n  private _rushUserFolderRecycler: AsyncRecycler;\r\n\r\n  public constructor(rushConfiguration: RushConfiguration) {\r\n    this._rushConfiguration = rushConfiguration;\r\n\r\n    const commonAsyncRecyclerPath: string = path.join(this._rushConfiguration.commonTempFolder,\r\n      RushConstants.rushRecyclerFolderName);\r\n    this._commonTempFolderRecycler = new AsyncRecycler(commonAsyncRecyclerPath);\r\n\r\n    const rushUserAsyncRecyclerPath: string = path.join(this._rushConfiguration.rushUserFolder,\r\n      RushConstants.rushRecyclerFolderName);\r\n    this._rushUserFolderRecycler = new AsyncRecycler(rushUserAsyncRecyclerPath);\r\n  }\r\n\r\n  /**\r\n   * Performs the AsyncRecycler.deleteAll() operation.  This should be called before\r\n   * the PurgeManager instance is disposed.\r\n   */\r\n  public deleteAll(): void {\r\n    this._commonTempFolderRecycler.deleteAll();\r\n    this._rushUserFolderRecycler.deleteAll();\r\n  }\r\n\r\n  public get commonTempFolderRecycler(): AsyncRecycler {\r\n    return this._commonTempFolderRecycler;\r\n  }\r\n\r\n  /**\r\n   * Delete everything from the common/temp folder\r\n   */\r\n  public purgeNormal(): void {\r\n    // Delete everything under common\\temp except for the recycler folder itself\r\n    console.log('Purging ' + this._rushConfiguration.commonTempFolder);\r\n\r\n    this._commonTempFolderRecycler.moveAllItemsInFolder(this._rushConfiguration.commonTempFolder,\r\n      this._getMembersToExclude(this._rushConfiguration.commonTempFolder));\r\n  }\r\n\r\n  /**\r\n   * In addition to performing the purgeNormal() operation, this method also cleans the\r\n   * .rush folder in the user's home directory.\r\n   */\r\n  public purgeUnsafe(): void {\r\n    this.purgeNormal();\r\n\r\n    // Also delete everything under ~/.rush except for the recycler folder itself\r\n    console.log('Purging ' + this._rushConfiguration.rushUserFolder);\r\n    this._rushUserFolderRecycler.moveAllItemsInFolder(this._rushConfiguration.rushUserFolder,\r\n      this._getMembersToExclude(this._rushConfiguration.rushUserFolder));\r\n  }\r\n\r\n  private _getMembersToExclude(folderToRecycle: string): string[] {\r\n    // Don't recycle the recycler\r\n    const membersToExclude: string[] = [RushConstants.rushRecyclerFolderName];\r\n\r\n    // If the current process is running inside one of the folders, don't recycle that either\r\n    // Example: \"/home/user/.rush/rush-1.2.3/lib/example.js\"\r\n    const currentFolderPath: string = path.resolve(__dirname);\r\n\r\n    // Example:\r\n    // folderToRecycle = \"/home/user/.rush\"\r\n    // relative =  \"rush-1.2.3/lib/example.js\"\r\n    const relative: string = path.relative(folderToRecycle, currentFolderPath);\r\n\r\n    // (The result can be an absolute path if the two folders are on different drive letters)\r\n    if (!path.isAbsolute(relative)) {\r\n      // Get the first path segment:\r\n      const firstPart: string = relative.split(/[\\\\\\/]/)[0];\r\n      if (firstPart.length > 0 && firstPart !== '..') {\r\n        membersToExclude.push(firstPart);\r\n\r\n        // Warn that we won't dispose this folder\r\n        console.log(colors.yellow('The active process\\'s folder will not be deleted: '\r\n          + path.join(folderToRecycle, firstPart)));\r\n      }\r\n    }\r\n\r\n    return membersToExclude;\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../src"}