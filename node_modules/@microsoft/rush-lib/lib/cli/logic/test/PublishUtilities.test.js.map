{"version":3,"sources":["cli/logic/test/PublishUtilities.test.ts"],"names":[],"mappings":"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","file":"PublishUtilities.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport {\r\n  IChangeInfo,\r\n  ChangeType\r\n} from '../../../data/ChangeManagement';\r\nimport { RushConfiguration } from '../../../data/RushConfiguration';\r\nimport { RushConfigurationProject } from '../../../data/RushConfigurationProject';\r\nimport {\r\n  PublishUtilities,\r\n  IChangeInfoHash\r\n} from '../PublishUtilities';\r\nimport { ChangeFiles } from '../ChangeFiles';\r\n\r\n/* tslint:disable:no-string-literal */\r\n\r\ndescribe('findChangeRequests', () => {\r\n  let packagesRushConfiguration: RushConfiguration;\r\n  let repoRushConfiguration: RushConfiguration;\r\n\r\n  beforeEach(() => {\r\n    packagesRushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'packages', 'rush.json')\r\n    );\r\n    repoRushConfiguration = RushConfiguration.loadFromConfigurationFile(\r\n      path.resolve(__dirname, 'repo', 'rush.json')\r\n    );\r\n  });\r\n\r\n  it('returns no changes in an empty change folder', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'noChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(0);\r\n  });\r\n\r\n  it('returns 1 change when changing a leaf package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'leafChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(1);\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('returns 2 changes when patching a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootPatchChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(2);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.dependency);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('returns 4 changes when hotfixing a root package', () => {\r\n    // tslint:disable-next-line no-any\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      packagesRushConfiguration.projectsByName,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootHotfixChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(4);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.hotfix);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['d'].newVersion).toEqual('1.0.0-hotfix.0');\r\n  });\r\n\r\n  it('returns 3 changes when major bumping a root package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootMajorChange'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(3);\r\n\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('returns 2 changes when bumping cyclic dependencies', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'cyclicDeps'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(2);\r\n\r\n    expect(allChanges).toHaveProperty('cyclic-dep-1');\r\n    expect(allChanges).toHaveProperty('cyclic-dep-2');\r\n\r\n    expect(allChanges['cyclic-dep-1'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['cyclic-dep-2'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('returns error when mixing hotfix and non-hotfix changes', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    expect(PublishUtilities.findChangeRequests.bind(\r\n      PublishUtilities,\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'hotfixWithPatchChanges'))))\r\n        .toThrow('Cannot apply hotfix alongside patch change on same package');\r\n  });\r\n\r\n  it('returns error when adding hotfix with config disabled', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    // Overload hotfixChangeEnabled function\r\n    packagesRushConfiguration['_hotfixChangeEnabled'] = false;\r\n\r\n    expect(PublishUtilities.findChangeRequests.bind(\r\n      PublishUtilities,\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'rootHotfixChange'))))\r\n        .toThrow('Cannot add hotfix change; hotfixChangeEnabled is false in configuration.');\r\n  });\r\n\r\n  it('can resolve multiple changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges'))\r\n    );\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(3);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('can resolve multiple reverse-ordered changes requests on the same package', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'orderedChanges')));\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(3);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.major);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.dependency);\r\n    expect(allChanges['a'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.1');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0');\r\n  });\r\n\r\n  it('can resolve multiple hotfix changes', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleHotfixChanges')));\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(4);\r\n    expect(allChanges).toHaveProperty('a');\r\n    expect(allChanges).toHaveProperty('b');\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n\r\n    expect(allChanges['a'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['b'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.hotfix);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.hotfix);\r\n\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['b'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['c'].newVersion).toEqual('1.0.0-hotfix.0');\r\n    expect(allChanges['d'].newVersion).toEqual('1.0.0-hotfix.0');\r\n  });\r\n\r\n  it('can update an explicit dependency', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = packagesRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      packagesRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'explicitVersionChange')));\r\n\r\n    expect(Object.keys(allChanges).length).toEqual(2);\r\n    expect(allChanges).toHaveProperty('c');\r\n    expect(allChanges).toHaveProperty('d');\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n  });\r\n\r\n  it('can exclude lock step projects', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = repoRushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      repoRushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'repo', 'changes')),\r\n      false,\r\n      undefined,\r\n      new Set<string>(['a', 'b', 'e']));\r\n    expect(Object.keys(allChanges).length).toEqual(5);\r\n    expect(allChanges['a'].newVersion).toEqual('1.0.0');\r\n    expect(allChanges['b'].newVersion).toEqual('2.0.0');\r\n    expect(allChanges['c'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['c'].newVersion).toEqual('3.1.2');\r\n    expect(allChanges['d'].changeType).toEqual(ChangeType.patch);\r\n    expect(allChanges['d'].newVersion).toEqual('4.1.2');\r\n    expect(allChanges['e'].newVersion).toEqual(allPackages.get('e')!.packageJson.version);\r\n  });\r\n});\r\n\r\ndescribe('sortChangeRequests', () => {\r\n  let rushConfiguration: RushConfiguration;\r\n\r\n  beforeEach(() => {\r\n    rushConfiguration = RushConfiguration.loadFromConfigurationFile(path.resolve(__dirname, 'packages', 'rush.json'));\r\n  });\r\n\r\n  it('can return a sorted array of the change requests to be published in the correct order', () => {\r\n    const allPackages: Map<string, RushConfigurationProject> = rushConfiguration.projectsByName;\r\n    const allChanges: IChangeInfoHash = PublishUtilities.findChangeRequests(\r\n      allPackages,\r\n      rushConfiguration,\r\n      new ChangeFiles(path.join(__dirname, 'multipleChanges')));\r\n    const orderedChanges: IChangeInfo[] = PublishUtilities.sortChangeRequests(allChanges);\r\n\r\n    expect(orderedChanges.length).toEqual(3);\r\n    expect(orderedChanges[0].packageName).toEqual('a');\r\n    expect(orderedChanges[1].packageName).toEqual('b');\r\n    expect(orderedChanges[2].packageName).toEqual('c');\r\n  });\r\n});\r\n\r\ndescribe('isRangeDependency', () => {\r\n  it('can test ranges', () => {\r\n    /* tslint:disable:no-unused-expression */\r\n    expect(PublishUtilities.isRangeDependency('>=1.0.0 <2.0.0')).toEqual(true);\r\n    expect(PublishUtilities.isRangeDependency('>=1.0.0-pr.1 <2.0.0')).toEqual(true);\r\n    expect(PublishUtilities.isRangeDependency('1.0.0')).toEqual(false);\r\n    expect(PublishUtilities.isRangeDependency('^1.0.0')).toEqual(false);\r\n    expect(PublishUtilities.isRangeDependency('~1.0.0')).toEqual(false);\r\n    /* tslint:enable:no-unused-expression */\r\n  });\r\n});\r\n\r\ndescribe('getNewDependencyVersion', () => {\r\n  it('can update dependency versions', () => {\r\n    const dependencies: { [key: string]: string} = {\r\n      'a': '~1.0.0',\r\n      'b': '^1.0.0',\r\n      'c': '>=1.0.0 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'a', '1.1.0')).toEqual('~1.1.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'b', '1.2.0')).toEqual('^1.2.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'c', '1.3.0')).toEqual('>=1.3.0 <2.0.0');\r\n  });\r\n\r\n  it('can update dependency versions with prereleases', () => {\r\n    const dependencies: { [key: string]: string} = {\r\n      'a': '~1.0.0-pr.1',\r\n      'b': '^1.0.0-pr.1',\r\n      'c': '>=1.0.0-pr.1 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'a', '1.1.0-pr.1')).toEqual('~1.1.0-pr.1');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'b', '1.2.0-pr.2')).toEqual('^1.2.0-pr.2');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'c', '1.3.0-pr.3')).toEqual('>=1.3.0-pr.3 <2.0.0');\r\n  });\r\n\r\n  it('can update to prerelease', () => {\r\n    const dependencies: { [key: string]: string} = {\r\n      'a': '~1.0.0',\r\n      'b': '^1.0.0',\r\n      'c': '>=1.0.0 <2.0.0'\r\n    };\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'a', '1.0.0-hotfix.0')).toEqual('~1.0.0-hotfix.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'b', '1.0.0-hotfix.0')).toEqual('^1.0.0-hotfix.0');\r\n    expect(PublishUtilities.getNewDependencyVersion(dependencies,\r\n      'c', '1.0.0-hotfix.0')).toEqual('>=1.0.0-hotfix.0 <2.0.0');\r\n  });\r\n});"],"sourceRoot":"../../../../../../../src"}