{"version":3,"sources":["cli/logic/test/ShrinkwrapFile.test.ts"],"names":[],"mappings":"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","file":"ShrinkwrapFile.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { BaseShrinkwrapFile } from '../base/BaseShrinkwrapFile';\r\nimport { ShrinkwrapFileFactory } from '../ShrinkwrapFileFactory';\r\nimport { extractVersionFromPnpmVersionSpecifier } from '../pnpm/PnpmShrinkwrapFile';\r\n\r\ndescribe('npm ShrinkwrapFile', () => {\r\n  const filename: string = path.resolve(path.join(__dirname, './shrinkwrapFile/npm-shrinkwrap.json'));\r\n  const shrinkwrapFile: BaseShrinkwrapFile = ShrinkwrapFileFactory.getShrinkwrapFile('npm', filename)!;\r\n\r\n  it('verifies root-level dependency', () => {\r\n    expect(shrinkwrapFile.hasCompatibleTopLevelDependency('q', '~1.5.0')).toEqual(true);\r\n  });\r\n\r\n  it('verifies temp project dependencies', () => {\r\n    // Found locally\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('jquery', '>=2.2.4 <3.0.0', '@rush-temp/project2'))\r\n      .toEqual(true);\r\n    // Found at root\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('q', '~1.5.0', '@rush-temp/project2'))\r\n      .toEqual(true);\r\n  });\r\n\r\n  it('extracts temp projects successfully', () => {\r\n    const tempProjectNames: ReadonlyArray<string> = shrinkwrapFile.getTempProjectNames();\r\n\r\n    expect(tempProjectNames).toEqual(['@rush-temp/project1', '@rush-temp/project2' ]);\r\n  });\r\n});\r\n\r\ndescribe('pnpm ShrinkwrapFile', () => {\r\nconst filename: string = path.resolve(path.join(\r\n  __dirname, '../../../../src/cli/logic/test/shrinkwrapFile/shrinkwrap.yaml'));\r\nconst shrinkwrapFile: BaseShrinkwrapFile = ShrinkwrapFileFactory.getShrinkwrapFile('pnpm', filename)!;\r\n\r\n  it('verifies root-level dependency', () => {\r\n    expect(shrinkwrapFile.hasCompatibleTopLevelDependency('q', '~1.5.0')).toEqual(false);\r\n  });\r\n\r\n  it('verifies temp project dependencies', () => {\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('jquery', '>=2.0.0 <3.0.0', '@rush-temp/project1'))\r\n      .toEqual(true);\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('q', '~1.5.0', '@rush-temp/project2')).toEqual(true);\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('left-pad', '~9.9.9', '@rush-temp/project1')).toEqual(false);\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('@scope/testDep', '>=1.0.0 <2.0.0', '@rush-temp/project3'))\r\n      .toEqual(true);\r\n  });\r\n\r\n  it('extracts temp projects successfully', () => {\r\n    const tempProjectNames: ReadonlyArray<string> = shrinkwrapFile.getTempProjectNames();\r\n\r\n    expect(tempProjectNames).toEqual(['@rush-temp/project1', '@rush-temp/project2', '@rush-temp/project3']);\r\n  });\r\n\r\n  it('can reuse the latest version that another temp package is providing', () => {\r\n    expect(shrinkwrapFile.tryEnsureCompatibleDependency('jquery', '>=2.0.0 <3.0.0', '@rush-temp/project3'))\r\n      .toEqual(true);\r\n  });\r\n});\r\n\r\ndescribe('extractVersionFromPnpmVersionSpecifier', () => {\r\n  it('extracts a simple version with no slashes', () => {\r\n    expect(extractVersionFromPnpmVersionSpecifier('0.0.5')).toEqual('0.0.5');\r\n  });\r\n  it('extracts an unscoped peer dep', () => {\r\n    expect(extractVersionFromPnpmVersionSpecifier('/gulp-karma/0.0.5/karma@0.13.22')).toEqual('0.0.5');\r\n  });\r\n  it('extracts a scoped peer dep', () => {\r\n    expect(extractVersionFromPnpmVersionSpecifier('/@ms/sp-client-utilities/3.1.1/foo@13.1.0')).toEqual('3.1.1');\r\n  });\r\n  it('extracts relative versions', () => {\r\n    expect(extractVersionFromPnpmVersionSpecifier('example.pkgs.visualstudio.com/@scope/testDep/1.0.0'))\r\n      .toEqual('1.0.0');\r\n    expect(extractVersionFromPnpmVersionSpecifier('example.pkgs.visualstudio.com/@scope/testDep/1.2.3-beta.3'))\r\n      .toEqual('1.2.3-beta.3');\r\n  });\r\n  it('handles bad cases', () => {\r\n    expect(extractVersionFromPnpmVersionSpecifier('/foo/gulp-karma/0.0.5/karma@0.13.22')).toEqual(undefined);\r\n    expect(extractVersionFromPnpmVersionSpecifier('/@ms/3.1.1/foo@13.1.0')).toEqual(undefined);\r\n    expect(extractVersionFromPnpmVersionSpecifier('')).toEqual(undefined);\r\n    expect(extractVersionFromPnpmVersionSpecifier('/')).toEqual(undefined);\r\n    expect(extractVersionFromPnpmVersionSpecifier('//')).toEqual(undefined);\r\n    expect(extractVersionFromPnpmVersionSpecifier('/@/')).toEqual(undefined);\r\n    expect(extractVersionFromPnpmVersionSpecifier('example.pkgs.visualstudio.com/@scope/testDep/')).toEqual(undefined);\r\n  });\r\n});\r\n"],"sourceRoot":"../../../../../../../src"}