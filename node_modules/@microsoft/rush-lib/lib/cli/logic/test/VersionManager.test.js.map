{"version":3,"sources":["cli/logic/test/VersionManager.test.ts"],"names":[],"mappings":"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","file":"VersionManager.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { IPackageJson } from '@microsoft/node-core-library';\r\n\r\nimport { BumpType } from '../../../data/VersionPolicy';\r\nimport { ChangeFile } from '../../../data/ChangeFile';\r\nimport { ChangeType, IChangeInfo } from '../../../data/ChangeManagement';\r\nimport { RushConfiguration } from '../../../data/RushConfiguration';\r\nimport { VersionManager } from '../VersionManager';\r\n\r\nfunction _getChanges(changeFiles: Map<string, ChangeFile>,\r\n  packageName: string): IChangeInfo[] | undefined {\r\n  const changeFile: ChangeFile | undefined = changeFiles.get(packageName);\r\n  if (!changeFile) {\r\n    return undefined;\r\n  }\r\n  return changeFile.getChanges(packageName);\r\n}\r\n\r\ndescribe('VersionManager', () => {\r\n  const rushJsonFile: string = path.resolve(__dirname, 'repo', 'rush.json');\r\n  const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushJsonFile);\r\n  let versionManager: VersionManager;\r\n\r\n  beforeEach(() => {\r\n    versionManager = new VersionManager(rushConfiguration, 'test@microsoft.com',\r\n      rushConfiguration.versionPolicyConfiguration);\r\n  });\r\n\r\n  /* tslint:disable:no-string-literal */\r\n  describe('ensure', () => {\r\n    it('fixes lock step versions', () => {\r\n      versionManager.ensure('testPolicy1');\r\n      const updatedPackages: Map<string, IPackageJson> = versionManager.updatedProjects;\r\n      const expectedVersion: string = '10.10.0';\r\n      expect(updatedPackages.size).toEqual(6);\r\n      expect(updatedPackages.get('a')!.version).toEqual(expectedVersion);\r\n      expect(updatedPackages.get('b')!.version).toEqual(expectedVersion);\r\n      expect(updatedPackages.get('b')!.dependencies!['a']).toEqual(`~${expectedVersion}`);\r\n      expect(updatedPackages.get('c')!.version).toEqual('3.1.1');\r\n      expect(updatedPackages.get('c')!.dependencies!['b']).toEqual(`>=10.10.0 <11.0.0`);\r\n      expect(updatedPackages.get('d')!.version).toEqual('4.1.1');\r\n      expect(updatedPackages.get('d')!.dependencies!['b']).toEqual(`>=10.10.0 <11.0.0`);\r\n      expect(updatedPackages.get('f')!.version).toEqual('1.0.0');\r\n      expect(updatedPackages.get('f')!.dependencies!['a']).toEqual(`~10.10.0`);\r\n      expect(updatedPackages.get('g')!.devDependencies!['a']).toEqual(`~10.10.0`);\r\n\r\n      const changeFiles: Map<string, ChangeFile> = versionManager.changeFiles;\r\n      expect(changeFiles.size).toEqual(4);\r\n      expect(_getChanges(changeFiles, 'a')!.length).toEqual(1);\r\n      expect(_getChanges(changeFiles, 'a')![0].changeType).toEqual(ChangeType.none);\r\n      expect(_getChanges(changeFiles, 'b')!.length).toEqual(1);\r\n      expect(_getChanges(changeFiles, 'b')![0].changeType).toEqual(ChangeType.none);\r\n      expect(_getChanges(changeFiles, 'c')!.length).toEqual(2);\r\n      expect(_getChanges(changeFiles, 'c')![0].changeType).toEqual(ChangeType.patch);\r\n      expect(_getChanges(changeFiles, 'c')![1].changeType).toEqual(ChangeType.dependency);\r\n      expect(_getChanges(changeFiles, 'd')!.length).toEqual(2);\r\n      expect(_getChanges(changeFiles, 'd')![0].changeType).toEqual(ChangeType.patch);\r\n      expect(_getChanges(changeFiles, 'd')![1].changeType).toEqual(ChangeType.dependency);\r\n    });\r\n\r\n    it('fixes major version for individual version policy', () => {\r\n      versionManager.ensure('testPolicy2');\r\n      const updatedPackages: Map<string, IPackageJson> = versionManager.updatedProjects;\r\n      expect(updatedPackages.size).toEqual(2);\r\n      expect(updatedPackages.get('c')!.version).toEqual('5.0.0');\r\n      expect(updatedPackages.get('c')!.dependencies!['b']).toEqual(`>=2.0.0 <3.0.0`);\r\n      expect(updatedPackages.get('e')!.version).toEqual('10.10.0');\r\n      expect(updatedPackages.get('e')!.dependencies!['c']).toEqual('~5.0.0');\r\n    });\r\n\r\n    it('does not change packageJson if not needed by individual version policy', () => {\r\n      versionManager.ensure('testPolicy3');\r\n      const updatedPackages: Map<string, IPackageJson> = versionManager.updatedProjects;\r\n      expect(updatedPackages.size).toEqual(0);\r\n    });\r\n  });\r\n\r\n  describe('bump', () => {\r\n    it('bumps to prerelease version', () => {\r\n      versionManager.bump('testPolicy1', BumpType.prerelease, 'dev', false);\r\n      const updatedPackages: Map<string, IPackageJson> = versionManager.updatedProjects;\r\n      const expectedVersion: string = '10.10.1-dev.0';\r\n\r\n      const changeFiles: Map<string, ChangeFile> = versionManager.changeFiles;\r\n\r\n      expect(updatedPackages.get('a')!.version).toEqual(expectedVersion);\r\n      expect(updatedPackages.get('b')!.version).toEqual(expectedVersion);\r\n      expect(updatedPackages.get('e')!.version).toEqual(expectedVersion);\r\n      expect(updatedPackages.get('g')!.devDependencies!['a']).toEqual(`~${expectedVersion}`);\r\n      expect(_getChanges(changeFiles, 'a')).not.toBeDefined();\r\n      expect(_getChanges(changeFiles, 'b')).not.toBeDefined();\r\n    });\r\n  });\r\n  /* tslint:enable:no-string-literal */\r\n});\r\n"],"sourceRoot":"../../../../../../../src"}