{"version":3,"sources":["cli/logic/test/ChangeManager.test.ts"],"names":[],"mappings":"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","file":"ChangeManager.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { RushConfiguration } from '../../../data/RushConfiguration';\r\nimport { ChangeManager } from '../ChangeManager';\r\nimport { PrereleaseToken } from '../PrereleaseToken';\r\n\r\ndescribe('ChangeManager', () => {\r\n  const rushJsonFile: string = path.resolve(__dirname, 'packages', 'rush.json');\r\n  let rushConfiguration: RushConfiguration;\r\n  let changeManager: ChangeManager;\r\n\r\n  beforeEach(() => {\r\n    rushConfiguration = RushConfiguration.loadFromConfigurationFile(rushJsonFile);\r\n    changeManager = new ChangeManager(rushConfiguration);\r\n  });\r\n\r\n  /* tslint:disable:no-string-literal */\r\n  it('can apply changes to the package.json files in the dictionary', () => {\r\n    changeManager.load(path.join(__dirname, 'multipleChanges'));\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('a')!.packageJson.version).toEqual('2.0.0');\r\n    expect(changeManager.allPackages.get('b')!.packageJson.version).toEqual('1.0.1');\r\n    expect(changeManager.allPackages.get('b')!.packageJson.dependencies!['a']).toEqual(\r\n      '>=2.0.0 <3.0.0');\r\n    expect(changeManager.allPackages.get('c')!.packageJson.version).toEqual('1.0.0');\r\n    expect(changeManager.allPackages.get('c')!.packageJson.dependencies!['b']).toEqual(\r\n      '>=1.0.1 <2.0.0');\r\n  });\r\n\r\n  it('can update explicit version dependency', () => {\r\n    changeManager.load(path.join(__dirname, 'explicitVersionChange'));\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('c')!.packageJson.version).toEqual('1.0.1');\r\n    expect(changeManager.allPackages.get('d')!.packageJson.version).toEqual('1.0.1');\r\n    expect(changeManager.allPackages.get('d')!.packageJson.dependencies!['c']).toEqual(\r\n      '1.0.1');\r\n  });\r\n\r\n  it('can update explicit cyclic dependency', () => {\r\n    changeManager.load(path.join(__dirname, 'cyclicDepsExplicit'));\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('cyclic-dep-explicit-1')!.packageJson.version).toEqual(\r\n      '2.0.0');\r\n    expect(changeManager.allPackages.get('cyclic-dep-explicit-1')!.packageJson.dependencies!['cyclic-dep-explicit-2'])\r\n      .toEqual(\r\n        '>=1.0.0 <2.0.0');\r\n    expect(changeManager.allPackages.get('cyclic-dep-explicit-2')!.packageJson.version).toEqual(\r\n      '1.0.0');\r\n    expect(changeManager.allPackages.get('cyclic-dep-explicit-2')!.packageJson.dependencies!['cyclic-dep-explicit-1'])\r\n      .toEqual(\r\n        '>=1.0.0 <2.0.0');\r\n  });\r\n\r\n  it('can update root with patch change for prerelease', () => {\r\n    const prereleaseName: string = 'alpha.1';\r\n    const prereleaseToken: PrereleaseToken = new PrereleaseToken(prereleaseName);\r\n\r\n    changeManager.load(path.join(__dirname, 'rootPatchChange'), prereleaseToken);\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('a')!.packageJson.version).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('b')!.packageJson.version).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('b')!.packageJson.dependencies!['a']).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('c')!.packageJson.version).toEqual('1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.version).toEqual('1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.dependencies!['c']).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n  });\r\n\r\n  it('can update non-root with patch change for prerelease', () => {\r\n    const prereleaseName: string = 'beta.1';\r\n    const prereleaseToken: PrereleaseToken = new PrereleaseToken(prereleaseName);\r\n\r\n    changeManager.load(path.join(__dirname, 'explicitVersionChange'), prereleaseToken);\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('a')!.packageJson.version).toEqual(\r\n      '1.0.0');\r\n    expect(changeManager.allPackages.get('b')!.packageJson.version).toEqual(\r\n      '1.0.0');\r\n    expect(changeManager.allPackages.get('b')!.packageJson.dependencies!['a']).toEqual(\r\n      '>=1.0.0 <2.0.0');\r\n    expect(changeManager.allPackages.get('c')!.packageJson.version).toEqual('1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.version).toEqual('1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.dependencies!['c']).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n  });\r\n\r\n  it('can update cyclic dependency for non-explicit prerelease', () => {\r\n    const prereleaseName: string = 'beta.1';\r\n    const prereleaseToken: PrereleaseToken = new PrereleaseToken(prereleaseName);\r\n\r\n    changeManager.load(path.join(__dirname, 'cyclicDeps'), prereleaseToken);\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('cyclic-dep-1')!.packageJson.version).toEqual(\r\n      '2.0.0-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('cyclic-dep-1')!.packageJson.dependencies!['cyclic-dep-2']).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('cyclic-dep-2')!.packageJson.version).toEqual(\r\n      '1.0.1-' + prereleaseName);\r\n    expect(changeManager.allPackages.get('cyclic-dep-2')!.packageJson.dependencies!['cyclic-dep-1']).toEqual(\r\n      '2.0.0-' + prereleaseName);\r\n  });\r\n\r\n  it('can update root with patch change for adding version suffix', () => {\r\n    const suffix: string = 'dk.1';\r\n    const prereleaseToken: PrereleaseToken = new PrereleaseToken(undefined, suffix);\r\n\r\n    changeManager.load(path.join(__dirname, 'rootPatchChange'), prereleaseToken);\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('a')!.packageJson.version).toEqual(\r\n      '1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('b')!.packageJson.version).toEqual(\r\n      '1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('b')!.packageJson.dependencies!['a']).toEqual(\r\n      '1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('c')!.packageJson.version).toEqual('1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.version).toEqual('1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.dependencies!['c']).toEqual(\r\n      '1.0.0-' + suffix);\r\n  });\r\n\r\n  it('can update non-root with patch change for version suffix', () => {\r\n    const suffix: string = 'dk.1';\r\n    const prereleaseToken: PrereleaseToken = new PrereleaseToken(undefined, suffix);\r\n\r\n    changeManager.load(path.join(__dirname, 'explicitVersionChange'), prereleaseToken);\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('a')!.packageJson.version).toEqual(\r\n      '1.0.0');\r\n    expect(changeManager.allPackages.get('b')!.packageJson.version).toEqual(\r\n      '1.0.0');\r\n    expect(changeManager.allPackages.get('b')!.packageJson.dependencies!['a']).toEqual(\r\n      '>=1.0.0 <2.0.0');\r\n    expect(changeManager.allPackages.get('c')!.packageJson.version).toEqual('1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.version).toEqual('1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('d')!.packageJson.dependencies!['c']).toEqual(\r\n      '1.0.0-' + suffix);\r\n  });\r\n\r\n  it('can update cyclic dependency for non-explicit suffix', () => {\r\n    const suffix: string = 'dk.1';\r\n    const prereleaseToken: PrereleaseToken = new PrereleaseToken(undefined, suffix);\r\n\r\n    changeManager.load(path.join(__dirname, 'cyclicDeps'), prereleaseToken);\r\n    changeManager.apply(false);\r\n\r\n    expect(changeManager.allPackages.get('cyclic-dep-1')!.packageJson.version).toEqual(\r\n      '1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('cyclic-dep-1')!.packageJson.dependencies!['cyclic-dep-2']).toEqual(\r\n      '1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('cyclic-dep-2')!.packageJson.version).toEqual(\r\n      '1.0.0-' + suffix);\r\n    expect(changeManager.allPackages.get('cyclic-dep-2')!.packageJson.dependencies!['cyclic-dep-1']).toEqual(\r\n      '1.0.0-' + suffix);\r\n  });\r\n  /* tslint:enable:no-string-literal */\r\n});\r\n"],"sourceRoot":"../../../../../../../src"}