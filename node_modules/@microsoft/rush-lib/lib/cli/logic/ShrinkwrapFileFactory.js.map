{"version":3,"sources":["cli/logic/ShrinkwrapFileFactory.ts"],"names":[],"mappings":";;AAEA,+DAA4D;AAC5D,kEAA+D;AAE/D;IACS,MAAM,CAAC,iBAAiB,CAAC,cAA8B,EAC5D,kBAA0B;QAE1B,EAAE,CAAC,CAAC,cAAc,KAAK,KAAK,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,qCAAiB,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,uCAAkB,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC7D,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,4BAA4B,cAAc,EAAE,CAAC,CAAC;IAChE,CAAC;CACF;AAXD,sDAWC","file":"ShrinkwrapFileFactory.js","sourcesContent":["import { PackageManager } from '../../data/RushConfiguration';\r\nimport { BaseShrinkwrapFile } from './base/BaseShrinkwrapFile';\r\nimport { NpmShrinkwrapFile } from './npm/NpmShrinkwrapFile';\r\nimport { PnpmShrinkwrapFile } from './pnpm/PnpmShrinkwrapFile';\r\n\r\nexport class ShrinkwrapFileFactory {\r\n  public static getShrinkwrapFile(packageManager: PackageManager,\r\n    shrinkwrapFilename: string): BaseShrinkwrapFile | undefined {\r\n\r\n    if (packageManager === 'npm') {\r\n      return NpmShrinkwrapFile.loadFromFile(shrinkwrapFilename);\r\n    } else if (packageManager === 'pnpm') {\r\n      return PnpmShrinkwrapFile.loadFromFile(shrinkwrapFilename);\r\n    }\r\n    throw new Error(`Invalid package manager: ${packageManager}`);\r\n  }\r\n}"],"sourceRoot":"../../../../../src"}