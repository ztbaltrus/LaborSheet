import { BaseShrinkwrapFile } from '../base/BaseShrinkwrapFile';
export declare function extractVersionFromPnpmVersionSpecifier(version: string): string | undefined;
export declare class PnpmShrinkwrapFile extends BaseShrinkwrapFile {
    private _shrinkwrapJson;
    static loadFromFile(shrinkwrapYamlFilename: string): PnpmShrinkwrapFile | undefined;
    getTempProjectNames(): ReadonlyArray<string>;
    /**
     * Serializes the PNPM Shrinkwrap file
     */
    protected serialize(): string;
    /**
     * Gets the version number from the list of top-level dependencies in the "dependencies" section
     * of the shrinkwrap file
     */
    protected getTopLevelDependencyVersion(dependencyName: string): string | undefined;
    /**
     * Gets the resolved version number of a dependency for a specific temp project.
     * For PNPM, we can reuse the version that another project is using.
     * Note that this function modifies the shrinkwrap data.
     */
    protected tryEnsureDependencyVersion(dependencyName: string, tempProjectName: string, versionRange: string): string | undefined;
    protected checkValidVersionRange(dependencyVersion: string, versionRange: string): boolean;
    private constructor();
    /**
     * Returns the version of a dependency being used by a given project
     */
    private _getDependencyVersion(dependencyName, tempProjectName);
    /**
     * Gets the package description for a tempProject from the shrinkwrap file.
     */
    private _getPackageDescription(tempProjectDependencyKey);
    private _getTempProjectKey(tempProjectName);
    private _normalizeDependencyVersion(dependencyName, version);
}
