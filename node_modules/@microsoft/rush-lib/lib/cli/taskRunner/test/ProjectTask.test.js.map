{"version":3,"sources":["cli/taskRunner/test/ProjectTask.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,gDAA0D;AAE1D,QAAQ,CAAC,4BAA4B,EAAE;IACrC,EAAE,CAAC,kBAAkB,EAAE;QACrB,MAAM,CAAC,sCAAwB,CAAC,kDAAkD,CAAC,CAAC;aACjF,OAAO,CAAC,qDAAqD,CAAC,CAAC;QAClE,MAAM,CAAC,sCAAwB,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACzF,MAAM,CAAC,sCAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACzE,MAAM,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAC/F,MAAM,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAC/F,MAAM,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAC/F,MAAM,CAAC,sCAAwB,CAAC,yBAAyB,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IACnG,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,gBAAgB,EAAE;QACnB,MAAM,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QAC7F,MAAM,CAAC,sCAAwB,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC/E,MAAM,CAAC,sCAAwB,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"ProjectTask.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { convertSlashesForWindows } from '../ProjectTask';\r\n\r\ndescribe('convertSlashesForWindows()', () => {\r\n  it('converted inputs', () => {\r\n    expect(convertSlashesForWindows('./node_modules/.bin/tslint -c config/tslint.json'))\r\n      .toEqual('.\\\\node_modules\\\\.bin\\\\tslint -c config/tslint.json');\r\n    expect(convertSlashesForWindows('/blah/bleep&&/bloop')).toEqual('\\\\blah\\\\bleep&&/bloop');\r\n    expect(convertSlashesForWindows('/blah/bleep')).toEqual('\\\\blah\\\\bleep');\r\n    expect(convertSlashesForWindows('/blah/bleep --path a/b')).toEqual('\\\\blah\\\\bleep --path a/b');\r\n    expect(convertSlashesForWindows('/blah/bleep>output.log')).toEqual('\\\\blah\\\\bleep>output.log');\r\n    expect(convertSlashesForWindows('/blah/bleep<input.json')).toEqual('\\\\blah\\\\bleep<input.json');\r\n    expect(convertSlashesForWindows('/blah/bleep|/blah/bloop')).toEqual('\\\\blah\\\\bleep|/blah/bloop');\r\n  });\r\n  it('ignored inputs', () => {\r\n    expect(convertSlashesForWindows('/blah\\\\bleep && /bloop')).toEqual('/blah\\\\bleep && /bloop');\r\n    expect(convertSlashesForWindows('cmd.exe /c blah')).toEqual('cmd.exe /c blah');\r\n    expect(convertSlashesForWindows('\"/blah/bleep\"')).toEqual('\"/blah/bleep\"');\r\n  });\r\n});\r\n"],"sourceRoot":"../../../../../../../src"}