var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { virtual } from '@microsoft/decorators';
var BaseComponent = (function () {
    function BaseComponent() {
        this._isDisposed = false;
    }
    BaseComponent.prototype.dispose = function () {
        if (!this._isDisposed) {
            this.onDispose();
            this.context.dispose();
            delete this.context;
            this._isDisposed = true;
        }
    };
    Object.defineProperty(BaseComponent.prototype, "isDisposed", {
        get: function () {
            return this._isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseComponent.prototype, "manifest", {
        get: function () {
            return this.context.manifest;
        },
        enumerable: true,
        configurable: true
    });
    BaseComponent.prototype.onDispose = function () {
    };
    Object.defineProperty(BaseComponent.prototype, "instanceId", {
        get: function () { return this.context.instanceId; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseComponent.prototype, "componentId", {
        get: function () { return this.context.manifest.id; },
        enumerable: true,
        configurable: true
    });
    BaseComponent.prototype._initializeContext = function (context) {
        this.context = context;
        this.onProvideServices(context.serviceScope);
        context.serviceScope.finish();
        this.context._initializeDynamicData(this, context.serviceScope);
    };
    BaseComponent.prototype.onProvideServices = function (serviceScope) {
    };
    __decorate([
        virtual
    ], BaseComponent.prototype, "manifest", null);
    __decorate([
        virtual
    ], BaseComponent.prototype, "onDispose", null);
    __decorate([
        virtual
    ], BaseComponent.prototype, "onProvideServices", null);
    return BaseComponent;
}());
export default BaseComponent;
