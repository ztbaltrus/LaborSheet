import { ServiceKey, ServiceScope, SPEvent } from '@microsoft/sp-core-library';
import { ITheme } from './themeInterfaces/ITheme';
import { IThemeProvider, ThemeChangedEventArgs } from './IThemeProvider';
/**
 * The theme provider for Office UI Fabric.
 *
 * @internal
 */
export declare class FabricThemeProvider implements IThemeProvider {
    /**
     * The service key for FabricThemeProvider.
     */
    static readonly serviceKey: ServiceKey<IThemeProvider>;
    private static readonly _themeChangedEventNameLiteral;
    /**
     * Used to register a unique event for each FabricThemeProvider instance by appending
     * the instance count to themeChangedEventNameLiteral.
     */
    private static _instanceCount;
    /**
     * {@inheritdoc _IThemeProvider.themeChangedEvent}
     */
    readonly themeChangedEvent: SPEvent<ThemeChangedEventArgs>;
    private readonly _id;
    private _theme;
    constructor(serviceScope: ServiceScope, theme?: ITheme);
    private readonly _themeChangedEventName;
    /**
     * {@inheritdoc _IThemeProvider._clearTheme}
     */
    _clearTheme(): void;
    /**
     * {@inheritdoc _IThemeProvider._setTheme}
     */
    _setTheme(theme: ITheme): void;
    /**
     * {@inheritdoc _IThemeProvider.tryGetTheme}
     */
    tryGetTheme(): ITheme | undefined;
    private _raiseEvent();
}
