{"version":3,"sources":["test/PackageName.test.ts"],"names":[],"mappings":"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","file":"PackageName.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { PackageName } from '../PackageName';\r\n\r\ndescribe('PackageName', () => {\r\n  describe('Test', () => {\r\n\r\n    it('isValidName() positive test', () => {\r\n      expect(PackageName.isValidName('@microsoft/node-core-library')).toEqual(true);\r\n    });\r\n\r\n    it('isValidName() negative test', () => {\r\n      expect(PackageName.isValidName('@microsoft/node-core-library/path')).toEqual(false);\r\n    });\r\n\r\n    it('tryParse() tests', () => {\r\n      expect(\r\n        PackageName.tryParse('@microsoft/node-core-library')\r\n      ).toEqual(\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: 'node-core-library',\r\n          error: ''\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('')\r\n      ).toEqual(\r\n        {\r\n          scope: '',\r\n          unscopedName: '',\r\n          error: 'The package name must not be empty'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse(undefined as any) // tslint:disable-line:no-any\r\n      ).toEqual(\r\n        {\r\n          scope: '',\r\n          unscopedName: '',\r\n          error: 'The package name must not be null or undefined'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('@microsoft')\r\n      ).toEqual(\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: '',\r\n          error: 'Error parsing \"@microsoft\": The scope must be followed by a slash'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('@/node-core-library')\r\n      ).toEqual(\r\n        {\r\n          scope: '@',\r\n          unscopedName: 'node-core-library',\r\n          error: 'Error parsing \"@/node-core-library\": The scope name cannot be empty'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('@Microsoft/node-core-library')\r\n      ).toEqual(\r\n        {\r\n          scope: '@Microsoft',\r\n          unscopedName: 'node-core-library',\r\n          error: 'The package scope \"@Microsoft\" must not contain upper case characters'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('@micro!soft/node-core-library')\r\n      ).toEqual(\r\n        {\r\n          scope: '@micro!soft',\r\n          unscopedName: 'node-core-library',\r\n          error: 'The package name \"@micro!soft/node-core-library\" contains an invalid character: \\\"!\\\"'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('@microsoft/node-co~re-library')\r\n      ).toEqual(\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: 'node-co~re-library',\r\n          error: 'The package name \"@microsoft/node-co~re-library\" contains an invalid character: \\\"~\\\"'\r\n        }\r\n      );\r\n\r\n      expect(\r\n        PackageName.tryParse('@microsoft/node-core-library/path')\r\n      ).toEqual(\r\n        {\r\n          scope: '@microsoft',\r\n          unscopedName: 'node-core-library/path',\r\n          error: 'The package name \"@microsoft/node-core-library/path\" contains an invalid character: \\\"/\\\"'\r\n        }\r\n      );\r\n\r\n    });\r\n  });\r\n\r\n  it('parse() test', () => {\r\n    expect(\r\n      () => { PackageName.parse('@'); }\r\n    ).toThrowError('The scope must be followed by a slash');\r\n  });\r\n\r\n  it('combineParts() tests', () => {\r\n    expect(PackageName.combineParts('@microsoft', 'node-core-library'))\r\n      .toEqual('@microsoft/node-core-library');\r\n\r\n    expect(PackageName.combineParts('', 'node-core-library'))\r\n      .toEqual('node-core-library');\r\n  });\r\n\r\n  it('combineParts() errors', () => {\r\n    expect(() => {\r\n      PackageName.combineParts('', '@microsoft/node-core-library');\r\n    }).toThrowError('The unscopedName cannot start with an \"@\" character');\r\n\r\n    expect(() => {\r\n      PackageName.combineParts('@micr!osoft', 'node-core-library');\r\n    }).toThrowError('The package name \"@micr!osoft/node-core-library\" contains an invalid character: \"!\"');\r\n\r\n    expect(() => {\r\n      PackageName.combineParts('', '');\r\n    }).toThrowError('The package name must not be empty');\r\n  });\r\n});\r\n"],"sourceRoot":"../../../src"}