{"version":3,"sources":["test/PackageJsonLookup.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,6BAA6B;AAC7B,4DAAyD;AAGzD,QAAQ,CAAC,mBAAmB,EAAE;IAE5B,QAAQ,CAAC,aAAa,EAAE;QAEtB,EAAE,CAAC,8BAA8B,EAAE;YACjC,MAAM,iBAAiB,GAAsB,IAAI,qCAAiB,EAAE,CAAC;YACrE,MAAM,cAAc,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC;YACnF,MAAM,WAAW,GAA6B,iBAAiB,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;YACtG,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;YAClC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;gBACpD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAE7C,gFAAgF;gBAChF,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE;YAClC,MAAM,iBAAiB,GAAsB,IAAI,qCAAiB,EAAE,CAAC;YACrE,MAAM,cAAc,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iDAAiD,CAAC,CAAC;YAEvG,mFAAmF;YACnF,MAAM,WAAW,GAAuB,iBAAiB,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;YACjG,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;YAClC,MAAM,CAAC,WAAY,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAEzE,MAAM,SAAS,GAAuB,iBAAiB,CAAC,4BAA4B,CAAC,cAAc,CAAC,CAAC;YAErG,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,cAAc,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"PackageJsonLookup.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { PackageJsonLookup } from '../PackageJsonLookup';\r\nimport { IPackageJson } from '../IPackageJson';\r\n\r\ndescribe('PackageJsonLookup', () => {\r\n\r\n  describe('basic tests', () => {\r\n\r\n    it('tryLoadPackageJsonFor() test', () => {\r\n      const packageJsonLookup: PackageJsonLookup = new PackageJsonLookup();\r\n      const sourceFilePath: string = path.join(__dirname, './test-data/example-package');\r\n      const packageJson: IPackageJson | undefined = packageJsonLookup.tryLoadPackageJsonFor(sourceFilePath);\r\n      expect(packageJson).toBeDefined();\r\n      if (packageJson) {\r\n        expect(packageJson.name).toEqual('example-package');\r\n        expect(packageJson.version).toEqual('1.0.0');\r\n\r\n        // The \"nonstandardField\" should have been trimmed because loadExtraFields=false\r\n        expect(packageJson).not.toHaveProperty('nonstandardField');\r\n      }\r\n    });\r\n\r\n    it('tryGetPackageFolderFor() test', () => {\r\n      const packageJsonLookup: PackageJsonLookup = new PackageJsonLookup();\r\n      const sourceFilePath: string = path.join(__dirname, './test-data/example-package/src/ExampleFile.txt');\r\n\r\n      // Example: C:\\web-build-tools\\libraries\\node-core-library\\src\\test\\example-package\r\n      const foundFolder: string | undefined = packageJsonLookup.tryGetPackageFolderFor(sourceFilePath);\r\n      expect(foundFolder).toBeDefined();\r\n      expect(foundFolder!.search(/[\\\\/]example-package$/i)).toBeGreaterThan(0);\r\n\r\n      const foundFile: string | undefined = packageJsonLookup.tryGetPackageJsonFilePathFor(sourceFilePath);\r\n\r\n      expect(foundFile).toEqual(path.join(foundFolder || '', 'package.json'));\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"../../../src"}