{"version":3,"sources":["test/ProtectableMap.test.ts"],"names":[],"mappings":"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","file":"ProtectableMap.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ProtectableMap } from '../ProtectableMap';\r\n\r\nclass ExampleApi {\r\n  public clearedCount: number = 0;\r\n  public deletedCount: number = 0;\r\n  public setCount: number = 0;\r\n  private _studentAgesByName: ProtectableMap<string, number>;\r\n\r\n  constructor() {\r\n    this._studentAgesByName = new ProtectableMap({\r\n      onClear: (source: ProtectableMap<string, number>) => {\r\n        ++this.clearedCount;\r\n      },\r\n\r\n      onDelete: (source: ProtectableMap<string, number>, key: string) => {\r\n        ++this.deletedCount;\r\n      },\r\n\r\n      onSet: (source: ProtectableMap<string, number>, key: string, value: number) => {\r\n        ++this.setCount;\r\n        if (key.toUpperCase() !== key) {\r\n          throw new Error('The key must be all upper case: ' + key);\r\n        }\r\n\r\n        // If the provided value is negative, clamp it to zero:\r\n        return Math.max(value, 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  public get studentAgesByName(): Map<string, number> {\r\n    return this._studentAgesByName.protectedView;\r\n  }\r\n\r\n  public doUnprotectedOperations(): void {\r\n    // These are unprotected because they interact with this._studentAgesByName\r\n    // instead of this._studentAgesByName.protectedView.\r\n    this._studentAgesByName.clear();\r\n    this._studentAgesByName.set('Dave', -123);\r\n  }\r\n}\r\n\r\ndescribe('ProtectableMap', () => {\r\n  it('Protected operations', () => {\r\n    const exampleApi: ExampleApi = new ExampleApi();\r\n    exampleApi.studentAgesByName.clear();\r\n\r\n    exampleApi.studentAgesByName.set('ALICE', 23);\r\n    exampleApi.studentAgesByName.set('BOB', 21);\r\n    exampleApi.studentAgesByName.set('BOB', -1);\r\n    exampleApi.studentAgesByName.set('CHARLIE', 22);\r\n    exampleApi.studentAgesByName.delete('CHARLIE');\r\n\r\n    expect(exampleApi.clearedCount).toEqual(1);\r\n    expect(exampleApi.setCount).toEqual(4);\r\n    expect(exampleApi.deletedCount).toEqual(1);\r\n\r\n    expect(exampleApi.studentAgesByName.get('ALICE')).toEqual(23);\r\n    expect(exampleApi.studentAgesByName.get('BOB')).toEqual(0); // clamped by onSet()\r\n    expect(exampleApi.studentAgesByName.has('CHARLIE')).toEqual(false);\r\n  });\r\n\r\n  it('Unprotected operations', () => {\r\n    const exampleApi: ExampleApi = new ExampleApi();\r\n\r\n    exampleApi.doUnprotectedOperations();\r\n\r\n    // Interacting directly with the ProtectableMap bypasses the hooks\r\n    expect(exampleApi.clearedCount).toEqual(0);\r\n    expect(exampleApi.studentAgesByName.get('Dave')).toEqual(-123);\r\n  });\r\n\r\n  it('Error case', () => {\r\n    const exampleApi: ExampleApi = new ExampleApi();\r\n    expect(() => {\r\n      exampleApi.studentAgesByName.set('Jane', 23);\r\n    }).toThrowError('The key must be all upper case: Jane');\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"../../../src"}