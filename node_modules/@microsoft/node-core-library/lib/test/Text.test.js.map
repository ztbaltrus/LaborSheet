{"version":3,"sources":["test/Text.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,kCAA+B;AAE/B,QAAQ,CAAC,MAAM,EAAE;IACf,EAAE,CAAC,eAAe,EAAE;QAClB,MAAM,CAAC,WAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAO,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,WAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAI,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,WAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAE,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,WAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,6BAA6B,EAAE;QAChC,MAAM,CAAC;YACL,WAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAI,EAAE,CAAC,CAAC;QAE3D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAO,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAM,GAAG,CAAC,CAAC;QAC5D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAK,IAAI,CAAC,CAAC;QAC7D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAI,IAAI,CAAC,CAAC;QAE7D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAI,KAAK,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAG,MAAM,CAAC,CAAC;QAC/D,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAE,OAAO,CAAC,CAAC;QAChE,MAAM,CAAC,WAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"Text.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Text } from '../Text';\r\n\r\ndescribe('Text', () => {\r\n  it('Text.padEnd()', () => {\r\n    expect(Text.padEnd('', 5)).toEqual(      '     ');\r\n    expect(Text.padEnd('123', 5)).toEqual(   '123  ');\r\n    expect(Text.padEnd('12345', 5)).toEqual( '12345');\r\n    expect(Text.padEnd('123456', 5)).toEqual('123456');\r\n  });\r\n  it('Text.truncateWithEllipsis()', () => {\r\n    expect(() => {\r\n      Text.truncateWithEllipsis('123', -1);\r\n    }).toThrow();\r\n    expect(Text.truncateWithEllipsis('123', 0)).toEqual(   '');\r\n\r\n    expect(Text.truncateWithEllipsis('', 2)).toEqual(      '');\r\n    expect(Text.truncateWithEllipsis('1', 2)).toEqual(     '1');\r\n    expect(Text.truncateWithEllipsis('12', 2)).toEqual(    '12');\r\n    expect(Text.truncateWithEllipsis('123', 2)).toEqual(   '12');\r\n\r\n    expect(Text.truncateWithEllipsis('123', 5)).toEqual(   '123');\r\n    expect(Text.truncateWithEllipsis('1234', 5)).toEqual(  '1234');\r\n    expect(Text.truncateWithEllipsis('12345', 5)).toEqual( '12345');\r\n    expect(Text.truncateWithEllipsis('123456', 5)).toEqual('12...');\r\n  });\r\n});\r\n"],"sourceRoot":"../../../src"}