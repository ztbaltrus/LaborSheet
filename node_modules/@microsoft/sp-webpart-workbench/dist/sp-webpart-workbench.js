define("8be81a5c-af38-4bb2-af97-afa3b64dfbed_1.6.0", ["@microsoft/office-ui-fabric-react-bundle","react","@microsoft/load-themed-styles","@microsoft/sp-core-library","@ms/sp-telemetry","@microsoft/sp-lodash-subset","@microsoft/sp-diagnostics","resx-strings","react-dom","@microsoft/sp-webpart-base","@microsoft/sp-loader","@microsoft/sp-page-context","@microsoft/sp-application-base","@microsoft/sp-component-base","@microsoft/sp-http"], function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_51__, __WEBPACK_EXTERNAL_MODULE_64__, __WEBPACK_EXTERNAL_MODULE_140__, __WEBPACK_EXTERNAL_MODULE_216__, __WEBPACK_EXTERNAL_MODULE_310__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_6_0"];
/******/ 	window["webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_6_0"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		7: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData === 0) {
/******/ 			return new Promise(function(resolve) { resolve(); });
/******/ 		}
/******/
/******/ 		// a Promise means "currently loading".
/******/ 		if(installedChunkData) {
/******/ 			return installedChunkData[2];
/******/ 		}
/******/
/******/ 		// setup Promise in chunk cache
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunkData[2] = promise;
/******/
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + ({"1":"toolbox"}[chunkId]||chunkId) + "_" + {"0":"d620fbbbc7d0f5276d89","1":"463091275c45fbffab50","2":"264ba5cbcb53f17d44ec","3":"0530262fccec360275ac","4":"689fc83124c0ef2ca7f1","5":"43710a672d8040887589","6":"089f204bfeeac04ebdec"}[chunkId] + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) {
/******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				}
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		head.appendChild(script);
/******/
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Set the webpack public path
/******/ 	(function () {
/******/ 	  var scripts = document.getElementsByTagName('script');
/******/ 	  var regex = (typeof spScriptNamePattern !== 'undefined') ? spScriptNamePattern : new RegExp('sp-webpart-workbench_?[a-zA-Z0-9-_]*.js', 'i');
/******/ 	  var publicPath;
/******/ 	
/******/ 	  if (scripts && scripts.length) {
/******/ 	    for (var i = 0; i < scripts.length; i++) {
/******/ 	      if (!scripts[i]) continue;
/******/ 	      var path = scripts[i].getAttribute('src');
/******/ 	      if (path && path.match(regex)) {
/******/ 	        publicPath = path.substring(0, path.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	
/******/ 	  if (!publicPath) {
/******/ 	    for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
/******/ 	      if (global && global.match(regex)) {
/******/ 	        publicPath = global.substring(0, global.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	  __webpack_require__.p = publicPath;
/******/ 	})();
/******/ 	
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 139);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["__extends"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (immutable) */ __webpack_exports__["__rest"] = __rest;
/* harmony export (immutable) */ __webpack_exports__["__decorate"] = __decorate;
/* harmony export (immutable) */ __webpack_exports__["__param"] = __param;
/* harmony export (immutable) */ __webpack_exports__["__metadata"] = __metadata;
/* harmony export (immutable) */ __webpack_exports__["__awaiter"] = __awaiter;
/* harmony export (immutable) */ __webpack_exports__["__generator"] = __generator;
/* harmony export (immutable) */ __webpack_exports__["__exportStar"] = __exportStar;
/* harmony export (immutable) */ __webpack_exports__["__values"] = __values;
/* harmony export (immutable) */ __webpack_exports__["__read"] = __read;
/* harmony export (immutable) */ __webpack_exports__["__spread"] = __spread;
/* harmony export (immutable) */ __webpack_exports__["__await"] = __await;
/* harmony export (immutable) */ __webpack_exports__["__asyncGenerator"] = __asyncGenerator;
/* harmony export (immutable) */ __webpack_exports__["__asyncDelegator"] = __asyncDelegator;
/* harmony export (immutable) */ __webpack_exports__["__asyncValues"] = __asyncValues;
/* harmony export (immutable) */ __webpack_exports__["__makeTemplateObject"] = __makeTemplateObject;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = Object.setPrototypeOf ||
    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; }; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator];
    return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__);

var Flights = (function () {
    function Flights() {
    }
    Flights.isPagePickerEnabled = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPFlight"].isEnabled(499 );
    };
    Flights.isExternalCKEditorFlightEnabled = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPFlight"].isEnabled(1056 );
    };
    Flights.isRTEAdvancedTableSettingsFlightEnabled = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPFlight"].isEnabled(787 );
    };
    Flights.isMultiImagePasteFlightEnabled = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPFlight"].isEnabled(975 );
    };
    Flights.isLayoutEmphasisFlightEnabled = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPFlight"].isEnabled(335 );
    };
    Flights.isCanvasVerticalSectionFlightEnabled = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPFlight"].isEnabled(1072 );
    };
    return Flights;
}());
/* harmony default export */ __webpack_exports__["a"] = (Flights);


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var CanvasControlType;
(function (CanvasControlType) {
    CanvasControlType[CanvasControlType["WebPartZone"] = 3] = "WebPartZone";
    CanvasControlType[CanvasControlType["RTE"] = 4] = "RTE";
    CanvasControlType[CanvasControlType["TwoColumns"] = 5] = "TwoColumns";
    CanvasControlType[CanvasControlType["ThreeColumns"] = 6] = "ThreeColumns";
    CanvasControlType[CanvasControlType["OneThirdColumnRight"] = 7] = "OneThirdColumnRight";
    CanvasControlType[CanvasControlType["OneThirdColumnLeft"] = 8] = "OneThirdColumnLeft";
    CanvasControlType[CanvasControlType["FullWidth"] = 9] = "FullWidth";
    CanvasControlType[CanvasControlType["OneColumn"] = 10] = "OneColumn";
})(CanvasControlType || (CanvasControlType = {}));
/* harmony default export */ __webpack_exports__["a"] = (CanvasControlType);


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(18);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "@microsoft/sp-webpart-base"
var sp_webpart_base_ = __webpack_require__(23);
var sp_webpart_base__default = /*#__PURE__*/__webpack_require__.n(sp_webpart_base_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasControl/CanvasControlType.js
var CanvasControlType = __webpack_require__(8);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(12);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/5.120.0/react-dom@15.6.2+react@15.6.2/node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.js
var TooltipHost = __webpack_require__(46);
var TooltipHost_default = /*#__PURE__*/__webpack_require__.n(TooltipHost);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/CanvasEmphasis/CanvasEmphasisStyles.styles.js
var CanvasEmphasisStyles_styles = __webpack_require__(99);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/CanvasEmphasis/CanvasEmphasis.js
var CanvasEmphasis = __webpack_require__(100);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasZoneEmphasisButton.module.scss.js
__webpack_require__(192);
var styles = {
    emphasisPickerButton: 'emphasisPickerButton_e437066b',
    isActiveButton: 'isActiveButton_e437066b',
};
/* harmony default export */ var CanvasZoneEmphasisButton_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasZoneEmphasisButton.js








var CanvasZoneEmphasisButton_CanvasZoneEmphasisButton = (function (_super) {
    tslib_es6["__extends"](CanvasZoneEmphasisButton, _super);
    function CanvasZoneEmphasisButton(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            emphasisTheme: _this.props.theme
        };
        return _this;
    }
    CanvasZoneEmphasisButton.prototype.componentDidMount = function () {
        this._updateEmphasisTheme(this.props.theme);
    };
    CanvasZoneEmphasisButton.prototype.componentWillUpdate = function (nextProps) {
        if (!Object(sp_lodash_subset_["isEqual"])(this.props.theme, nextProps.theme)) {
            this._updateEmphasisTheme(nextProps.theme);
        }
    };
    CanvasZoneEmphasisButton.prototype.render = function () {
        var _a = this.props, color = _a.color, theme = _a.theme, isColorActive = _a.isColorActive, id = _a.id, onButtonClick = _a.onButtonClick, title = _a.title;
        var classNames;
        if (this.state.emphasisTheme) {
            classNames = CanvasEmphasisStyles_styles["a" /* default */].getClassNames({
                root: 'Emphasis',
                theme: this.state.emphasisTheme
            });
        }
        var buttonClassName = Object(office_ui_fabric_react_bundle_["css"])(CanvasZoneEmphasisButton_module_scss.emphasisPickerButton, classNames && classNames.root, (_b = {},
            _b[CanvasZoneEmphasisButton_module_scss.isActiveButton] = isColorActive,
            _b));
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["Customizer"], { settings: { theme: theme }, key: title },
            external__react_["createElement"](TooltipHost["TooltipHost"], { content: title, id: id, calloutProps: { gapSpace: 0 } },
                external__react_["createElement"](office_ui_fabric_react_bundle_["IconButton"], { ariaLabel: title, "aria-describedby": id, className: buttonClassName, "data-automation-id": id, iconProps: { iconName: 'Font' }, onClick: function () { return onButtonClick(color); } }))));
        var _b;
    };
    CanvasZoneEmphasisButton.prototype._updateEmphasisTheme = function (theme) {
        var _this = this;
        var color = this.props.color;
        CanvasEmphasis["a" /* default */].getVariantThemeForEmphasis(color, theme, this.props.variantEmphasis).then(function (t) {
            _this.setState({
                emphasisTheme: t
            });
        });
    };
    CanvasZoneEmphasisButton = tslib_es6["__decorate"]([
        Object(office_ui_fabric_react_bundle_["customizable"])('CanvasZoneEmphasisButton', ['theme'])
    ], CanvasZoneEmphasisButton);
    return CanvasZoneEmphasisButton;
}(external__react_["Component"]));
/* harmony default export */ var canvasLayout_CanvasZoneEmphasisButton = (CanvasZoneEmphasisButton_CanvasZoneEmphasisButton);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/ControlsInOneRow.js + 1 modules
var ControlsInOneRow = __webpack_require__(135);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/loc/CanvasStrings.resx.js
var CanvasStrings_resx = __webpack_require__(10);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasZoneEmphasisPicker.js






var CanvasZoneEmphasisPicker_CanvasZoneEmphasisPicker = (function (_super) {
    tslib_es6["__extends"](CanvasZoneEmphasisPicker, _super);
    function CanvasZoneEmphasisPicker(props) {
        return _super.call(this, props) || this;
    }
    CanvasZoneEmphasisPicker.prototype.render = function () {
        var buttons = [
            this._getCanvasSectionBackgroundButton(CanvasStrings_resx["a" /* default */].SectionBackgroundNoneButtonLabel, 'noneBackgroundColorButton', 0 ),
            this._getCanvasSectionBackgroundButton(CanvasStrings_resx["a" /* default */].SectionBackgroundNeutralButtonLabel, 'neutralBackgroundColorButton', 1 ),
            this._getCanvasSectionBackgroundButton(CanvasStrings_resx["a" /* default */].SectionBackgroundSoftButtonLabel, 'softBackgroundColorButton', 2 ),
            this._getCanvasSectionBackgroundButton(CanvasStrings_resx["a" /* default */].SectionBackgroundStrongButtonLabel, 'strongBackgroundColorButton', 3 )
        ];
        return external__react_["createElement"](ControlsInOneRow["a" /* default */], { spaceInBetween: true }, buttons);
    };
    CanvasZoneEmphasisPicker.prototype._getCanvasSectionBackgroundButton = function (title, id, color) {
        return (external__react_["createElement"](canvasLayout_CanvasZoneEmphasisButton, { key: title, title: title, id: id, color: color, isColorActive: color === this.props.activeColor, onButtonClick: this._handleColorChanged, variantEmphasis: this.props.variantEmphasis }));
    };
    CanvasZoneEmphasisPicker.prototype._handleColorChanged = function (color) {
        this.props.onColorChanged(color);
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZoneEmphasisPicker.prototype, "_handleColorChanged", null);
    return CanvasZoneEmphasisPicker;
}(office_ui_fabric_react_bundle_["BaseComponent"]));


// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasZonePropertyPaneControl.js










var CanvasZonePropertyPaneControl_CanvasZonePropertyPaneControl = (function (_super) {
    tslib_es6["__extends"](CanvasZonePropertyPaneControl, _super);
    function CanvasZonePropertyPaneControl(zone, render, variantEmphasis, layoutIndex) {
        var _this = _super.call(this) || this;
        _this._zone = zone;
        _this._render = render;
        _this._variantEmphasis = variantEmphasis;
        _this._layoutIndex = layoutIndex;
        return _this;
    }
    CanvasZonePropertyPaneControl.prototype._getPropertyPaneData = function () {
        return Promise.resolve({
            webPartId: this._zone.id,
            title: CanvasStrings_resx["a" /* default */].SectionPropertyPaneTitle,
            configuration: {
                pages: this._getProperyPanePages()
            },
            dynamicConfiguration: undefined,
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: undefined,
            onRendered: undefined,
            properties: {},
            isReactive: this._isPropertyPaneReactive()
        });
    };
    CanvasZonePropertyPaneControl.prototype._onPropertyPaneFieldChanged = function (propertyPath, newValue) {
        this._zone.changeZone(newValue);
        this._render();
    };
    CanvasZonePropertyPaneControl.prototype._onPropertyPaneLifeCycleEvent = function (event) {
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() &&
            (event === 4  || event === 3 )) {
            this._render();
        }
    };
    Object.defineProperty(CanvasZonePropertyPaneControl.prototype, "_emphasisPickerControl", {
        get: function () {
            var controlProps = {
                onColorChanged: this._handleEmphasisChanged,
                activeColor: this._zone.emphasis || 0 ,
                variantEmphasis: this._variantEmphasis
            };
            var canvasEmphasisPicker = external__react_["createElement"](CanvasZoneEmphasisPicker_CanvasZoneEmphasisPicker, controlProps);
            return Object(sp_webpart_base_["PropertyPaneCustomField"])({
                key: 'EmphasisPickerControl',
                onRender: function (element) { return external__react_dom_["render"](canvasEmphasisPicker, element); }
            });
        },
        enumerable: true,
        configurable: true
    });
    CanvasZonePropertyPaneControl.prototype._handleEmphasisChanged = function (emphasis) {
        if (emphasis !== this._zone.emphasis) {
            var controlEmphasis = {
                zoneEmphasis: emphasis,
                sectionEmphasis: undefined,
                controlEmphasis: undefined
            };
            this._zone.changeEmphasis(controlEmphasis);
            this._render();
        }
    };
    CanvasZonePropertyPaneControl.prototype._getProperyPanePages = function () {
        var currentColumnSize = this._zone.layoutType;
        var groups = [];
        if (this._layoutIndex === canvasLayout_CanvasLayout.firstLayoutIndex) {
            groups.push({
                groupName: CanvasStrings_resx["a" /* default */].SectionPropertyPaneColumnGroupName,
                groupFields: [
                    Object(sp_webpart_base_["PropertyPaneChoiceGroup"])('selectedLayout', {
                        options: [
                            {
                                checked: CanvasControlType["a" /* default */].OneColumn === currentColumnSize,
                                iconProps: {
                                    officeFabricIconFontName: 'SingleColumn'
                                },
                                key: CanvasControlType["a" /* default */].OneColumn,
                                text: CanvasStrings_resx["a" /* default */].ToolboxOneColumnPart
                            },
                            {
                                checked: CanvasControlType["a" /* default */].TwoColumns === currentColumnSize,
                                iconProps: {
                                    officeFabricIconFontName: 'DoubleColumn'
                                },
                                key: CanvasControlType["a" /* default */].TwoColumns,
                                text: CanvasStrings_resx["a" /* default */].ToolboxTwoColumnPart
                            },
                            {
                                checked: CanvasControlType["a" /* default */].ThreeColumns === currentColumnSize,
                                iconProps: {
                                    officeFabricIconFontName: 'TripleColumn'
                                },
                                key: CanvasControlType["a" /* default */].ThreeColumns,
                                text: CanvasStrings_resx["a" /* default */].ToolboxThreeColumnPart
                            },
                            {
                                checked: CanvasControlType["a" /* default */].OneThirdColumnLeft === currentColumnSize,
                                iconProps: {
                                    officeFabricIconFontName: Object(office_ui_fabric_react_bundle_["getRTL"])() ? 'ColumnLeftTwoThirds' : 'ColumnRightTwoThirds'
                                },
                                key: CanvasControlType["a" /* default */].OneThirdColumnLeft,
                                text: CanvasStrings_resx["a" /* default */].ToolboxOneThirdLeftColumnPart
                            },
                            {
                                checked: CanvasControlType["a" /* default */].OneThirdColumnRight === currentColumnSize,
                                iconProps: {
                                    officeFabricIconFontName: Object(office_ui_fabric_react_bundle_["getRTL"])() ? 'ColumnRightTwoThirds' : 'ColumnLeftTwoThirds'
                                },
                                key: CanvasControlType["a" /* default */].OneThirdColumnRight,
                                text: CanvasStrings_resx["a" /* default */].ToolboxOneThirdRightColumnPart
                            }
                        ]
                    })
                ]
            });
        }
        if (Flights["a" /* default */].isLayoutEmphasisFlightEnabled()) {
            groups.push({
                groupName: CanvasStrings_resx["a" /* default */].SectionBackgroundPropertyColumnGroupName,
                groupFields: [this._emphasisPickerControl]
            });
        }
        return [
            {
                groups: groups
            }
        ];
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZonePropertyPaneControl.prototype, "_handleEmphasisChanged", null);
    return CanvasZonePropertyPaneControl;
}(sp_webpart_base_["BasePropertyPaneConsumer"]));
/* harmony default export */ var canvasLayout_CanvasZonePropertyPaneControl = (CanvasZonePropertyPaneControl_CanvasZonePropertyPaneControl);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasZonePart.js
var CanvasZonePart = __webpack_require__(101);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasFullWidthSection.js
var CanvasFullWidthSection = __webpack_require__(40);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasLayout.js









var CanvasLayout_CanvasLayout = (function () {
    function CanvasLayout(webPartManager, propertyPaneController, renderCallBack, layoutIndex, variantEmphasis) {
        this._webPartManager = webPartManager;
        this._propertyPaneController = propertyPaneController;
        this._render = renderCallBack;
        this._variantEmphasis = variantEmphasis;
        this.layoutIndex = layoutIndex;
        this._initialize();
    }
    CanvasLayout.generateNewLayoutIndex = function (sortedChildren, currentIdx) {
        if (!sortedChildren) {
            return undefined;
        }
        var sortedIndexes = sortedChildren
            .map(function (child) {
            return child.index;
        })
            .filter(function (item) {
            return item < currentIdx;
        });
        var newIdx = currentIdx;
        if (sortedIndexes.length > 0) {
            newIdx += sortedIndexes[sortedIndexes.length - 1];
        }
        return newIdx / 2;
    };
    CanvasLayout.cloneMerge = function (value1, value2) {
        return Object(sp_lodash_subset_["merge"])({}, value1, value2);
    };
    CanvasLayout.isPositionValid = function (position) {
        return Boolean(position && position.zoneIndex);
    };
    Object.defineProperty(CanvasLayout.prototype, "zones", {
        get: function () {
            var canvasZones = [];
            this._zonePartMap.forEach(function (zone) {
                canvasZones.push(zone);
            });
            return canvasZones.sort(function (zone1, zone2) {
                return zone1.index - zone2.index;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasLayout.prototype, "controlsState", {
        get: function () {
            return this._activeControlsState;
        },
        enumerable: true,
        configurable: true
    });
    CanvasLayout.prototype.fetchControlComponentById = function (controlId) {
        var componentValue = this._controlComponentMap.get(controlId);
        return componentValue && componentValue.component;
    };
    CanvasLayout.prototype.fetchCurrentSelection = function () {
        if (this._activeControlsState.selectedControlId) {
            var componentValue = this._controlComponentMap.get(this._activeControlsState.selectedControlId);
            if (componentValue) {
                if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() && !componentValue.position.layoutIndex) {
                    componentValue.position = CanvasLayout.cloneMerge(componentValue.position, {
                        layoutIndex: CanvasLayout.firstLayoutIndex
                    });
                }
                return componentValue.position;
            }
            return CanvasLayout.undefinedControlPosition;
        }
        else {
            return {
                sectionIndex: undefined,
                zoneIndex: this._activeControlsState.selectedZoneIndex,
                controlIndex: undefined,
                layoutIndex: undefined
            };
        }
    };
    CanvasLayout.prototype.fetchControlPositionById = function (controlId) {
        if (!controlId) {
            return CanvasLayout.undefinedControlPosition;
        }
        var componentValue = this._controlComponentMap.get(controlId);
        if (componentValue) {
            return componentValue.position;
        }
        return CanvasLayout.undefinedControlPosition;
    };
    CanvasLayout.prototype.fetchZone = function (index) {
        return this._zonePartMap.get(index);
    };
    CanvasLayout.prototype.changeEmphasis = function (emphasis) {
        throw new Error('Not implemented');
    };
    CanvasLayout.prototype.addControlComponent = function (controlId, controlComponent) {
        var componentValue = this._controlComponentMap.get(controlId);
        sp_core_library_["Validate"].isNotNullOrUndefined(componentValue, 'componentValue');
        componentValue.component = controlComponent;
        this._controlComponentMap.set(controlId, componentValue);
    };
    CanvasLayout.prototype.addControl = function (canvasControl) {
        var qos = this._createQosScope('AddControl');
        if (!canvasControl || !canvasControl.position || canvasControl.position.zoneIndex === undefined) {
            this._handleMonitoredException(qos, 'InvalidControl', new Error('Could not add control as there is no control, no position, or a zone'), canvasControl);
            return undefined;
        }
        try {
            var curZoneIndex = canvasControl.position.zoneIndex;
            var controlId = void 0;
            var zone = this._zonePartMap.get(curZoneIndex);
            if (!zone) {
                var newCanvasZone = new CanvasZonePart["a" /* default */](curZoneIndex, canvasControl.emphasis && canvasControl.emphasis.zoneEmphasis, this._controlComponentMap, this._webPartManager, this._propertyPaneController, this.layoutIndex);
                if (canvasControl.position.sectionIndex === undefined) {
                    canvasControl.position = CanvasLayout.cloneMerge(canvasControl.position, {
                        sectionIndex: CanvasLayout.firstLayoutIndex
                    });
                }
                controlId = newCanvasZone.addControl(canvasControl);
                if (controlId) {
                    this._zonePartMap.set(curZoneIndex, newCanvasZone);
                }
                if (!KillSwitches["a" /* default */].isPropertyPaneControllerFromServiceScopeKillSwitchActivated()) {
                    this._propertyPaneController.registerConsumer(newCanvasZone.id, new canvasLayout_CanvasZonePropertyPaneControl(newCanvasZone, this._render, this._variantEmphasis, this.layoutIndex));
                }
                else {
                    this._webPartManager.setPropertyPaneConsumer(newCanvasZone.id, new canvasLayout_CanvasZonePropertyPaneControl(newCanvasZone, this._render, this._variantEmphasis, this.layoutIndex));
                }
            }
            else {
                if (canvasControl.position.sectionIndex !== undefined) {
                    controlId = zone.addControl(canvasControl);
                }
                else {
                    canvasControl.position = CanvasLayout.cloneMerge(canvasControl.position, {
                        zoneIndex: CanvasLayout.generateNewLayoutIndex(this.zones, curZoneIndex)
                    });
                    if (canvasControl.position.zoneIndex === undefined) {
                        this._handleMonitoredException(qos, 'ControlIndex', new Error('Could not generate a new control index'), canvasControl);
                        return undefined;
                    }
                    var newSecondaryZone = new CanvasZonePart["a" /* default */](canvasControl.position.zoneIndex, canvasControl.emphasis && canvasControl.emphasis.zoneEmphasis, this._controlComponentMap, this._webPartManager, this._propertyPaneController, this.layoutIndex);
                    canvasControl.position = CanvasLayout.cloneMerge(canvasControl.position, {
                        sectionIndex: CanvasLayout.firstLayoutIndex
                    });
                    controlId = newSecondaryZone.addControl(canvasControl);
                    if (controlId) {
                        this._zonePartMap.set(canvasControl.position.zoneIndex, newSecondaryZone);
                    }
                    if (!KillSwitches["a" /* default */].isPropertyPaneControllerFromServiceScopeKillSwitchActivated()) {
                        this._propertyPaneController.registerConsumer(newSecondaryZone.id, new canvasLayout_CanvasZonePropertyPaneControl(newSecondaryZone, this._render, this._variantEmphasis, this.layoutIndex));
                    }
                    else {
                        this._webPartManager.setPropertyPaneConsumer(newSecondaryZone.id, new canvasLayout_CanvasZonePropertyPaneControl(newSecondaryZone, this._render, this._variantEmphasis, this.layoutIndex));
                    }
                }
            }
            if (controlId) {
                var componentValue = {
                    component: undefined,
                    position: canvasControl.position
                };
                this._controlComponentMap.set(controlId, componentValue);
            }
            qos.writeSuccess();
            return controlId;
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, canvasControl);
            return undefined;
        }
    };
    CanvasLayout.prototype.moveControl = function (control, newControlPosition) {
        if (!control || !newControlPosition) {
            return;
        }
        var zoneIndex = control.position.zoneIndex;
        if (zoneIndex === newControlPosition.zoneIndex) {
            var zone = this._zonePartMap.get(zoneIndex);
            zone.moveControl(control, newControlPosition);
        }
        else {
            var isFullWidth = CanvasFullWidthSection["a" /* default */].isFullWidth(newControlPosition);
            var newControl = this._controlComponentMap.get(control.id).component.serialize();
            this._checkControlFullWidthProperty(newControlPosition, newControl);
            newControl.position = newControlPosition;
            newControl.addedFromPersistedData = true;
            this.removeControl(control.position);
            this._webPartManager.disposeWebparts(control.id);
            if (isFullWidth && !this._isZoneSectionEmpty(newControlPosition, 0)) {
                var curZoneIndex = newControl.position.zoneIndex;
                newControl.position = CanvasLayout.cloneMerge(newControl.position, {
                    zoneIndex: CanvasLayout.generateNewLayoutIndex(this.zones, curZoneIndex),
                    sectionIndex: CanvasLayout.firstLayoutIndex,
                    controlIndex: 1
                });
            }
            this.addControl(newControl);
        }
        this._render();
    };
    CanvasLayout.prototype.moveZone = function (zone, newZoneIndex) {
        if (!zone || !newZoneIndex) {
            return false;
        }
        this._zonePartMap.delete(zone.index);
        zone.changeZoneIndex(CanvasLayout.generateNewLayoutIndex(this.zones, newZoneIndex));
        this._zonePartMap.set(zone.index, zone);
        if (!KillSwitches["a" /* default */].isPropertyPaneControllerFromServiceScopeKillSwitchActivated()) {
            this._propertyPaneController.registerConsumer(zone.id, new canvasLayout_CanvasZonePropertyPaneControl(zone, this._render, this._variantEmphasis, this.layoutIndex));
        }
        else {
            this._webPartManager.setPropertyPaneConsumer(zone.id, new canvasLayout_CanvasZonePropertyPaneControl(zone, this._render, this._variantEmphasis, this.layoutIndex));
        }
        this._render();
        return true;
    };
    CanvasLayout.prototype.removeControl = function (controlPosition) {
        var qos = this._createQosScope('RemoveControl');
        if (!controlPosition) {
            this._handleMonitoredException(qos, 'InvalidPosition', new Error('Failed to remove control because control position is undefined'), controlPosition);
            return undefined;
        }
        try {
            var zone = this._zonePartMap.get(controlPosition.zoneIndex);
            if (!zone) {
                this._handleMonitoredException(qos, 'InvalidZone', new Error('Failed to remove control because zone does not exist'), controlPosition);
                return undefined;
            }
            var controlId = zone.removeControl(controlPosition);
            if (controlId) {
                this._controlComponentMap.delete(controlId);
            }
            qos.writeSuccess();
            return controlId;
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, controlPosition);
            return undefined;
        }
    };
    CanvasLayout.prototype.removeZone = function (index) {
        if (!KillSwitches["a" /* default */].isPropertyPaneControllerFromServiceScopeKillSwitchActivated()) {
            var zone = this._zonePartMap.get(index);
            zone.dispose();
        }
        this._zonePartMap.delete(index);
    };
    CanvasLayout.prototype.fetchControl = function (controlPosition) {
        var qos = this._createQosScope('FetchControl');
        if (!controlPosition) {
            this._handleMonitoredException(qos, 'InvalidPosition', new Error('Failed to fetch control because control position is undefined'), controlPosition);
            return undefined;
        }
        try {
            var zone = this._zonePartMap.get(controlPosition.zoneIndex);
            if (!zone) {
                this._handleMonitoredException(qos, 'InvalidZone', new Error('Failed to fetch control because zone does not exist'), controlPosition);
                return undefined;
            }
            qos.writeSuccess();
            return zone.fetchControl(controlPosition);
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, controlPosition);
            return undefined;
        }
    };
    CanvasLayout.prototype.fetchAllControls = function () {
        var canvasControls = [];
        this.zones.forEach(function (zone) {
            var controls = zone.fetchAllControls();
            canvasControls = canvasControls.concat(controls);
        });
        return canvasControls;
    };
    CanvasLayout.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasLayout.prototype.dispose = function () {
        this._zonePartMap.clear();
        this._controlComponentMap.clear();
        this._resetActiveControlState();
    };
    CanvasLayout.prototype._isZoneSectionEmpty = function (position, index) {
        var zone = this._zonePartMap.get(position.zoneIndex);
        var sections = zone && zone.sections;
        return sections && sections[index] && sections[index].isEmpty();
    };
    CanvasLayout.prototype._checkControlFullWidthProperty = function (newCanvasPosition, control) {
        if (CanvasFullWidthSection["a" /* default */].isFullWidthControl(control)) {
            if (CanvasFullWidthSection["a" /* default */].isFullWidth(newCanvasPosition)) {
                CanvasFullWidthSection["a" /* default */].setFullWidthWebPartProperty(control, true);
            }
            else if (!CanvasFullWidthSection["a" /* default */].isFullWidth(newCanvasPosition)) {
                CanvasFullWidthSection["a" /* default */].setFullWidthWebPartProperty(control, false);
            }
        }
    };
    CanvasLayout.prototype._initialize = function () {
        this._zonePartMap = new Map();
        this._controlComponentMap = new Map();
        this._resetActiveControlState();
    };
    CanvasLayout.prototype._createQosScope = function (scope) {
        return new sp_telemetry_["_QosMonitor"]("Canvas" + scope);
    };
    CanvasLayout.prototype._resetActiveControlState = function () {
        this._activeControlsState = {
            hoveredControlId: undefined,
            selectedControlId: undefined,
            selectedZoneIndex: undefined,
            deletedControlLayout: CanvasLayout.undefinedControlPosition,
            deleteCandidateControlLayout: CanvasLayout.undefinedControlPosition
        };
    };
    CanvasLayout.prototype._handleMonitoredException = function (qos, failureTag, err, props) {
        var extraData; 
        if (props && props.controlType) {
            props = props;
            if (props && props.controlType !== CanvasControlType["a" /* default */].RTE && props.controlType !== CanvasControlType["a" /* default */].WebPartZone) {
                extraData = { ControlPosition: props.position };
            }
            if (props && props.controlType === CanvasControlType["a" /* default */].WebPartZone) {
                extraData = {
                    id: props.webPartId,
                    alias: props.webPartManifest.alias
                };
            }
        }
        else {
            extraData = { ControlPosition: props };
        }
        qos.writeUnexpectedFailure(failureTag, err, extraData);
    };
    CanvasLayout.firstLayoutIndex = 1;
    CanvasLayout.verticalLayoutIndex = 2;
    CanvasLayout.undefinedControlPosition = {
        zoneIndex: undefined,
        sectionIndex: undefined,
        controlIndex: undefined,
        layoutIndex: undefined
    };
    return CanvasLayout;
}());
/* harmony default export */ var canvasLayout_CanvasLayout = __webpack_exports__["a"] = (CanvasLayout_CanvasLayout);


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var key = '_jP9TaPNRkCXWU4OplNcN+w';
var allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var strings = allStrings[key];
/* harmony default export */ __webpack_exports__["a"] = (strings);


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (true) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(141)(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}


/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/dom/DomTraversal.js
var DomTraversal = (function () {
    function DomTraversal() {
    }
    DomTraversal.contains = function (parent, child) {
        return (child.compareDocumentPosition(parent) & Node.DOCUMENT_POSITION_CONTAINS) !== 0;
    };
    DomTraversal.getElementPath = function (parent, child, root) {
        root = root || document.body;
        var path = [];
        var pathElem = child;
        while (pathElem) {
            path.unshift(pathElem);
            if (pathElem === parent || pathElem === root || pathElem === document.body) {
                break;
            }
            pathElem = pathElem.parentElement;
        }
        return path[0] === parent ? path : undefined;
    };
    DomTraversal.getLowestCommonAncestor = function (element1, element2, root) {
        root = root || document.body;
        var path1 = DomTraversal.getElementPath(root, element1);
        var path2 = DomTraversal.getElementPath(root, element2);
        if (path1 && path2 && path1[0] === path2[0]) {
            for (var i = 1; i < path1.length; i++) {
                if (path1[i] !== path2[i]) {
                    return path1[i - 1];
                }
            }
        }
        return undefined;
    };
    DomTraversal.getFirstMatchingParent = function (element, matcher, root, includeSelf) {
        if (includeSelf === void 0) { includeSelf = true; }
        root = root || document.body;
        if (!includeSelf && element) {
            element = element.parentElement;
        }
        while (element && element !== document.body) {
            if (matcher(element)) {
                return element;
            }
            if (element === root) {
                break;
            }
            element = element.parentElement;
        }
        return undefined;
    };
    DomTraversal.forEachElementInPath = function (src, dest, callback, root) {
        root = root || document.body;
        var outwardPath;
        var inwardPath;
        if (!src && dest) {
            inwardPath = DomTraversal.getElementPath(root, dest);
        }
        else if (src && !dest) {
            outwardPath = DomTraversal.getElementPath(root, src);
        }
        else if (src && dest) {
            inwardPath = DomTraversal.getElementPath(src, dest);
            if (!inwardPath) {
                outwardPath = DomTraversal.getElementPath(dest, src);
            }
            if (!inwardPath && !outwardPath) {
                var lca = DomTraversal.getLowestCommonAncestor(src, dest, root);
                outwardPath = DomTraversal.getElementPath(lca, src);
                inwardPath = DomTraversal.getElementPath(lca, dest);
            }
        }
        if (inwardPath) {
            inwardPath.shift();
        }
        if (outwardPath) {
            outwardPath.shift();
        }
        outwardPath = outwardPath ? outwardPath.reverse() : undefined;
        if (outwardPath) {
            for (var _i = 0, outwardPath_1 = outwardPath; _i < outwardPath_1.length; _i++) {
                var elem = outwardPath_1[_i];
                callback(elem, true);
            }
        }
        if (inwardPath) {
            for (var _a = 0, inwardPath_1 = inwardPath; _a < inwardPath_1.length; _a++) {
                var elem = inwardPath_1[_a];
                callback(elem, false);
            }
        }
    };
    return DomTraversal;
}());
/* harmony default export */ var dom_DomTraversal = (DomTraversal);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/focus/Focus.js

var Focus_Focus = (function () {
    function Focus() {
    }
    Focus.isElementFocusable = function (elem, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        if (elem
            && !elem.hidden
            && elem.offsetParent
            && window.getComputedStyle(elem).display !== 'none'
            && window.getComputedStyle(elem).visibility !== 'hidden') {
            var tagName = elem.tagName.toLowerCase();
            var hasTabIndex = elem.hasAttribute('tabindex');
            var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
            if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
                return false;
            }
            if (tagName === 'a' && !!elem.href ||
                elem.isContentEditable) {
                return true;
            }
            if ((tagName === 'button' ||
                tagName === 'input' ||
                tagName === 'select' ||
                tagName === 'textarea') && !elem.disabled) {
                return true;
            }
            if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
                return true;
            }
            if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
                return true;
            }
        }
        return false;
    };
    Focus.getFocusableChildren = function (element, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        var children = [];
        var nodes = Focus._queryFocusableSelector(element);
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            if (Focus.isElementFocusable(node) && Focus.getFocusableParent(node, element) === element) {
                children.push(node);
            }
        }
        for (var i = 0; i < children.length; i++) {
            var iTabIndex = parseInt(children[i].getAttribute('tabindex') || '0', 10);
            if (iTabIndex > 0) {
                var e = children.splice(i, 1)[0];
                for (var j = 0; j < i; j++) {
                    var jTabIndex = parseInt(children[j].getAttribute('tabindex') || '0', 10);
                    if (jTabIndex === 0 || iTabIndex < jTabIndex) {
                        children.splice(j, 0, e);
                        break;
                    }
                }
            }
        }
        return children;
    };
    Focus.getFocusableParent = function (element, root) {
        root = root || document.body;
        var parent = dom_DomTraversal.getFirstMatchingParent(element, this.isElementFocusable, root, false);
        return parent || root;
    };
    Focus.getFirstFocusableChild = function (elem, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        var nodes = Focus._queryFocusableSelector(elem);
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            if (Focus.isElementFocusable(node, ignoreTabIndex)) {
                return node;
            }
        }
        return undefined;
    };
    Focus.getFocusableDescendants = function (element, ignoreTabIndex, descendants) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        if (!descendants) {
            descendants = [];
        }
        else {
            descendants.push(element);
        }
        var children = Focus.getFocusableChildren(element);
        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
            var child = children_1[_i];
            descendants.concat(Focus.getFocusableDescendants(child, ignoreTabIndex, descendants));
        }
        return descendants;
    };
    Focus.getFocusableSiblings = function (element, root) {
        root = root || document.body;
        var parent = Focus.getFocusableParent(element, root);
        if (parent) {
            var children = Focus.getFocusableChildren(parent);
            var siblings = [];
            var insertPointer = 0;
            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {
                var child = children_2[_i];
                if (child !== element) {
                    siblings.splice(insertPointer++, 0, child);
                }
                else {
                    insertPointer = 0;
                }
            }
            return siblings;
        }
        return [];
    };
    Focus.getNextFocusableSibling = function (element, root) {
        root = root || document.body;
        var siblings = Focus.getFocusableSiblings(element, root);
        return siblings[0];
    };
    Focus.getPrevFocusableSibling = function (element, root) {
        root = root || document.body;
        var siblings = Focus.getFocusableSiblings(element, root);
        return siblings[siblings.length - 1];
    };
    Focus.focusInside = function (element) {
        if (!element) {
            return false;
        }
        var children = Focus.getFocusableChildren(element);
        if (children.length) {
            children[0].focus();
            return true;
        }
        else {
            return false;
        }
    };
    Focus.focusTo = function (element) {
        if (Focus.isElementFocusable(element)) {
            element.focus();
            return true;
        }
        else {
            return Focus.focusInside(element);
        }
    };
    Focus.focusOutOf = function (element, root) {
        root = root || document.body;
        var parent = Focus.getFocusableParent(element, root);
        if (parent && parent !== root) {
            parent.focus();
            return true;
        }
        else {
            return false;
        }
    };
    Focus.hasFocus = function (element, checkChildren) {
        if (checkChildren === void 0) { checkChildren = false; }
        if (document.activeElement === element) {
            return true;
        }
        if (checkChildren && dom_DomTraversal.contains(element, document.activeElement)) {
            return true;
        }
        return false;
    };
    Focus._queryFocusableSelector = function (element) {
        var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
    [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
        return element.querySelectorAll(selector);
    };
    return Focus;
}());
/* harmony default export */ var focus_Focus = (Focus_Focus);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/keyboard/Keyboard.js
var Keyboard = (function () {
    function Keyboard() {
    }
    Keyboard.isEscape = function (e) {
        return Keyboard.isKey(27, e);
    };
    Keyboard.isEnter = function (e) {
        return Keyboard.isKey(13, e);
    };
    Keyboard.isShiftTab = function (e) {
        return Keyboard.isKey(9, e, { shift: true });
    };
    Keyboard.isTab = function (e) {
        return Keyboard.isKey(9, e);
    };
    Keyboard.isKey = function (keyCode, event, allowedModifiers) {
        if (!(allowedModifiers && allowedModifiers.alt) !== !event.altKey) {
            return false;
        }
        if (!(allowedModifiers && allowedModifiers.ctrl) !== !event.ctrlKey) {
            return false;
        }
        if (!(allowedModifiers && allowedModifiers.shift) !== !event.shiftKey) {
            return false;
        }
        return event.keyCode === keyCode;
    };
    return Keyboard;
}());
/* harmony default export */ var keyboard_Keyboard = (Keyboard);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/screenReader/ScreenReader.js
var ScreenReader = (function () {
    function ScreenReader() {
    }
    ScreenReader.alert = function (id, message, isVisible, className) {
        if (isVisible === void 0) { isVisible = false; }
        var divId = 'sp_a11y_alert_' + id;
        var oldAlert = document.querySelector('#' + divId);
        if (oldAlert) {
            document.body.removeChild(oldAlert);
        }
        var alertNode = document.createElement('p');
        if (!isVisible) {
            alertNode.setAttribute('style', ScreenReader._cssHidden);
        }
        if (className) {
            alertNode.classList.add(className);
        }
        alertNode.setAttribute('role', 'alert');
        alertNode.setAttribute('aria-live', 'assertive');
        alertNode.setAttribute('id', divId);
        var alertText = document.createTextNode(message);
        document.body.appendChild(alertNode);
        alertNode.appendChild(alertText);
    };
    ScreenReader._cssHidden = "position:absolute;text-indent:-9999px;\n    width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0;";
    return ScreenReader;
}());
/* harmony default export */ var screenReader_ScreenReader = (ScreenReader);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/focus/FocusTransition.js

var FocusTransition_FocusTransition = (function () {
    function FocusTransition(src, dest, root) {
        this._src = src;
        this._dest = dest;
        this._root = root || document.body;
    }
    Object.defineProperty(FocusTransition.prototype, "src", {
        get: function () {
            return this._src;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FocusTransition.prototype, "dest", {
        get: function () {
            return this._dest;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FocusTransition.prototype, "root", {
        get: function () {
            return this._root;
        },
        enumerable: true,
        configurable: true
    });
    FocusTransition.prototype.forEachElementInPath = function (callback) {
        dom_DomTraversal.forEachElementInPath(this._src, this._dest, callback, this._root);
    };
    return FocusTransition;
}());
/* harmony default export */ var focus_FocusTransition = (FocusTransition_FocusTransition);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/a11yManager/A11yAttribute.js

var A11yAttributeType;
(function (A11yAttributeType) {
    A11yAttributeType[A11yAttributeType["Id"] = 0] = "Id";
    A11yAttributeType[A11yAttributeType["Class"] = 1] = "Class";
    A11yAttributeType[A11yAttributeType["AlertOnFocusIn"] = 2] = "AlertOnFocusIn";
    A11yAttributeType[A11yAttributeType["AlertOnFocusOut"] = 3] = "AlertOnFocusOut";
    A11yAttributeType[A11yAttributeType["SkipKeys"] = 4] = "SkipKeys";
    A11yAttributeType[A11yAttributeType["StopKeys"] = 5] = "StopKeys";
    A11yAttributeType[A11yAttributeType["NavigateOnKey"] = 6] = "NavigateOnKey";
    A11yAttributeType[A11yAttributeType["NavigateByHierarchy"] = 7] = "NavigateByHierarchy";
})(A11yAttributeType = A11yAttributeType || (A11yAttributeType = {}));
var A11yAttribute_A11yAttribute = (function () {
    function A11yAttribute(appPrefix, type, params, value) {
        this._appPrefix = appPrefix;
        this._type = type;
        this._params = params;
        this._value = value;
    }
    A11yAttribute.getPrefix = function (appPrefix, type) {
        return appPrefix + A11yAttribute._getTypeString(type);
    };
    A11yAttribute.getAllFromElement = function (appPrefix, element) {
        var result = [];
        var types = Object.keys(A11yAttributeType).map(function (k) { return A11yAttributeType[k]; }).filter(function (v) { return typeof v === 'number'; });
        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
            var type = types_1[_i];
            for (var i = 0; i < element.attributes.length; i++) {
                var attrName = element.attributes[i].name;
                var prefix = A11yAttribute.getPrefix(appPrefix, type);
                if (attrName.substring(0, prefix.length) === prefix) {
                    var params = attrName[prefix.length] === '-' ? attrName.substr(prefix.length + 1).split('-') : undefined;
                    var value = element.getAttribute(attrName);
                    result.push(new A11yAttribute(appPrefix, type, params, value));
                }
            }
        }
        return result;
    };
    A11yAttribute.getFromElementByType = function (appPrefix, element, type) {
        return A11yAttribute.getAllFromElement(appPrefix, element).filter(function (a) { return a.type === type; });
    };
    A11yAttribute.getFromElementOrParentsByType = function (appPrefix, element, root, type) {
        var attr;
        dom_DomTraversal.getFirstMatchingParent(element, function (p) {
            attr = A11yAttribute.getAllFromElement(appPrefix, p).filter(function (a) { return a.type === type; })[0];
            return !!attr;
        }, root, true);
        return attr || undefined;
    };
    A11yAttribute._getTypeString = function (type) {
        switch (type) {
            case A11yAttributeType.Id: return 'id';
            case A11yAttributeType.Class: return 'class';
            case A11yAttributeType.SkipKeys: return 'skipkeys';
            case A11yAttributeType.StopKeys: return 'stopkeys';
            case A11yAttributeType.AlertOnFocusIn: return 'alertonfocusin';
            case A11yAttributeType.AlertOnFocusOut: return 'alertonfocusout';
            case A11yAttributeType.NavigateOnKey: return 'navigateonkey';
            case A11yAttributeType.NavigateByHierarchy: return 'navigatebyhierarchy';
            default: throw new Error("Undefined string for attribute type: " + type);
        }
    };
    Object.defineProperty(A11yAttribute.prototype, "name", {
        get: function () {
            var name = this.prefix;
            if (this._params && this._params.length > 0) {
                var params = this._params.join('-');
                name += "-" + params;
            }
            return name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "prefix", {
        get: function () {
            return A11yAttribute.getPrefix(this._appPrefix, this._type);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "value", {
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "params", {
        get: function () {
            return this._params;
        },
        enumerable: true,
        configurable: true
    });
    A11yAttribute.prototype.setOnElement = function (element) {
        element.setAttribute(this.name, this.value);
    };
    return A11yAttribute;
}());
/* harmony default export */ var a11yManager_A11yAttribute = (A11yAttribute_A11yAttribute);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/a11yManager/A11yManager.js







var A11yManager_A11yManager = (function () {
    function A11yManager(rootElement, config) {
        if (!rootElement) {
            throw Error('Invalid root element for constructing A11yManager');
        }
        var count = A11yManager._instances.size;
        var id = "A11yManager" + count;
        this._handleKeyDown = this._handleKeyDown.bind(this);
        this._handleFocusIn = this._handleFocusIn.bind(this);
        this._handleFocusOut = this._handleFocusOut.bind(this);
        this._checkFocusTransition = this._checkFocusTransition.bind(this);
        this._onFocusTransition = this._onFocusTransition.bind(this);
        this._rootElement = rootElement;
        this._id = id;
        this._config = config || {};
        this._savedFocusMap = new Map();
        this._focusListeners = new Map();
        this._rootElement.addEventListener('keydown', this._handleKeyDown);
        this._rootElement.addEventListener('focusin', this._handleFocusIn);
        this._rootElement.addEventListener('focusout', this._handleFocusOut);
    }
    A11yManager.create = function (domElement, config) {
        if (A11yManager._findInstanceForElement(domElement)) {
            console.warn('Creating an A11yManager on an element already managed by a parent A11yManager is not supported' +
                ' and may result in unexpected behavior. Inseatd you should use getInsanceById to get the existing manager.');
        }
        var instance = new A11yManager(domElement, config);
        this._instances.set(instance.id, instance);
        return instance;
    };
    A11yManager.getInstanceById = function (id) {
        return this._instances.get(id);
    };
    A11yManager.isElementManaged = function (domElement) {
        return !!this._findInstanceForElement(domElement);
    };
    A11yManager._findInstanceForElement = function (domElement) {
        if (!domElement) {
            return undefined;
        }
        A11yManager._instances.forEach(function (manager) {
            if (manager.manages(domElement)) {
                return manager;
            }
        });
        return undefined;
    };
    Object.defineProperty(A11yManager.prototype, "_skipEventFlag", {
        get: function () {
            return this.prefix + 'skip-event';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "root", {
        get: function () {
            return this._rootElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "config", {
        get: function () {
            return this._config;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "prefix", {
        get: function () {
            return 'data-sp-a11y-';
        },
        enumerable: true,
        configurable: true
    });
    A11yManager.prototype.addFocusListener = function (element, direction, handler) {
        var listener = {
            element: element,
            direction: direction,
            handler: handler,
            id: A11yManager._focusListenerIdCounter++
        };
        this._focusListeners.set(listener.id, listener);
        return listener.id;
    };
    A11yManager.prototype.removeFocusListener = function (id) {
        if (this._focusListeners.has(id)) {
            this._focusListeners.delete(id);
        }
    };
    A11yManager.prototype.createA11yAttribute = function (type, params, value) {
        return new a11yManager_A11yAttribute(this.prefix, type, params, value);
    };
    A11yManager.prototype.setA11yAttributesOnElement = function (attributes, element) {
        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
            var attr = attributes_1[_i];
            attr.setOnElement(element);
        }
    };
    A11yManager.prototype.alert = function (msg) {
        screenReader_ScreenReader.alert(this._id, msg, false);
        if (this.config.debug) {
            console.log(this._id + " A11y Log: Alerted '" + msg + "'");
        }
    };
    A11yManager.prototype.focusInside = function (element) {
        return focus_Focus.focusInside(element);
    };
    A11yManager.prototype.focusTo = function (element) {
        var done = focus_Focus.focusTo(element);
        return done;
    };
    A11yManager.prototype.focusById = function (id) {
        var nextElement = this.getElementByA11yId(id);
        return this.focusTo(nextElement);
    };
    A11yManager.prototype.focusOutOf = function (element) {
        focus_Focus.focusOutOf(element, this._rootElement);
    };
    A11yManager.prototype.undoFocus = function () {
        return this.focusTo(this._lastActiveElement);
    };
    A11yManager.prototype.saveActiveElementAs = function (key) {
        this._savedFocusMap.set(key, this._activeElement);
    };
    A11yManager.prototype.forgetSavedActiveElement = function (key) {
        this._savedFocusMap.delete(key);
    };
    A11yManager.prototype.saveLastActiveElementAs = function (key) {
        this._savedFocusMap.set(key, this._lastActiveElement);
    };
    A11yManager.prototype.getSavedActiveElement = function (key) {
        return this._savedFocusMap.get(key);
    };
    A11yManager.prototype.restoreFocus = function (key) {
        return this.focusTo(this.getSavedActiveElement(key));
    };
    A11yManager.prototype.hasFocus = function () {
        return this.manages(document.activeElement);
    };
    A11yManager.prototype.manages = function (element) {
        return dom_DomTraversal.contains(this.root, element);
    };
    A11yManager.prototype.skipEvent = function (e) {
        e[this._skipEventFlag] = true;
    };
    A11yManager.prototype.getElementByA11yId = function (id, root) {
        if (!id) {
            return undefined;
        }
        root = root || this._rootElement;
        var idAttribute = a11yManager_A11yAttribute.getPrefix(this.prefix, A11yAttributeType.Id);
        return root.querySelector("[" + idAttribute + "='" + id + "']");
    };
    A11yManager.prototype.getElementsByA11yClass = function (className, root) {
        if (!className) {
            return [];
        }
        root = root || this._rootElement;
        var classAttribute = a11yManager_A11yAttribute.getPrefix(this.prefix, A11yAttributeType.Class);
        var nodeList = root.querySelectorAll("[" + classAttribute + "='" + className + "']");
        return Array.prototype.slice.call(nodeList);
    };
    A11yManager.prototype._getElementFocusListeners = function (element) {
        var listeners = [];
        this._focusListeners.forEach(function (fl) {
            if (fl.element === element) {
                listeners.push(fl);
            }
        });
        return listeners;
    };
    A11yManager.prototype._hasSkipKeyAttribute = function (keyCode, element) {
        var skipAttr = a11yManager_A11yAttribute.getAllFromElement(this.prefix, element)
            .filter(function (attr) { return attr.type === A11yAttributeType.SkipKeys; })[0];
        if (skipAttr && skipAttr.value) {
            if (skipAttr.value === 'all' ||
                skipAttr.value.split(',').filter(function (keyCodeStr) { return parseInt(keyCodeStr, 10) === keyCode; }).length > 0) {
                return true;
            }
        }
        return false;
    };
    A11yManager.prototype._shouldSkipKey = function (keyCode, element) {
        var _this = this;
        var markedElement = dom_DomTraversal.getFirstMatchingParent(element, function (e) { return _this._hasSkipKeyAttribute(keyCode, e); }, this._rootElement);
        return markedElement !== undefined;
    };
    A11yManager.prototype._hasStopKeyAttribute = function (keyCode, element) {
        var stopAttr = a11yManager_A11yAttribute.getAllFromElement(this.prefix, element)
            .filter(function (attr) { return attr.type === A11yAttributeType.StopKeys; })[0];
        if (stopAttr && stopAttr.value) {
            if (stopAttr.value === 'all' ||
                stopAttr.value.split(',').filter(function (keyCodeStr) { return parseInt(keyCodeStr, 10) === keyCode; }).length > 0) {
                return true;
            }
        }
        return false;
    };
    A11yManager.prototype._shouldStopKey = function (keyCode, element) {
        var _this = this;
        var markedElement = dom_DomTraversal.getFirstMatchingParent(element, function (e) { return _this._hasStopKeyAttribute(keyCode, e); }, this._rootElement);
        return markedElement !== undefined;
    };
    A11yManager.prototype._shouldSkipEvent = function (evt) {
        if (evt[this._skipEventFlag]) {
            return true;
        }
        else {
            return this._shouldSkipKey(evt.keyCode, evt.target);
        }
    };
    A11yManager.prototype._shouldStopEvent = function (evt) {
        return this._shouldStopKey(evt.keyCode, evt.target);
    };
    A11yManager.prototype._getElementByNavigationOperator = function (operator, element) {
        switch (operator) {
            case 'next':
                return this._getNextElementByHierarchicalNavigation(element);
            case 'prev':
                return this._getPrevElementByHierarchicalNavigation(element);
            case 'outside':
                return this._getOutsideElementByHierarchicalNavigation(element);
            case 'inside':
                return this._getInsideElementByHierarchicalNavigation(element);
        }
        return undefined;
    };
    A11yManager.prototype._navigateByAttribute = function (evt) {
        var path = this._getElementPath(this._rootElement, evt.target);
        if (path) {
            path = path.reverse();
            for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
                var elem = path_1[_i];
                var navOnKeyAttrs = a11yManager_A11yAttribute.getFromElementByType(this.prefix, elem, A11yAttributeType.NavigateOnKey);
                for (var _a = 0, navOnKeyAttrs_1 = navOnKeyAttrs; _a < navOnKeyAttrs_1.length; _a++) {
                    var navAttr = navOnKeyAttrs_1[_a];
                    if (navAttr.value && navAttr.params) {
                        var keyCode = parseInt(navAttr.params[0], 10);
                        var alt = navAttr.params.indexOf('a') > 0;
                        var ctrl = navAttr.params.indexOf('c') > 0;
                        var shift = navAttr.params.indexOf('s') > 0;
                        if (keyboard_Keyboard.isKey(keyCode, evt, { alt: alt, ctrl: ctrl, shift: shift })) {
                            var value = navAttr.value.trim();
                            var token = value[0];
                            var selector = value.substr(1);
                            var nextElement = void 0;
                            switch (token) {
                                case '#':
                                    nextElement = this.getElementByA11yId(selector, this._rootElement);
                                    break;
                                case '.':
                                    var elems = this.getElementsByA11yClass(selector, elem);
                                    nextElement = elems && elems.length > 0 ? elems[0] : undefined;
                                    break;
                                case '$':
                                    nextElement = this._getElementByNavigationOperator(selector, elem);
                                    break;
                                default:
                                    nextElement = undefined;
                            }
                            return nextElement;
                        }
                    }
                }
                var hierNavAttrs = a11yManager_A11yAttribute.getFromElementByType(this.prefix, elem, A11yAttributeType.NavigateByHierarchy);
                if (hierNavAttrs && hierNavAttrs.length > 0) {
                    return this._navigateByHierarchicalNavigation(evt);
                }
            }
        }
        return undefined;
    };
    A11yManager.prototype._getElementPath = function (higher, lower) {
        return dom_DomTraversal.getElementPath(higher, lower, this._rootElement);
    };
    A11yManager.prototype._getParent = function (element) {
        var _this = this;
        var result = dom_DomTraversal.getFirstMatchingParent(element, function (it) {
            var hierAttr = a11yManager_A11yAttribute.getFromElementByType(_this.prefix, it, A11yAttributeType.NavigateByHierarchy)[0];
            return !!hierAttr || focus_Focus.isElementFocusable(it);
        }, this._rootElement, false);
        return result || this._rootElement;
    };
    A11yManager.prototype._getHierarchyRoot = function (element) {
        var _this = this;
        var result = dom_DomTraversal.getFirstMatchingParent(element, function (it) {
            var hierAttr = a11yManager_A11yAttribute.getFromElementByType(_this.prefix, it, A11yAttributeType.NavigateByHierarchy)[0];
            return !!hierAttr;
        }, this._rootElement, false);
        return result || this._rootElement;
    };
    A11yManager.prototype._getSiblings = function (element) {
        var _this = this;
        var parent = this._getParent(element);
        var siblings = focus_Focus.getFocusableSiblings(element, parent);
        return siblings.filter(function (sib) {
            return parent === _this._getParent(sib);
        });
    };
    A11yManager.prototype._getChildren = function (element) {
        var _this = this;
        var children = focus_Focus.getFocusableChildren(element);
        return children.filter(function (child) {
            return element === _this._getParent(child);
        });
    };
    A11yManager.prototype._getNextElementByHierarchicalNavigation = function (element) {
        var siblings = this._getSiblings(element);
        return siblings.length > 0 ? siblings[0] : undefined;
    };
    A11yManager.prototype._getPrevElementByHierarchicalNavigation = function (element) {
        var siblings = this._getSiblings(element);
        return siblings.length > 0 ? siblings[siblings.length - 1] : undefined;
    };
    A11yManager.prototype._getInsideElementByHierarchicalNavigation = function (element) {
        return focus_Focus.getFirstFocusableChild(element);
    };
    A11yManager.prototype._getOutsideElementByHierarchicalNavigation = function (element) {
        var parent = focus_Focus.getFocusableParent(element, this._rootElement);
        if (parent !== this._rootElement || focus_Focus.isElementFocusable(this._rootElement)) {
            return parent;
        }
        else {
            return undefined;
        }
    };
    A11yManager.prototype._navigateByHierarchicalNavigation = function (evt) {
        var elementToGo;
        var currentElement;
        if (!sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('b6668feb-9617-422c-9ba4-667ba6c28da5'), '8/9/2018', 'Avoid currentElement fallback to parents causing focus jump')) {
            currentElement = evt.target;
        }
        else {
            currentElement = focus_Focus.isElementFocusable(evt.target)
                ? evt.target
                : focus_Focus.getFocusableParent(evt.target, this._rootElement);
        }
        if (keyboard_Keyboard.isTab(evt)) {
            var topChildren = this._getChildren(this._getHierarchyRoot(currentElement));
            if (topChildren.length && currentElement !== topChildren[topChildren.length - 1]) {
                elementToGo = this._getNextElementByHierarchicalNavigation(currentElement);
            }
            else {
                var descendents = focus_Focus.getFocusableDescendants(this._rootElement);
                if (descendents.length > 0) {
                    descendents[descendents.length - 1].focus();
                }
            }
        }
        else if (keyboard_Keyboard.isShiftTab(evt)) {
            var firstChild = this._getChildren(this._rootElement)[0];
            if (currentElement !== firstChild) {
                elementToGo = this._getPrevElementByHierarchicalNavigation(currentElement);
            }
        }
        else if (keyboard_Keyboard.isEnter(evt)) {
            elementToGo = this._getInsideElementByHierarchicalNavigation(currentElement);
        }
        else if (keyboard_Keyboard.isEscape(evt)) {
            elementToGo = this._getOutsideElementByHierarchicalNavigation(currentElement);
        }
        return elementToGo;
    };
    A11yManager.prototype._handleKeyDown = function (evt) {
        if (this._shouldStopEvent(evt)) {
            evt.preventDefault();
            evt.stopPropagation();
            return;
        }
        if (this._shouldSkipEvent(evt)) {
            return;
        }
        var elementToGo = this._navigateByAttribute(evt);
        if (!elementToGo && this.config.useHierarchicalNavigation) {
            elementToGo = this._navigateByHierarchicalNavigation(evt);
        }
        if (elementToGo) {
            this.focusTo(elementToGo);
            evt.preventDefault();
            evt.stopPropagation();
        }
    };
    A11yManager.prototype._handleFocusIn = function (evt) {
        this._lastFocusInEvent = evt;
        this._lastFocusInEventTime = Date.now();
        this._activeElement = evt.target;
        this._checkFocusTransition();
    };
    A11yManager.prototype._handleFocusOut = function (evt) {
        this._lastFocusInEvent = undefined;
        this._lastFocusOutEvent = evt;
        this._lastFocusOutEventTime = Date.now();
        if (this._lastActiveElement !== evt.target) {
            this._lastActiveElement = evt.target;
        }
        this._focusDetectionTimer = window.setTimeout(this._checkFocusTransition, A11yManager._focusDetectionDelay);
    };
    A11yManager.prototype._checkFocusTransition = function () {
        window.clearTimeout(this._focusDetectionTimer);
        if (this._lastFocusInEvent || this._lastFocusOutEvent) {
            this._onFocusTransition(this._lastFocusOutEvent ? this._lastFocusOutEvent.target : undefined, this._lastFocusInEvent ? this._lastFocusInEvent.target : undefined);
        }
        this._lastFocusInEvent = undefined;
        this._lastFocusOutEvent = undefined;
    };
    A11yManager.prototype._onFocusTransition = function (src, dest) {
        var _this = this;
        if (!src && !dest) {
            return;
        }
        var transition = new focus_FocusTransition(src, dest, this.root);
        if (this.config.debug) {
            console.log(this.id + " A11y Log: Focus transition:");
            console.log({
                from: transition.src || 'external element',
                to: transition.dest || 'external element'
            });
        }
        var messages = [];
        transition.forEachElementInPath(function (element, isOutward) {
            var attr = a11yManager_A11yAttribute.getFromElementByType(_this.prefix, element, isOutward ? A11yAttributeType.AlertOnFocusOut : A11yAttributeType.AlertOnFocusIn)[0];
            if (attr && attr.value) {
                messages.push(attr.value);
            }
            var elementFocusListeners = _this._getElementFocusListeners(element);
            for (var _i = 0, elementFocusListeners_1 = elementFocusListeners; _i < elementFocusListeners_1.length; _i++) {
                var listener = elementFocusListeners_1[_i];
                if ((listener.direction === 'outward' && isOutward) ||
                    (listener.direction === 'inward' && !isOutward)) {
                    var handler = listener.handler;
                    if (handler) {
                        handler(transition);
                    }
                }
            }
        });
        if (messages && messages.length > 0) {
            var msg = messages.join(' ');
            this.alert(msg);
        }
    };
    A11yManager._focusDetectionDelay = 50;
    A11yManager._focusListenerIdCounter = 0;
    A11yManager._instances = new Map();
    return A11yManager;
}());
/* harmony default export */ var a11yManager_A11yManager = (A11yManager_A11yManager);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Focus", function() { return focus_Focus; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Keyboard", function() { return keyboard_Keyboard; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ScreenReader", function() { return screenReader_ScreenReader; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "A11yManager", function() { return a11yManager_A11yManager; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "A11yAttribute", function() { return a11yManager_A11yAttribute; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "A11yAttributeType", function() { return A11yAttributeType; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "FocusTransition", function() { return focus_FocusTransition; });








/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(143));
__export(__webpack_require__(166));



/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_16__;

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__);

var KillSwitches = (function () {
    function KillSwitches() {
    }
    KillSwitches.isFixForTooltipKilllSwitchActive = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].tryParse('bf7cf033-4c1c-422c-9fa7-c5e4f44581d2'), '03/22/2018', 'Fix for toolbar tooltip kill switch');
    };
    KillSwitches.isFixForSectionHintTooltipKilllSwitchActive = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].tryParse('425901e7-9bea-497c-be0f-e50fd03e67fe'), '05/11/2018', 'SectionToolTipHostRefactor');
    };
    KillSwitches.isPreInitPagePickerKillSwitchActivated = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].tryParse('9c056175-2e78-49b6-a4fb-29bfb27df596'), '03/26/2018', 'PreInitPagePicker');
    };
    KillSwitches.isFixForToolbarButtonAriaKillSwitchActivated = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].tryParse('bd38de1d-35d2-4bba-9e4b-6ae538aaa303'), '7/31/2018', 'Toolbar button aria label');
    };
    KillSwitches.isBase64IconUrlsKillSwitchActivated = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].tryParse('0066b119-5b34-42ed-90ff-0ca42475fb0b'), '2/28/2018', 'Base64IconUrls');
    };
    KillSwitches.isPropertyPaneControllerFromServiceScopeKillSwitchActivated = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].tryParse('6b3ca2d8-871e-41cb-9de1-11ed1fc90bf9'), '05/31/2018', 'ConsumePropertyPaneControllerFromServiceScope');
    };
    KillSwitches.isFixCloseToolboxKillSwitchActivated = function () {
        return __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["Guid"].parse('6cb5faa3-3043-420d-81ad-bb202bd8a43a'), '7/12/2018', 'SOX_FixCloseToolbox');
    };
    return KillSwitches;
}());
/* harmony default export */ __webpack_exports__["a"] = (KillSwitches);


/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_18__;

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var key = '_yMeGkKybrchrRl4dKHORJw';
var allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var strings = allStrings[key];
/* harmony default export */ __webpack_exports__["a"] = (strings);


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(0)
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(24), exports);


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var ErrorHelper = __webpack_require__(36);
exports.default = ErrorHelper;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Utilities.js
var package = __webpack_require__(1);
module.exports = {}
for (var key in package) {
  if (package.hasOwnProperty(key)) {
    module.exports[key] = package[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_23__;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(0)
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var EventBase_1 = __webpack_require__(29);
function logData(data, parent) {
    return new this(data, EventBase_1.ClonedEventType.Single, parent);
}
function logEmptyData(parent) {
    return new this(null, EventBase_1.ClonedEventType.Single, parent);
}
function createSingleEvent(props, metadata, baseClass) {
    var SingleEvent = /** @class */ (function (_super) {
        tslib_1.__extends(SingleEvent, _super);
        function SingleEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        // tslint:disable-next-line:typedef
        SingleEvent.logData = metadata ? logData : logEmptyData;
        return SingleEvent;
    }(EventBase_1.EventBase));
    EventBase_1.addEventProps(SingleEvent.prototype, props, metadata || {}, baseClass);
    return SingleEvent;
}
exports.createSingleEvent = createSingleEvent;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A color represented by red, green, blue, and alpha (opacity) components.
 */
var RgbaColor = /** @class */ (function () {
    /** Constructs a default RgbaColor. Use RgbaColor.fromRgba to specify components. */
    function RgbaColor() {
        this.R = 0;
        this.G = 0;
        this.B = 0;
        this.A = RgbaColor.maxComponent; // Default to fully opaque.
    }
    /**
     * Creates a copy of the given color.
     * @param {RgbaColor} c The color to clone.
     */
    RgbaColor.clone = function (c) {
        return RgbaColor.fromRgba(c.R, c.G, c.B, c.A);
    };
    /**
     * Returns true if the colors have identical component values of R, G, B, and A.
     * @param {RgbaColor} c1 The first color to compare.
     * @param {RgbaColor} c2 The second color to compare.
     */
    RgbaColor.equals = function (c1, c2) {
        var c1IsNull = !c1;
        var c2IsNull = !c2;
        if (c1IsNull || c2IsNull) {
            return c1IsNull && c2IsNull;
        }
        else {
            return c1.R === c2.R && c1.G === c2.G && c1.B === c2.B && c1.A === c2.A;
        }
    };
    /**
     * Creates an RgbaColor from red, green, blue, and alpha component values.
     * @param {number} r The red component value (between 0 and 255).
     * @param {number} g The green component value (between 0 and 255).
     * @param {number} b The blue component value (between 0 and 255).
     * @param {number} a The alpha component value (between 0 and 255).
     */
    RgbaColor.fromRgba = function (r, g, b, a) {
        var colorObj = new RgbaColor;
        colorObj.R = Math.round(r);
        colorObj.G = Math.round(g);
        colorObj.B = Math.round(b);
        colorObj.A = a != null ? Math.round(a) : RgbaColor.maxComponent;
        return colorObj;
    };
    /**
     * Converts an rgba string of type "rgba(number(0-255), number(0-255), number(0-255), number?(0-1))"
     * to an RgbaColor
     * @param rbga the string to be converted
     */
    RgbaColor.fromRgbaString = function (rbga) {
        var rgbaColor = new RgbaColor();
        if (/^rgb.+/.test(rbga)) {
            // Match all of the numbers that are contained within the string.
            var colorNumbers = rbga.match(/[\d.]+/g);
            rgbaColor = RgbaColor.fromRgba(Number(colorNumbers[0]), Number(colorNumbers[1]), Number(colorNumbers[2]), colorNumbers.length === 4 ? Number(colorNumbers[3]) * RgbaColor.maxComponent : null);
        }
        return rgbaColor;
    };
    /**
     * Parses an HTML color string in the formats #AARRGGBB, #RRGGBB, or #RGB.
     * @param {string} htmlColor The HTML color string to parse.
     */
    RgbaColor.fromHtmlColor = function (htmlColor) {
        function TwoHexCharsToNumber(str, index1, index2) {
            return parseInt(str.charAt(index1) + str.charAt(index2), 16);
        }
        var resultColor = new RgbaColor;
        if (typeof htmlColor === "string" && htmlColor.charAt(0) === "#") {
            switch (htmlColor.length) {
                case 9:// #AARRGGBB
                    resultColor.A = TwoHexCharsToNumber(htmlColor, 1, 2);
                    resultColor.R = TwoHexCharsToNumber(htmlColor, 3, 4);
                    resultColor.G = TwoHexCharsToNumber(htmlColor, 5, 6);
                    resultColor.B = TwoHexCharsToNumber(htmlColor, 7, 8);
                    break;
                case 7:// #RRGGBB
                    resultColor.R = TwoHexCharsToNumber(htmlColor, 1, 2);
                    resultColor.G = TwoHexCharsToNumber(htmlColor, 3, 4);
                    resultColor.B = TwoHexCharsToNumber(htmlColor, 5, 6);
                    break;
                case 4:// #RGB
                    resultColor.R = TwoHexCharsToNumber(htmlColor, 1, 1);
                    resultColor.G = TwoHexCharsToNumber(htmlColor, 2, 2);
                    resultColor.B = TwoHexCharsToNumber(htmlColor, 3, 3);
                    break;
            }
        }
        else if (/^rgb.+/.test(htmlColor)) {
            resultColor = RgbaColor.fromRgbaString(htmlColor);
        }
        return resultColor;
    };
    /**
     * Converts an RgbaColor into an HTML string suitable for use as a CSS color value.
     * @param {RgbaColor} c The color to convert.
     * @param {boolean} bFilterValue If true, this produces a string to in the #AARRGGBB format.
     */
    RgbaColor.toHtmlString = function (c, bFilterValue) {
        function ByteToHexString(b) {
            var byte = Number(b);
            if (!(byte >= 0 && byte <= RgbaColor.maxComponent)) {
                throw new Error("Argument must be a Number in [0, 255]");
            }
            var hex = byte.toString(16);
            if (byte < 16) {
                hex = "0" + hex;
            }
            return hex;
        }
        if (c.A < RgbaColor.maxComponent && !bFilterValue) {
            return "rgba(" +
                c.R.toString(10) + ", " +
                c.G.toString(10) + ", " +
                c.B.toString(10) + ", " +
                (c.A / RgbaColor.maxComponent).toFixed(2) + ")";
        }
        else {
            return "#" +
                (bFilterValue ? ByteToHexString(c.A) : "") +
                ByteToHexString(c.R) +
                ByteToHexString(c.G) +
                ByteToHexString(c.B);
        }
    };
    /**
     * The maximum value of an R, G, B, or A component in an RgbaColor.
     */
    RgbaColor.maxComponent = 255;
    return RgbaColor;
}());
exports.default = RgbaColor;


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var CanvasDragZoneConstants = (function () {
    function CanvasDragZoneConstants() {
    }
    CanvasDragZoneConstants.LINE_OFFSET_BOTTOM = -1;
    CanvasDragZoneConstants.LINE_OFFSET_TOP = 3;
    CanvasDragZoneConstants.controlZoneDragTag = 'ControlZone';
    CanvasDragZoneConstants.sectionDragTag = 'CanvasSection';
    CanvasDragZoneConstants.zoneDragTag = 'CanvasZone';
    CanvasDragZoneConstants.webpartDragHandleTag = 'WebpartHandle';
    CanvasDragZoneConstants.zoneDragHandleTag = 'ZoneHandle';
    CanvasDragZoneConstants.fullWidthSectionTag = 'CanvasFullWidth';
    return CanvasDragZoneConstants;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasDragZoneConstants);


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * This file was originally ported from WinJS.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var Events = __webpack_require__(89);
function doneHandler(value) {
    /* tslint:disable-next-line:ban-native-functions */
    window.setTimeout(function () {
        Events.raise(CancelablePromiseImplementation, errorET, { error: value });
    }, 0);
}
var errorET = "error";
var canceledName = "Canceled";
//
// Global error counter, for each error which enters the system we increment this once and then
// the error number travels with the error as it traverses the tree of potential handlers.
//
// When someone has registered to be told about error [using EventGroup.on(Promise, 'error')] promises
// which are in error will get tagged with a ._errorId field. This tagged field is the
// contract by which nested promises with errors will be identified as chaining for the
// purposes of the callonerror semantics. If a nested promise in error is encountered without
// a ._errorId it will be assumed to be foreign and treated as an interop boundary and
// a new error id will be minted.
//
var error_number = 1;
var state_created; // -> working
var state_working; // -> error | error_notify | success | success_notify | canceled | waiting
var state_waiting; // -> error | error_notify | success | success_notify | waiting_canceled
var state_waiting_canceled; // -> error | error_notify | success | success_notify | canceling
var state_canceled; // -> error | error_notify | success | success_notify | canceling
var state_canceling; // -> error_notify
var state_success_notify; // -> success
var state_success; // -> .
var state_error_notify; // -> error
var state_error; // -> .
// Noop function, used in the various states to indicate that they don't support a given
// message. Named with the somewhat cute name '_' because it reads really well in the states.
function _() { }
// Initial state
//
state_created = {
    name: "created",
    enter: function (promise) {
        promise._setState(state_working);
    },
    cancel: _,
    done: _,
    then: _,
    _completed: _,
    _error: _,
    _notify: _,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Ready state, waiting for a message (completed/error), able to be canceled
//
state_working = {
    name: "working",
    enter: _,
    cancel: function (promise) {
        promise._setState(state_canceled);
    },
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Waiting state, if a promise is completed with a value which is itself a promise
// (has a then() method) it signs up to be informed when that child promise is
// fulfilled at which point it will be fulfilled with that value.
//
state_waiting = {
    name: "waiting",
    enter: function (promise) {
        var waitedUpon = promise._value;
        // We can special case our own intermediate promises which are not in a
        //  terminal state by just pushing this promise as a listener without
        //  having to create new indirection functions
        if (waitedUpon instanceof ThenPromise &&
            waitedUpon._state !== state_error &&
            waitedUpon._state !== state_success) {
            pushListener(waitedUpon, { promise: promise });
        }
        else {
            var error_1 = function (value) {
                if (waitedUpon._errorId) {
                    promise._chainedError(value, waitedUpon);
                }
                else {
                    // Because this is an interop boundary we want to indicate that this
                    //  error has been handled by the promise infrastructure before we
                    //  begin a new handling chain.
                    //
                    callonerror(promise, value, detailsForHandledError, waitedUpon, error_1);
                    promise._error(value);
                }
            };
            error_1.handlesOnError = true;
            waitedUpon.then(promise._completed.bind(promise), error_1);
        }
    },
    cancel: function (promise) {
        promise._setState(state_waiting_canceled);
    },
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Waiting canceled state, when a promise has been in a waiting state and receives a
// request to cancel its pending work it will forward that request to the child promise
// and then waits to be informed of the result. This promise moves itself into the
// canceling state but understands that the child promise may instead push it to a
// different state.
//
state_waiting_canceled = {
    name: "waiting_canceled",
    enter: function (promise) {
        // Initiate a transition to canceling. Triggering a cancel on the promise
        // that we are waiting upon may result in a different state transition
        // before the state machine pump runs again.
        promise._setState(state_canceling);
        var waitedUpon = promise._value;
        if (CancelablePromiseImplementation.is(waitedUpon)) {
            waitedUpon.cancel();
        }
    },
    cancel: _,
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Canceled state, moves to the canceling state and then tells the promise to do
// whatever it might need to do on cancelation.
//
state_canceled = {
    name: "canceled",
    enter: function (promise) {
        // Initiate a transition to canceling. The _cancelAction may change the state
        // before the state machine pump runs again.
        promise._setState(state_canceling);
        promise._cancelAction();
    },
    cancel: _,
    done: done,
    then: then,
    _completed: completed,
    _error: error,
    _notify: _,
    _setCompleteValue: setCompleteValue,
    _setErrorValue: setErrorValue
};
// Canceling state, commits to the promise moving to an error state with an error
// object whose 'name' and 'message' properties contain the string "Canceled"
//
state_canceling = {
    name: "canceling",
    enter: function (promise) {
        var error = new Error(canceledName);
        error.name = error.message;
        error["_handled"] = true;
        promise._value = error;
        promise._setState(state_error_notify);
    },
    cancel: _,
    done: _,
    then: _,
    _completed: _,
    _error: _,
    _notify: _,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Success notify state, moves a promise to the success state and notifies all children
//
state_success_notify = {
    name: "complete_notify",
    enter: function (promise) {
        promise.done = CompletePromise.prototype.done;
        promise.then = CompletePromise.prototype.then;
        if (promise._listeners) {
            var queue = [promise];
            var p = void 0;
            while (queue.length) {
                p = queue.shift();
                p._state._notify(p, queue);
            }
        }
        promise._setState(state_success);
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifySuccess,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Success state, moves a promise to the success state and does NOT notify any children.
// Some upstream promise is owning the notification pass.
//
state_success = {
    name: "success",
    enter: function (promise) {
        promise.done = CompletePromise.prototype.done;
        promise.then = CompletePromise.prototype.then;
        promise._cleanupAction();
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifySuccess,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Error notify state, moves a promise to the error state and notifies all children
//
state_error_notify = {
    name: "error_notify",
    enter: function (promise) {
        promise.done = ErrorPromise.prototype.done;
        promise.then = ErrorPromise.prototype.then;
        if (promise._listeners) {
            var queue = [promise];
            var p = void 0;
            while (queue.length) {
                p = queue.shift();
                p._state._notify(p, queue);
            }
        }
        promise._setState(state_error);
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifyError,
    _setCompleteValue: _,
    _setErrorValue: _
};
// Error state, moves a promise to the error state and does NOT notify any children.
// Some upstream promise is owning the notification pass.
//
state_error = {
    name: "error",
    enter: function (promise) {
        promise.done = ErrorPromise.prototype.done;
        promise.then = ErrorPromise.prototype.then;
        promise._cleanupAction();
    },
    cancel: _,
    done: null,
    then: null,
    _completed: _,
    _error: _,
    _notify: notifyError,
    _setCompleteValue: _,
    _setErrorValue: _
};
//
// The statemachine implementation follows a very particular pattern, the states are specified
// as static stateless bags of functions which are then indirected through the state machine
// instance (a Promise). As such all of the functions on each state have the promise instance
// passed to them explicitly as a parameter and the Promise instance members do a little
// dance where they indirect through the state and insert themselves in the argument list.
//
// We could instead call directly through the promise states however then every caller
// would have to remember to do things like pumping the state machine to catch state transitions.
//
//
// Implementations of shared state machine code.
//
function completed(promise, value) {
    promise._value = value;
    promise._setState(CancelablePromiseImplementation.isPromise(value) ? state_waiting : state_success_notify);
}
function createErrorDetails(exception, error, promise, id, parent, handler) {
    return {
        exception: exception,
        error: error,
        promise: promise,
        handler: handler,
        id: id,
        parent: parent
    };
}
function detailsForHandledError(promise, errorValue, context, handler) {
    var exception = context._isException;
    var errorId = context._errorId;
    return createErrorDetails(exception ? errorValue : null, exception ? null : errorValue, promise, errorId, context, handler);
}
function detailsForChainedError(promise, errorValue, context) {
    var exception = context._isException;
    var errorId = context._errorId;
    setErrorInfo(promise, errorId, exception);
    return createErrorDetails(exception ? errorValue : null, exception ? null : errorValue, promise, errorId, context);
}
function detailsForError(promise, errorValue) {
    var errorId = ++error_number;
    setErrorInfo(promise, errorId);
    return createErrorDetails(null, errorValue, promise, errorId);
}
function detailsForException(promise, exceptionValue) {
    var errorId = ++error_number;
    setErrorInfo(promise, errorId, true);
    return createErrorDetails(exceptionValue, null, promise, errorId);
}
function done(promise, onComplete, onError) {
    pushListener(promise, { c: onComplete, e: onError });
}
function error(promise, value, onerrorDetails, context) {
    promise._value = value;
    callonerror(promise, value, onerrorDetails, context);
    promise._setState(state_error_notify);
}
function notifySuccess(promise, queue) {
    var value = promise._value;
    var listeners = promise._listeners;
    if (!listeners) {
        return;
    }
    promise._listeners = null;
    var i;
    var len;
    for (i = 0, len = listeners.length; i < len; i++) {
        var listener = listeners[i];
        var onComplete = listener.c;
        var target = listener.promise;
        if (target) {
            try {
                target._setCompleteValue(onComplete ? onComplete(value) : value);
            }
            catch (ex) {
                target._setExceptionValue(ex);
            }
            if (target._state !== state_waiting && target._listeners) {
                queue.push(target);
            }
        }
        else {
            CompletePromise.prototype.done.call(promise, onComplete);
        }
    }
}
function notifyError(promise, queue) {
    var value = promise._value;
    var listeners = promise._listeners;
    if (!listeners) {
        return;
    }
    promise._listeners = null;
    var i;
    var len;
    for (i = 0, len = listeners.length; i < len; i++) {
        var listener = listeners[i];
        var onError = listener.e;
        var target = listener.promise;
        if (target) {
            try {
                if (onError) {
                    if (!onError.handlesOnError) {
                        callonerror(target, value, detailsForHandledError, promise, onError);
                    }
                    target._setCompleteValue(onError(value));
                }
                else {
                    target._setChainedErrorValue(value, promise);
                }
            }
            catch (ex) {
                target._setExceptionValue(ex);
            }
            if (target._state !== state_waiting && target._listeners) {
                queue.push(target);
            }
        }
        else {
            ErrorPromise.prototype.done.call(promise, null, onError);
        }
    }
}
function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {
    if (value instanceof Error && value.message === canceledName) {
        return;
    }
    Events.raise(CancelablePromiseImplementation, errorET, onerrorDetailsGenerator(promise, value, context, handler));
}
function pushListener(promise, listener) {
    var listeners = promise._listeners;
    if (listeners) {
        listeners.push(listener);
    }
    else {
        listeners = [listener];
    }
    promise._listeners = listeners;
}
// The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves
// a promise directly to the success/error state without starting another notification pass (because one
// is already ongoing).
function setErrorInfo(promise, errorId, isException) {
    promise._isException = isException || false;
    promise._errorId = errorId;
}
function setErrorValue(promise, value, onerrorDetails, context) {
    promise._value = value;
    callonerror(promise, value, onerrorDetails, context);
    promise._setState(state_error);
}
function setCompleteValue(promise, value) {
    var targetState;
    if (CancelablePromiseImplementation.isPromise(value)) {
        targetState = state_waiting;
    }
    else {
        targetState = state_success;
    }
    promise._value = value;
    promise._setState(targetState);
}
function then(promise, onComplete, onError) {
    var result = new ThenPromise(promise);
    pushListener(promise, { promise: result, c: onComplete, e: onError });
    return result;
}
//
// Slim promise implementations for already completed promises, these are created
// under the hood on synchronous completion paths as well as by Promise.wrap
// and Promise.wrapError.
//
var ErrorPromise = /** @class */ (function () {
    function ErrorPromise(value, errorFunc) {
        if (errorFunc === void 0) { errorFunc = detailsForError; }
        this._value = value;
        callonerror(this, value, errorFunc);
    }
    ErrorPromise.prototype.cancel = function () {
        /* No-op */
    };
    ErrorPromise.prototype.done = function (unused, onError) {
        var value = this._value;
        if (onError) {
            try {
                if (!onError.handlesOnError) {
                    callonerror(null, value, detailsForHandledError, this, onError);
                }
                var result = onError(value);
                if (CancelablePromiseImplementation.is(result)) {
                    // If a promise is returned we need to wait on it.
                    result.done();
                }
                return;
            }
            catch (ex) {
                value = ex;
            }
        }
        if (value instanceof Error && value.message === canceledName) {
            // suppress cancel
            return;
        }
        // force the exception to be thrown asyncronously to avoid any try/catch blocks
        //
        doneHandler(value);
    };
    ErrorPromise.prototype.then = function (unused, onError) {
        // If the promise is already in a error state and no error handler is provided
        // we optimize by simply returning the promise instead of creating a new one.
        //
        if (!onError) {
            return this;
        }
        var result;
        var value = this._value;
        try {
            if (!onError.handlesOnError) {
                callonerror(null, value, detailsForHandledError, this, onError);
            }
            result = new CompletePromise(onError(value));
        }
        catch (ex) {
            // If the value throw from the error handler is the same as the value
            // provided to the error handler then there is no need for a new promise.
            //
            if (ex === value) {
                result = this;
            }
            else {
                result = new ExceptionPromise(ex);
            }
        }
        return result;
    };
    ErrorPromise.prototype.catch = function (onError) {
        return this.then(undefined, onError);
    };
    return ErrorPromise;
}());
var ExceptionPromise = /** @class */ (function (_super) {
    tslib_1.__extends(ExceptionPromise, _super);
    function ExceptionPromise(value) {
        return _super.call(this, value, detailsForException) || this;
    }
    return ExceptionPromise;
}(ErrorPromise));
var CompletePromise = /** @class */ (function () {
    function CompletePromise(value) {
        if (CancelablePromiseImplementation.isPromise(value)) {
            var result = new ThenPromise(undefined);
            result._setCompleteValue(value);
            return result;
        }
        this._value = value;
    }
    CompletePromise.prototype.cancel = function () {
        /* No-op */
    };
    CompletePromise.prototype.done = function (onComplete) {
        if (!onComplete) {
            return;
        }
        try {
            var result = onComplete(this._value);
            if (CancelablePromiseImplementation.is(result)) {
                result.done();
            }
        }
        catch (ex) {
            // force the exception to be thrown asynchronously to avoid any try/catch blocks
            doneHandler(ex);
        }
    };
    CompletePromise.prototype.then = function (onComplete) {
        var resultPromise;
        try {
            // If the value returned from the completion handler is the same as the value
            // provided to the completion handler then there is no need for a new promise.
            //
            var newValue = onComplete ? onComplete(this._value) : this._value;
            resultPromise = this._isSameValue(newValue) ? this : new CompletePromise(newValue);
        }
        catch (ex) {
            resultPromise = new ExceptionPromise(ex);
        }
        return resultPromise;
    };
    CompletePromise.prototype.catch = function (onError) {
        return this.then(undefined);
    };
    CompletePromise.prototype._isSameValue = function (value) {
        return value === this._value;
    };
    return CompletePromise;
}());
function timeout(timeoutMS) {
    var id;
    return new CancelablePromiseImplementation(function (c) {
        /* tslint:disable-next-line:ban-native-functions */
        id = window.setTimeout(c, timeoutMS);
    }, function () {
        if (id) {
            /* tslint:disable-next-line:ban-native-functions */
            window.clearTimeout(id);
        }
    });
}
function timeoutWithPromise(timeout, promise) {
    var cancelPromise = function () { promise.cancel(); };
    var cancelTimeout = function () { timeout.cancel(); };
    timeout.then(cancelPromise);
    promise.then(cancelTimeout, cancelTimeout);
    return promise;
}
function getCancelAll(values) {
    return function () {
        for (var _i = 0, _a = Object.keys(values); _i < _a.length; _i++) {
            var key = _a[_i];
            var promise = CancelablePromiseImplementation.as(values[key]);
            promise.cancel();
        }
    };
}
var staticCanceledPromise;
var CancelablePromiseImplementation = /** @class */ (function () {
    function CancelablePromiseImplementation(init, oncancel) {
        this._init(init, oncancel);
    }
    Object.defineProperty(CancelablePromiseImplementation, "cancel", {
        get: function () {
            return staticCanceledPromise || (staticCanceledPromise = new ErrorPromise(new Error(canceledName)));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a promise that is fulfilled when one of the input promises
     * has been fulfilled.
     */
    CancelablePromiseImplementation.any = function (values) {
        return new CancelablePromiseImplementation(function (complete, error) {
            var keys = Object.keys(values);
            var pending = keys.length;
            if (pending === 0) {
                complete();
            }
            var _loop_1 = function (key) {
                CancelablePromiseImplementation.as(values[key]).then(function () { complete({ key: key, value: values[key] }); }, function (e) {
                    if (e instanceof Error && e.name === canceledName) {
                        if (--pending === 0) {
                            complete(CancelablePromiseImplementation.cancel);
                        }
                        return;
                    }
                    error({ key: key, value: values[key] });
                });
            };
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                _loop_1(key);
            }
        }, getCancelAll(values));
    };
    CancelablePromiseImplementation.race = function (values) {
        return new CancelablePromiseImplementation(function (complete, error) {
            var keys = Object.keys(values);
            var pending = keys.length;
            if (pending === 0) {
                complete();
            }
            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
                var key = keys_2[_i];
                CancelablePromiseImplementation.as(values[key]).then(complete, function (e) {
                    if (e instanceof Error && e.name === canceledName) {
                        if (--pending === 0) {
                            complete(CancelablePromiseImplementation.cancel);
                        }
                        return;
                    }
                    error(e);
                });
            }
        }, getCancelAll(values));
    };
    /**
     * Returns a promise. If the object is already a promise it is returned;
     * otherwise the object is wrapped in a promise.
     */
    CancelablePromiseImplementation.as = function (value) {
        return CancelablePromiseImplementation.is(value) ? value : new CompletePromise(value);
    };
    /**
     * Determines whether a value fulfills the promise contract.
     */
    CancelablePromiseImplementation.is = function (value) {
        return CancelablePromiseImplementation.isPromise(value) && typeof value.cancel === 'function';
    };
    CancelablePromiseImplementation.isPromise = function (value) {
        return value && typeof value === "object" && typeof value.then === "function";
    };
    /**
     * Determines whether an error value represents a promise cancellation.
     */
    CancelablePromiseImplementation.isCanceled = function (e) {
        return (e instanceof Error && e.name === canceledName);
    };
    CancelablePromiseImplementation.all = function (values) {
        return new CancelablePromiseImplementation(function (complete, error) {
            var keys = Object.keys(values);
            var errors = Array.isArray(values) ? [] : {};
            var results = Array.isArray(values) ? [] : {};
            var pending = keys.length;
            var argDone = function () {
                if ((--pending) === 0) {
                    var errorKeys = Object.keys(errors);
                    var errorCount = errorKeys.length;
                    if (errorCount === 0) {
                        complete(results);
                    }
                    else {
                        if (errorKeys.every(function (key) { return CancelablePromiseImplementation.isCanceled(errors[key]); })) {
                            complete(CancelablePromiseImplementation.cancel);
                        }
                        else {
                            error(errors);
                        }
                    }
                }
            };
            var _loop_2 = function (key) {
                var value = values[key];
                if (value === undefined) {
                    pending--;
                }
                else {
                    CancelablePromiseImplementation.then(value, function (result) { results[key] = result; argDone(); }, function (error) { errors[key] = error; argDone(); });
                }
            };
            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
                var key = keys_3[_i];
                _loop_2(key);
            }
            if (pending === 0) {
                complete(results);
            }
        }, getCancelAll(values));
    };
    CancelablePromiseImplementation.then = function (value, onComplete, onError) {
        return CancelablePromiseImplementation.as(value).then(onComplete, onError);
    };
    CancelablePromiseImplementation.thenEach = function (values, onComplete, onError) {
        var result = Array.isArray(values) ? [] : {};
        for (var _i = 0, _a = Object.keys(values); _i < _a.length; _i++) {
            var key = _a[_i];
            result[key] = CancelablePromiseImplementation.then(values[key], onComplete, onError);
        }
        return CancelablePromiseImplementation.all(result);
    };
    CancelablePromiseImplementation.serial = function (tasks) {
        return tasks.reduce(function (previous, task) {
            return previous.then(task);
        }, CancelablePromiseImplementation.wrap());
    };
    CancelablePromiseImplementation.timeout = function (time, promise) {
        var to = timeout(time);
        return promise ? timeoutWithPromise(to, promise) : to;
    };
    /**
     * Wraps a non-promise value in a promise. You can use this function if you need
     * to pass a value to a function that requires a promise.
     */
    CancelablePromiseImplementation.wrap = function (value) {
        return new CompletePromise(value);
    };
    CancelablePromiseImplementation.resolve = function (value) {
        return CancelablePromiseImplementation.wrap(value);
    };
    /**
     * Wraps a non-promise error value in a promise. You can use this function if you need
     * to pass an error to a function that requires a promise.
     */
    CancelablePromiseImplementation.wrapError = function (error) {
        return new ErrorPromise(error);
    };
    CancelablePromiseImplementation.reject = function (error) {
        return CancelablePromiseImplementation.wrapError(error);
    };
    /**
     * Attempts to cancel the fulfillment of a promised value. If the promise hasn't
     * already been fulfilled and cancellation is supported, the promise enters
     * the error state with a value of Error("Canceled").
     */
    CancelablePromiseImplementation.prototype.cancel = function () {
        this._state.cancel(this);
        this._run();
    };
    /**
     * Allows you to specify the work to be done on the fulfillment of the promised value,
     * the error handling to be performed if the promise fails to fulfill
     * a value.
     *
     * After the handlers have finished executing, this function throws any error that would have been returned
     * from then() as a promise in the error state.
     *
     * @param onComplete The function to be called if the promise is fulfilled successfully with a value. The fulfilled value is passed as the single argument. If the value is null, the fulfilled value is returned. The value returned from the function becomes the fulfilled value of the promise returned by then. If an exception is thrown while executing the function, the promise returned by then moves into the error state.
     * @param onError The function to be called if the promise is fulfilled with an error. The error is passed as the single argument. If it is null, the error is forwarded. The value returned from the function is the fulfilled value of the promise returned by then.
     */
    CancelablePromiseImplementation.prototype.done = function (onComplete, onError) {
        this._state.done(this, onComplete, onError);
    };
    CancelablePromiseImplementation.prototype.then = function (onComplete, onError) {
        return this._state.then(this, onComplete, onError);
    };
    CancelablePromiseImplementation.prototype.catch = function (onError) {
        return this.then(undefined, onError);
    };
    CancelablePromiseImplementation.prototype._init = function (init, oncancel) {
        this._oncancel = oncancel;
        this._setState(state_created);
        this._run();
        try {
            init(this._completed.bind(this), this._error.bind(this));
        }
        catch (ex) {
            this._setExceptionValue(ex);
        }
    };
    CancelablePromiseImplementation.prototype._cancelAction = function () {
        if (this._oncancel) {
            try {
                this._oncancel();
            }
            catch (ex) { }
        }
    };
    CancelablePromiseImplementation.prototype._cleanupAction = function () {
        this._oncancel = null;
    };
    CancelablePromiseImplementation.prototype._chainedError = function (value, context) {
        var result = this._state._error(this, value, detailsForChainedError, context);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._completed = function (value) {
        var result = this._state._completed(this, value);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._error = function (value) {
        var result = this._state._error(this, value, detailsForError);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._setState = function (state) {
        this._nextState = state;
    };
    CancelablePromiseImplementation.prototype._setCompleteValue = function (value) {
        this._state._setCompleteValue(this, value);
        this._run();
    };
    CancelablePromiseImplementation.prototype._setChainedErrorValue = function (value, context) {
        var result = this._state._setErrorValue(this, value, detailsForChainedError, context);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._setExceptionValue = function (value) {
        var result = this._state._setErrorValue(this, value, detailsForException);
        this._run();
        return result;
    };
    CancelablePromiseImplementation.prototype._run = function () {
        while (this._nextState) {
            this._state = this._nextState;
            this._nextState = null;
            this._state.enter(this);
        }
    };
    CancelablePromiseImplementation.prototype._isSameValue = function (value) {
        return value === this._value;
    };
    return CancelablePromiseImplementation;
}());
Events.declare(CancelablePromiseImplementation, errorET);
//
// Internal implementation detail promise, ThenPromise is created when a promise needs
// to be returned from a then() method.
//
var ThenPromise = /** @class */ (function (_super) {
    tslib_1.__extends(ThenPromise, _super);
    function ThenPromise(creator) {
        var _this = _super.call(this) || this;
        _this._creator = creator;
        _this._initThen();
        return _this;
    }
    ThenPromise.prototype._init = function () {
        // Override to do nothing.
    };
    ThenPromise.prototype._cancelAction = function () {
        if (this._creator) {
            this._creator.cancel();
        }
    };
    ThenPromise.prototype._cleanupAction = function () {
        this._creator = null;
    };
    ThenPromise.prototype._initThen = function () {
        this._setState(state_created);
        this._run();
    };
    return ThenPromise;
}(CancelablePromiseImplementation));
var SignalPromiseImplementation = /** @class */ (function (_super) {
    tslib_1.__extends(SignalPromiseImplementation, _super);
    function SignalPromiseImplementation(cancel) {
        var _this = _super.call(this) || this;
        _this._oncancel = cancel;
        _this._initSignal();
        return _this;
    }
    SignalPromiseImplementation.prototype._init = function () {
        // Override to do nothing.
    };
    SignalPromiseImplementation.prototype._cancelAction = function () {
        if (this._oncancel) {
            this._oncancel();
        }
    };
    SignalPromiseImplementation.prototype._cleanupAction = function () {
        this._oncancel = null;
    };
    SignalPromiseImplementation.prototype._initSignal = function () {
        this._setState(state_created);
        this._run();
    };
    return SignalPromiseImplementation;
}(CancelablePromiseImplementation));
/**
 * Represents a singal promise type and constructor.
 * This type is for legacy use only, and should not be used outside this source package.
 */
exports.SignalPromise = SignalPromiseImplementation;
/**
 * Represents a cancelable promise type and constructor.
 * This type is intended to be assignable to the ES6 `Promise` type for compatibility,
 * so that `CancelablePromise` may be a used as a polyfill for `Promise`.
 */
exports.CancelablePromise = CancelablePromiseImplementation;
exports.default = exports.CancelablePromise;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataStoreCachingType;
(function (DataStoreCachingType) {
    DataStoreCachingType[DataStoreCachingType["none"] = 0] = "none";
    DataStoreCachingType[DataStoreCachingType["session"] = 1] = "session";
    DataStoreCachingType[DataStoreCachingType["local"] = 2] = "local";
    DataStoreCachingType[DataStoreCachingType["sharedMemory"] = 3] = "sharedMemory";
})(DataStoreCachingType || (DataStoreCachingType = {}));
exports.default = DataStoreCachingType;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var Manager_1 = __webpack_require__(33);
var CorrelationVector_1 = __webpack_require__(76);
var assign_1 = __webpack_require__(78);
// tslint:disable:no-bitwise
var _id = 0;
var ClonedEventType;
(function (ClonedEventType) {
    ClonedEventType[ClonedEventType["Single"] = 0] = "Single";
    ClonedEventType[ClonedEventType["Start"] = 1] = "Start";
    ClonedEventType[ClonedEventType["End"] = 2] = "End";
})(ClonedEventType = exports.ClonedEventType || (exports.ClonedEventType = {}));
var ValidationErrorType;
(function (ValidationErrorType) {
    ValidationErrorType[ValidationErrorType["NoParent"] = 1] = "NoParent";
})(ValidationErrorType = exports.ValidationErrorType || (exports.ValidationErrorType = {}));
var AccountType;
(function (AccountType) {
    AccountType[AccountType["Consumer"] = 0] = "Consumer";
    AccountType[AccountType["ConsumerAnonymous"] = 1] = "ConsumerAnonymous";
    AccountType[AccountType["Business"] = 2] = "Business";
    AccountType[AccountType["BusinessAnonymous"] = 3] = "BusinessAnonymous";
    AccountType[AccountType["Unknown"] = 4] = "Unknown";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
function addEventProps(eventPrototype, props, metadata, baseClass) {
    assign_1.assign(eventPrototype, props);
    var resultMetadata = {};
    for (var key in metadata) {
        if (Object.prototype.hasOwnProperty.call(metadata, key)) {
            var item = metadata[key];
            var result = resultMetadata[key] = (typeof item === 'number' ? { type: item } : item);
            result.definedInName = props.shortEventName;
            if (result.type === 2 /* Number */) {
                result.isMetric = true;
            }
        }
    }
    eventPrototype.metadata = baseClass ? tslib_1.__assign({}, baseClass.prototype.metadata, resultMetadata) : resultMetadata;
}
exports.addEventProps = addEventProps;
var managerSpecificEventTypes = new WeakMap(); // tslint:disable-line:no-any
var EventBase = /** @class */ (function () {
    function EventBase(data, startType, parent) {
        this.context = {};
        this.validationErrors = 0;
        this.data = {};
        this.context = tslib_1.__assign({}, this.addContext({}));
        this.id = _id++;
        this.enabled = this._isEnabled();
        // Set the parent id if needed
        if (parent) {
            this.parentId = parent.id;
        }
        else if (this.requiresParent) {
            this._addValidationError(ValidationErrorType.NoParent);
        }
        // Set the start time
        this.startTime = (data && data.startTimeOverride) || Manager_1.Manager.getTime();
        this.vector = new CorrelationVector_1.CorrelationVector(parent ? parent.vector : CorrelationVector_1.CorrelationVector.RootVector);
        // Set the data if we have it
        if (data) {
            this._setData(data);
        }
        // Send the start event
        this._logEvent(startType);
    }
    /**
     * This will return true if the event is enabled
     */
    EventBase.enabled = function () {
        return this.prototype._isEnabled();
    };
    /**
     * This will return true if the event is of this type
     * @param event {IEvent} The event to compare
     */
    EventBase.isTypeOf = function (event) {
        return event.eventName.indexOf(this.prototype.shortEventName + ',') >= 0;
    };
    EventBase.withManager = function (manager) {
        if (!manager || manager === Manager_1.Manager) {
            return this;
        }
        var eventTypesForManager = managerSpecificEventTypes.get(manager);
        if (!eventTypesForManager) {
            eventTypesForManager = new WeakMap();
            managerSpecificEventTypes.set(manager, eventTypesForManager);
        }
        var eventType = eventTypesForManager.get(this);
        if (eventType) {
            return eventType;
        }
        // @ts-ignore
        var EventWithManager = /** @class */ (function (_super) {
            tslib_1.__extends(EventWithManager, _super);
            function EventWithManager() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            return EventWithManager;
        }((this)));
        // @ts-ignore
        EventWithManager.prototype.manager = manager;
        eventType = EventWithManager;
        eventTypesForManager.set(this, eventType);
        return eventType;
    };
    EventBase.withData = function (modifier) {
        if (!modifier) {
            return this;
        }
        var addData = typeof modifier !== 'function' ? function (data) { return (tslib_1.__assign({}, modifier, data)); } : modifier;
        // @ts-ignore
        var EventWithData = /** @class */ (function (_super) {
            tslib_1.__extends(EventWithData, _super);
            function EventWithData() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            EventWithData.prototype.addData = function (data) {
                var localData = tslib_1.__assign({}, data, addData(data));
                return tslib_1.__assign({}, localData, _super.prototype.addData.call(this, localData));
            };
            return EventWithData;
        }((this)));
        return EventWithData;
    };
    EventBase.withContext = function (modifier) {
        if (!modifier) {
            return this;
        }
        var addContext = typeof modifier !== 'function' ? function (context) { return (tslib_1.__assign({}, modifier, context)); } : modifier;
        // @ts-ignore
        var EventWithContext = /** @class */ (function (_super) {
            tslib_1.__extends(EventWithContext, _super);
            function EventWithContext() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            EventWithContext.prototype.addContext = function (context) {
                var localContext = tslib_1.__assign({}, context, addContext(context));
                return tslib_1.__assign({}, localContext, _super.prototype.addContext.call(this, localContext));
            };
            return EventWithContext;
        }((this)));
        return EventWithContext;
    };
    EventBase.from = function (sourceEventType) {
        if (!sourceEventType) {
            return this;
        }
        return this
            .withManager(sourceEventType.prototype.manager)
            .withContext(function (context) { return sourceEventType.prototype.addContext(context); })
            .withData(function (data) { return sourceEventType.prototype.addData(data); }); // tslint:disable-line:no-any
    };
    EventBase.prototype.addContext = function (context) {
        return context;
    };
    EventBase.prototype.addData = function (data) {
        return data;
    };
    EventBase.prototype._isEnabled = function () {
        // All events are enabled by default
        return !this.samplingFeature || Manager_1.Manager.isFeatureEnabled(this.samplingFeature);
    };
    EventBase.prototype._setData = function (data) {
        var stored = this.data;
        for (var _i = 0, _a = Object.keys(data); _i < _a.length; _i++) {
            var key = _a[_i];
            if (key in this.metadata) {
                // @ts-ignore
                var value = data[key];
                switch (typeof value) {
                    case 'string':
                        // @ts-ignore
                        stored[key] = Manager_1.Manager.cleanString(value);
                        break;
                    case 'undefined':
                        break;
                    default:
                        // @ts-ignore
                        stored[key] = value;
                        break;
                }
            }
        }
        assign_1.assign(this.data, this.addData(this.data));
    };
    EventBase.prototype._logEvent = function (eventType) {
        this.manager.logEvent(this, eventType);
    };
    EventBase.prototype._addValidationError = function (type) {
        this.validationErrors = this.validationErrors | type;
        this.manager.logValidationError(this, type);
    };
    return EventBase;
}());
exports.EventBase = EventBase;
var proto = EventBase.prototype;
proto.eventName = 'EventBase,';
proto.shortEventName = 'EventBase';
// All events are not critical by default
proto.critical = false;
// All events require parents by default
proto.requiresParent = true;
proto.manager = Manager_1.Manager;


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ButtonState; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_office_ui_fabric_react_bundle__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_office_ui_fabric_react_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__microsoft_office_ui_fabric_react_bundle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_office_ui_fabric_react_lib_components_Tooltip_TooltipHost__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_office_ui_fabric_react_lib_components_Tooltip_TooltipHost___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_office_ui_fabric_react_lib_components_Tooltip_TooltipHost__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ToolbarButton_scss__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ToolbarButton_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__ToolbarButton_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_Utilities__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_KillSwitches__ = __webpack_require__(17);







var ButtonState;
(function (ButtonState) {
    ButtonState[ButtonState["Active"] = 0] = "Active";
    ButtonState[ButtonState["Disabled"] = 1] = "Disabled";
    ButtonState[ButtonState["Normal"] = 2] = "Normal";
})(ButtonState = ButtonState || (ButtonState = {}));
var ToolbarButton = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](ToolbarButton, _super);
    function ToolbarButton(props) {
        var _this = _super.call(this, props) || this;
        _this._isTouchDevice = __WEBPACK_IMPORTED_MODULE_5__common_Utilities__["a" /* default */].isTouchEnabled();
        return _this;
    }
    ToolbarButton.prototype.render = function () {
        var buttonClassName = Object(__WEBPACK_IMPORTED_MODULE_1__microsoft_office_ui_fabric_react_bundle__["css"])('ToolbarButton', this.props.className, {
            'ToolbarButton--disabled': this.props.disabled,
            'ToolbarButton--active': this.props.isActive
        });
        var onClick = this._isTouchDevice ? undefined : this.props.onClick;
        var onMouseDown = this._isTouchDevice ? this.props.onClick : undefined;
        var tooltipHostId = this.props.automationId + "-tooltipHostId";
        var tooltipKillSwitch = __WEBPACK_IMPORTED_MODULE_6__common_KillSwitches__["a" /* default */].isFixForTooltipKilllSwitchActive();
        var toolbarButtonAriaKillSwitch = __WEBPACK_IMPORTED_MODULE_6__common_KillSwitches__["a" /* default */].isFixForToolbarButtonAriaKillSwitchActivated();
        var toolbarButton = (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("button", { type: "button", "aria-label": !toolbarButtonAriaKillSwitch ? this.props.title : '', "aria-disabled": this.props.disabled ? true : undefined, "aria-describedby": !tooltipKillSwitch ? tooltipHostId : '', "aria-pressed": this.props.canBeActive && !!this.props.isActive ? this.props.isActive : undefined, className: buttonClassName, onClick: onClick, onMouseDown: onMouseDown, tabIndex: this.props.tabIndex, title: !tooltipKillSwitch ? '' : this.props.title, "data-automation-id": this.props.automationId, onKeyDown: this.props.onKeyDown ? this.props.onKeyDown : undefined, onBlur: this.props.onBlur, "data-drag-handle": this.props.dragHandleTag },
            this._getButtonImage(),
            this.props.label));
        return !tooltipKillSwitch ? (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2_office_ui_fabric_react_lib_components_Tooltip_TooltipHost__["TooltipHost"], { hostClassName: "ToolbarButtonTooltip", content: this.props.title, id: tooltipHostId, calloutProps: { gapSpace: 0 } }, toolbarButton)) : (toolbarButton);
    };
    ToolbarButton.prototype._getButtonImage = function () {
        if (this.props.imageIconUrl) {
            return __WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("img", { src: this.props.imageIconUrl, height: 16, width: 16, alt: this.props.imageIconAltText });
        }
        else if (this.props.svgIcon) {
            return this.props.svgIcon;
        }
        else {
            var iconClass = void 0;
            if (this.props.fabricIconKey) {
                iconClass = Object(__WEBPACK_IMPORTED_MODULE_1__microsoft_office_ui_fabric_react_bundle__["getIconClassName"])(this.props.fabricIconKey);
            }
            return __WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("i", { className: iconClass || this.props.iconClassName });
        }
    };
    ToolbarButton.defaultProps = {
        key: undefined,
        fabricIconKey: undefined,
        onClick: undefined,
        canBeActive: true,
        className: 'CanvasControlToolbar-item',
        disabled: false,
        isActive: false
    };
    return ToolbarButton;
}(__WEBPACK_IMPORTED_MODULE_3_react__["Component"]));
/* harmony default export */ __webpack_exports__["b"] = (ToolbarButton);


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(80), exports);
var Qos_event_1 = __webpack_require__(80);
exports.default = Qos_event_1.Qos;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataStoreCachingType_1 = __webpack_require__(28);
// DataStore class is used for transparent caching of data in memory and/or browser storage
// - Parameter defaultCachingType defines whether you want to use browser storage for all operations
// and which type of storage - session or local
// - Parameter dataStoreKey is used to prefix every key in browser storage. Actual key for browser storage
// will be dataStoreKey + key used in setValue method.
// - If DataStore is instantiated with some type of browser caching enabled - it will test if browser storage
// is available and use it. If it's not it will fall back to in-memory cache.
// - If DataStore is instantiated from two different places with same dataStoreKey and some type of
// browser storage caching, the memory storage will be shared as well as browser storage.
var DataStore = /** @class */ (function () {
    function DataStore(dataStoreKey, defaultCachingType) {
        if (defaultCachingType === void 0) { defaultCachingType = DataStoreCachingType_1.default.none; }
        DataStore.init();
        this.dataStoreKey = dataStoreKey;
        this.defaultCachingType = defaultCachingType;
        if (defaultCachingType === DataStoreCachingType_1.default.none) {
            this.dataStore = {};
        }
        else {
            var store = DataStore._dataStore[this.dataStoreKey];
            if (store === undefined) {
                DataStore._dataStore[this.dataStoreKey] = {};
            }
            this.dataStore = DataStore._dataStore[this.dataStoreKey];
        }
    }
    DataStore.hasStorageType = function (storageType) {
        DataStore.init();
        switch (storageType) {
            case DataStoreCachingType_1.default.none: return true;
            case DataStoreCachingType_1.default.sharedMemory: return true;
            case DataStoreCachingType_1.default.session: return !!DataStore._sessionStorage;
            case DataStoreCachingType_1.default.local: return !!DataStore._localStorage;
        }
        return false;
    };
    DataStore.init = function () {
        if (DataStore._initialized) {
            return;
        }
        // Need a try/catch since window.localStorage can throw.
        try {
            if ('localStorage' in window && window.localStorage && DataStore.testStorage(window.localStorage)) {
                DataStore._localStorage = window.localStorage;
            }
        }
        catch (exUsingLocalStorage) {
            // do nothing
        }
        try {
            if ('sessionStorage' in window && window.sessionStorage && DataStore.testStorage(window.sessionStorage)) {
                DataStore._sessionStorage = window.sessionStorage;
            }
        }
        catch (exUsingSessionStorage) {
            // do nothing
        }
        // Fallback logic
        if (DataStore._localStorage == null) {
            DataStore._localStorage = DataStore._sessionStorage;
        }
        DataStore._initialized = true;
    };
    /** Need to check whether the value in localStorage is of the correct type.
     * In Private Browsing in Safari, for example, localStorage is accessible,
     * but all of the non-built-in properties return undefined, and setting
     * such a property causes an exception.
     */
    DataStore.testStorage = function (storage) {
        var _testKey = "BrowserStorageTest";
        var _testValue = "1";
        var result = false;
        try {
            storage.setItem(_testKey, _testValue);
            if (storage.getItem(_testKey) === _testValue) {
                result = true;
            }
            storage.removeItem(_testKey);
        }
        catch (e) { }
        return result;
    };
    DataStore.prototype.setValue = function (key, value, cachingTypeOverride, normalizeKey) {
        if (normalizeKey === void 0) { normalizeKey = true; }
        key = normalizeKey ? this.normalizeKey(key) : key;
        this.dataStore[key] = value;
        var storage = this.getStorage(cachingTypeOverride);
        if (storage) {
            try {
                var objectsFound = [];
                var s = JSON.stringify(value, function (key, value) {
                    if (typeof value === 'object' && value !== null) {
                        if (objectsFound.indexOf(value) !== -1) {
                            // discard the key if circular dependency was found
                            return;
                        }
                        // Otherwise store value in the cache
                        objectsFound.push(value);
                    }
                    return value;
                });
                // empty cache
                objectsFound = null;
                storage.setItem(this.dataStoreKey + key, s);
            }
            catch (e) {
                // do nothing
            }
        }
    };
    DataStore.prototype.getValue = function (key, cachingTypeOverride, normalizeKey) {
        if (normalizeKey === void 0) { normalizeKey = true; }
        key = normalizeKey ? this.normalizeKey(key) : key;
        var value = this.dataStore[key];
        var storage = this.getStorage(cachingTypeOverride);
        if (value === undefined && storage) {
            var s = storage.getItem(this.dataStoreKey + key);
            if (s) {
                try {
                    value = JSON.parse(s);
                    this.dataStore[key] = value;
                }
                catch (e) {
                    value = undefined;
                }
            }
        }
        return value;
    };
    DataStore.prototype.remove = function (key, cachingTypeOverride, normalizeKey) {
        if (normalizeKey === void 0) { normalizeKey = true; }
        key = normalizeKey ? this.normalizeKey(key) : key;
        var storage = this.getStorage(cachingTypeOverride);
        if (storage) {
            storage.removeItem(this.dataStoreKey + key);
        }
        delete this.dataStore[key];
    };
    DataStore.prototype.getStorage = function (cachingTypeOverride) {
        var cachingType = cachingTypeOverride ? cachingTypeOverride : this.defaultCachingType;
        switch (cachingType) {
            case DataStoreCachingType_1.default.none:
                return null;
            case DataStoreCachingType_1.default.sharedMemory:
                return null;
            case DataStoreCachingType_1.default.session:
                return DataStore._sessionStorage;
            case DataStoreCachingType_1.default.local:
                return DataStore._localStorage;
        }
        return null;
    };
    DataStore.prototype.normalizeKey = function (key) {
        return key && key.toLowerCase() || '';
    };
    DataStore._sessionStorage = null;
    DataStore._localStorage = null;
    DataStore._dataStore = {};
    DataStore._initialized = false;
    return DataStore;
}());
exports.default = DataStore;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var deepCopy_1 = __webpack_require__(75);
var maxBufferSize = 100;
function getStartDate() {
    if (window.performance && window.performance.timing && window.performance.timing.navigationStart) {
        return new Date(window.performance.timing.navigationStart);
    }
    else {
        return new Date();
    }
}
var PrivateManager = /** @class */ (function () {
    function PrivateManager() {
        this._handlers = [];
        this._buffer = [];
        this._validationLoggers = [];
        this._featureEnablers = [];
    }
    Object.defineProperty(PrivateManager.prototype, "startDate", {
        get: function () {
            return getStartDate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PrivateManager.prototype, "startTime", {
        get: function () {
            var startDate = this.startDate;
            return startDate.getTime();
        },
        enumerable: true,
        configurable: true
    });
    PrivateManager.prototype.getTime = function () {
        return (new Date()).getTime();
    };
    /** This is the overrideable clean string function */
    PrivateManager.prototype.cleanString = function (str) {
        return str;
    };
    PrivateManager.prototype.addLogHandler = function (handler) {
        var handlers = this._handlers;
        var buffer = this._buffer;
        handlers.push(handler);
        // Return the buffer so the handler can get missed events
        return buffer.slice();
    };
    PrivateManager.prototype.removeLogHandler = function (handler) {
        var handlers = this._handlers;
        for (var x = 0; x < handlers.length; x++) {
            if (handlers[x] === handler) {
                // Remove the handler
                handlers.splice(x, 1);
                break;
            }
        }
    };
    PrivateManager.prototype.logEvent = function (event, eventType) {
        var buffer = this._buffer;
        var handlers = this._handlers;
        // Clone the object (do it natively because the browser can mark it as a type)
        var clonedEvent = Object.freeze({
            data: deepCopy_1.deepCopy(event.data),
            context: tslib_1.__assign({}, event.context),
            id: event.id,
            enabled: event.enabled,
            critical: event.critical,
            endTime: event.endTime,
            eventName: event.eventName,
            shortEventName: event.shortEventName,
            parentId: event.parentId,
            startTime: event.startTime,
            eventType: eventType,
            metadata: event.metadata,
            vector: event.vector,
            validationErrors: event.validationErrors,
            isEventTypePrefixingDisabled: event.isEventTypePrefixingDisabled
        });
        // Add to the buffer
        buffer.push(clonedEvent);
        if (buffer.length > maxBufferSize) {
            buffer.splice(1, Infinity);
            // Make sure we have a handler before the buffer is overrun
            if (handlers.length === 0) {
                _handleBaseLoggingError(new Error('Logging buffer overflow hit before any logging handler was registered'));
            }
        }
        // Let handlers know the log event has completed
        for (var x = 0; x < handlers.length; x++) {
            try {
                handlers[x](clonedEvent);
            }
            catch (e) {
                _handleBaseLoggingError(e);
            }
        }
    };
    PrivateManager.prototype.addValidationErrorLogger = function (validationLogger) {
        var validationLoggers = this._validationLoggers;
        validationLoggers.push(validationLogger);
    };
    PrivateManager.prototype.removeValidationErrorLogger = function (validationLogger) {
        var validationLoggers = this._validationLoggers;
        var index = validationLoggers.indexOf(validationLogger);
        if (index > -1) {
            validationLoggers.splice(index, 1);
        }
    };
    PrivateManager.prototype.logValidationError = function (event, type) {
        var validationLoggers = this._validationLoggers;
        for (var _i = 0, validationLoggers_1 = validationLoggers; _i < validationLoggers_1.length; _i++) {
            var validationLogger = validationLoggers_1[_i];
            try {
                validationLogger(event, type);
            }
            catch (e) {
                _handleBaseLoggingError(e);
            }
        }
    };
    PrivateManager.prototype.isFeatureEnabled = function (feature) {
        var featureEnablers = this._featureEnablers;
        for (var _i = 0, featureEnablers_1 = featureEnablers; _i < featureEnablers_1.length; _i++) {
            var featureEnabler = featureEnablers_1[_i];
            if (featureEnabler(feature)) {
                return true;
            }
        }
        return false;
    };
    PrivateManager.prototype.addFeatureEnabler = function (featureEnabler) {
        var featureEnablers = this._featureEnablers;
        featureEnablers.push(featureEnabler);
    };
    PrivateManager.prototype.removeFeatureEnabler = function (featureEnabler) {
        var featureEnablers = this._featureEnablers;
        var index = featureEnablers.indexOf(featureEnabler);
        if (index > -1) {
            featureEnablers.splice(index, 1);
        }
    };
    PrivateManager.prototype.getStack = function () {
        var error;
        try {
            var w = window;
            w.______ExpectedError______();
        }
        catch (e) {
            error = e;
        }
        return error.stack;
    };
    return PrivateManager;
}());
/**
 * Creates a new, private manager with its own event queue and handlers.
 */
function createManager() {
    return new PrivateManager();
}
exports.createManager = createManager;
/**
 * Gets the default/fallback telemetry manager for the running application.
 */
exports.Manager = createManager();
function _handleBaseLoggingError(error) {
    // TODO: Log somewhere
}


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(79), exports);
var Engagement_event_1 = __webpack_require__(79);
exports.default = Engagement_event_1.Engagement;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ResultTypeEnum;
(function (ResultTypeEnum) {
    ResultTypeEnum[ResultTypeEnum["Success"] = 0] = "Success";
    ResultTypeEnum[ResultTypeEnum["Failure"] = 1] = "Failure";
    ResultTypeEnum[ResultTypeEnum["ExpectedFailure"] = 2] = "ExpectedFailure";
})(ResultTypeEnum = exports.ResultTypeEnum || (exports.ResultTypeEnum = {}));


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CaughtError_event_1 = __webpack_require__(37);
var QosError_event_1 = __webpack_require__(53);
var Verbose_event_1 = __webpack_require__(54);
var CircularBuffer_1 = __webpack_require__(146);
var safeSerialize_1 = __webpack_require__(55);
var MAX_VERBOSE_LOGS = 50;
var CANCELED = 'Canceled';
var _verboseLogs = new CircularBuffer_1.CircularBuffer(MAX_VERBOSE_LOGS);
function verbose(message, eventName) {
    _verboseLogs.push({
        name: eventName,
        message: message
    });
}
exports.verbose = verbose;
function logError(error, extraData, qosData) {
    if (!error || _isCanceled(error)) {
        return;
    }
    var message = getErrorMessage(error);
    var stack = error && typeof error === 'object' && ('stack' in error) && error.stack ? error.stack : '';
    var schema;
    while (schema = _verboseLogs.popOldest()) {
        Verbose_event_1.Verbose.logData(schema);
    }
    if (qosData && qosData.eventName) {
        QosError_event_1.QosError.logData({
            name: qosData.eventName,
            resultCode: qosData.resultCode,
            resultType: qosData.resultType,
            extraData: extraData || {},
            message: message,
            stack: stack
        });
    }
    else {
        CaughtError_event_1.CaughtError.logData({
            extraData: extraData || {},
            message: message,
            stack: stack
        });
    }
}
exports.logError = logError;
function log(error, eventName, resultCode, resultType) {
    logError(error, undefined, { eventName: eventName, resultCode: resultCode, resultType: resultType });
}
exports.log = log;
/**
 * Extract the error message from the error
 */
function getErrorMessage(error) {
    var message = '';
    if (error) {
        if (typeof (error) === 'object' && 'message' in error) {
            message = error.message;
        }
        else if (typeof (error) === 'object' && 'description' in error) {
            message = error.description;
        }
        else if (typeof (error) === 'object') {
            message = safeSerialize_1.safeSerialize(error);
        }
        else if (error.toString) {
            message = error.toString();
        }
    }
    return message;
}
exports.getErrorMessage = getErrorMessage;
function _isCanceled(error) {
    return error === CANCELED ||
        (!!error && typeof error === 'object' && ('name' in error) && error.name === CANCELED) ||
        (!!error && typeof error === 'object' && ('message' in error) && error.message === CANCELED);
}


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(24);
var Trace_event_1 = __webpack_require__(82);
exports.CaughtError = SingleEventBase_1.createSingleEvent({
    eventName: 'CaughtError,Trace,',
    shortEventName: 'CaughtError',
    critical: true,
    requiresParent: false
}, {
    stack: 1 /* String */,
    extraData: 4 /* Object */
}, Trace_event_1.Trace);


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var PairedEventBase_1 = __webpack_require__(127);
exports.Beacon = PairedEventBase_1.createPairedEvent({
    eventName: 'Beacon,',
    shortEventName: 'Beacon',
    requiresParent: false
}, {
    name: 1 /* String */,
    status: 1 /* String */,
    success: 3 /* Boolean */,
    retryCount: 2 /* Number */,
    totalRetries: 2 /* Number */,
    eventCount: 2 /* Number */
});
exports.default = exports.Beacon;


/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export _classNamesFunc */
/* harmony export (immutable) */ __webpack_exports__["a"] = getClassNames;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_office_ui_fabric_react_bundle__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_office_ui_fabric_react_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__microsoft_office_ui_fabric_react_bundle__);

var _classNamesFunc = Object(__WEBPACK_IMPORTED_MODULE_0__microsoft_office_ui_fabric_react_bundle__["classNamesFunction"])();
function getClassNames(getStyleFunc, props) {
    return _classNamesFunc(getStyleFunc, props);
}


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__CanvasSection__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__CanvasSection_scss__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__CanvasSection_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__CanvasSection_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__canvasControl_CanvasControlType__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__canvasLayout_CanvasLayout__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__canvasDragZone_CanvasDragZoneConstants__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_DeferredCanvasToolbox__ = __webpack_require__(62);










var FULL_WIDTH_ITEM_IDS = [
    'd1d91016-032f-456d-98a4-721247c305e8',
    'c4bd7b2f-7b6e-4599-8485-16504575f590' 
];
var CanvasFullWidthSection = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](CanvasFullWidthSection, _super);
    function CanvasFullWidthSection(props, context) {
        var _this = _super.call(this, props, context) || this;
        var store = _this.context.store;
        _this._toolboxProps = {
            isLoading: true,
            isOpen: true,
            controlPosition: __WEBPACK_IMPORTED_MODULE_7__canvasLayout_CanvasLayout__["a" /* default */].undefinedControlPosition,
            onItemClick: store.handleToolboxItemClick,
            onlyLayouts: false,
            toolboxItems: [],
            verticalPosition: undefined
        };
        _this._isToolboxOpen = false;
        return _this;
    }
    CanvasFullWidthSection.isFullWidth = function (position) {
        return position && position.sectionFactor === 0;
    };
    CanvasFullWidthSection.isFullWidthControl = function (control) {
        if (control && control.controlType === __WEBPACK_IMPORTED_MODULE_6__canvasControl_CanvasControlType__["a" /* default */].WebPartZone) {
            var webPartProps = control;
            return ((webPartProps.webPartManifest && webPartProps.webPartManifest.supportsFullBleed) ||
                FULL_WIDTH_ITEM_IDS.indexOf(webPartProps.webPartId) !== -1);
        }
        return false;
    };
    CanvasFullWidthSection.setFullWidthWebPartProperty = function (control, value) {
        var webPartProps = control;
        if (webPartProps.webPartData) {
            webPartProps.webPartData.properties.isFullWidth = value;
        }
    };
    CanvasFullWidthSection.prototype.componentDidMount = function () {
        if (this.context.store.displayMode === __WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library__["DisplayMode"].Edit) {
            this._openToolbox(true);
        }
    };
    CanvasFullWidthSection.prototype.componentDidUpdate = function () {
        if (this.context.store.displayMode === __WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library__["DisplayMode"].Edit && !this._isToolboxOpen) {
            this._openToolbox(true);
        }
        else if (this.context.store.displayMode === __WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library__["DisplayMode"].Read) {
            this._isToolboxOpen = false;
        }
    };
    CanvasFullWidthSection.prototype._addToolBoxHint = function (nextCtrlPosition) {
    };
    CanvasFullWidthSection.prototype._getLayoutSectionClassName = function (isReadMode, isSectionSelected) {
        var layoutSectionClassName = _super.prototype._getLayoutSectionClassName.call(this, isReadMode, isSectionSelected);
        layoutSectionClassName += Object(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["css"])({
            ' CanvasSectionFullWidth--read': isReadMode,
            ' CanvasSection--fullWidth': this.props.section.controls.length !== 0
        });
        return layoutSectionClassName;
    };
    CanvasFullWidthSection.prototype._shouldCenterAlignHint = function () {
        var store = this.context.store;
        return store.shouldCenterAlign;
    };
    CanvasFullWidthSection.prototype._getContentSelectionMechanism = function (firstControlLayout) {
        var store = this.context.store;
        return (this.props.section.controls.length === 0 &&
            store.displayMode === __WEBPACK_IMPORTED_MODULE_3__microsoft_sp_core_library__["DisplayMode"].Edit && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_9__common_DeferredCanvasToolbox__["c" /* DeferredToolboxFullBleedComponent */], { deferredProps: {
                toolboxItems: this._toolboxProps.toolboxItems,
                controlPosition: this._toolboxProps.controlPosition,
                clickItem: function (control) { return store.addControlToCanvas(control, true ); }
            } })));
    };
    Object.defineProperty(CanvasFullWidthSection.prototype, "_dragDisallowedAreaTag", {
        get: function () {
            return __WEBPACK_IMPORTED_MODULE_8__canvasDragZone_CanvasDragZoneConstants__["a" /* default */].fullWidthSectionTag;
        },
        enumerable: true,
        configurable: true
    });
    CanvasFullWidthSection.prototype._openToolbox = function (isEditMode) {
        this._isToolboxOpen = true;
        var _a = this.props, zoneIndex = _a.zoneIndex, section = _a.section, layoutIndex = _a.layoutIndex;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: this._firstControlIdx,
            sectionFactor: section.factor,
            layoutIndex: layoutIndex
        };
        if (isEditMode) {
            this._openFullWidthToolbox(firstControlLayout);
        }
    };
    CanvasFullWidthSection.prototype._openFullWidthToolbox = function (position) {
        var store = this.context.store;
        store.fillToolboxItems(true, this._toolboxProps);
        this._toolboxProps.isOpen = true;
        this._toolboxProps.controlPosition = position;
    };
    return CanvasFullWidthSection;
}(__WEBPACK_IMPORTED_MODULE_4__CanvasSection__["a" /* default */]));
/* harmony default export */ __webpack_exports__["a"] = (CanvasFullWidthSection);


/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ms_sp_telemetry__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ms_sp_telemetry___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ms_sp_telemetry__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__microsoft_office_ui_fabric_react_bundle__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__microsoft_office_ui_fabric_react_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__microsoft_office_ui_fabric_react_bundle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__microsoft_sp_webpart_base__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__microsoft_sp_webpart_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__microsoft_sp_webpart_base__);





var scrollReveal = __webpack_require__(217);
var CanvasScrollAnimation = (function () {
    function CanvasScrollAnimation() {
        this._isFirstReveal = false;
        this._pendingElements = [];
    }
    Object.defineProperty(CanvasScrollAnimation, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new CanvasScrollAnimation();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    CanvasScrollAnimation.isScrollAnimationsEnabled = function () {
        return (true &&
            __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["_SPFlight"].isEnabled(411 ) &&
            __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["EnvironmentType"].ClassicSharePoint !== __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["Environment"].type &&
            __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["EnvironmentType"].Local !== __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["Environment"].type &&
            !__WEBPACK_IMPORTED_MODULE_4__microsoft_sp_webpart_base__["ClientSideWebPartManager"].isMaintenanceMode);
    };
    CanvasScrollAnimation._shouldAddScrollRevealInEUPL = function () {
        return !__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["_SPKillSwitch"].isActivated(__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_core_library__["Guid"].parse('786a1033-5860-4611-9e98-8989adea5208'), '1/25/18', 'Activate this kill switch if scroll reveal perf measurement is causing trouble in EUPL finish time');
    };
    CanvasScrollAnimation.prototype.init = function (scrollableParent) {
        this.clear();
        if (CanvasScrollAnimation.isScrollAnimationsEnabled()) {
            this._scrollableParent = scrollableParent;
            this._tryConfigureAndRevealPending();
        }
    };
    CanvasScrollAnimation.prototype.reveal = function (elem) {
        if (elem && CanvasScrollAnimation.isScrollAnimationsEnabled()) {
            this._reveal(elem);
        }
    };
    CanvasScrollAnimation.prototype.clear = function () {
        if (CanvasScrollAnimation.isScrollAnimationsEnabled()) {
            this._scrollableParent = undefined;
            this._scrollReveal = undefined;
            this._isFirstReveal = false;
        }
    };
    CanvasScrollAnimation.prototype._reveal = function (elem) {
        if (this._scrollReveal) {
            if (!this._isFirstReveal) {
                this._isFirstReveal = true;
                __WEBPACK_IMPORTED_MODULE_1__ms_sp_telemetry__["_PerformanceLogger"].startMarkForComponent(CanvasScrollAnimation.PERF_LOGGER_MARKER);
                if (CanvasScrollAnimation._shouldAddScrollRevealInEUPL()) {
                    __WEBPACK_IMPORTED_MODULE_1__ms_sp_telemetry__["_PerformanceLogger"].addComponent(CanvasScrollAnimation.PERF_LOGGER_MARKER);
                }
            }
            this._scrollReveal.reveal(elem);
        }
        else {
            this._pendingElements.push(elem);
        }
    };
    CanvasScrollAnimation.prototype._tryConfigureAndRevealPending = function () {
        if (!!this._scrollableParent && !this._scrollReveal) {
            this._scrollReveal = scrollReveal({
                beforeReveal: this._beforeReveal,
                container: this._scrollableParent,
                delay: 50,
                duration: 750,
                easing: 'cubic-bezier(0.33, 0.0, 0.0, 1)',
                scale: 1,
                viewFactor: 0
            });
            for (var _i = 0, _a = this._pendingElements; _i < _a.length; _i++) {
                var elem = _a[_i];
                this._reveal(elem);
            }
            this._pendingElements = [];
        }
    };
    CanvasScrollAnimation.prototype._beforeReveal = function (revealedElement) {
        __WEBPACK_IMPORTED_MODULE_1__ms_sp_telemetry__["_PerformanceLogger"].endMarkForComponent(CanvasScrollAnimation.PERF_LOGGER_MARKER);
    };
    CanvasScrollAnimation.PERF_LOGGER_MARKER = 'SPFX.ScrollReveal';
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_3__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], CanvasScrollAnimation.prototype, "_beforeReveal", null);
    return CanvasScrollAnimation;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasScrollAnimation);


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = CreateEmptyZoneLayout;
function CreateEmptyZoneLayout(zoneIndex, sectionIndex, controlIndex, layoutIndex) {
    return {
        zoneIndex: zoneIndex,
        sectionIndex: sectionIndex,
        controlIndex: controlIndex,
        layoutIndex: layoutIndex
    };
}


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxAnimation/animation.module.scss.js
__webpack_require__(232);
var styles = {
    fromNoneToSmall: 'fromNoneToSmall_456b5213',
    upIn: 'upIn_456b5213',
    fromNoneToSmallUpIn: 'fromNoneToSmallUpIn_456b5213',
    downIn: 'downIn_456b5213',
    fromNoneToSmallDownInLTR: 'fromNoneToSmallDownInLTR_456b5213',
    fromNoneToSmallDownInRTL: 'fromNoneToSmallDownInRTL_456b5213',
    fromSmallToLarge: 'fromSmallToLarge_456b5213',
    fromLargeToSmall: 'fromLargeToSmall_456b5213',
};
/* harmony default export */ var animation_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxAnimation/animation.js




var currentMode = new WeakMap();
function animation(ToolboxComponent, 
    mode) {
    return (function (_super) {
        tslib_es6["__extends"](AnimationWrapper, _super);
        function AnimationWrapper() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        AnimationWrapper.prototype.componentDidMount = function () {
            currentMode.set(this.props.controller, mode);
        };
        AnimationWrapper.prototype.render = function () {
            return (external__react_["createElement"](ToolboxComponent, tslib_es6["__assign"]({}, this.props, { className: Object(office_ui_fabric_react_bundle_["css"])(this.props.className, this._animationClassName) })));
        };
        Object.defineProperty(AnimationWrapper.prototype, "_animationClassName", {
            get: function () {
                var previousMode = currentMode.get(this.props.controller) || 0 ;
                var nextMode = mode;
                if (previousMode === 0  && nextMode === 1 ) {
                    return animation_module_scss.fromNoneToSmall;
                }
                else if (previousMode === 0  && nextMode === 3 ) {
                    return animation_module_scss.fromNoneToSmall;
                }
                else if (previousMode === 3  && nextMode === 4 ) {
                    return animation_module_scss.fromSmallToLarge;
                }
                else if (previousMode === 4  && nextMode === 3 ) {
                    return animation_module_scss.fromLargeToSmall;
                }
                else {
                    return '';
                }
            },
            enumerable: true,
            configurable: true
        });
        return AnimationWrapper;
    }(external__react_["PureComponent"]));
}

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxAnimation/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return animation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "b", function() { return animation_module_scss; });




/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var Async_1 = __webpack_require__(67);
var PageTransitionType_1 = __webpack_require__(83);
var RUMOneDataUpload_event_1 = __webpack_require__(84);
var PlatformDetection_1 = __webpack_require__(56);
var PerformanceMarker_1 = __webpack_require__(148);
var PerformanceDataState;
(function (PerformanceDataState) {
    /**
     * Not enought data collected to upload
     * At this state logger isRunning is true
     */
    PerformanceDataState[PerformanceDataState["Incomplete"] = 1] = "Incomplete";
    /**
     * Required data collected and can be uploaded.
     * Practically all expected controls has rendered by this time
     * and EUPL has been set.
     * At this state logger isRunning is true but sooner to change to false.
     */
    PerformanceDataState[PerformanceDataState["ReadyToUpload"] = 2] = "ReadyToUpload";
    /**
     * Incomplete -> ReadyToUpload |  ERROR_TIMEOUT time elapsed -> Uploaded
     * Performance data has been uploaded for the current page.
     * Until reset, no more data will be uploaded.
     */
    PerformanceDataState[PerformanceDataState["Uploaded"] = 3] = "Uploaded";
    /**
     * Incomplete -> ERROR_TIMEOUT time elapsed -> TimeOut -> Uploaded
     * Timeout occured before expected controls could finish rendering
     * Data will be uploaded as it is but without EUPL.
     * Consumer should consider EUPL="" as > 30 sec for performance analysis
     */
    PerformanceDataState[PerformanceDataState["TimeOut"] = 4] = "TimeOut";
    /**
     * Incomplete -> (ERROR_TIMEOUT time elapsed && TimeOut) | ReadyToUpload -> Skipped
     * This is a state where data has been collected or timeout but uploading the data was skipped
     * This happens when consumer has asked to do so based on the page's debug environment
     */
    PerformanceDataState[PerformanceDataState["Skipped"] = 5] = "Skipped";
})(PerformanceDataState || (PerformanceDataState = {}));
var APICallPerformanceData = /** @class */ (function () {
    function APICallPerformanceData(url, duration, correlationid, status, startTime, endTime, name) {
        this.url = url;
        this.duration = duration;
        this.correlationId = correlationid;
        this.status = status;
        this.startTime = startTime;
        this.endTime = endTime;
        this.name = name;
    }
    return APICallPerformanceData;
}());
exports.APICallPerformanceData = APICallPerformanceData;
// Default key metrics which are always required before perf perf data is uploaded.
// For any additional key metric call addExpectedKeyMetric API
var DEFAULT_KEY_METRICS = ['EUPL', 'ScenarioId'];
// Each property column should confirm to this regex to align with Aria column name restriction.
var PROPERTY_NAME_REGEX = /^[a-zA-Z0-9](([a-zA-Z0-9|_|\.]){0,98}[a-zA-Z0-9])?$/;
var ControlPerformanceData = /** @class */ (function () {
    function ControlPerformanceData(controlId, startTime, endTime, renderTimeCalculator, renderTimeRequiredDataChecker, ignoreForEUPL, needFlatten) {
        this.controlId = controlId;
        this.startTime = startTime;
        this.endTime = endTime;
        this.renderTimeCalculator = renderTimeCalculator;
        this.renderTimeRequiredDataChecker = renderTimeRequiredDataChecker;
        this.ignoreForEUPL = ignoreForEUPL === undefined ? true : ignoreForEUPL;
        this.needFlatten = needFlatten === undefined ? false : needFlatten;
    }
    return ControlPerformanceData;
}());
exports.ControlPerformanceData = ControlPerformanceData;
function isNullOrUndefined(item) {
    'use strict';
    return item === null || typeof item === 'undefined';
}
var DEFAULT_LOGGER_NAME = '__default_rumone__';
var DEFAULT_CONFIG = {
    checkInterval: 100,
    error_timeout: 30000,
    max_markers: 100 // suppport maximum 100 perf markers
};
/**
 * It is a new client side perf instrumentation, it logs more metrics, like scenario, api data, server request id, duration, etc in 1 single schema.
 * It has server side usage DB and cosmos supports.
 */
var RUMOneLogger = /** @class */ (function () {
    function RUMOneLogger(name, logFunc, rumOneconfig) {
        if (rumOneconfig === void 0) { rumOneconfig = DEFAULT_CONFIG; }
        this._keyMetrics = DEFAULT_KEY_METRICS;
        this.async = new Async_1.default(this);
        this.dataStartTime = Number((new Date()).getTime());
        this._rumoneData = {};
        this.dataState = PerformanceDataState.Incomplete;
        this.controls = [];
        this.apis = [];
        this.euplBreakDown = {};
        this.serverMetrics = {};
        this.isW3cTimingCollected = false;
        this.isW3cResourceTimingCollected = false;
        this.tempData = {};
        this._emergencyUpdateFunc = this._emergencyUpload.bind(this);
        this._name = name;
        this.loggingFunc = logFunc;
        this._config = rumOneconfig;
        this.setPerfDataTimer();
        this._platformDetection = new PlatformDetection_1.default();
        this._hookUnloadEvent();
    }
    /**
     * * RUMOneLogger.getRUMOneLogger: Use this method to get an intance of RUMOneLogger
     * with default parameters.
     * @param name: name of the instance of RUMOneLogger.
     * If not provided, the default singleton RUMOneLogger instance will be returned
     * @param logFunc: method of uploading collected RUMOne data to telemetry data storage
     * @param rumOneConfig: configuration of RUMOneLogger, do not pass in and use default if you
     * are not sure
     */
    RUMOneLogger.getRUMOneLogger = function (name, logFunc, rumOneConfig) {
        if (name === void 0) { name = DEFAULT_LOGGER_NAME; }
        if (rumOneConfig === void 0) { rumOneConfig = DEFAULT_CONFIG; }
        var loggingFunc = logFunc || (function (streamName, dictProperties) {
            RUMOneDataUpload_event_1.RUMOneDataUpload.logData({ streamName: streamName, dictionary: dictProperties });
        });
        if (!RUMOneLogger.Loggers[name]) {
            try {
                var logger = new RUMOneLogger(name, loggingFunc, rumOneConfig);
                if (name === DEFAULT_LOGGER_NAME) {
                    RUMOneLogger.rumOneLogger = logger;
                }
                RUMOneLogger.Loggers[name] = logger;
            }
            catch (e) {
                // If RUMOneLogger fails, don't block UX
            }
        }
        return RUMOneLogger.Loggers[name];
    };
    Object.defineProperty(RUMOneLogger.prototype, "KeyMetrics", {
        // For backward compatibility, will be removed once addExpectedKeyMetric API is adopted
        get: function () {
            return this._keyMetrics;
        },
        enumerable: true,
        configurable: true
    });
    RUMOneLogger.prototype.getPerformanceData = function () {
        return this._rumoneData;
    };
    RUMOneLogger.prototype.resetLogger = function () {
        this._emergencyUpload(); // upload ready key metrics if we have not. this should rarely happen
        this.dataStartTime = (new Date()).getTime();
        this.dataState = PerformanceDataState.Incomplete;
        this.isW3cTimingCollected = false;
        this.isW3cResourceTimingCollected = false;
        this.controls = [];
        this.apis = [];
        this.tempData = {};
        this._rumoneData = {};
        this._excludePageData = false;
        this._waitOnAddingExpectedControl = false;
        this._keyMetrics = DEFAULT_KEY_METRICS;
        this.clearPerfDataTimer();
        this.setPerfDataTimer();
        this.euplBreakDown = {};
        this.serverMetrics = {};
        this.clearResourceTimings();
        PerformanceMarker_1.clearMarks(this._getOwnMakers().map(function (marker) { return marker.name; }));
        RUMOneLogger._markers[this._name] = [];
        this._unhookUnloadEvent();
        this._hookUnloadEvent();
        this.logMessageInConsole("Reset performance Logger Done");
    };
    /**
     * Consumer should own logic to determine whether to ignore the  page for perf data collection
     * when Called this API, RUMOneLogger will not upload data but display in the console for debug purpose
     * E.g. Hidden Preload.aspx page for sharepoint or a debug page with #debugManifest or ?moduleLoader= in the url
     *
     */
    RUMOneLogger.prototype.excludePageForPerfData = function () {
        this._excludePageData = true;
    };
    RUMOneLogger.prototype.getPerformanceDataPropertyValue = function (key) {
        return key && this._rumoneData[key];
    };
    /**
     * Use this API carefully to add extra dynamic columns to Performance data.
     * addEUPLBreakdown with needFlatter can do same thing, but add duplicate data into two columns
     * CAUTION: Do not use this API for random name as it can explode number of columns
     * Use column names which are going to be consistent and don't explode in count over time.
     * Like name based on guid, timestamp or counters are bad examples to use as key.
     *
     * @param key Name of the dynamic coulmn confirming to Regex /^[a-zA-Z0-9](([a-zA-Z0-9|_|\.]){0,98}[a-zA-Z0-9])?$/
     * @param value Corresponding value
     *
     * Throws Error when key does not confirm to the Supported Regex
     */
    RUMOneLogger.prototype.setPerformanceDataPropertyValue = function (key, value) {
        if (key && PROPERTY_NAME_REGEX.test(key)) {
            this._rumoneData[key] = value;
            return true;
        }
        else {
            console.error("key " + key + " does not confrim to the Regex " + PROPERTY_NAME_REGEX);
            return false;
        }
    };
    RUMOneLogger.prototype.addExpectedControl = function (control) {
        var normalizedControl = this._normalizeControl(control);
        if (!this.expectingControl(control)) {
            this.controls.push(normalizedControl);
        }
        else {
            // Ensure expected controls are not ignored from EUPL
            this.controls.filter(function (expected) { return expected.controlId === normalizedControl.controlId; })[0].ignoreForEUPL = normalizedControl.ignoreForEUPL;
        }
    };
    RUMOneLogger.prototype.expectingControl = function (control) {
        var normalizedControl = this._normalizeControl(control);
        return this.controls.filter(function (expected) { return expected.controlId === normalizedControl.controlId; }).length > 0;
    };
    RUMOneLogger.prototype.writeServerCorrelationId = function (correlationId) {
        this._rumoneData.ServerCorrelationId = this._rumoneData.ServerCorrelationId || correlationId;
    };
    RUMOneLogger.prototype.writeServerUrl = function (url) {
        if (!this._rumoneData.ServerUrl) {
            this._rumoneData.ServerUrl = url || window.location.href;
        }
    };
    RUMOneLogger.prototype.writeServerSideLatency = function (duration, iisLatency) {
        if (!this.isCollected('ServerRequestDuration')) {
            this._rumoneData.ServerRequestDuration = duration;
            this._rumoneData.IISLatency = iisLatency;
        }
    };
    RUMOneLogger.prototype.writeControlPerformanceData = function (controlData) {
        if (controlData) {
            var foundControl = this.controls.filter(function (control) { return control.controlId === controlData.controlId; })[0];
            if (foundControl) {
                if (!foundControl.data) {
                    foundControl.data = controlData;
                }
            }
            else {
                var control = {
                    controlId: controlData.controlId,
                    data: controlData,
                    ignoreForEUPL: controlData.ignoreForEUPL
                };
                this.controls.push(control);
            }
        }
    };
    RUMOneLogger.prototype.writeAPICallPerformanceData = function (apiData) {
        if (apiData) {
            this.apis.push(apiData);
        }
    };
    RUMOneLogger.prototype.readAPICallPerformanceData = function () {
        return this.apis;
    };
    RUMOneLogger.prototype.writeAppCache = function (appCache) {
        if (!this.isCollected('AppCache')) {
            this._rumoneData.AppCache = appCache;
        }
    };
    RUMOneLogger.prototype.writePageTransitionType = function (pageTransitionType, overwrite) {
        if ((!this.isCollected('PageTransitionType') || overwrite) &&
            (pageTransitionType === PageTransitionType_1.default.fullPageLoad || pageTransitionType === PageTransitionType_1.default.none || pageTransitionType === PageTransitionType_1.default.onePageAppNavigation)) {
            this._rumoneData.PageTransitionType = pageTransitionType;
        }
    };
    RUMOneLogger.prototype.writeScenarioId = function (scenarioId, overwrite) {
        if (!this.isCollected('ScenarioId') || overwrite) {
            this._rumoneData.ScenarioId = scenarioId;
        }
    };
    RUMOneLogger.prototype.collectW3CPerfTimings = function () {
        if (!this.isW3cTimingCollected) {
            var w3cTimeStampNames = ['navigationStart', 'unloadEventStart', 'unloadEventEnd', 'fetchStart', 'redirectStart', 'redirectEnd', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'secureConnectionStart', 'connectEnd', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domComplete', 'loadEventStart', 'loadEventEnd'];
            var perfTimingObject = performance && performance.timing;
            if (perfTimingObject) {
                for (var index = 0; index < w3cTimeStampNames.length; index++) {
                    var w3cObject = perfTimingObject[w3cTimeStampNames[index]];
                    if (w3cObject) {
                        this._logRUMOneData(this.getW3cTimingName(w3cTimeStampNames[index]), Number(w3cObject));
                    }
                }
                this.isW3cTimingCollected = true;
            }
        }
    };
    RUMOneLogger.prototype.collectW3cResourceTimings = function () {
        if (window.document && !this.isW3cResourceTimingCollected && performance && performance.getEntriesByType) {
            var allRequests = performance.getEntriesByType("resource");
            var iFrames = document.getElementsByTagName("iframe");
            for (var index = 0; index < iFrames.length; index++) {
                var iFramePerformance = null;
                try {
                    iFramePerformance = iFrames[index].contentWindow.performance;
                }
                catch (e) {
                    // sometimes we can't access iFrame.
                }
                if (iFramePerformance && iFramePerformance.getEntriesByType) {
                    allRequests.concat(iFramePerformance.getEntriesByType("resource"));
                }
            }
            var fromSources = {};
            fromSources["SharePoint"] = function (element) { return /\.sharepoint\.com|\.spoppe\.com/i.test(element.name); }; //matching sharepoint.com or spoppe.com
            fromSources["CDN"] = function (element) { return /(cdn(ppe)?|static(ppe)?)\.sharepointonline\.com|\.akamaihd\.net/i.test(element.name); }; //matching cdn(ppe)sharepointonline.com or adamaihd.net
            fromSources["ThirdParty"] = function (element) { return !fromSources["SharePoint"](element) && !fromSources["CDN"](element); }; // all requests other than sharepoint requests or cdn requests
            var types = {};
            types["ASPX"] = function (element) { return /\.aspx/i.test(element.name); };
            types["JS"] = function (element) { return /script/i.test(element.initiatorType); };
            types["CSS"] = function (element) { return /link|css/i.test(element.initiatorType); };
            types["IMG"] = function (element) { return /img/i.test(element.initiatorType); };
            var sources = Object.keys(fromSources);
            for (var index = 0; index < sources.length; index++) {
                var source = sources[index];
                var requests = this.categorizeResourceRequests(allRequests, {
                    from: fromSources[source],
                    requestType: null //match any type to get total request count for this source
                });
                this._logRUMOneData(source + "RequestCountTotal", requests.length); //SharePoint|CDN|ThirdParty resource request count
                var typeKeys = Object.keys(types);
                for (var typeIndex = 0; typeIndex < typeKeys.length; typeIndex++) {
                    var type = typeKeys[typeIndex];
                    this._logRUMOneData(source + "RequestCount" + type, this.categorizeResourceRequests(requests, {
                        from: null,
                        requestType: types[type]
                    }).length); //SharePoint|CDN|ThirdParty ASPX resource request count
                }
                if (requests.length > 0) {
                    this._logRUMOneData(source + "RequestDownloadTime", Math.round(requests.reduce(function (sum, currentVal) {
                        return sum + currentVal.duration;
                    }, 0) / requests.length)); //SharePoint|CDN|ThirdParty resource request average duration
                    // log the file names of all resource requests in a JSON string. The output after processing will looks like:
                    // [{name: "require-db6c47e2.js", startTime: 500, duration: 100},{name: "RenderListDataAsStream", startTime: 200, duration: 10}]
                    // The raw resource name before this processing is "https://msft.spoppe.com/teams/SPGroups/_api/web/GetList(@listUrl)/RenderListDataAsStream?Paged=TRUE&p_FileLeafRef=test%2eurl&p_ID=213&PageFirstRow=121&View=6eab4254-2f2f-4086-91c0-549ae900cc93&@listUrl=%27%2Fteams%2FSPGroups%2FVNextDocLib%27"
                    var files = JSON.stringify(requests.map(function (timing) {
                        return {
                            name: timing.name.split("/").map(function (urlToken) {
                                return urlToken.split("?")[0];
                            }).filter(function (urlToken) {
                                return urlToken && urlToken.length > 0;
                            }).slice(-1)[0].replace(/\(.*?\)/g, '()'),
                            startTime: Math.round(timing.startTime),
                            duration: Math.round(timing.duration),
                            transferSize: timing['transferSize'] || 0
                        };
                    }));
                    this._logRUMOneData(source + "RequestNames", files);
                }
            }
            this.isW3cResourceTimingCollected = true;
        }
    };
    RUMOneLogger.prototype.saveTempData = function (key, value) {
        this.tempData[key] = value;
    };
    RUMOneLogger.prototype.readTempData = function (key) {
        return this.tempData[key];
    };
    RUMOneLogger.prototype.writeRenderTime = function (renderTime, overwrite) {
        if (!this.isCollected('RenderTime') || overwrite) {
            this._rumoneData.RenderTime = renderTime;
        }
    };
    RUMOneLogger.prototype.writePreRenderTime = function (preRender) {
        if (!this.isCollected('PreRender')) {
            this._rumoneData.PreRender = preRender;
        }
    };
    RUMOneLogger.prototype.writePostRenderTime = function (postRender) {
        if (!this.isCollected('PostRender')) {
            this._rumoneData.PostRender = postRender;
        }
    };
    RUMOneLogger.prototype.writeDataFetchTime = function (dataFetch, overwrite) {
        if (!this.isCollected('DataFetch') || overwrite) {
            this._rumoneData.DataFetch = dataFetch;
        }
    };
    RUMOneLogger.prototype.isRunning = function () {
        return !(this.dataState === PerformanceDataState.Uploaded ||
            this.dataState === PerformanceDataState.TimeOut ||
            this.dataState === PerformanceDataState.Skipped);
    };
    RUMOneLogger.prototype.writeEUPLBreakdown = function (euplBreakdown, overwrite) {
        if (euplBreakdown) {
            try {
                var breakdown = JSON.parse(euplBreakdown);
                for (var key in breakdown) {
                    if (!breakdown.hasOwnProperty(key)) {
                        continue;
                    }
                    this.addEUPLBreakdown(key, breakdown[key], overwrite);
                }
            }
            catch (e) {
                // in case the euplBreakdown is invalid JSON
                this.logMessageInConsole("Failed to write EUPL breakdown data:" + e.toString());
            }
        }
    };
    RUMOneLogger.prototype.addEUPLBreakdown = function (name, value, overwrite) {
        if (name && !isNullOrUndefined(value)) {
            if (isNullOrUndefined(this.euplBreakDown[name]) || overwrite) {
                var data = this._isBreakdownValue(value) ? value.data : value;
                this.euplBreakDown[name] = data;
            }
            //  kusto job to parse EUPLBreakdown property bag is expensive and cause a lot kusto/MDM perf issues.
            //  to workaround it, we flatten EUPLBreakdown properties that are marked with needFlatten===true to send
            //  them to aria as individual columns. After this change, kusto query does not need to parse json any more.
            if (this._isBreakdownValue(value) && value.needFlatten) {
                this._logRUMOneData(name, value.data);
            }
        }
    };
    RUMOneLogger.prototype.readEUPLBreakdown = function (name) {
        return !!name ? this.euplBreakDown[name] : this.euplBreakDown;
    };
    /**
     * Add list of flights enabled for this page.
     */
    RUMOneLogger.prototype.addFlights = function (flights) {
        if (flights && flights.length > 0) {
            var _flights = JSON.parse(this.getPerformanceDataPropertyValue('Flights') || '[]');
            for (var index = 0; index < flights.length; index++) {
                var flight = flights[index];
                if (flight && _flights.indexOf(flight) === -1) {
                    _flights.push(flight);
                }
            }
            this._rumoneData.Flights = JSON.stringify(_flights);
        }
    };
    RUMOneLogger.prototype.addServerMetrics = function (metric, overwrite) {
        if (metric) {
            for (var key in metric) {
                if (key && !isNullOrUndefined(metric[key]) &&
                    (isNullOrUndefined(this.serverMetrics[key]) || overwrite)) {
                    this.serverMetrics[key] = metric[key];
                }
            }
        }
    };
    /**
     * Write version of the Sharepoint server served the request
     */
    RUMOneLogger.prototype.writeServerVersion = function (version) {
        this._rumoneData.SharePointServerVersion = version;
    };
    RUMOneLogger.prototype.readControlPerformanceData = function () {
        return this.controls.filter(function (control) { return !!control.data; }).map(function (control) { return control.data; });
    };
    RUMOneLogger.prototype.mark = function (name) {
        var marks = RUMOneLogger._markers[this._name] = RUMOneLogger._markers[this._name] || [];
        marks.push(name);
        PerformanceMarker_1.mark(name);
    };
    RUMOneLogger.prototype.now = function () {
        return performance && performance.now ? Math.round(performance.now()) : NaN;
    };
    /**
     * Register handler function that will be called back when EUPL is computed successfully.
     * @param handler function that app register, wiill be called back when EUPL is computed.
     */
    RUMOneLogger.prototype.registerEUPLComputedHandler = function (handler) {
        this._EUPLComputedHandler = handler;
    };
    /**
     * Register handler function that will be called back when timeout happens.
     * @param handler function that app register, will be called back when timeout happens
     */
    RUMOneLogger.prototype.registerErrorHandler = function (handler) {
        /* no-op */
    };
    RUMOneLogger.prototype.getMarkerTime = function (name) {
        return PerformanceMarker_1.getMarkerTime(name);
    };
    /**
     * Add key expected metric. RUMONeLogger will wait upon these key metrics to be collected
     * before uploading performance data.
     * @param keyMetric
     */
    RUMOneLogger.prototype.addExpectedKeyMetric = function (keyMetric) {
        if (this._keyMetrics && this._keyMetrics.indexOf(keyMetric) <= -1) {
            this._keyMetrics.push(keyMetric);
        }
    };
    Object.defineProperty(RUMOneLogger.prototype, "waitOnAddingExpectedControl", {
        /**
         * If set to true, RUMOnelogger will wait until this is not set false again before concluding all expected controls are added
         * Set it to true if not all expected controls are added
         * Set it to false once all expected controls has been added
         */
        set: function (wait) {
            this._waitOnAddingExpectedControl = wait;
        },
        enumerable: true,
        configurable: true
    });
    RUMOneLogger.prototype._logRUMOneData = function (key, value) {
        if (key) {
            this._rumoneData[key] = value;
        }
    };
    RUMOneLogger.prototype.clearResourceTimings = function () {
        if (performance && performance.clearResourceTimings) {
            performance.clearResourceTimings();
        }
    };
    RUMOneLogger.prototype._isBreakdownValue = function (data) {
        return data.needFlatten !== undefined;
    };
    RUMOneLogger.prototype.collectMarks = function () {
        var _this = this;
        var marks = {};
        var markerIndex = 0;
        this._getOwnMakers().forEach(function (mark) {
            if (markerIndex < _this._config.max_markers) {
                var markName = mark.name.substr(PerformanceMarker_1.MARKER_PREFIX.length) + (".mark" + markerIndex++);
                marks[markName] = Math.round(mark.startTime); // covert to rumone collected marks to object and merge to EUPL Breakdown
            }
        });
        this.writeEUPLBreakdown(JSON.stringify(marks));
    };
    RUMOneLogger.prototype._getOwnMakers = function () {
        var _this = this;
        var markers = RUMOneLogger._markers;
        var markersFromOtherInstances = [].concat.apply([], Object.keys(markers).filter(function (name) {
            return markers.hasOwnProperty(name) && name !== _this._name;
        }).map(function (name) { return markers[name]; }));
        // include markers generated by current rumone instance and all externally created perf markers
        var results = PerformanceMarker_1.getAllMarks().filter(function (mark) { return markersFromOtherInstances.indexOf(mark.name) === -1; });
        return results;
    };
    RUMOneLogger.prototype.logMessageInConsole = function (message) {
        if (this.isRUMOneDebuggingEnabled) {
            console.log(message);
        }
    };
    Object.defineProperty(RUMOneLogger.prototype, "isRUMOneDebuggingEnabled", {
        get: function () {
            try {
                if ('sessionStorage' in window && window.sessionStorage) {
                    var debugStr = window.sessionStorage["enableRUMOneDebugging"];
                    var debug = debugStr && debugStr.toLowerCase() === "true";
                    return debug && typeof console !== "undefined" && !!console;
                }
            }
            catch (e) {
                // sessionStorage errors
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    RUMOneLogger.prototype.logObjectForDebugging = function (propertyName, dictProperties) {
        if (this.isRUMOneDebuggingEnabled) {
            var logMessageText = this._name + " " + propertyName + " : " + JSON.stringify(dictProperties);
            console.log(logMessageText);
        }
    };
    RUMOneLogger.prototype.isCollected = function (name) {
        return !isNullOrUndefined(this.getPerformanceDataPropertyValue(name));
    };
    RUMOneLogger.prototype._normalizeControl = function (control) {
        return typeof control === 'string' ? {
            controlId: control,
            ignoreForEUPL: false
        } : control;
    };
    RUMOneLogger.prototype.setPerfDataTimer = function () {
        this.perfDataTimer = this.async.setTimeout(this.loopForDataCompleteness, this._config.checkInterval);
    };
    RUMOneLogger.prototype.clearPerfDataTimer = function () {
        if (!isNullOrUndefined(this.perfDataTimer)) {
            this.async.clearTimeout(this.perfDataTimer);
            this.perfDataTimer = null;
        }
    };
    RUMOneLogger.prototype._hookUnloadEvent = function () {
        /* tslint:disable:ban-native-functions */
        if (window.addEventListener) {
            window.addEventListener('beforeunload', this._emergencyUpdateFunc);
        }
        /* tslint:enable:ban-native-functions */
    };
    RUMOneLogger.prototype._unhookUnloadEvent = function () {
        /* tslint:disable:ban-native-functions */
        if (window.removeEventListener) {
            window.removeEventListener('beforeunload', this._emergencyUpdateFunc);
        }
        /* tslint:enable:ban-native-functions */
    };
    RUMOneLogger.prototype.categorizeResourceRequests = function (requests, categorizer) {
        var ret = [];
        for (var index = 0; index < requests.length; index++) {
            var request = requests[index];
            if ((!categorizer.from || categorizer.from(request)) && (!categorizer.requestType || categorizer.requestType(request))) {
                ret.push(request);
            }
        }
        return ret;
    };
    RUMOneLogger.prototype.collectSupplementaryData = function () {
        this.setAPIDataToRUMOne();
        this.collectMarks();
        this.writeServerUrl(null);
        this.setBrowseInfo();
        this.setReferrer();
        this._collectMemoryData();
        this._rumoneData.ServerMetrics = JSON.stringify(this.serverMetrics);
        this._rumoneData.EUPLBreakdown = JSON.stringify(this.euplBreakDown);
    };
    RUMOneLogger.prototype.loopForDataCompleteness = function () {
        this.clearPerfDataTimer();
        if (!this._waitOnAddingExpectedControl) {
            if (this.isRUMOneDebuggingEnabled) {
                this.logMessageInConsole("====================================================================");
                this.logObjectForDebugging("RUMONE: ", this._rumoneData);
                this.logObjectForDebugging("RUMOne DataState: ", String(this.getReadableDataState(this.dataState)));
                this.logObjectForDebugging("Controls: ", this.controls);
                this.logObjectForDebugging("API Performance Data: ", this.apis);
                this.logObjectForDebugging("Temp Data: ", this.tempData);
                this.logObjectForDebugging("EUPLBreakdown: ", this.euplBreakDown);
                this.logObjectForDebugging("ServerMetrics: ", this.serverMetrics);
                this.logMessageInConsole("====================================================================\n\n");
            }
            if (!this.isRunning()) {
                return;
            }
            this._updateState();
            if (this.dataState === PerformanceDataState.ReadyToUpload) {
                this.finishPerfDataUpload();
                return;
            }
            this.processControlRenderTime();
            if (this.readyToComputeEUPL()) {
                this.setEUPL();
                this._updateState();
            }
        }
        // Check timeout
        this._checkTimeout();
        if (this.isRunning()) {
            this.setPerfDataTimer();
        }
    };
    /**
     * Check if we reached ERROR_TIMEOUT without being ready to upload and timeout if so
     */
    RUMOneLogger.prototype._checkTimeout = function () {
        if (!this.isRunning() || this.dataState === PerformanceDataState.ReadyToUpload) {
            return;
        }
        if (Number((new Date()).getTime()) - Number(this.dataStartTime) <= this._config.error_timeout) {
            return; // Nope, we still have time
        }
        // Upload whatever data we have without all key metrics
        this.dataState = PerformanceDataState.TimeOut;
        var error = {
            reason: 'TimeOut',
            details: {
                'MissingMetrics': this._getMissedKeyMetrics(),
                'MissingControls': this._getMissedControls()
            }
        };
        this._rumoneData.RUMOneError = JSON.stringify(error);
        this.finishPerfDataUpload();
    };
    RUMOneLogger.prototype._updateState = function () {
        this.dataState =
            (this._getMissedKeyMetrics().length === 0 && this._getMissedControls().length === 0)
                ? PerformanceDataState.ReadyToUpload
                : PerformanceDataState.Incomplete;
    };
    /**
     * Get array of missing key metrices
     */
    RUMOneLogger.prototype._getMissedKeyMetrics = function () {
        var missedKeyMetrics = [];
        for (var i = 0; i < this._keyMetrics.length; i++) {
            var keyMetricValue = this.getPerformanceDataPropertyValue(this._keyMetrics[i]);
            if (isNullOrUndefined(keyMetricValue)) {
                missedKeyMetrics.push(this._keyMetrics[i]);
            }
        }
        return missedKeyMetrics;
    };
    /**
     * Get array of controls missing data
     */
    RUMOneLogger.prototype._getMissedControls = function () {
        return this.controls.filter(function (control) { return !control.data || !control.data.renderTime; });
    };
    // since we allow secondary controls reported but not be used to calculate EUPL,
    // these controls might be very slow and we are in higher risky that end user navigates
    // away from this page before we upload our data although EUPL might be available already.
    // This should be hooked with onunload event and resetlogger method
    RUMOneLogger.prototype._emergencyUpload = function () {
        if (this.isRunning() && this._getMissedKeyMetrics().length === 0) {
            this.finishPerfDataUpload(true);
        }
    };
    // if emergency set to true, we will not validate data state in uploadPerfData call
    // since current page is navigating away, mostly likely we already collected key metrics
    // only waiting for secondary controls, we should upload data collected so far
    RUMOneLogger.prototype.finishPerfDataUpload = function (emergency) {
        this.writeControlDataToRUMOne();
        this.collectSupplementaryData();
        try {
            this.uploadPerfData(emergency);
            if (this.isRUMOneDebuggingEnabled) {
                this.logMessageInConsole('Final Data uploaded');
                this.logObjectForDebugging("RUMONE: ", this._rumoneData);
                this.logObjectForDebugging("RUMOne DataState: ", this.getReadableDataState(this.dataState));
            }
        }
        catch (e) {
            (function (errorText) {
                if (typeof console !== "undefined" && Boolean(console)) {
                    console.error(errorText);
                }
            })("PerformanceLogger error writing RUMOne data: " + e);
        }
        finally {
            this._unhookUnloadEvent();
        }
    };
    RUMOneLogger.prototype.getReadableDataState = function (_dataState) {
        for (var key in PerformanceDataState) {
            if (_dataState === Number(PerformanceDataState[key])) {
                return key;
            }
        }
        return 'NaN';
    };
    /**
     * Write Control and corresponding render time for top 10 renderTime controls.
     */
    RUMOneLogger.prototype.writeControlDataToRUMOne = function () {
        if (this.controls && this.controls.length) {
            var byRenderTime = this.controls.slice(0).filter(function (control) { return !!control.data && !!control.data.renderTime && !control.ignoreForEUPL; });
            byRenderTime.sort(function (control1, control2) {
                return control2.data.renderTime - control1.data.renderTime;
            });
            // We have maximum 10 slots for the Control render data collection
            for (var index = 0; index < 10 && index < byRenderTime.length; index++) {
                this._logRUMOneData("Control" + (index + 1) + "Id", byRenderTime[index].controlId);
                this._logRUMOneData("Control" + (index + 1) + "RenderTime", byRenderTime[index].data.renderTime);
            }
            // for secondary controls, we wrote data into EUPL breakdown
            var secondaryControls_1 = {};
            this.controls.slice(0).filter(function (control) { return !!control.data && !!control.data.renderTime && !!control.ignoreForEUPL; }).forEach(function (control) {
                secondaryControls_1[control.controlId] = {
                    data: control.data.renderTime,
                    needFlatten: control.data.needFlatten
                };
            });
            if (Object.keys(secondaryControls_1).length > 0) {
                this.writeEUPLBreakdown(JSON.stringify(secondaryControls_1), true);
            }
        }
    };
    /**
     * Calculate renderTime for the controls ready for it.
     */
    RUMOneLogger.prototype.processControlRenderTime = function () {
        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {
            var control = _a[_i];
            // if this control is not processed yet and ready to be processed
            if (control.data && !control.data.renderTime && control.data.renderTimeRequiredDataChecker(this, control.data)) {
                control.data.renderTime = control.data.renderTimeCalculator(this, control.data);
            }
        }
    };
    RUMOneLogger.prototype.readyToComputeEUPL = function () {
        var keyControls = this.controls.filter(function (control) { return !control.ignoreForEUPL; });
        var ready = keyControls.length > 0;
        for (var _i = 0, keyControls_1 = keyControls; _i < keyControls_1.length; _i++) {
            var control = keyControls_1[_i];
            if (!control.data || !control.data.renderTime) {
                ready = false;
                break;
            }
        }
        return ready;
    };
    RUMOneLogger.prototype.setEUPL = function () {
        if (!this.isCollected('EUPL')) {
            var eupl = 0;
            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (!control.ignoreForEUPL && control.data && control.data.renderTime && eupl < control.data.renderTime) {
                    eupl = control.data.renderTime;
                }
            }
            this._rumoneData.EUPL = eupl;
            if (typeof this._EUPLComputedHandler === 'function') {
                this._EUPLComputedHandler(eupl);
            }
        }
    };
    RUMOneLogger.prototype.setBrowseInfo = function () {
        this._rumoneData.Browser = this._platformDetection.browserName + this._platformDetection.browserMajor;
        this._rumoneData.BrowserIsMobile = this._platformDetection.isMobile;
    };
    RUMOneLogger.prototype._collectMemoryData = function () {
        if (!this.isCollected('UsedJSHeapSize') &&
            performance && performance.memory) {
            this._rumoneData.UsedJSHeapSize = performance.memory.usedJSHeapSize;
            this._rumoneData.TotalJSHeapSize = performance.memory.totalJSHeapSize;
        }
    };
    RUMOneLogger.prototype.setAPIDataToRUMOne = function () {
        var calls = 0;
        var durationSum = 0;
        for (var index = 0; index < this.apis.length; index++) {
            var apiData = this.apis[index];
            if (apiData) {
                calls++;
                durationSum += apiData.duration;
                // only take the function part of the API url to avoid cosmos data scrubber
                // url before processing: /teams/SPGroups/_api/web/GetList(@listUrl)/RenderListDataAsStream?Paged=TRUE&p_FileLeafRef=test%2eurl&p_ID=213&PageFirstRow=121&View=6eab4254-2f2f-4086-91c0-549ae900cc93&@listUrl=%27%2Fteams%2FSPGroups%2FVNextDocLib%27"
                // url after processing: RenderListDataAsStream
                apiData.url = apiData.url.split("/").map(function (s) { return s.split("?")[0]; }).slice(-1)[0].replace(/\(.*?\)/g, '()');
            }
        }
        this._rumoneData.APICallCount = calls;
        this._rumoneData.APICallDurationSum = durationSum;
        this._rumoneData.APICalls = JSON.stringify(this.apis);
    };
    RUMOneLogger.prototype.setReferrer = function () {
        this._rumoneData.Referrer = window.document && document.referrer;
    };
    RUMOneLogger.prototype.getW3cTimingName = function (timingName) {
        if (timingName !== 'secureConnectionStart') {
            return 'W3c' + timingName.charAt(0).toUpperCase() + timingName.slice(1);
        }
        else {
            return 'W3cSecureConnectStart'; // to workaround a RUMOne schema issue W3cSecureConnectStart should be W3cSecureConnectionStart
        }
    };
    RUMOneLogger.prototype.uploadPerfData = function (emergency) {
        if (this._excludePageData) {
            this.dataState = PerformanceDataState.Skipped;
            this.logMessageInConsole('Uploading perf data skipped as requested by the consumer');
        }
        else if (!emergency && this.dataState !== PerformanceDataState.ReadyToUpload &&
            this.dataState !== PerformanceDataState.TimeOut) {
            console.error("Error: Uploading perf data called with wrong data state " + this.dataState);
        }
        else if (!this.loggingFunc) {
            console.error('Uploading perf data skipped as loggingFunc is not defined');
        }
        else if (!this._rumoneData) {
            console.error('Error: Uploading perf data called but perf data is not available');
        }
        else {
            this.loggingFunc("RUMOne", this.getPerformanceData());
            this.dataState = PerformanceDataState.Uploaded;
        }
    };
    RUMOneLogger.rumOneLogger = undefined;
    RUMOneLogger.Loggers = {};
    RUMOneLogger._markers = {};
    return RUMOneLogger;
}());
exports.default = RUMOneLogger;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var UriEncoding = /** @class */ (function () {
    function UriEncoding() {
    }
    /////////////////////////////
    // This file is more clean of all unneeded pollutants. It only contains the minimum amount of code required for someone to use the URI class.
    // You should think twice before adding anything else into this file because you will be causing unneeded bloat from someone else.
    /////////////////////////////
    /**
     * This function performs an aggressive unicode URL-encoding.
     * Convert non alphanum character into UTF-8 code string in format %XX%XX%XX.
     *
     * Escape unsafe characters
     *   CTL | SP | <"> | "#" | "%" | "<" | ">" | "'" | "&"
     * in the URL path (before "?", "#")
     * No encoding on query string.
     *
     * @param {string} str - String to encode
     * @param {boolean} bAsUrl - Encode in the same way as the code in unmanaged (Url::UrlEncode) code and
     *                           SP OM (SPHttpUtility.UrlKeyValueEncode and SPHttpUtility.UrlPathEncode).
     * @param {boolean} bForFilterQuery
     * @param {boolean} bForCallback - Only escape the characters after 0x7F to workaround bug O12: 452191
     */
    UriEncoding.encodeURIComponent = function (str, bAsUrl, bForFilterQuery, bForCallback) {
        var strOut = "";
        var strByte;
        var ix = 0;
        var strEscaped = " \"%<>\'&";
        if (!str) {
            return "";
        }
        var len = str.length;
        for (ix = 0; ix < len; ix++) {
            var charCode = str.charCodeAt(ix);
            var curChar = str.charAt(ix);
            if (bAsUrl && (curChar === '#' || curChar === '?')) {
                strOut += str.substr(ix);
                break;
            }
            if (bForFilterQuery && curChar === '&') {
                strOut += curChar;
                continue;
            }
            if (charCode <= 0x7f) {
                if (bForCallback) {
                    strOut += curChar;
                }
                else {
                    if ((charCode >= 97 && charCode <= 122) ||
                        (charCode >= 65 && charCode <= 90) ||
                        (charCode >= 48 && charCode <= 57) ||
                        (bAsUrl && (charCode >= 32 && charCode <= 95) && strEscaped.indexOf(curChar) < 0)) {
                        strOut += curChar;
                    }
                    else if (charCode <= 0x0f) {
                        strOut += "%0" + charCode.toString(16).toUpperCase();
                    }
                    else if (charCode <= 0x7f) {
                        strOut += "%" + charCode.toString(16).toUpperCase();
                    }
                }
            }
            else if (charCode <= 0x07ff) {
                strByte = 0xc0 | (charCode >> 6);
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | (charCode & 0x003f);
                strOut += "%" + strByte.toString(16).toUpperCase();
            }
            else if ((charCode & 0xFC00) !== 0xD800) {
                strByte = 0xe0 | (charCode >> 12);
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | ((charCode & 0x0fc0) >> 6); // middle 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | (charCode & 0x003f); // lower 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
            }
            else if (ix < str.length - 1) {
                charCode = (charCode & 0x03FF) << 10; // lower 10 bits of first char
                ix++;
                var nextCharCode = str.charCodeAt(ix);
                charCode |= nextCharCode & 0x03FF; // lower 10 bits of second char
                charCode += 0x10000;
                strByte = 0xf0 | (charCode >> 18);
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | ((charCode & 0x3f000) >> 12); // upper 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | ((charCode & 0x0fc0) >> 6); // middle 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
                strByte = 0x80 | (charCode & 0x003f); // lower 6 bits
                strOut += "%" + strByte.toString(16).toUpperCase();
            }
        }
        return strOut;
    };
    /**
     * Callbacks do not work if a #bookmark is in the URL. If there is a bookmark then we need to remove it. We also need to
     * deal with the scenario where there is not a bookmark but there is an unencoded # as a part of a name/value after the '?'.
     * This is how things should work here:
     * .../foo.aspx -> .../foo.aspx (unchanged)
     * .../foo.aspx#bookmark -> .../foo.aspx (bookmark is removed)
     * .../foo.aspx#bookmark?name=value -> .../foo.aspx?name=value (bookmark is removed)
     * .../foo.aspx#bookmark?name1=value#extra1&name2=value2 -> .../foo.aspx?name1=value#extra1&name2=value2 (only the bookmark # is removed)
     * .../foo.aspx?name1=value#extra1&name2=value2 -> .../foo.aspx?name1=value#extra1&name2=value2 (unchanged)
     */
    UriEncoding.escapeUrlForCallback = function (str) {
        var iPound = str.indexOf("#");
        var iQues = str.indexOf("?");
        if ((iPound > 0) && ((iQues === -1) || (iPound < iQues))) {
            var strNew = str.substr(0, iPound);
            if (iQues > 0) {
                strNew += str.substr(iQues); // Need to include the '?' along with the "name=value" pairs.
            }
            str = strNew;
        }
        return UriEncoding.encodeURIComponent(str, true, false, true);
    };
    /**
     * SharePoint REST processor expect single quote ' to be escaped to '' in tokens (this applies to %27 too).
     * See example for usage.
     * @example
     * "getFolderByServerRelativeUrl('"+encodeRestUriStringToken("don't know.txt")+"')" should became "getFolderByServerRelativeUrl('don''t know.txt')""
     */
    UriEncoding.encodeRestUriStringToken = function (stringToken) {
        if (stringToken) {
            stringToken = stringToken.replace(/'/g, "''");
            stringToken = stringToken.replace(/%27/g, "%27%27");
            stringToken = UriEncoding.encodeURIComponent(stringToken);
        }
        return stringToken;
    };
    return UriEncoding;
}());
exports.default = UriEncoding;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.js
module.exports = __webpack_require__(133);

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Disposable_1 = __webpack_require__(59);
/**
 * Lifetime manager for scoping components.
 *
 * @export
 * @class Scope
 * @implements {IDisposable}
 *
 * @example
 *  const scope = new Scope();
 *
 *  let instance = new (scope.attached(MyComponent))();
 *
 *  scope.dispose();
 */
var Scope = /** @class */ (function () {
    /**
     * Creates an instance of Scope.
     */
    function Scope() {
        this._disposables = {};
        this._lastDisposableId = 0;
    }
    /**
     * Produces a constructor for instances of a type which will be bound to the lifetime
     * of this scope.
     *
     * @template T the type of object to be created.
     * @param {T} the original constructor for the type.
     * @returns {T} a new constructor to invoke to create the object.
     */
    Scope.prototype.attached = function (type) {
        var scope = this;
        var Attached = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return scope.attach(type.apply(this, args) || this);
        };
        if (true) {
            // This pattern results in the correct type being displayed in the debugger
            var wrappedConstructor_1 = Attached;
            Attached = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return wrappedConstructor_1.apply(Object.create(type.prototype), args);
            };
        }
        Attached.prototype = type.prototype;
        return Attached;
    };
    Scope.prototype.attach = function (instance) {
        var _this = this;
        var id = "" + ++this._lastDisposableId;
        var disposable = Disposable_1.hook(instance, function () {
            delete _this._disposables[id];
        });
        this._disposables[id] = disposable;
        return disposable;
    };
    /**
     * Disposes this scope and any attached objects.
     */
    Scope.prototype.dispose = function () {
        if (!this.isDisposed) {
            this.isDisposed = true;
        }
        var disposables = this._disposables;
        for (var _i = 0, _a = Object.keys(disposables); _i < _a.length; _i++) {
            var id = _a[_i];
            var disposable = disposables[id];
            if (disposable && Disposable_1.isDisposable(disposable)) {
                disposable.dispose();
            }
            delete disposables[id];
        }
    };
    return Scope;
}());
exports.default = Scope;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.types.js
module.exports = __webpack_require__(184);

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(18);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@ms/odsp-utilities-bundle/4.2.4/node_modules/@ms/odsp-utilities-bundle/lib/index.js
var lib = __webpack_require__(15);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/sp-loader"
var sp_loader_ = __webpack_require__(51);
var sp_loader__default = /*#__PURE__*/__webpack_require__.n(sp_loader_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/common/deferred/DeferredPagePicker.js



var _pagePickerComponentId = 'e795d530-8fb6-425c-b864-b86735dbae1d';
var DeferredPagePicker_DeferredPagePicker = (function (_super) {
    tslib_es6["__extends"](DeferredPagePicker, _super);
    function DeferredPagePicker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeferredPagePicker.getInstance = function () {
        return this._getInstance();
    };
    DeferredPagePicker.prototype.create = function (config) {
        return new this._classType(config);
    };
    DeferredPagePicker.prototype._internalLoad = function () {
        return sp_loader_["SPComponentLoader"].loadComponentById(_pagePickerComponentId).then(function (module) {
            return module.PagePicker;
        });
    };
    return DeferredPagePicker;
}(sp_core_library_["_DeferredClass"]));
/* harmony default export */ var deferred_DeferredPagePicker = (DeferredPagePicker_DeferredPagePicker);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/formattingbar/SPRteFormattingBar.scss.js
var SPRteFormattingBar_scss = __webpack_require__(206);
var SPRteFormattingBar_scss_default = /*#__PURE__*/__webpack_require__.n(SPRteFormattingBar_scss);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/loc/RteStrings.resx.js
var RteStrings_resx = __webpack_require__(19);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/formattingbar/SPRteFormattingBar.js





var SPRteFormattingBar_SPRteFormattingBar = (function (_super) {
    tslib_es6["__extends"](SPRteFormattingBar, _super);
    function SPRteFormattingBar(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isFaded: false
        };
        return _this;
    }
    SPRteFormattingBar.prototype.componentDidMount = function () {
        this._domNode.addEventListener('keydown', this.props.onKeyDown);
    };
    SPRteFormattingBar.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.position.top !== nextProps.position.top) {
            this.setState({
                isFaded: true
            });
        }
    };
    SPRteFormattingBar.prototype.componentDidUpdate = function () {
        var _this = this;
        if (this.state.isFaded) {
            this._clearTimeOut();
            this._fadeFormatBarTimeOut = this._async.setTimeout(function () {
                _this.setState({
                    isFaded: false
                });
            }, 300);
        }
    };
    SPRteFormattingBar.prototype.componentWillUnmount = function () {
        this._clearTimeOut();
    };
    SPRteFormattingBar.prototype.render = function () {
        var style = this.props.position;
        var className = Object(office_ui_fabric_react_bundle_["css"])('SPRteFormattingBar', 'rteFlyout-visible', 'stack-panel-class', {
            faded: this.state.isFaded
        });
        return (external__react_["createElement"]("div", { role: "toolbar", "aria-label": RteStrings_resx["a" /* default */].FormattingBarAccessibleLabel, className: className, ref: this._resolveRef('_domNode'), style: style, "data-automation-id": "toolbar" },
            external__react_["createElement"](office_ui_fabric_react_bundle_["FocusZone"], { isCircularNavigation: true, className: "formattingBarFocusZone" }, this.props.buttons)));
    };
    SPRteFormattingBar.prototype._clearTimeOut = function () {
        if (this._fadeFormatBarTimeOut) {
            clearTimeout(this._fadeFormatBarTimeOut);
            this._fadeFormatBarTimeOut = undefined;
        }
    };
    return SPRteFormattingBar;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var formattingbar_SPRteFormattingBar = (SPRteFormattingBar_SPRteFormattingBar);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/a11y/RteA11y.js + 1 modules
var RteA11y = __webpack_require__(61);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/formattingbar/SPRteLinkDialog.module.scss.js
__webpack_require__(211);
var styles = {
    LinkDialogContainer: 'LinkDialogContainer_61dc19be',
};
/* harmony default export */ var SPRteLinkDialog_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/formattingbar/SPRteLinkDialog.js






var SPRteLinkDialog_SPRteLinkDialog = (function (_super) {
    tslib_es6["__extends"](SPRteLinkDialog, _super);
    function SPRteLinkDialog(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isURLValid: true
        };
        return _this;
    }
    SPRteLinkDialog.prototype.render = function () {
        var _a = this.props, editorElement = _a.editorElement, isOpen = _a.isOpen, onDismiss = _a.onDismiss, onCancelClicked = _a.onCancelClicked, textFieldValue = _a.textFieldValue, selectedText = _a.selectedText, onUnlink = _a.onUnlink;
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["Dialog"], { isOpen: isOpen, type: office_ui_fabric_react_bundle_["DialogType"].normal, onDismiss: onDismiss, title: RteStrings_resx["a" /* default */].LinkDialogTitle, isBlocking: true, elementToFocusOnDismiss: editorElement, containerClassName: SPRteLinkDialog_module_scss.LinkDialogContainer },
            external__react_["createElement"](office_ui_fabric_react_bundle_["TextField"], tslib_es6["__assign"]({ label: RteStrings_resx["a" /* default */].LinkDialogTextFieldLabel, ariaLabel: RteStrings_resx["a" /* default */].LinkDialogTextFieldAriaLabel, onChanged: this._handleTextFieldChange, onGetErrorMessage: this._getErrorMessage, onKeyDown: this._handleKeyDown, defaultValue: textFieldValue, componentRef: this._resolveRef('_textField'), "data-automation-id": "linkDialogTextField" }, { placeholder: SPRteLinkDialog.http } )),
            external__react_["createElement"](office_ui_fabric_react_bundle_["TextField"], { label: RteStrings_resx["a" /* default */].LinkDialogDisplayTextFieldLabel, ariaLabel: RteStrings_resx["a" /* default */].LinkDialogDisplayTextFieldLabel, onKeyDown: this._handleKeyDown, defaultValue: selectedText, componentRef: this._resolveRef('_displayTextField'), "data-automation-id": "displayTextField" }),
            external__react_["createElement"](office_ui_fabric_react_bundle_["DialogFooter"], null,
                external__react_["createElement"](office_ui_fabric_react_bundle_["PrimaryButton"], { disabled: !this.state.isURLValid, onClick: this._handleSaveClicked, ariaLabel: RteStrings_resx["a" /* default */].RichTextLinkDialogSaveButtonLabel, "data-automation-id": "confirmLinkDialogButton", text: RteStrings_resx["a" /* default */].RichTextLinkDialogSaveButtonLabel }),
                textFieldValue !== SPRteLinkDialog.http &&
                    textFieldValue !== '' && (external__react_["createElement"](office_ui_fabric_react_bundle_["DefaultButton"], { onClick: onUnlink, "data-automation-id": "removeLinkButton", text: RteStrings_resx["a" /* default */].FormattingBarUnlinkButtonTitle })),
                external__react_["createElement"](office_ui_fabric_react_bundle_["DefaultButton"], { onClick: onCancelClicked, ariaLabel: RteStrings_resx["a" /* default */].RichTextLinkDialogCancelButtonLabel, "data-automation-id": "cancelLinkDialogButton", text: RteStrings_resx["a" /* default */].RichTextLinkDialogCancelButtonLabel }))));
    };
    SPRteLinkDialog.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (this._textField && this.props.isOpen && !this._initCursorSet) {
            this._async.setTimeout(function () {
                _this._initCursorSet = true;
                _this._textField.select();
                var textValue = _this._textField.value;
                if (textValue) {
                    _this._textField.setSelectionStart(textValue.length);
                    _this._textField.setSelectionEnd(textValue.length);
                }
                _this._textField.focus();
            }, 300);
        }
        else if (!this.props.isOpen) {
            this._initCursorSet = false;
        }
    };
    SPRteLinkDialog.prototype.componentWillReceiveProps = function (newProps) {
        if (this.props.textFieldValue !== newProps.textFieldValue) {
            this.state = {
                isURLValid: this._isURLValid(newProps.textFieldValue)
            };
        }
    };
    Object.defineProperty(SPRteLinkDialog.prototype, "textFieldValue", {
        get: function () {
            var url = '';
            if (this._textField) {
                url = this._textField.value;
                if (!this._hasProtocol(url)) {
                    url = "" + SPRteLinkDialog.http + url;
                }
            }
            return url;
        },
        enumerable: true,
        configurable: true
    });
    SPRteLinkDialog.prototype._getErrorMessage = function () {
        return !this._isURLValid(this.textFieldValue) && this.textFieldValue !== SPRteLinkDialog.http
            ? RteStrings_resx["a" /* default */].LinkDialogErrorNotSupportedLink
            : '';
    };
    SPRteLinkDialog.prototype._handleKeyDown = function (evt) {
        if (Object(RteA11y["b" /* isEnter */])(evt) && this._isURLValid(this.textFieldValue)) {
            this._onSaveClicked();
            evt.stopPropagation();
            evt.preventDefault();
        }
    };
    SPRteLinkDialog.prototype._handleSaveClicked = function () {
        if (this._isURLValid(this.textFieldValue)) {
            this._onSaveClicked();
        }
    };
    SPRteLinkDialog.prototype._onSaveClicked = function () {
        this.props.onSaveClicked(this._displayTextField.value);
    };
    SPRteLinkDialog.prototype._handleTextFieldChange = function () {
        this.setState({
            isURLValid: this._isURLValid(this.textFieldValue)
        });
    };
    SPRteLinkDialog.prototype._hasProtocol = function (url) {
        var hasProtocolRegex = new RegExp('^([A-Za-z0-9]+:(//)?|#|/|\\\\).+', 'i');
        return hasProtocolRegex.test(url);
    };
    SPRteLinkDialog.prototype._isURLValid = function (url) {
        return this.props.validationRegex.test(url);
    };
    SPRteLinkDialog.http = 'http://';
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteLinkDialog.prototype, "_getErrorMessage", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteLinkDialog.prototype, "_handleKeyDown", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteLinkDialog.prototype, "_handleSaveClicked", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteLinkDialog.prototype, "_onSaveClicked", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteLinkDialog.prototype, "_handleTextFieldChange", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteLinkDialog.prototype, "_isURLValid", null);
    return SPRteLinkDialog;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var formattingbar_SPRteLinkDialog = (SPRteLinkDialog_SPRteLinkDialog);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKTextEditor.js + 5 modules
var CKTextEditor = __webpack_require__(60);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbarButton/ToolbarButton.js
var ToolbarButton = __webpack_require__(30);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbarSubMenu/ToolbarSubmenu.js
var ToolbarSubmenu = __webpack_require__(105);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/BaseRte.scss.js
var BaseRte_scss = __webpack_require__(213);
var BaseRte_scss_default = /*#__PURE__*/__webpack_require__.n(BaseRte_scss);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/BaseRte.js
/* unused harmony export CREATE_EDITOR_MONITOR */
/* unused harmony export CREATE_EDITOR_MONITOR_FAILURE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseRte_BaseRte; });



















var CLICK_ACTION = '.Click';
var BUTTON_NAME = 'Button';
var CREATE_EDITOR_MONITOR = 'CreateNewEditor';
var CREATE_EDITOR_MONITOR_FAILURE = 'EditorFailedToLoad';
var CREATE_EDITOR_MONITOR_EXPECTED = 'CanvasUnmounted';
var Format;
(function (Format) {
    Format["Undo"] = "undo";
    Format["Redo"] = "redo";
    Format["ClearFormatting"] = "clearFormatting";
    Format["Bold"] = "bold";
    Format["Italic"] = "italic";
    Format["Underline"] = "underline";
    Format["Bullet"] = "bullet";
    Format["List"] = "list";
    Format["AlignLeft"] = "alignLeft";
    Format["AlignCenter"] = "alignCenter";
    Format["AlignRight"] = "alignRight";
    Format["Link"] = "link";
    Format["UnLink"] = "unlink";
    Format["NormalText"] = "normalText";
    Format["H2"] = "h2";
    Format["H3"] = "h3";
    Format["H4"] = "h4";
    Format["Blockquote"] = "blockquote";
    Format["Superscipt"] = "superscript";
    Format["Subscript"] = "subscript";
    Format["Justify"] = "justify";
    Format["Outdent"] = "outdent";
    Format["Indent"] = "indent";
    Format["Strike"] = "strike";
    Format["FontSize"] = "fontSize";
    Format["CustomTable"] = "customTable";
    Format["RowInserBefore"] = "rowInsertBefore";
    Format["RowInsertAfter"] = "rowInsertAfter";
    Format["ColumnInsertBefore"] = "columnInsertBefore";
    Format["ColumnInsertAfter"] = "columnInsertAfter";
    Format["RowDelete"] = "rowDelete";
    Format["ColumnDelete"] = "columnDelete";
    Format["TableDelete"] = "tableDelete";
    Format["TableCustomDelete"] = "tableCustomDelete";
    Format["FontColor"] = "fontColor";
    Format["HighlightColor"] = "highlightColor";
    Format["TableStyle"] = "tableStyle";
    Format["SimpleTableStyleTheme"] = "simpleTableStyleTheme";
    Format["BorderHeaderTableStyleTheme"] = "borderHeaderTableStyleTheme";
    Format["FilledHeaderTableStyleTheme"] = "filledHeaderTableStyleTheme";
    Format["BandedRowTableStyleTheme"] = "bandedRowTableStyleTheme";
    Format["BandedRowColumnTableStyleTheme"] = "bandedRowColumnTableStyleTheme";
    Format["SimpleTableStyleNeutral"] = "simpleTableStyleNeutral";
    Format["BorderHeaderTableStyleNeutral"] = "borderHeaderTableStyleNeutral";
    Format["FilledHeaderTableStyleNeutral"] = "filledHeaderTableStyleNeutral";
    Format["BandedRowTableStyleNeutral"] = "bandedRowTableStyleNeutral";
    Format["BandedRowColumnTableStyleNeutral"] = "bandedRowColumnTableStyleNeutral";
    Format["AlignTableLeft"] = "alignLeftTable";
    Format["AlignTableRight"] = "alignRightTable";
    Format["AlignTableCenter"] = "alignCenterTable";
})(Format = Format || (Format = {}));
var BaseRte_BaseRte = (function (_super) {
    tslib_es6["__extends"](BaseRte, _super);
    function BaseRte(props, rteOptions) {
        var _this = _super.call(this, props) || this;
        _this._initState();
        _this._options = _this.props.options || rteOptions;
        _this._config = _this._options.config;
        _this._restoreSelectionOnNextFocus = false;
        _this._buttonStates = new Map();
        _this._selectionInitiated = false;
        _this._selectionShouldEnd = false;
        _this._isRtl = document.documentElement.getAttribute('dir').toLowerCase() === 'rtl';
        if (_this.state.displayMode === sp_core_library_["DisplayMode"].Edit && !_this._editor) {
            _this._options.loader.loadModule();
        }
        _this._formatMap = new Map([
            [Format.Undo, _this._handleUndo],
            [Format.Redo, _this._handleRedo],
            [Format.ClearFormatting, _this._handleClearFormatting],
            [Format.Bold, _this._handleBold],
            [Format.Italic, _this._handleItalic],
            [Format.Underline, _this._handleUnderline],
            [Format.Bullet, _this._handleListBullets],
            [Format.List, _this._handleListNumbered],
            [Format.AlignLeft, _this._handleAlignLeft],
            [Format.AlignRight, _this._handleAlignRight],
            [Format.AlignCenter, _this._handleAlignCenter],
            [Format.Link, _this._handleLink],
            [Format.NormalText, _this._handlePlainText],
            [Format.H2, _this._handleHeading2],
            [Format.H3, _this._handleHeading3],
            [Format.H4, _this._handleHeading4],
            [Format.Blockquote, _this._handleQuote],
            [Format.Strike, _this._handleStrikeThrough],
            [Format.Subscript, _this._handleSubscript],
            [Format.Superscipt, _this._handleSuperscript],
            [Format.Justify, _this._handleJustify],
            [Format.Indent, _this._handleIndent],
            [Format.Outdent, _this._handleOutdent],
            [Format.FontSize, _this._handleFontSize],
            [Format.CustomTable, _this._handleTable],
            [Format.RowInserBefore, _this._handleTableCommands],
            [Format.RowInsertAfter, _this._handleTableCommands],
            [Format.ColumnInsertBefore, _this._handleTableCommands],
            [Format.ColumnInsertAfter, _this._handleTableCommands],
            [Format.RowDelete, _this._handleTableCommands],
            [Format.ColumnDelete, _this._handleTableCommands],
            [Format.TableDelete, _this._handleTableCommands],
            [Format.TableCustomDelete, _this._handleTableCommands],
            [Format.FontColor, _this._handleFontColor],
            [Format.HighlightColor, _this._handleHighlightColor],
            [Format.UnLink, _this._handleUnlinkCommand],
            [Format.SimpleTableStyleTheme, _this._handleTableStyles],
            [Format.BorderHeaderTableStyleTheme, _this._handleTableStyles],
            [Format.FilledHeaderTableStyleTheme, _this._handleTableStyles],
            [Format.BandedRowTableStyleTheme, _this._handleTableStyles],
            [Format.BandedRowColumnTableStyleTheme, _this._handleTableStyles],
            [Format.SimpleTableStyleNeutral, _this._handleTableStyles],
            [Format.BorderHeaderTableStyleNeutral, _this._handleTableStyles],
            [Format.FilledHeaderTableStyleNeutral, _this._handleTableStyles],
            [Format.BandedRowTableStyleNeutral, _this._handleTableStyles],
            [Format.BandedRowColumnTableStyleNeutral, _this._handleTableStyles],
            [Format.AlignTableCenter, _this._handleAlignTableCenter],
            [Format.AlignTableRight, _this._handleAlignTableRight],
            [Format.AlignTableLeft, _this._handleAlignTableLeft]
        ] );
        return _this;
    }
    BaseRte._preventEventDefaultBehaviour = function (evt) {
        evt.stopPropagation();
        evt.preventDefault();
    };
    BaseRte.prototype.getFormatHandler = function (format) {
        return this._formatMap.get(format);
    };
    BaseRte.prototype.render = function () {
        var formattingBar;
        var html;
        var className;
        if (this.state.displayMode === sp_core_library_["DisplayMode"].Read) {
            className = this._config.editorElementClassName + ' rte--read';
            html = this._previousHTML || this.props.innerHTML;
        }
        else if (this.state.displayMode === sp_core_library_["DisplayMode"].Edit) {
            className = 'rte--edit';
        }
        var isEditMode = this.state.displayMode === sp_core_library_["DisplayMode"].Edit;
        if (isEditMode && !this.state.isFormattingBarHidden) {
            formattingBar = (external__react_["createElement"](formattingbar_SPRteFormattingBar, { buttons: this._formattingBarButtons(), position: this.state.formattingBarPosition, onKeyDown: this._handleFormattingBarKeyDown, ref: this._resolveRef('_formattingbar') }));
        }
        var errorMessage = Flights["a" /* default */].isMultiImagePasteFlightEnabled()
            ? RteStrings_resx["a" /* default */].ImagesInTableNotSupported
            : RteStrings_resx["a" /* default */].ImagesWithTextNotSupported;
        return (external__react_["createElement"]("div", null,
            this.state.isContextMenuVisible && (external__react_["createElement"](office_ui_fabric_react_bundle_["ContextualMenu"], { shouldFocusOnMount: true, target: this.state.contextMenuTarget, onDismiss: this._onContextualMenuDismiss, directionalHint: this._isRtl ? 6  : 4 , items: this._contextMenuItems })),
            this.state.isImageWrappedWithText &&
                this.state.displayMode === sp_core_library_["DisplayMode"].Edit && (external__react_["createElement"](office_ui_fabric_react_bundle_["MessageBar"], { messageBarType: office_ui_fabric_react_bundle_["MessageBarType"].warning, ariaLabel: errorMessage, dismissButtonAriaLabel: lib["StringHelper"].format(RteStrings_resx["a" /* default */].CloseWarningText, errorMessage), onDismiss: this._onMessageBarDismiss }, errorMessage)),
            this.state.isPasteInProgress && external__react_["createElement"](office_ui_fabric_react_bundle_["Spinner"], { type: office_ui_fabric_react_bundle_["SpinnerType"].large, label: RteStrings_resx["a" /* default */].LoadingText }),
            external__react_["createElement"]("div", { "data-automation-id": "textBox", role: isEditMode ? 'textbox' : undefined, "aria-multiline": isEditMode || undefined, dangerouslySetInnerHTML: { __html: html }, className: className, onKeyUp: this._handleKeyUp, ref: this._resolveRef('_editorElement') }),
            formattingBar,
            !Flights["a" /* default */].isPagePickerEnabled() && (external__react_["createElement"](formattingbar_SPRteLinkDialog, { editorElement: this._editableDiv, isOpen: this.state.isLinkDialogOpen, onCancelClicked: this._closeLinkDialog.bind(this), onDismiss: this._closeLinkDialog.bind(this), onSaveClicked: this._onLinkDialogSaved, ref: this._resolveRef('_linkDialog'), textFieldValue: this._linkAddress || '', validationRegex: BaseRte._URL_VALIDATION_REGEX, selectedText: this.state.selectedText, onUnlink: this._handleUnlink }))));
    };
    BaseRte.prototype.componentWillMount = function () {
        window.addEventListener('load', this._onSPRteLoad);
    };
    BaseRte.prototype.componentDidMount = function () {
        if (this.state.displayMode === sp_core_library_["DisplayMode"].Edit) {
            this._initializeEditor(this.props.innerHTML || '', this.props.focusEditorOnMount, this._postEditorCreatedHandlerComplete);
        }
    };
    BaseRte.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.displayMode === sp_core_library_["DisplayMode"].Edit) {
            if (this._formattingbar) {
                this._formattingbarElement = external__react_dom_["findDOMNode"](this._formattingbar);
                this._formattingbarWidth = this._formattingbarElement.offsetWidth || this._formattingbarWidth;
            }
            else {
                this._formattingbarElement = undefined;
            }
        }
    };
    BaseRte.prototype.componentWillUnmount = function () {
        if (this._editor) {
            this._previousHTML = this._editor.destroy();
            this._editor = undefined;
            this._editorElement.removeEventListener('paste', this._onBeforePaste, true);
            this._editorElement.removeEventListener('keydown', this._handleKeyDown);
            document.removeEventListener('mouseup', this._checkSelectionChange);
            if (this._editableDiv) {
                this._editableDiv.removeAttribute('contenteditable');
                this._editableDiv.removeEventListener('focus', this._handleEditorFocus);
            }
            if (this._createNewEditorMonitor && !this._createNewEditorMonitor.hasEnded) {
                this._createNewEditorMonitor.writeExpectedFailure(CREATE_EDITOR_MONITOR_EXPECTED);
            }
        }
        window.removeEventListener('load', this._onSPRteLoad);
    };
    BaseRte.prototype.componentWillUpdate = function (nextProps, nextState) {
        if (this.state.displayMode !== nextState.displayMode) {
            if (nextState.displayMode === sp_core_library_["DisplayMode"].Edit) {
                this._initializeEditor(this._previousHTML || this.props.innerHTML || '', false, this._setButtonStates);
            }
            else if (nextState.displayMode === sp_core_library_["DisplayMode"].Read) {
                this.componentWillUnmount();
            }
        }
        else if (nextState.displayMode === sp_core_library_["DisplayMode"].Edit && this._editor) {
            this._setButtonStates();
        }
    };
    BaseRte.prototype.focusFormattingBar = function () {
        if (this._formattingbarElement) {
            Object(RteA11y["g" /* navigateInside */])(this._formattingbarElement);
        }
    };
    BaseRte.prototype.setDisplayMode = function (newMode) {
        if (this.state.displayMode !== newMode) {
            this.setState({
                displayMode: newMode,
                formattingBarPosition: undefined,
                isFormattingBarHidden: true,
                isLinkDialogOpen: false
            });
        }
    };
    BaseRte.prototype.serialize = function () {
        var serialization = JSON.parse(JSON.stringify(this.props, function (key, value) {
            if (key === BaseRte._SERVICESCOPE_PROP_KEY) {
                return undefined;
            }
            else {
                return value;
            }
        }));
        serialization.innerHTML = this._editor ? this._editor.getHTML() : this.props.innerHTML;
        if (this._editor) {
            serialization.editorType = this._editor.getEditorType();
        }
        return serialization;
    };
    Object.defineProperty(BaseRte.prototype, "config", {
        get: function () {
            return this._config;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype.isFormatActive = function (format) {
        if (format) {
            return this._isFormatActiveLocal(format.toString());
        }
        return false;
    };
    Object.defineProperty(BaseRte.prototype, "fontSizeStyle", {
        get: function () {
            if (this._editor) {
                return this._editor.appliedFontSize;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "fontColor", {
        get: function () {
            if (this._editor) {
                return this._editor.appliedFontColor;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "highlightColor", {
        get: function () {
            if (this._editor) {
                return this._editor.appliedHighlightColor;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "isTableContentsSelected", {
        get: function () {
            if (this._editor) {
                return this._editor.isTableContentsSelected;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "isLinkSelected", {
        get: function () {
            return !!(this._editor && this._editor.getSelectedLink());
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype.removeFontColorFormat = function () {
        this._applyFormat('fontColor', { fontColor: this._editor.noColor });
    };
    BaseRte.prototype.removeHighlightColor = function () {
        this._applyFormat('highlightColor', { highlightColor: this._editor.noColor });
    };
    BaseRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: undefined,
            isFormattingBarHidden: true,
            isLinkDialogOpen: false,
            selectedText: ''
        };
    };
    BaseRte.prototype.focus = function () {
        this._focusCore();
    };
    BaseRte.prototype._focusCore = function () {
        if (this._editor) {
            this._editor.focus();
        }
    };
    BaseRte.prototype._postEditorCreatedHandlerComplete = function () {
    };
    BaseRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, this._onImagePaste.bind(this), this._onPaste.bind(this), this._onContextualMenu.bind(this));
    };
    BaseRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._updateCurrentSelection();
        this._editorElement.addEventListener('paste', this._onBeforePaste, true);
        this._editorElement.addEventListener('keydown', this._handleKeyDown);
        document.addEventListener('mouseup', this._checkSelectionChange);
        this._editableDiv =
            this._editor.getEditorType() === 'CKEditor'
                ? this._editorElement
                : this._editorElement.querySelector('.ql-editor');
        if (this._editableDiv) {
            this._editableDiv.setAttribute('aria-label', RteStrings_resx["a" /* default */].RichTextEditorAriaLabel);
            this._editableDiv.setAttribute('title', RteStrings_resx["a" /* default */].RichTextEditorTitle);
            this._editableDiv.addEventListener('focus', this._handleEditorFocus);
            this._editableDiv.addEventListener('blur', this._handleEditorBlur);
        }
        if (!KillSwitches["a" /* default */].isPreInitPagePickerKillSwitchActivated()) {
            this._initPagePicker();
        }
    };
    BaseRte.prototype._openLinkDialog = function (defaultAddress) {
        var _this = this;
        if (defaultAddress === void 0) { defaultAddress = ''; }
        if (Flights["a" /* default */].isPagePickerEnabled()) {
            if (KillSwitches["a" /* default */].isPreInitPagePickerKillSwitchActivated() && !this._pagePickerPromise) {
                this._initPagePicker();
            }
            this._pagePickerPromise.then(function () {
                return _this._pagePicker.open({
                    title: _this._currentSelection ? _this._currentSelection.text : '',
                    url: defaultAddress,
                    shouldOpenInNewTab: _this._editor.getSelectedLinkAttribute('target') === '_blank'
                });
            });
        }
        else {
            this._linkAddress = defaultAddress !== '' ? defaultAddress : 'http://';
            this._updateSelectedText();
            this.setState({
                isLinkDialogOpen: true
            });
        }
    };
    BaseRte.prototype._closeLinkDialog = function () {
        this._restoreSelectionOnNextFocus = true;
        this._linkAddress = '';
        this.setState({
            isLinkDialogOpen: false
        });
    };
    BaseRte.prototype._initPagePicker = function () {
        var _this = this;
        if (Flights["a" /* default */].isPagePickerEnabled()) {
            this._pagePickerPromise = deferred_DeferredPagePicker.getInstance()
                .load()
                .then(function () {
                return (_this._pagePicker = deferred_DeferredPagePicker.getInstance().create({
                    onSelect: _this._handlePagePickerSave,
                    onUnlink: _this._handlePagePickerUnlink,
                    serviceScope: _this.props.serviceScope,
                    elementToFocusOnDismiss: _this._editorElement
                }));
            });
        }
    };
    BaseRte.prototype._updateCurrentSelection = function () {
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName('TextChange'), CLICK_ACTION);
        if (this.state.displayMode === sp_core_library_["DisplayMode"].Edit) {
            if (this._editor) {
                this._currentSelection = this._editor.getSelection() || this._currentSelection;
            }
        }
    };
    BaseRte.prototype._handleTextChange = function () {
        this._updateCurrentSelection();
    };
    BaseRte.prototype._finalizeAction = function (ariaActionName) {
        if (ariaActionName) {
            this._ariaConfirmAction(ariaActionName);
        }
        this._updateActiveButtons();
    };
    BaseRte.prototype._onImagePaste = function (isImageValid, imageBlob, innerHTML) {
        if (!isImageValid) {
            this.setState({ isImageWrappedWithText: true });
        }
        else {
            this.setState({ isImageWrappedWithText: false });
        }
    };
    BaseRte.prototype._onContextualMenu = function (isRightClicked, target) {
        this.setState({
            isContextMenuVisible: isRightClicked,
            contextMenuTarget: target
        });
    };
    BaseRte.prototype._onPaste = function (isPasteInProgress) {
        this.setState({ isPasteInProgress: isPasteInProgress });
    };
    BaseRte.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range && this._isRTESelected) {
        }
        else if (!range) {
            this._updateFormattingBar(true);
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    Object.defineProperty(BaseRte.prototype, "_isRTESelected", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._updateSelection = function (range, forceUpdate) {
        if (!this._currentSelection || this.state.isFormattingBarHidden) {
            this._currentSelection = range;
            this._updateFormattingBar(false);
        }
        else if (forceUpdate ||
            this._currentSelection.start !== range.start ||
            this._currentSelection.end !== range.end) {
            this._selectionInitiated = true;
            if (this._selectionShouldEnd) {
                this._currentSelection = range;
                this._updateFormattingBar(false);
                this._selectionInitiated = false;
            }
            this._selectionShouldEnd = false;
        }
    };
    BaseRte.prototype._restoreOnFocus = function () {
        var restore = false;
        if (this._restoreSelectionOnNextFocus && this._currentSelection) {
            this._restoreSelectionOnNextFocus = false;
            this._editor.setSelection(this._currentSelection);
            restore = true;
        }
        return restore;
    };
    BaseRte.prototype._onBeforePaste = function () {
    };
    BaseRte.prototype._handleKeyDown = function (evt) {
        if (Object(RteA11y["f" /* isTab */])(evt) || Object(RteA11y["e" /* isShiftTab */])(evt)) {
            BaseRte._preventEventDefaultBehaviour(evt);
            if (this._shouldIndentOnTab) {
                if (Object(RteA11y["f" /* isTab */])(evt)) {
                    this._handleIndent();
                }
                else if (Object(RteA11y["e" /* isShiftTab */])(evt)) {
                    this._handleOutdent();
                }
            }
        }
        else if (Object(RteA11y["d" /* isKey */])(121 , evt, true) && this._formattingbarElement) {
            sp_telemetry_["_EngagementLogger"].logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            Object(RteA11y["g" /* navigateInside */])(this._formattingbarElement);
            var screenReaderInstruction = lib["StringHelper"].format(RteStrings_resx["a" /* default */].RichTextNavigationAltF10Keys, RteStrings_resx["a" /* default */].ToolbarNavigationArrowKeys, RteStrings_resx["a" /* default */].ToolbarNavigationTabKeys);
            Object(RteA11y["a" /* ariaAlert */])(screenReaderInstruction);
            BaseRte._preventEventDefaultBehaviour(evt);
        }
        else if (Object(RteA11y["d" /* isKey */])('K'.charCodeAt(0), evt, false, true)) {
            this._handleLink();
            BaseRte._preventEventDefaultBehaviour(evt);
        }
    };
    BaseRte.prototype._handleLink = function () {
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName('link'), CLICK_ACTION);
        this._isSelectionChangeFromToolbar = true;
        this._currentSelection = this._editor.getSelection();
        if (Flights["a" /* default */].isPagePickerEnabled()) {
            this._openLinkDialog(this._editor.getSelectedLinkAttribute('href'));
        }
        else {
            this._openLinkDialog(this._editor.getSelectedLink());
        }
        this._updateActiveButtons();
    };
    BaseRte.prototype._handleFormattingBarKeyDown = function (evt) {
        if (Object(RteA11y["c" /* isEscape */])(evt)) {
            if (this._editableDiv && !this._editableDiv.isEqualNode(document.activeElement)) {
                this.focus();
                BaseRte._preventEventDefaultBehaviour(evt);
            }
        }
    };
    BaseRte.prototype._updateFormattingBar = function (isHidden) {
    };
    BaseRte.prototype._engagementLoggerClickTagName = function (key) {
        return this.TAG_NAME + key + BUTTON_NAME + CLICK_ACTION;
    };
    BaseRte.prototype._handleFormattingBarBlur = function (evt) {
        this._hideFormattingBarOnBlur(evt.relatedTarget);
    };
    BaseRte.prototype._formattingBarButtons = function () {
        var _this = this;
        var buttons = [
            external__react_["createElement"](ToolbarSubmenu["a" /* default */], { a11yManagerId: this.props.a11yManagerId, key: "format", buttons: this._formatSubmenuButtons, isOpen: this.state.currentSubmenuOpen === 'format', isWide: true, onOpen: function () {
                    _this._isSelectionChangeFromToolbar = true;
                    _this.setState({ currentSubmenuOpen: 'format' });
                }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('bold', this._handleBold))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('italic', this._handleItalic))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('underline', this._handleUnderline))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('bullet', this._handleListBullets))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('list', this._handleListNumbered))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('alignLeft', this._handleAlignLeft))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('alignCenter', this._handleAlignCenter))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('alignRight', this._handleAlignRight))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('link', this._handleLink))),
            external__react_["createElement"](ToolbarButton["b" /* default */], { key: "clearFormatting", canBeActive: false, fabricIconKey: "ClearFormatting", onClick: this._handleClearFormatting, title: RteStrings_resx["a" /* default */].FormattingBarClearFormattingButtonTitle, automationId: "clearFormatting-button", onBlur: this._handleFormattingBarBlur })
        ];
        return buttons;
    };
    Object.defineProperty(BaseRte.prototype, "_formatSubmenuButtons", {
        get: function () {
            var formatSubmenuButtons = [
                {
                    key: 'normalText',
                    canBeActive: true,
                    title: RteStrings_resx["a" /* default */].FormattingBarNormalTextButtonTitle,
                    label: RteStrings_resx["a" /* default */].FormattingBarNormalTextButtonTitle,
                    onClick: this._handlePlainText,
                    automationId: 'normalText-button'
                },
                this._getFormatButtonProps('h2', this._handleHeading2),
                this._getFormatButtonProps('h3', this._handleHeading3),
                this._getFormatButtonProps('h4', this._handleHeading4),
                this._getFormatButtonProps('blockquote', this._handleQuote)
            ];
            return formatSubmenuButtons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseRte.prototype, "_isPropertyPaneOpen", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._getFormatButtonProps = function (formatKey, onClick) {
        var format = this._config.formats.get(formatKey);
        var button = format.button;
        return {
            key: format.key,
            fabricIconKey: button.fabricIconKey,
            iconClassName: button.iconClassName,
            onClick: onClick,
            canBeActive: button.canBeActive,
            isActive: this._isFormatActiveLocal(format.key),
            disabled: this._buttonStates.get(format.key) === ToolbarButton["a" /* ButtonState */].Disabled,
            title: button.title,
            label: button.label,
            className: button.className,
            automationId: formatKey + '-button',
            onBlur: this._handleFormattingBarBlur
        };
    };
    BaseRte.prototype._isFormatActiveLocal = function (format) {
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            if (this._editor &&
                this.isTableContentsSelected &&
                this._editor.isTableStyleApplied(format) &&
                format.indexOf('TableStyle') !== -1) {
                return true;
            }
        }
        return this._buttonStates.get(format) === ToolbarButton["a" /* ButtonState */].Active;
    };
    BaseRte.prototype._handleCloseSubmenu = function (isDocumentClick) {
        this.setState({ currentSubmenuOpen: undefined });
        if (isDocumentClick) {
            this._updateFormattingBar(true);
        }
    };
    Object.defineProperty(BaseRte.prototype, "_contextMenuItems", {
        get: function () {
            var items = [
                this._getContextMenuItem(RteStrings_resx["a" /* default */].AddRowAboveText, Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled() ? 'InsertRowsAbove' : 'Up', 'rowInsertBefore', lib["StringHelper"].format(RteStrings_resx["a" /* default */].AddRowAboveShortcutText, RteStrings_resx["a" /* default */].AddRowAboveText)),
                this._getContextMenuItem(RteStrings_resx["a" /* default */].AddRowBelowText, Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled() ? 'InsertRowsBelow' : 'Down', 'rowInsertAfter', lib["StringHelper"].format(RteStrings_resx["a" /* default */].AddRowBelowShortcutText, RteStrings_resx["a" /* default */].AddRowBelowText)),
                this._getContextMenuItem(RteStrings_resx["a" /* default */].DeleteRowText, Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled() ? 'DeleteRows' : 'Trash', 'rowDelete', lib["StringHelper"].format(RteStrings_resx["a" /* default */].DeleteRowShortcutText, RteStrings_resx["a" /* default */].DeleteRowText))
            ];
            if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
                items.push(this._getContextMenuItem(RteStrings_resx["a" /* default */].AddColumnLeftText, 'InsertColumnsLeft', 'columnInsertBefore'));
                items.push(this._getContextMenuItem(RteStrings_resx["a" /* default */].AddColumnRightText, 'InsertColumnsRight', 'columnInsertAfter'));
                items.push(this._getContextMenuItem(RteStrings_resx["a" /* default */].DeleteColumnButtonLabel, 'DeleteColumns', 'columnDelete'));
                items.push(this._getContextMenuItem(RteStrings_resx["a" /* default */].DeleteTableButtonLabel, 'DeleteTable', 'tableCustomDelete'));
            }
            return items;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._getContextMenuItem = function (key, iconName, operation, title) {
        var _this = this;
        return {
            key: key,
            name: key,
            title: title ? title : key,
            iconProps: {
                iconName: iconName
            },
            onClick: function () {
                _this._editor.formatTable(operation, _this.state.contextMenuTarget);
            }
        };
    };
    Object.defineProperty(BaseRte.prototype, "_shouldIndentOnTab", {
        get: function () {
            return !this._editor.isTableContentsSelected;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._formatOrPrepare = function (formatKey) {
        this.focus();
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName(formatKey), CLICK_ACTION);
        var format = this._config.formats.get(formatKey);
        if (format.maskedBy) {
            for (var _i = 0, _a = format.maskedBy; _i < _a.length; _i++) {
                var maskingFormat = _a[_i];
                if (this._buttonStates.get(maskingFormat) === ToolbarButton["a" /* ButtonState */].Active) {
                    return;
                }
            }
        }
        var range = this._editor.getSelection();
        var _b = [range.start, range.end], start = _b[0], end = _b[1];
        var isApplied = this._editor.isFormatAppliedToRange(start, end, format);
        if (!(this._cleanupBeforeFormatting(start, end, format) && isApplied)) {
            var formats = {};
            formats[format.editorKey] = isApplied ? false : format.editorValue !== undefined ? format.editorValue : true;
            this._editor.format(start, end, formats);
            this._finalizeAction(formatKey);
        }
    };
    BaseRte.prototype._initializeEditor = function (innerHTML, startupFocus, onAfterInitialize) {
        var _this = this;
        if (!this._createNewEditorMonitor) {
            this._createNewEditorMonitor = new sp_telemetry_["_QosMonitor"](CREATE_EDITOR_MONITOR);
        }
        if (true) {
            this._createNewEditor(innerHTML, startupFocus)
                .then(function (editor) {
                if (_this.state.displayMode === sp_core_library_["DisplayMode"].Edit) {
                    _this._afterEditorCreated(editor);
                    onAfterInitialize();
                    _this._createNewEditorMonitor.writeSuccess();
                }
                else {
                    editor.destroy();
                    if (_this._editorElement) {
                        _this._editorElement.classList.add(BaseRte._CKEDITOR_CLASS);
                        _this._editorElement.removeAttribute('contenteditable');
                        _this._createNewEditorMonitor.writeExpectedFailure('DisplayMode Switched');
                    }
                }
            })
                .catch(function (error) {
                _this._createNewEditorMonitor.writeUnexpectedFailure(CREATE_EDITOR_MONITOR_FAILURE, error, {
                    innerHTML: _this.props.innerHTML
                });
            });
        }
    };
    BaseRte.prototype._onSPRteLoad = function (e) {
        if (this._config.editorElementClassName === BaseRte._CKEDITOR_CLASS &&
            !sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].tryParse('f4d628e3-3a01-46e7-8508-96db5caa18e6'), '11/16/2016', 'PreloadCKEditor')) {
            CKTextEditor["a" /* default */].preloadEditor(this._config);
        }
    };
    BaseRte.prototype._ariaConfirmAction = function (formatKeyOrName) {
        var format = this._config.formats.get(formatKeyOrName);
        var name = format ? format.button.title : formatKeyOrName;
        var message = lib["StringHelper"].format(RteStrings_resx["a" /* default */].FormattingBarConfirmAction, name);
        if (this._currentSelection &&
            this._currentSelection.start !== this._currentSelection.end &&
            !(format && format.isLine)) {
            var text = this._editor.getText(this._currentSelection);
            message = lib["StringHelper"].format(RteStrings_resx["a" /* default */].FormattingBarConfirmActionOnSelection, name, text);
        }
        Object(RteA11y["a" /* ariaAlert */])(message);
    };
    BaseRte.prototype._checkSelectionChange = function () {
        if (this._editor) {
            this._selectionShouldEnd = true;
            if (this._selectionInitiated) {
                var range = this._editor.getSelection();
                this._currentSelection = range;
                this._updateFormattingBar(false);
                this._selectionShouldEnd = false;
            }
            this._selectionInitiated = false;
        }
    };
    BaseRte.prototype._updateSelectedText = function () {
        if (this._currentSelection) {
            this.setState({ selectedText: this._currentSelection.text });
        }
    };
    BaseRte.prototype._handleClearFormatting = function () {
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName('ClearFormatting'), CLICK_ACTION);
        this.focus();
        var range = this._currentSelection;
        var _a = [range.start, range.end], start = _a[0], end = _a[1];
        this._editor.clearFormatting(start, end);
        this._finalizeAction(RteStrings_resx["a" /* default */].FormattingBarClearFormattingButtonTitle);
    };
    BaseRte.prototype._handleUndo = function () {
        this._formatOrPrepare('undo');
    };
    BaseRte.prototype._handleRedo = function () {
        this._formatOrPrepare('redo');
    };
    BaseRte.prototype._applyFormat = function (formatType, value, label) {
        if (this._editor && this._currentSelection) {
            var logEntry = new sp_diagnostics_["_LogEntry"]('RTE', formatType, sp_diagnostics_["_LogType"].Event, {
                value: value[formatType]
            });
            sp_telemetry_["_EngagementLogger"].logEventWithLogEntry(logEntry);
            this.focus();
            this._editor.format(this._currentSelection.start, this._currentSelection.end, value);
            this._finalizeAction(label);
        }
    };
    BaseRte.prototype._handleFontSize = function (config) {
        this._applyFormat(config.format, config.value, RteStrings_resx["a" /* default */].FontSizeDropDownLabel);
    };
    BaseRte.prototype._handleFontColor = function (config) {
        this._applyFormat(config.format, config.value, RteStrings_resx["a" /* default */].FontColorLabel);
    };
    BaseRte.prototype._handleHighlightColor = function (config) {
        this._applyFormat(config.format, config.value, RteStrings_resx["a" /* default */].HightlightLabel);
    };
    BaseRte.prototype._handleAlignCenter = function () {
        this._formatOrPrepare('alignCenter');
    };
    BaseRte.prototype._handleAlignLeft = function () {
        this._formatOrPrepare(this._isRtl ? 'alignRight' : 'alignLeft');
    };
    BaseRte.prototype._handleAlignRight = function () {
        this._formatOrPrepare(this._isRtl ? 'alignLeft' : 'alignRight');
    };
    BaseRte.prototype._handleAlignTableCenter = function () {
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            this._applyFormat(Format.AlignTableCenter, { alignCenterTable: "alignCenter"  });
        }
    };
    BaseRte.prototype._handleAlignTableLeft = function () {
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            this._applyFormat(Format.AlignTableLeft, { alignLeftTable: "alignLeft"  });
        }
    };
    BaseRte.prototype._handleAlignTableRight = function () {
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            this._applyFormat(Format.AlignTableRight, { alignRightTable: "alignRight"  });
        }
    };
    BaseRte.prototype._handleBold = function () {
        this._formatOrPrepare('bold');
    };
    BaseRte.prototype._handleHeading2 = function () {
        this._clearFormatting();
        this._formatOrPrepare('h2');
    };
    BaseRte.prototype._handleHeading3 = function () {
        this._clearFormatting();
        this._formatOrPrepare('h3');
    };
    BaseRte.prototype._handleHeading4 = function () {
        this._clearFormatting();
        this._formatOrPrepare('h4');
    };
    BaseRte.prototype._clearFormatting = function () {
        this._handleClearFormatting();
    };
    BaseRte.prototype._handleItalic = function () {
        this._formatOrPrepare('italic');
    };
    BaseRte.prototype._handleListBullets = function () {
        this._formatOrPrepare('bullet');
    };
    BaseRte.prototype._handleListNumbered = function () {
        this._formatOrPrepare('list');
    };
    BaseRte.prototype._handleStrikeThrough = function () {
        this._formatOrPrepare('strike');
    };
    BaseRte.prototype._handleSuperscript = function () {
        this._formatOrPrepare('superscript');
    };
    BaseRte.prototype._handleSubscript = function () {
        this._formatOrPrepare('subscript');
    };
    BaseRte.prototype._handleJustify = function () {
        this._formatOrPrepare('justify');
    };
    BaseRte.prototype._handleIndent = function () {
        this._formatOrPrepare('indent');
    };
    BaseRte.prototype._handleOutdent = function () {
        this._formatOrPrepare('outdent');
    };
    BaseRte.prototype._handleTable = function (config) {
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName(config.format), CLICK_ACTION);
        this._editor.format(this._currentSelection.start, this._currentSelection.end, config.value);
    };
    BaseRte.prototype._handleTableCommands = function (config) {
        this._formatOrPrepare(config.format);
    };
    BaseRte.prototype._handleTableStyles = function (config) {
        this._applyFormat(config.format, config.value);
    };
    BaseRte.prototype._handleUnlinkCommand = function () {
        if (Flights["a" /* default */].isPagePickerEnabled()) {
            this._handlePagePickerUnlink();
        }
        else {
            this._handleUnlink();
        }
    };
    BaseRte.prototype._handlePlainText = function () {
        this.focus();
        this._clearFormatting();
        if (this._currentSelection) {
            var blockStyles = this._config.supportedFormatsArray.filter(function (format) {
                return format.isBlockStyle;
            });
            this._cleanupBeforeFormatting(this._currentSelection.start, this._currentSelection.end, blockStyles[0]);
            this._finalizeAction();
        }
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName('PlainText'), CLICK_ACTION);
    };
    BaseRte.prototype._handleQuote = function () {
        this._clearFormatting();
        this._formatOrPrepare('blockquote');
    };
    BaseRte.prototype._handleUnderline = function () {
        this._formatOrPrepare('underline');
    };
    BaseRte.prototype._handleUnlink = function () {
        this.focus();
        sp_telemetry_["_EngagementLogger"].logEvent(this._engagementLoggerClickTagName('Unlink'), CLICK_ACTION);
        if (this._currentSelection) {
            this._editor.format(this._currentSelection.start, this._currentSelection.end, { link: false });
            this._finalizeAction(RteStrings_resx["a" /* default */].FormattingBarUnlinkButtonTitle);
        }
        this._closeLinkDialog();
    };
    BaseRte.prototype._cleanupBeforeFormatting = function (start, end, newFormat) {
        var formatsToClear = {};
        if (newFormat.isBlockStyle) {
            var blockStyles = this._config.supportedFormatsArray.filter(function (format) {
                return format.isBlockStyle;
            });
            for (var _i = 0, blockStyles_1 = blockStyles; _i < blockStyles_1.length; _i++) {
                var format = blockStyles_1[_i];
                formatsToClear[format.editorKey] = false;
            }
        }
        if (newFormat.masks) {
            for (var _a = 0, _b = newFormat.masks; _a < _b.length; _a++) {
                var maskedFormatKey = _b[_a];
                formatsToClear[this._config.formats.get(maskedFormatKey).editorKey] = false;
            }
        }
        this._editor.format(start, end, formatsToClear, true);
        return formatsToClear.hasOwnProperty(newFormat.editorKey);
    };
    BaseRte.prototype._onMessageBarDismiss = function () {
        this.setState({ isImageWrappedWithText: false });
    };
    BaseRte.prototype._onContextualMenuDismiss = function () {
        this.setState({ isContextMenuVisible: false });
    };
    BaseRte.prototype._onLinkDialogSaved = function (displayText) {
        if (this._linkDialog.textFieldValue) {
            this._editor.format(this._currentSelection.start, this._currentSelection.end, {
                link: this._linkDialog.textFieldValue,
                linkText: displayText
            });
        }
        this._linkElement = undefined;
        this._finalizeAction(RteStrings_resx["a" /* default */].FormattingBarLinkButtonTitle);
        this._closeLinkDialog();
    };
    BaseRte.prototype._handlePagePickerSave = function (link) {
        this._editor.format(this._currentSelection.start, this._currentSelection.end, {
            link: link.url,
            linkText: link.title,
            shouldOpenInNewTab: link.shouldOpenInNewTab
        });
        Object(RteA11y["a" /* ariaAlert */])(lib["StringHelper"].format(RteStrings_resx["a" /* default */].RTEPagePickerSaveAction, link.title));
        this._restoreSelectionOnNextFocus = true;
    };
    BaseRte.prototype._handlePagePickerUnlink = function () {
        if (this._currentSelection) {
            var linkText = this._currentSelection.text || '';
            this._editor.format(this._currentSelection.start, this._currentSelection.end, { link: false });
            Object(RteA11y["a" /* ariaAlert */])(lib["StringHelper"].format(RteStrings_resx["a" /* default */].RTEPagePickerUnlinkAction, linkText));
        }
        this._restoreSelectionOnNextFocus = true;
    };
    BaseRte.prototype._handleEditorFocus = function (evt) {
        this._restoreOnFocus();
    };
    BaseRte.prototype._handleEditorBlur = function (evt) {
        var _this = this;
        this._async.setTimeout(function () {
            return _this._hideFormattingBarOnBlur(evt.relatedTarget);
        }, 100);
    };
    BaseRte.prototype._hideFormattingBarOnBlur = function (target) {
        var elem = target;
        if ((this._editorElement && this._editorElement.contains(elem)) ||
            (this._formattingbarElement && this._formattingbarElement.contains(elem)) ||
            this._isPropertyPaneOpen ||
            (elem && elem.className === 'ControlZone ControlZone--edit ControlZone--selected')) {
            return;
        }
        else {
            this._updateFormattingBar(true);
        }
    };
    BaseRte.prototype._handleKeyUp = function (evt) {
        this._checkSelectionChange();
        this._updateActiveButtons();
    };
    BaseRte.prototype._setButtonStates = function () {
        var range = this._editor.getSelection();
        if (range) {
            var updatedFormats = new Map();
            for (var _i = 0, _a = this._config.supportedFormatsArray; _i < _a.length; _i++) {
                var format = _a[_i];
                updatedFormats.set(format.key, false);
            }
            var maskingFormats = this._config.supportedFormatsArray.filter(function (format) {
                return !!format.masks;
            });
            for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
                var maskingFormat = maskingFormats_1[_b];
                if (!updatedFormats.get(maskingFormat.key)) {
                    var isActive = this._editor.isFormatAppliedToRange(range.start, range.end, maskingFormat);
                    this._buttonStates.set(maskingFormat.key, isActive ? ToolbarButton["a" /* ButtonState */].Active : ToolbarButton["a" /* ButtonState */].Normal);
                    updatedFormats.set(maskingFormat.key, true);
                    if (isActive) {
                        for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                            var maskedFormat = _d[_c];
                            this._buttonStates.set(maskedFormat, ToolbarButton["a" /* ButtonState */].Disabled);
                            updatedFormats.set(maskedFormat, true);
                        }
                    }
                }
            }
            for (var _e = 0, _f = this._config.supportedFormatsArray; _e < _f.length; _e++) {
                var format = _f[_e];
                if (!updatedFormats.get(format.key)) {
                    var isActive = this._editor.isFormatAppliedToRange(range.start, range.end, format);
                    this._buttonStates.set(format.key, isActive ? ToolbarButton["a" /* ButtonState */].Active : ToolbarButton["a" /* ButtonState */].Normal);
                }
            }
        }
        if (this._isRtl) {
            var left = this._buttonStates.get('alignLeft');
            this._buttonStates.set('alignLeft', this._buttonStates.get('alignRight'));
            this._buttonStates.set('alignRight', left);
        }
    };
    BaseRte.prototype._updateActiveButtons = function () {
        this.forceUpdate();
    };
    BaseRte._URL_VALIDATION_REGEX = new RegExp('((^https?://)|(^ftp://)|(^file://)|(^mailto:)|(^news:)|(^pnm://)|(^mms://)|(^/)|(^#)|(^\\\\)).+', 'i');
    BaseRte._SERVICESCOPE_PROP_KEY = 'serviceScope';
    BaseRte._CKEDITOR_CLASS = 'cke_editable';
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "removeFontColorFormat", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "removeHighlightColor", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_postEditorCreatedHandlerComplete", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_initPagePicker", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_onContextualMenu", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleSelectionChange", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_updateSelection", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_onBeforePaste", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleKeyDown", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleLink", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleFormattingBarKeyDown", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"] 
    ], BaseRte.prototype, "_handleFormattingBarBlur", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_getFormatButtonProps", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleCloseSubmenu", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_getContextMenuItem", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_onSPRteLoad", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_checkSelectionChange", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleClearFormatting", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleUndo", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleRedo", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleFontSize", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleFontColor", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleHighlightColor", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleAlignCenter", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleAlignLeft", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleAlignRight", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleAlignTableCenter", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleAlignTableLeft", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleAlignTableRight", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleBold", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleHeading2", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleHeading3", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleHeading4", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleItalic", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleListBullets", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleListNumbered", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleStrikeThrough", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleSuperscript", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleSubscript", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleJustify", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleIndent", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleOutdent", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleTable", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleTableCommands", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleTableStyles", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleUnlinkCommand", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handlePlainText", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleQuote", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleUnderline", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleUnlink", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_onMessageBarDismiss", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_onContextualMenuDismiss", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_onLinkDialogSaved", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handlePagePickerSave", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handlePagePickerUnlink", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleEditorFocus", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleEditorBlur", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_handleKeyUp", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], BaseRte.prototype, "_setButtonStates", null);
    return BaseRte;
}(office_ui_fabric_react_bundle_["BaseComponent"]));



/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return canvasA11yClasses; });
/* harmony export (immutable) */ __webpack_exports__["c"] = getControlZoneA11yId;
/* harmony export (immutable) */ __webpack_exports__["b"] = getCanvasZoneA11yId;
var canvasA11yClasses = {
    toolboxHint: 'ToolboxHint'
};
function getControlZoneA11yId(controlId) {
    return "ControlZone_" + controlId;
}
function getCanvasZoneA11yId(zoneIndex) {
    return "CanvasZone_" + zoneIndex;
}


/***/ }),
/* 51 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_51__;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(92)
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(29), exports);


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(24);
var CaughtError_event_1 = __webpack_require__(37);
var ResultTypeEnum_1 = __webpack_require__(35);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
exports.QosError = SingleEventBase_1.createSingleEvent({
    eventName: 'QosError,CaughtError,Trace,',
    shortEventName: 'QosError',
    critical: true
}, {
    name: {
        isKey: true,
        type: 1 /* String */
    },
    resultCode: 1 /* String */,
    resultType: {
        typeRef: ResultTypeEnum_1.ResultTypeEnum,
        type: 6 /* Enum */
    }
}, CaughtError_event_1.CaughtError);


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(24);
var Trace_event_1 = __webpack_require__(82);
exports.Verbose = SingleEventBase_1.createSingleEvent({
    eventName: 'Verbose,Trace,',
    shortEventName: 'Verbose',
    requiresParent: false
}, {
    name: {
        isKey: true,
        type: 1 /* String */
    }
}, Trace_event_1.Trace);


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This is a function you can call to safely serialize anything to JSON.
 * The built-in JSON.stringify() throws an exception for circular references and can't handle
 * many built-ins such as HTMLElements and the global window object.
 */
function safeSerialize(obj) {
    var str;
    try {
        var seenObjects_1 = [];
        str = JSON.stringify(obj, function (key, value) {
            if (value === window) {
                return '[window]';
            }
            else if (value instanceof HTMLElement) {
                return '[HTMLElement]';
            }
            else if (typeof value === 'function') {
                return '[function]';
            }
            else if (typeof value === 'object') {
                if (value === null) {
                    return value;
                }
                else if (seenObjects_1.indexOf(value) === -1) {
                    seenObjects_1.push(value);
                    return value;
                }
                else {
                    return '[circular]';
                }
            }
            else {
                return value;
            }
        });
    }
    catch (err) {
        // Note: we make this be a JSON string, so that consumers
        // can always call JSON.parse.
        str = JSON.stringify('[object]');
    }
    return str;
}
exports.safeSerialize = safeSerialize;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var PlatformDetection_1 = __webpack_require__(147);
exports.default = PlatformDetection_1.PlatformDetection;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(75)
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(33), exports);
var Manager_1 = __webpack_require__(33);
exports.default = Manager_1.Manager;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isSPFeatureEnabled(feature, expFeatures) {
    var result = !!feature.Fallback;
    var odb = feature.ODB;
    if (typeof odb === 'boolean') {
        result = odb;
    }
    else if (odb > 0) {
        var elem = Math.floor(odb / 32);
        var mask = 1 << (odb % 32);
        result = (elem < expFeatures.length) &&
            (expFeatures[elem] & mask) !== 0;
    }
    return result;
}
exports.isSPFeatureEnabled = isSPFeatureEnabled;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DisposalChain = /** @class */ (function () {
    function DisposalChain(owner) {
        this._callbacks = [];
        this._owner = owner;
    }
    DisposalChain.prototype.addCallback = function (callback) {
        this._callbacks.push(callback);
    };
    DisposalChain.prototype.dispose = function () {
        // Handle dispose callbacks is the reverse order from when they were attached.
        while (this._callbacks.length) {
            var callback = this._callbacks.pop();
            callback.call(this._owner);
        }
    };
    return DisposalChain;
}());
/**
 * Determines whether not an object requires is disposable.
 *
 * @export
 * @template T
 * @param {(T | IDisposable)} object
 * @returns {object is IDisposable}
 */
function isDisposable(object) {
    return typeof object.dispose === 'function';
}
exports.isDisposable = isDisposable;
function hook(instance, onDispose) {
    var disposable = instance;
    var dispose = disposable.dispose;
    var disposalChain = typeof dispose === 'function' && dispose.disposalChain;
    if (!disposalChain) {
        disposalChain = new DisposalChain(disposable);
        var disposeHook = (function () {
            disposalChain.dispose();
            if (dispose) {
                // Restore the old dispose method and clean up modifications.
                disposable.dispose = dispose;
                disposable.dispose();
            }
        });
        disposable.dispose = disposeHook;
        disposeHook.disposalChain = disposalChain;
    }
    disposalChain.addCallback(onDispose);
    return disposable;
}
exports.hook = hook;


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/dompurify/1.0.7/node_modules/dompurify/dist/purify.js
var purify = __webpack_require__(196);
var purify_default = /*#__PURE__*/__webpack_require__.n(purify);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-safehtml/lib/SafeHtml.js

var SafeHtml_config = {
    ADD_TAGS: ['iframe']
};
var uriWhitelist = ['http', 'https', 'ftp', 'mailto', 'pnm', 'mms', 'news'];
var regex = RegExp('^(' + uriWhitelist.join('|') + '):', 'gim');
var SafeHtml_SafeHtml = (function () {
    function SafeHtml() {
    }
    SafeHtml.clean = function (unsafeHtml) {
        SafeHtml._sanitizeLinks();
        return purify["sanitize"](unsafeHtml, SafeHtml_config);
    };
    SafeHtml._sanitizeLinks = function () {
        purify["addHook"]('afterSanitizeAttributes', function (node) {
            var anchor = document.createElement('a');
            if (node.hasAttribute('href')) {
                anchor.href = node.getAttribute('href'); 
                if (anchor.protocol && !anchor.protocol.match(regex)) {
                    node.removeAttribute('href');
                }
            }
            if (node.hasAttribute('action')) {
                anchor.href = node.getAttribute('action'); 
                if (anchor.protocol && !anchor.protocol.match(regex)) {
                    node.removeAttribute('action');
                }
            }
            if (node.hasAttribute('xlink:href')) {
                anchor.href = node.getAttribute('xlink:href'); 
                if (anchor.protocol && !anchor.protocol.match(regex)) {
                    node.removeAttribute('xlink:href');
                }
            }
        });
    };
    return SafeHtml;
}());


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-safehtml/lib/index.js


// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKLoader.js


var CKEDITOR_PATH_KEY = 'CKEDITOR_BASEPATH';
var CKLoader_CKLoader = (function () {
    function CKLoader() {
    }
    CKLoader._setup = function (editor) {
        CKLoader._editorModule = editor;
        CKEDITOR.disableAutoInline = true;
    };
    CKLoader.prototype.loadModule = function (editorSrc) {
        if (false) {
            return Promise.resolve(undefined);
        }
        if (!CKLoader._editorPromise) {
            var externalCKEditorFlightEnabled = Flights["a" /* default */].isExternalCKEditorFlightEnabled();
            var path = 'sp-ckeditor';
            if (externalCKEditorFlightEnabled) {
                path = 'sp-ckeditor-flight';
            }
            var editorPath = editorSrc;
            if (!editorPath) {
                editorPath = __webpack_require__.p;
                if (!editorPath.match(/\/$/)) {
                    editorPath += '/';
                }
                editorPath += path + "/";
            }
            window[CKEDITOR_PATH_KEY] = editorPath;
            if (externalCKEditorFlightEnabled) {
                CKLoader._editorPromise = __webpack_require__.e/* import() */(5).then(__webpack_require__.bind(null, 502));
            }
            else {
                CKLoader._editorPromise = __webpack_require__.e/* import() */(6).then(__webpack_require__.bind(null, 503));
            }
            CKLoader._editorPromise.then(function (editor) {
                CKLoader._setup(editor);
                return editor;
            });
            CKLoader._editorPromise.catch(function (error) {
                sp_diagnostics_["_TraceLogger"].logError(CKLoader.logSource, error);
            });
        }
        return CKLoader._editorPromise;
    };
    CKLoader.logSource = sp_diagnostics_["_LogSource"].create('SPRteCKLoader');
    return CKLoader;
}());
/* harmony default export */ var ckeditor_CKLoader = (CKLoader_CKLoader);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKTextEditor.scss.js
var CKTextEditor_scss = __webpack_require__(197);
var CKTextEditor_scss_default = /*#__PURE__*/__webpack_require__.n(CKTextEditor_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/common/ImageUtilities.js
function Base64MimeType(encoded) {
    var result = undefined;
    var mime = encoded.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);
    if (mime && mime.length) {
        result = mime[1];
    }
    return result;
}
function Base64toBlob(b64Data, contentType) {
    if (contentType === void 0) { contentType = ''; }
    var sliceSize = 512;
    var byteCharacters = atob(b64Data);
    var byteArrays = [];
    var length = byteCharacters.length;
    var byteNumbers;
    for (var offset = 0; offset < length; offset += sliceSize) {
        var slice = byteCharacters.slice(offset, offset + sliceSize);
        byteNumbers = [];
        for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
        }
        var byteArray = new Uint8Array(byteNumbers);
        byteArrays.push(byteArray);
        byteNumbers.length = 0;
    }
    var blob = new Blob(byteArrays, { type: contentType });
    return blob;
}

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/loc/RteStrings.resx.js
var RteStrings_resx = __webpack_require__(19);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(12);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKTableHelpers.js



var CKTableHelpers_CKTableHelpers = (function () {
    function CKTableHelpers() {
    }
    CKTableHelpers.selectTable = function (editor, table) {
        sp_core_library_["Validate"].isNotNullOrUndefined(table, 'table');
        var selection = editor && editor.getSelection();
        if (selection) {
            selection.selectElement(table);
        }
    };
    CKTableHelpers.insertTableAfterWrapper = function (startElement, outerDiv, parent, editor) {
        sp_core_library_["Validate"].isNotNullOrUndefined(startElement, 'startElement');
        sp_core_library_["Validate"].isNotNullOrUndefined(outerDiv, 'outerDiv');
        sp_core_library_["Validate"].isNotNullOrUndefined(editor, 'editor');
        if (parent) {
            outerDiv.insertAfter(parent);
            CKTableHelpers.insertExtraParagraph(outerDiv);
        }
        else if (startElement && startElement.hasClass(CKTableHelpers.tableWrapperDivClass)) {
            outerDiv.insertAfter(startElement);
            CKTableHelpers.insertExtraParagraph(outerDiv);
        }
        else {
            editor.insertElement(outerDiv);
            CKTableHelpers.insertExtraParagraph(outerDiv);
        }
    };
    CKTableHelpers.insertExtraParagraph = function (outerDiv) {
        sp_core_library_["Validate"].isNotNullOrUndefined(outerDiv, 'outerDiv');
        var extraParagraph = new CKEDITOR.dom.element('p');
        var paragraphContent = new CKEDITOR.dom.element('br');
        paragraphContent.appendTo(extraParagraph);
        extraParagraph.insertBefore(outerDiv);
    };
    CKTableHelpers.constructTableComponentOnLoad = function (tableList, editor) {
        sp_core_library_["Validate"].isNotNullOrUndefined(tableList, 'tableList');
        sp_core_library_["Validate"].isNotNullOrUndefined(editor, 'editor');
        for (var tableListIndex = 0; tableListIndex < tableList.count(); tableListIndex++) {
            var table = tableList.getItem(tableListIndex);
            var outerDiv = CKTableHelpers.findParent(table, CKTableHelpers.canvasRteResponsiveTableClassName);
            if (!outerDiv) {
                outerDiv = new CKEDITOR.dom.element('div');
                outerDiv.addClass(CKTableHelpers.canvasRteResponsiveTableClassName);
                table.appendTo(outerDiv);
            }
            if (!table) {
                return;
            }
            table.setAttribute('title', RteStrings_resx["a" /* default */].TableTitle);
            var tableWrapper = table.getParent();
            if ((tableWrapper && !tableWrapper.hasClass(CKTableHelpers.tableWrapperDivClass)) || !tableWrapper) {
                outerDiv = CKTableHelpers.wrapTableInDiv(table, outerDiv);
            }
        }
    };
    CKTableHelpers.wrapTableInDiv = function (table, outerDiv) {
        sp_core_library_["Validate"].isNotNullOrUndefined(table, 'table');
        sp_core_library_["Validate"].isNotNullOrUndefined(outerDiv, 'outerDiv');
        var tableWrapperDiv = CKTableHelpers.generateWrappers(CKTableHelpers.tableWrapperDivClass);
        table.appendTo(tableWrapperDiv);
        tableWrapperDiv.appendTo(outerDiv);
        return outerDiv;
    };
    CKTableHelpers.generateWrappers = function (className) {
        var wrapper = new CKEDITOR.dom.element('div');
        wrapper.addClass(className);
        wrapper.setHtml('');
        return wrapper;
    };
    CKTableHelpers.setTableStyle = function (table, styleType, colorSuffix, editor) {
        sp_core_library_["Validate"].isNotNullOrUndefined(table, 'table');
        sp_core_library_["Validate"].isNotNullOrUndefined(styleType, 'styleType');
        sp_core_library_["Validate"].isNotNullOrUndefined(colorSuffix, 'color');
        CKTableHelpers._removeTableStyles(table, "Theme" );
        CKTableHelpers._removeTableStyles(table, "Neutral" );
        var tableStyleClassName;
        var boldHeader = true;
        switch (styleType) {
            case "borderHeaderTableStyle" :
                tableStyleClassName = CKTableHelpers.borderHeaderTableStyle;
                break;
            case "filledHeaderTableStyle" :
                tableStyleClassName = CKTableHelpers.filledHeaderTableStyle;
                break;
            case "bandedRowTableStyle" :
                tableStyleClassName = CKTableHelpers.bandedRowTableStyle;
                break;
            case "bandedRowColumnTableStyle" :
                tableStyleClassName = CKTableHelpers.bandedRowColumnTableStyle;
                break;
            default:
                tableStyleClassName = CKTableHelpers.simpleTableStyle;
                boldHeader = false;
                break;
        }
        tableStyleClassName += colorSuffix;
        table.addClass(tableStyleClassName);
        CKTableHelpers._setTableRowTextStyle(editor, table, boldHeader);
    };
    CKTableHelpers.setTableAlignment = function (editor, alignType) {
        var table = editor && editor.elementPath() && editor.elementPath().contains('table', true);
        sp_core_library_["Validate"].isNotNullOrUndefined(table, 'table');
        var ascendant = CKTableHelpers.findParent(table, CKTableHelpers.tableWrapperDivClass);
        if (ascendant) {
            var tableAlignClasses = [
                CKTableHelpers.tableCenterAlign,
                CKTableHelpers.tableLeftAlign,
                CKTableHelpers.tableRightAlign
            ];
            CKTableHelpers._removeAllClassesFromList(tableAlignClasses, ascendant);
            var alignClass = void 0;
            switch (alignType) {
                case "alignCenter" :
                    alignClass = CKTableHelpers.tableCenterAlign;
                    break;
                case "alignLeft" :
                    alignClass = CKTableHelpers.tableLeftAlign;
                    break;
                case "alignRight" :
                    alignClass = CKTableHelpers.tableRightAlign;
                    break;
            }
            ascendant.addClass(alignClass);
        }
    };
    CKTableHelpers.setAlignTableCommandState = function (element, className, command) {
        sp_core_library_["Validate"].isNotNullOrUndefined(command, 'command');
        if (element) {
            var ascendant = CKTableHelpers.findParent(element, CKTableHelpers.tableWrapperDivClass);
            if (ascendant && ascendant.hasClass(className)) {
                command.setState(CKEDITOR.TRISTATE_ON);
            }
            else {
                command.setState(CKEDITOR.TRISTATE_OFF);
            }
        }
        else {
            command.setState(CKEDITOR.TRISTATE_OFF);
        }
    };
    CKTableHelpers.findParent = function (element, className) {
        sp_core_library_["Validate"].isNotNullOrUndefined(element, 'element');
        var parent = element.getParent();
        while (parent) {
            if (parent.hasClass(className)) {
                return parent;
            }
            parent = parent.getParent();
        }
        return parent;
    };
    CKTableHelpers._removeTableStyles = function (table, color) {
        var tableStyleClasses = [
            CKTableHelpers.simpleTableStyle + color,
            CKTableHelpers.borderHeaderTableStyle + color,
            CKTableHelpers.filledHeaderTableStyle + color,
            CKTableHelpers.bandedRowTableStyle + color,
            CKTableHelpers.bandedRowColumnTableStyle + color
        ];
        CKTableHelpers._removeAllClassesFromList(tableStyleClasses, table);
    };
    CKTableHelpers._removeAllClassesFromList = function (classList, element) {
        classList.forEach(function (className) {
            element.$.classList.remove(className);
        });
    };
    CKTableHelpers._setTableRowTextStyle = function (editor, table, boldHeader) {
        sp_core_library_["Validate"].isNotNullOrUndefined(editor, 'editor');
        sp_core_library_["Validate"].isNotNullOrUndefined(table, 'table');
        var selection = editor.getSelection();
        if (selection) {
            var preStylingSelectedRange = Object(sp_lodash_subset_["cloneDeep"])(selection.getRanges());
            var tableBody = table.getFirst();
            var tableRow = tableBody && tableBody.getFirst();
            if (!tableRow) {
                return;
            }
            selection.selectElement(tableRow);
            if (document.queryCommandState('bold') && !boldHeader) {
                document.execCommand('bold', false);
            }
            else if (!document.queryCommandState('bold') && boldHeader) {
                editor.execCommand('bold');
            }
            if (preStylingSelectedRange) {
                selection.selectRanges(preStylingSelectedRange);
            }
        }
    };
    CKTableHelpers.canvasRteTableClassName = 'canvasRteTable';
    CKTableHelpers.canvasRteResponsiveTableClassName = 'canvasRteResponsiveTable';
    CKTableHelpers.tableWrapperDivClass = 'tableWrapper';
    CKTableHelpers.tableCenterAlign = 'tableCenterAlign';
    CKTableHelpers.tableLeftAlign = 'tableLeftAlign';
    CKTableHelpers.tableRightAlign = 'tableRightAlign';
    CKTableHelpers.simpleTableStyle = 'simpleTableStyle';
    CKTableHelpers.borderHeaderTableStyle = 'borderHeaderTableStyle';
    CKTableHelpers.filledHeaderTableStyle = 'filledHeaderTableStyle';
    CKTableHelpers.bandedRowTableStyle = 'bandedRowTableStyle';
    CKTableHelpers.bandedRowColumnTableStyle = 'bandedRowColumnTableStyle';
    return CKTableHelpers;
}());
/* harmony default export */ var ckeditor_CKTableHelpers = (CKTableHelpers_CKTableHelpers);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKTextEditor.js













var CKTextEditor_CKTextEditor = (function () {
    function CKTextEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack) {
        this._config = config;
        this._editorElement = editorElement;
        this._handleSelectionChange = selectionChangeCallback;
        this._handleTextChange = textChangeCallback;
        this._onReadyCallback = onReadyCallback;
        this._startupFocus = startUpFocus;
        this._onImagePasteCallBack = onImagePasteCallBack;
        this._onPasteCallback = onPasteCallback;
        this._onContextMenuCallBack = onContextMenuCallBack;
        this._extraPlugins = 'justify,tableresize,indentblock';
        this._async = new office_ui_fabric_react_bundle_["Async"](this);
        if (sp_core_library_["_BrowserDetection"].getBrowserInformation().browser === 4 ) {
            this._handleSelectionChange = this._async.debounce(this._handleSelectionChange, 100);
        }
        this._initialize(currentHTML);
        this._blockStyles = this._config.supportedFormatsArray.filter(function (format) {
            return format.isBlockStyle;
        });
    }
    CKTextEditor.preloadEditor = function (config) {
        try {
            CKTextEditor.moduleLoader.loadModule(config.editorSource);
        }
        catch (error) {
            sp_diagnostics_["_TraceLogger"].logError(CKTextEditor.logSource, error);
        }
    };
    CKTextEditor.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack) {
        return new Promise(function (resolve) {
            CKTextEditor.moduleLoader
                .loadModule(config.editorSource)
                .then(function () {
                var editor = new CKTextEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () {
                    resolve(editor);
                }, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack);
            })
                .catch(function (error) {
                sp_diagnostics_["_TraceLogger"].logError(CKTextEditor.logSource, error);
            });
        });
    };
    CKTextEditor._isExternalImage = function (src) {
        return src && src.indexOf('file://') === -1;
    };
    CKTextEditor._getSelectedLink = function (editor) {
        var selection = editor.getSelection();
        var selectedElement = selection.getSelectedElement();
        if (!selectedElement || !selectedElement.is('a')) {
            var ranges = selection.getRanges();
            if (ranges && ranges.length) {
                ranges[0].shrink(CKEDITOR.SHRINK_TEXT);
                selectedElement = editor.elementPath(ranges[0].getCommonAncestor()).contains('a', true);
            }
        }
        return selectedElement;
    };
    CKTextEditor._getSelectedText = function (editor) {
        var sel = editor.getSelection();
        if (sel) {
            var startElement = sel.getStartElement();
            if (startElement) {
                var startElementValue = startElement.$;
                if (startElement && startElement.getName() === 'a') {
                    return startElementValue.innerText;
                }
            }
            return sel.getSelectedText();
        }
    };
    CKTextEditor._isImagePastedInsideTableWithMultiplePasteEnabled = function (firstString, secondString) {
        return !!((firstString.match(CKTextEditor._TABLE_REGEX_WITHOUT_CLOSING_TAG) &&
            !firstString.match(CKTextEditor._TABLE_REGEX_WITHOUT_OPENING_TAG)) ||
            (!secondString.match(CKTextEditor._TABLE_REGEX_WITHOUT_CLOSING_TAG) &&
                secondString.match(CKTextEditor._TABLE_REGEX_WITHOUT_OPENING_TAG)));
    };
    CKTextEditor._stripOutImageSource = function (content, imageSrc) {
        return content.replace(imageSrc, '');
    };
    CKTextEditor.prototype.clearFormatting = function (start, end) {
        this.format(start, end, { removeFormat: true });
        var sel = this._editor.getSelection();
        if (sel) {
            var ckRange = sel.getRanges();
            var range = { start: 0, end: 0 };
            if (ckRange && ckRange.length > 0) {
                range.start = ckRange[0].startOffset;
                range.end = ckRange[0].endOffset;
                range.text = CKTextEditor._getSelectedText(this._editor);
                var formatsToClear = {};
                for (var _i = 0, _a = this._blockStyles; _i < _a.length; _i++) {
                    var format = _a[_i];
                    formatsToClear[format.editorKey] = false;
                }
                this.format(start, end, formatsToClear, true);
            }
        }
    };
    CKTextEditor.prototype.destroy = function () {
        this._editorElement.removeEventListener('keyup', this._fakeSelectionChange);
        this._editorElement.removeEventListener('mouseup', this._fakeSelectionChange);
        var data = this._editor.getData();
        this._editor.destroy();
        return data;
    };
    CKTextEditor.prototype.focus = function () {
        this._editor.focus();
    };
    CKTextEditor.prototype.getSelectedLink = function () {
        var selectedLink = CKTextEditor._getSelectedLink(this._editor);
        if (selectedLink && selectedLink.$) {
            return selectedLink.$.getAttribute('href');
        }
        else {
            return '';
        }
    };
    CKTextEditor.prototype.getSelectedLinkAttribute = function (attribute) {
        var selectedLink = CKTextEditor._getSelectedLink(this._editor);
        if (selectedLink && selectedLink.$) {
            return selectedLink.$.getAttribute(attribute);
        }
        else {
            return null; 
        }
    };
    Object.defineProperty(CKTextEditor.prototype, "isTableSelected", {
        get: function () {
            var sel = this._editor.getSelection();
            var startElement = sel && sel.getStartElement();
            return Boolean(startElement && startElement.getName() === 'table');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "isTableContentsSelected", {
        get: function () {
            var sel = this._editor.getSelection();
            var startElement = sel && sel.getStartElement();
            return Boolean(startElement && startElement.getAscendant('table'));
        },
        enumerable: true,
        configurable: true
    });
    CKTextEditor.prototype.isTableStyleApplied = function (className) {
        var sel = this._editor.getSelection();
        var startElement = sel && sel.getStartElement();
        var table = startElement && startElement.getAscendant('table');
        return Boolean(table && table.hasClass(className));
    };
    CKTextEditor.prototype.format = function (start, end, formats, applyAllFormatsToLine) {
        for (var formatKey in formats) {
            var command = this._editor.getCommand(formatKey);
            if (command) {
                if (formats[formatKey] !== (command.state === CKEDITOR.TRISTATE_ON)) {
                    if (formatKey === 'link') {
                        if (formats[formatKey] === false) {
                            this._editor.execCommand(formatKey, formats[formatKey]);
                        }
                        else {
                            this._editor.execCommand(formatKey, {
                                linkValue: formats[formatKey],
                                linkText: formats[CKTextEditor._TEXT_FORMAT_KEY],
                                shouldOpenInNewTab: formats[CKTextEditor._TAB_FORMAT_KEY]
                            });
                        }
                    }
                    else {
                        this._editor.execCommand(formatKey, formats[formatKey]);
                    }
                }
            }
        }
    };
    CKTextEditor.prototype.formatTable = function (format, target) {
        var command = this._editor.getCommand(format);
        var sel = this._editor.getSelection();
        var temp = CKEDITOR.dom.element.get(target);
        if (sel) {
            sel.selectElement(temp);
            this._editor.selectionChange(true);
            if (!(sel.getStartElement() && sel.getStartElement().getAscendant('table'))) {
                return;
            }
        }
        if (command) {
            command.enable();
            command.exec(format);
        }
    };
    CKTextEditor.prototype.getBounds = function (position) {
        var left = 0, top = 0;
        var selection = window.getSelection();
        if (selection && selection.rangeCount > 0) {
            var range = selection.getRangeAt(0);
            var selectionRect = range && range.getBoundingClientRect();
            if (selectionRect) {
                var editorRect = this._editorElement.getBoundingClientRect();
                left = selectionRect.left - editorRect.left;
                top = selectionRect.top - editorRect.top;
            }
        }
        return { left: left, top: top };
    };
    CKTextEditor.prototype.getFormatValue = function (start, end, format) {
        if (format.key === 'link') {
            var selectedLink = CKTextEditor._getSelectedLink(this._editor);
            return selectedLink ? selectedLink.getAttribute('href') : false;
        }
        return false;
    };
    CKTextEditor.prototype.getSelection = function () {
        var sel = this._editor.getSelection();
        if (sel) {
            var ranges = sel ? sel.getRanges() : undefined;
            if (ranges && ranges.length) {
                if (this._editor.element.contains(ranges[0].getCommonAncestor())) {
                    this._lastSelectedRanges = ranges;
                }
                return {
                    start: ranges[0].startOffset,
                    end: ranges[0].endOffset,
                    text: CKTextEditor._getSelectedText(this._editor)
                };
            }
        }
        return undefined;
    };
    CKTextEditor.prototype.getText = function (range) {
        return this._editor.getData();
    };
    CKTextEditor.prototype.getHTML = function () {
        return this._editor.getData();
    };
    CKTextEditor.prototype.getEditorType = function () {
        return 'CKEditor';
    };
    CKTextEditor.prototype.isFormatAppliedToRange = function (start, end, format) {
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            this._updateTableAlignCommandState();
        }
        var command = this._editor.getCommand(format.editorKey);
        return command && command.state === CKEDITOR.TRISTATE_ON;
    };
    CKTextEditor.prototype.onReady = function (callback) {
        this._onReadyCallback = callback;
    };
    CKTextEditor.prototype.setSelection = function (range) {
        this.focus();
        var sel = this._editor.getSelection();
        if (sel) {
            if (this._lastSelectedRanges) {
                sel.selectRanges(this._lastSelectedRanges);
            }
            else {
                var ckRange = sel.getRanges();
                if (ckRange && ckRange.length > 0 && range.start !== -1) {
                    ckRange[0].startOffset = range.start;
                    ckRange[0].endOffset = range.end;
                    try {
                        sel.selectRanges(ckRange);
                    }
                    catch (error) {
                        sp_diagnostics_["_TraceLogger"].logError(CKTextEditor.logSource, error);
                    }
                }
            }
        }
    };
    Object.defineProperty(CKTextEditor.prototype, "appliedFontSize", {
        get: function () {
            var fontSizeStr = this._getCssPropertyValue('font-size');
            if (fontSizeStr) {
                var fontArr = fontSizeStr && fontSizeStr.split('px');
                if (fontArr) {
                    return fontArr[0];
                }
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "appliedFontColor", {
        get: function () {
            return this._appliedPropertyValue('color');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "noColor", {
        get: function () {
            return 'noColor';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "appliedHighlightColor", {
        get: function () {
            return this._appliedPropertyValue('background-color');
        },
        enumerable: true,
        configurable: true
    });
    CKTextEditor.prototype._initialize = function (currentHTML) {
        this._editorElement.contentEditable = 'true';
        var pluginsToBeRemoved = 'menubutton,scayt,liststyle,magicline,link,tableselection';
        var config = {
            allowedContent: 'strong b em i u h2 h3 h4 blockquote ul ol li a[href, target, data-interception];\
        p h2 h3 h4 li(ql-align-*,ql-indent-*,quote-true); *{text-align}',
            on: {
                change: this._handleTextChange,
                selectionChange: this._handleSelectionChangeConvert
            },
            removePlugins: pluginsToBeRemoved,
            extraPlugins: 'justify',
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: this._startupFocus
        };
        config.allowedContent = {
            'strong b em i u s sub sup': true,
            'p h2 h3 h4 blockquote ul ol li': {
                styles: 'text-align, margin-left, margin-right'
            },
            a: {
                attributes: '!href, target, data-interception'
            },
            span: {
                classes: 'fontSizeSmall, fontSizeMedium, fontSizeMediumPlus, fontSizeLarge, fontSizeXLarge,\
          fontSizeXLargePlus, fontSizeXxLarge, fontSizeXxxLarge, fontSizeXxLargePlus, fontSizeSuper,\
          fontColorRedDark, fontColorRed, fontColorYellow, fontColorYellowLight, fontColorGreenLight,\
          fontColorGreen, fontColorBlueLight, fontColorBlue, fontColorBlueDark, fontColorPurple,\
          fontColorNeutralDark, fontColorNeutralPrimary, fontColorNeutralPrimaryAlt, fontColorNeutralSecondary,\
          fontColorNeutralTertiary, fontColorThemeDarker, fontColorThemeDark,\
          fontColorThemeDarkAlt, fontColorThemePrimary, fontColorThemeSecondary,\
          highlightColorYellow, highlightColorGreen, highlightColorAqua, highlightColorMagenta,\
          highlightColorBlue, highlightColorRed, highlightColorDarkBlue, highlightColorTeal,\
          highlightColorDarkGreen, highlightColorPurple, highlightColorMaroon, highlightColorGold,\
          highlightColorDarkGrey, highlightColorGrey, highlightColorBlack'
            }
        };
        if (Flights["a" /* default */].isMultiImagePasteFlightEnabled()) {
            config.allowedContent = tslib_es6["__assign"]({}, config.allowedContent, { img: {
                    attributes: 'src'
                } });
        }
        var allowedStyles = 'width,border,line-height,margin-bottom,margin-top;\
          ,margin-left,margin-right,font-size,border-bottom,border-left;\
          border-top,border-right,text-align';
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            config.extraAllowedContent = {
                'tbody thead tfoot tr th td caption col colgroup footer': true,
                table: {
                    attributes: 'width,border,cellpadding,cellspacing,align',
                    styles: '*',
                    classes: [
                        ckeditor_CKTableHelpers.canvasRteTableClassName,
                        'simpleTableStyleTheme,borderHeaderTableStyleTheme,filledHeaderTableStyleTheme,bandedRowTableStyleTheme,\
            bandedRowColumnTableStyleTheme,simpleTableStyleNeutral,borderHeaderTableStyleNeutral,\
            filledHeaderTableStyleNeutral,bandedRowTableStyleNeutral,bandedRowColumnTableStyleNeutral'
                    ].join(',')
                },
                tr: {
                    attributes: 'height,rowspan,colspan,align',
                    styles: allowedStyles
                },
                td: {
                    attributes: 'width,colspan,rowspan,align,valign',
                    styles: allowedStyles
                },
                th: {
                    attributes: 'align,valign',
                    styles: allowedStyles
                },
                'td p': {
                    attributes: 'align',
                    styles: 'text-align'
                },
                'th p': {
                    attributes: 'align',
                    styles: 'text-align'
                },
                div: {
                    classes: [
                        ckeditor_CKTableHelpers.canvasRteResponsiveTableClassName,
                        ckeditor_CKTableHelpers.tableWrapperDivClass,
                        ckeditor_CKTableHelpers.tableLeftAlign,
                        ckeditor_CKTableHelpers.tableCenterAlign,
                        ckeditor_CKTableHelpers.tableRightAlign
                    ].join(','),
                    styles: 'display'
                }
            };
        }
        else {
            config.extraAllowedContent = {
                'tbody thead tfoot tr th td caption col colgroup footer': true,
                table: {
                    attributes: 'width,border,cellpadding,cellspacing,align',
                    styles: '*'
                },
                tr: {
                    attributes: 'height,rowspan,colspan,align',
                    styles: allowedStyles
                },
                td: {
                    attributes: 'width,colspan,rowspan,align,valign',
                    styles: allowedStyles
                },
                th: {
                    attributes: 'align,valign',
                    styles: allowedStyles
                },
                'td p': {
                    attributes: 'align',
                    styles: 'text-align'
                },
                'th p': {
                    attributes: 'align',
                    styles: 'text-align'
                },
                div: {
                    classes: ckeditor_CKTableHelpers.canvasRteResponsiveTableClassName
                }
            };
        }
        config.keystrokes = [
            [CKEDITOR.CTRL + CKEDITOR.SHIFT + 68, 'rowDelete'],
            [CKEDITOR.CTRL + CKEDITOR.SHIFT + 65, 'rowInsertBefore'],
            [CKEDITOR.CTRL + CKEDITOR.SHIFT + 90, 'rowInsertAfter'] 
        ];
        config.enableContextMenu = false;
        config.disallowedContent = 'script; *[on*]';
        config.extraPlugins = this._extraPlugins;
        config.disableNativeSpellChecker = false;
        this._editor = CKEDITOR.inline(this._editorElement, config);
        this._editor.setData(currentHTML);
        this._addCustomToolbarCommands();
    };
    CKTextEditor.prototype._addCustomToolbarCommands = function () {
        var _this = this;
        this._editor.addCommand('unlink', {
            exec: function (editor) {
                var linkStyle = new CKEDITOR.style({
                    element: 'a',
                    type: CKEDITOR.STYLE_INLINE,
                    alwaysRemoveElement: 1
                });
                editor.removeStyle(linkStyle);
                return true;
            }
        });
        this._editor.addCommand('link', {
            contextSensitive: true,
            exec: function (editor, data) {
                if (!data || (!data.linkText && !data.linkValue)) {
                    editor.execCommand('unlink');
                }
                else {
                    var elem = CKTextEditor._getSelectedLink(editor);
                    if (elem) {
                        elem.setAttribute('href', data.linkValue);
                        elem.setAttribute('data-cke-saved-href', data.linkValue);
                        elem.setText(data.linkText);
                        elem.setAttribute('target', '_blank');
                        if (Flights["a" /* default */].isPagePickerEnabled()) {
                            elem.setAttribute('data-interception', data.shouldOpenInNewTab ? 'off' : 'on');
                            elem.setAttribute('target', data.shouldOpenInNewTab ? '_blank' : '_self');
                        }
                    }
                    else {
                        var shouldOpenInNewTabProps = {};
                        if (Flights["a" /* default */].isPagePickerEnabled()) {
                            shouldOpenInNewTabProps = {
                                target: data.shouldOpenInNewTab ? '_blank' : '_self',
                                'data-interception': data.shouldOpenInNewTab ? 'off' : 'on'
                            };
                        }
                        var linkStyle = new CKEDITOR.style({
                            name: 'link',
                            element: 'a',
                            type: CKEDITOR.STYLE_INLINE,
                            attributes: tslib_es6["__assign"]({ href: data.linkValue, target: '_blank' }, shouldOpenInNewTabProps)
                        });
                        if (CKTextEditor._getSelectedText(editor) !== data.linkText || data.linkText === '') {
                            var element = new CKEDITOR.dom.element('a');
                            if (data.linkText && data.linkText !== '') {
                                element.setText(data.linkText);
                            }
                            else {
                                element.setText(data.linkValue);
                            }
                            element.setAttributes(tslib_es6["__assign"]({ href: data.linkValue, target: '_blank' }, shouldOpenInNewTabProps));
                            editor.insertElement(element);
                        }
                        else {
                            editor.applyStyle(linkStyle);
                        }
                    }
                }
                return true;
            },
            refresh: function (editor, path) {
                var element = path.lastElement && path.lastElement.getAscendant('a', true);
                if (element && element.getName() === 'a' && element.getAttribute('href') && element.getChildCount()) {
                    this.setState(CKEDITOR.TRISTATE_ON);
                }
                else {
                    this.setState(CKEDITOR.TRISTATE_OFF);
                }
            }
        });
        this._editor.addCommand('fontSize', {
            contextSensitive: true,
            exec: function (editor, size) {
                var mappedValue = CKTextEditor._fontSizeMap.get(size);
                var sizeStyle = new CKEDITOR.style({
                    element: 'span',
                    attributes: { class: "fontSize" + mappedValue },
                    overrides: [{ element: 'span', attributes: { class: /^fontSize/ } }]
                });
                editor.applyStyle(sizeStyle);
                return true;
            }
        });
        this._editor.addCommand('customTable', {
            exec: function (editor, tableData) {
                var table = new CKEDITOR.dom.element('table');
                var tbody = new CKEDITOR.dom.element('tbody');
                var tr = new CKEDITOR.dom.element('tr');
                var outerDiv = new CKEDITOR.dom.element('div');
                outerDiv.addClass(ckeditor_CKTableHelpers.canvasRteResponsiveTableClassName);
                for (var j = 0; j < tableData.columns; ++j) {
                    var td = new CKEDITOR.dom.element('td');
                    var br = new CKEDITOR.dom.element('br');
                    br.appendTo(td);
                    td.appendTo(tr);
                }
                tr.appendTo(tbody);
                for (var i = 1; i < tableData.rows; ++i) {
                    var trCopy = tr.clone(true, true);
                    trCopy.appendTo(tbody);
                }
                tbody.appendTo(table);
                if (!Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
                    table.appendTo(outerDiv);
                    editor.insertElement(outerDiv);
                }
                else {
                    table.setAttribute('title', RteStrings_resx["a" /* default */].TableTitle);
                    outerDiv = ckeditor_CKTableHelpers.wrapTableInDiv(table, outerDiv);
                    var selection = editor.getSelection();
                    if (selection) {
                        var startElement = selection.getStartElement();
                        var parent_1 = ckeditor_CKTableHelpers.findParent(startElement, ckeditor_CKTableHelpers.tableWrapperDivClass);
                        ckeditor_CKTableHelpers.insertTableAfterWrapper(startElement, outerDiv, parent_1, editor);
                    }
                    else {
                        ckeditor_CKTableHelpers.insertExtraParagraph(outerDiv);
                        editor.insertElement(outerDiv);
                    }
                }
                return true;
            }
        });
        if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
            this._editor.addCommand('tableCustomDelete', {
                exec: function (editor) {
                    var editorElementPath = editor && editor.elementPath();
                    var table = editorElementPath && editorElementPath.contains('table', true);
                    if (table) {
                        var parent_2 = ckeditor_CKTableHelpers.findParent(table, ckeditor_CKTableHelpers.tableWrapperDivClass);
                        if (parent_2) {
                            parent_2.$.outerHTML = '';
                        }
                        else {
                            parent_2.$.outerHTML = '';
                        }
                    }
                    return true;
                }
            });
            this._editor.addCommand('tableStyle', {
                contextSensitive: true,
                exec: function (editor, styleData) {
                    var editorElementPath = editor && editor.elementPath();
                    var table = editorElementPath && editorElementPath.contains('table', true);
                    ckeditor_CKTableHelpers.setTableStyle(table, styleData.tableStyle, styleData.styleColor, editor);
                    return true;
                }
            });
            this._editor.addCommand('alignCenterTable', {
                contextSensitive: true,
                exec: function (editor, alignType) {
                    ckeditor_CKTableHelpers.setTableAlignment(editor, alignType);
                    return true;
                }
            });
            this._editor.addCommand('alignRightTable', {
                contextSensitive: true,
                exec: function (editor, alignType) {
                    ckeditor_CKTableHelpers.setTableAlignment(editor, alignType);
                    return true;
                }
            });
            this._editor.addCommand('alignLeftTable', {
                contextSensitive: true,
                exec: function (editor, alignType) {
                    ckeditor_CKTableHelpers.setTableAlignment(editor, alignType);
                    return true;
                }
            });
        }
        this._editor.addCommand('fontColor', {
            contextSensitive: true,
            exec: function (editor, fontColor) {
                if (fontColor === _this.noColor) {
                    editor.execCommand('removeFontColor');
                }
                else {
                    var colorStyle = new CKEDITOR.style({
                        element: 'span',
                        attributes: { class: "fontColor" + fontColor },
                        overrides: [{ element: 'span', attributes: { class: /^fontColor/ } }]
                    });
                    editor.applyStyle(colorStyle);
                }
                return true;
            },
            refresh: function (editor, path) {
                var element = path.lastElement;
                if (element.getComputedStyle('color')) {
                    editor.getCommand('fontColor').setState(CKEDITOR.TRISTATE_ON);
                }
                else {
                    editor.getCommand('fontColor').setState(CKEDITOR.TRISTATE_OFF);
                }
            }
        });
        this._editor.addCommand('removeFontColor', {
            exec: function (editor) {
                var colorStyle = new CKEDITOR.style({
                    element: 'span',
                    attributes: { class: /^fontColor/ },
                    overrides: [{ element: 'span', attributes: { class: /^fontColor/ } }]
                });
                editor.removeStyle(colorStyle);
                return true;
            }
        });
        this._editor.addCommand('highlightColor', {
            contextSensitive: true,
            exec: function (editor, color) {
                if (color === _this.noColor) {
                    editor.execCommand('removeHighlightColor');
                }
                else {
                    var colorStyle = new CKEDITOR.style({
                        element: 'span',
                        attributes: { class: "highlightColor" + color },
                        overrides: [{ element: 'span', attributes: { class: /^highlightColor/ } }]
                    });
                    editor.applyStyle(colorStyle);
                    return true;
                }
            }
        });
        this._editor.addCommand('removeHighlightColor', {
            contextSensitive: true,
            exec: function (editor, color) {
                var colorStyle = new CKEDITOR.style({
                    element: 'span',
                    attributes: { class: /^highlightColor/ },
                    overrides: [{ element: 'span', attributes: { class: /^highlightColor/ } }]
                });
                editor.removeStyle(colorStyle);
                return true;
            }
        });
        this._editor.addCommand('heading2', this._getHeadingCommandDefinition('h2'));
        this._editor.addCommand('heading3', this._getHeadingCommandDefinition('h3'));
        this._editor.addCommand('heading4', this._getHeadingCommandDefinition('h4'));
        this._editor.on('blur', this._handleSelectionChangeConvert);
        this._editor.on('loaded', this._handlePluginsLoaded);
        this._editor.on('instanceReady', this._handleInstanceReady);
        this._editor.on('paste', this._handlePaste);
        this._editor.on('beforePaste', this._onBeforePaste);
        this._editor.on('afterPaste', this._handleAfterPaste);
        var self = this;
        this._editor.on('contentDom', function () {
            this.editable().attachListener(this.editable(), 'contextmenu', function (evt) {
                var target = evt.data.getTarget() && evt.data.getTarget().$;
                if (target) {
                    var tagName = target.tagName;
                    var parentTagName = target.parentElement && target.parentElement.tagName;
                    if (tagName === 'TD' || parentTagName === 'TD') {
                        evt.stop();
                        evt.data.preventDefault();
                        self._onContextMenuCallBack(true, target);
                    }
                }
            }, undefined, undefined, 0);
            if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
                var editableList = this.document.find('div.cke_editable');
                for (var editableIndex = 0; editableIndex < editableList.count(); editableIndex++) {
                    var editable = editableList.getItem(editableIndex);
                    var tableList = editable && editable.find('table');
                    ckeditor_CKTableHelpers.constructTableComponentOnLoad(tableList, this);
                }
            }
        });
    };
    CKTextEditor.prototype._handleSelectionChangeConvert = function (evt) {
        var sel = this._editor.getSelection();
        var newRange = undefined;
        var forceUpdate = false;
        if (evt) {
            switch (evt.name) {
                case 'selectionChange':
                    sel = evt.data.selection;
                    break;
                case 'blur':
                    sel = undefined;
                    break;
            }
            var ranges = sel ? sel.getRanges() : undefined;
            newRange =
                ranges && ranges.length
                    ? {
                        start: ranges[0].startOffset,
                        end: ranges[0].endOffset,
                        text: CKTextEditor._getSelectedText(this._editor)
                    }
                    : undefined;
            forceUpdate =
                ranges &&
                    ranges.length &&
                    this._lastSelectedRanges &&
                    this._lastSelectedRanges.length &&
                    ranges[0].startContainer !== this._lastSelectedRanges[0].startContainer;
        }
        this._handleSelectionChange(newRange, forceUpdate);
    };
    CKTextEditor.prototype._isHeadingActive = function (tagName, path) {
        path = path || this._editor.elementPath();
        var element = path.lastElement && path.lastElement.getAscendant(tagName, true);
        return element && element.getName() === tagName;
    };
    CKTextEditor.prototype._getHeadingCommandDefinition = function (tagName) {
        var isHeadingActive = this._isHeadingActive;
        return {
            contextSensitive: true,
            exec: function (editor) {
                var styleDef;
                switch (tagName) {
                    case 'h2':
                        styleDef = editor.config.format_h2;
                        break;
                    case 'h3':
                        styleDef = editor.config.format_h3;
                        break;
                    case 'h4':
                        styleDef = editor.config.format_h4;
                        break;
                }
                if (!styleDef) {
                    return false;
                }
                var style = new CKEDITOR.style(styleDef);
                if (isHeadingActive(tagName)) {
                    editor.removeStyle(style);
                }
                else {
                    editor.applyStyle(style);
                }
                return true;
            },
            refresh: function (editor, path) {
                this.setState(isHeadingActive(tagName, path) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF);
            }
        };
    };
    CKTextEditor.prototype._fakeSelectionChange = function (evt) {
        this._handleSelectionChangeConvert(evt);
    };
    CKTextEditor.prototype._handlePluginsLoaded = function (evt) {
        var _loop_1 = function (command) {
            if (this_1._config.supportedFormatsArray.filter(function (format) {
                return format.editorKey === command;
            }).length) {
                this_1._editor.commands[command].on('state', this_1._handleSelectionChangeConvert);
            }
        };
        var this_1 = this;
        for (var command in this._editor.commands) {
            _loop_1(command);
        }
        this._editorElement.addEventListener('keyup', this._fakeSelectionChange);
        this._editorElement.addEventListener('mouseup', this._fakeSelectionChange);
    };
    CKTextEditor.prototype._appliedPropertyValue = function (propertyValue) {
        var color = this._getCssPropertyValue(propertyValue);
        if (color) {
            return CKEDITOR.tools.convertRgbToHex(color);
        }
        return undefined;
    };
    CKTextEditor.prototype._handleInstanceReady = function () {
        this._onReadyCallback();
    };
    CKTextEditor.prototype._handleAfterPaste = function () {
        var _this = this;
        this._async.setTimeout(function () {
            if (_this._onPasteCallback && !_this._isAfterPasteCalled) {
                _this._onPasteCallback(false);
                _this._isAfterPasteCalled = true;
            }
        }, CKTextEditor._PASTETIMEOUT);
    };
    CKTextEditor.prototype._handlePaste = function (evt) {
        var pastedData = evt.data && evt.data.dataValue;
        if (pastedData) {
            pastedData = SafeHtml_SafeHtml.clean(pastedData);
            evt.data.dataValue = pastedData;
        }
        if (pastedData) {
            var tables = pastedData.match(CKTextEditor._TABLE_REGEX);
            if (tables && tables.length > 0) {
                sp_telemetry_["_EngagementLogger"].logEvent('Table.Paste');
                var extraParagraph = '<p></p>';
                for (var _i = 0, tables_1 = tables; _i < tables_1.length; _i++) {
                    var table = tables_1[_i];
                    var outerDiv = new CKEDITOR.dom.element('div');
                    outerDiv.addClass(ckeditor_CKTableHelpers.canvasRteResponsiveTableClassName);
                    outerDiv.setHtml(table);
                    if (Flights["a" /* default */].isRTEAdvancedTableSettingsFlightEnabled()) {
                        var getTables = outerDiv.getElementsByTag('table');
                        var tableElement = getTables && getTables.getItem(0);
                        if (tableElement) {
                            if (tableElement.hasAttribute('style')) {
                                tableElement.removeAttribute('style');
                            }
                            outerDiv = ckeditor_CKTableHelpers.wrapTableInDiv(tableElement, outerDiv);
                            var selection = this._editor.getSelection();
                            if (selection) {
                                var startElement = selection.getStartElement();
                                var parent_3 = ckeditor_CKTableHelpers.findParent(startElement, ckeditor_CKTableHelpers.tableWrapperDivClass);
                                if (parent_3 || (startElement && startElement.hasClass(ckeditor_CKTableHelpers.tableWrapperDivClass))) {
                                    evt.stop();
                                    ckeditor_CKTableHelpers.insertTableAfterWrapper(startElement, outerDiv, parent_3, this._editor);
                                }
                            }
                        }
                    }
                    pastedData = pastedData.replace(table, outerDiv.getOuterHtml());
                }
                pastedData = extraParagraph + pastedData + extraParagraph;
                evt.data.dataValue = pastedData;
                this._onImagePasteInsideTable(pastedData);
            }
        }
        if (pastedData) {
            var images = pastedData.match(CKTextEditor._IMAGE_REGEX_WITH_SRC);
            if (images && images.length > 0) {
                this._onImagePasteInDataValue(evt, images, pastedData);
            }
        }
        else if (evt.data.dataTransfer) {
            for (var i = 0; i < evt.data.dataTransfer.getFilesCount(); i++) {
                sp_telemetry_["_EngagementLogger"].logEvent(CKTextEditor._IMAGE_PASTE);
                this._onImagePasteInChrome(evt.data.dataTransfer.getFile(i));
            }
        }
        this._handleAfterPaste();
    };
    CKTextEditor.prototype._onBeforePaste = function () {
        var _this = this;
        this._async.setTimeout(function () {
            if (_this._onPasteCallback) {
                _this._onPasteCallback(true);
                _this._isAfterPasteCalled = false;
            }
        }, CKTextEditor._PASTETIMEOUT);
    };
    CKTextEditor.prototype._onImagePasteInDataValue = function (evt, images, pastedData) {
        if (Flights["a" /* default */].isMultiImagePasteFlightEnabled() &&
            images &&
            (images.length > 1 || this._isImagePastedInsideTable(pastedData))) {
            this._onMultiImagePasteInDataValue(evt, images, pastedData);
        }
        else {
            var pastedRTEData = this._removeImagesFromPasteData(pastedData);
            if (pastedRTEData.length === 0) {
                var orignalRTEData = this._splitRTEContentAtSelection();
                if (orignalRTEData) {
                    var isImageFileInvalid = false;
                    for (var _i = 0, images_1 = images; _i < images_1.length; _i++) {
                        var img = images_1[_i];
                        var src = img.match(CKTextEditor._IMAGE_REGEX_SRC)[1];
                        if (CKTextEditor._isExternalImage(src)) {
                            evt.cancel();
                            evt.stop();
                            sp_telemetry_["_EngagementLogger"].logEvent(CKTextEditor._IMAGE_PASTE);
                            var rteData = '';
                            if (orignalRTEData.postImageData) {
                                rteData = orignalRTEData.postImageData;
                            }
                            this._onImagePasteCallBack(true, this._handleBase64Image(src), rteData);
                        }
                        else {
                            sp_telemetry_["_EngagementLogger"].logEvent('InvalidImageFile.Paste');
                            this._onImagePasteCallBack(false);
                            isImageFileInvalid = true;
                        }
                    }
                    if (!isImageFileInvalid) {
                        this._editor.setData(orignalRTEData.preImageData);
                    }
                }
            }
            else {
                sp_telemetry_["_EngagementLogger"].logEvent('ImageWrappedWithText.Paste');
                this._onImagePasteCallBack(false);
            }
        }
    };
    CKTextEditor.prototype._onMultiImagePasteInDataValue = function (evt, images, pastedData) {
        var imagesWithSrc = pastedData.match(CKTextEditor._IMAGE_REGEX) || pastedData.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG);
        var editorData = {
            preImageData: '',
            postImageData: ''
        };
        var remainderContent = pastedData;
        for (var i = images.length - 1; i >= 0; i--) {
            var imageWithSrc = imagesWithSrc[i];
            var src = images[i].match(CKTextEditor._IMAGE_REGEX_SRC)[1];
            if (CKTextEditor._isExternalImage(src)) {
                evt.cancel();
                evt.stop();
                sp_telemetry_["_EngagementLogger"].logEvent(CKTextEditor._IMAGE_PASTE);
                var lastIndex = remainderContent.lastIndexOf(imageWithSrc);
                editorData.preImageData = remainderContent.substr(0, lastIndex);
                editorData.postImageData = remainderContent.substr(lastIndex + imageWithSrc.length);
                if (!CKTextEditor._isImagePastedInsideTableWithMultiplePasteEnabled(editorData.preImageData, editorData.postImageData)) {
                    this._onImagePasteCallBack(true, this._handleBase64Image(src), editorData.postImageData);
                    remainderContent = editorData.preImageData;
                }
                else {
                    remainderContent = CKTextEditor._stripOutImageSource(remainderContent, imageWithSrc);
                }
            }
            else {
                sp_telemetry_["_EngagementLogger"].logEvent('InvalidImageFile.Paste');
                remainderContent = CKTextEditor._stripOutImageSource(remainderContent, imageWithSrc);
                this._onImagePasteCallBack(false);
            }
        }
        var innerHTML = this._editor.getData();
        innerHTML += remainderContent;
        this._editor.setData(innerHTML);
    };
    CKTextEditor.prototype._handleBase64Image = function (src) {
        var contentType = Base64MimeType(src);
        var b64Data = src.split(',').pop();
        return Base64toBlob(b64Data, contentType);
    };
    CKTextEditor.prototype._onImagePasteInsideTable = function (pastedData) {
        if (this._isImagePastedInsideTable(pastedData)) {
            sp_telemetry_["_EngagementLogger"].logEvent('ImageInsideTable.Paste');
            this._onImagePasteCallBack(false);
        }
    };
    CKTextEditor.prototype._isImagePastedInsideTable = function (data) {
        var tables = data.match(CKTextEditor._TABLE_REGEX);
        if (tables) {
            for (var _i = 0, tables_2 = tables; _i < tables_2.length; _i++) {
                var table = tables_2[_i];
                if (table.match(CKTextEditor._IMAGE_REGEX) || table.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG)) {
                    return true;
                }
            }
            return false;
        }
    };
    CKTextEditor.prototype._removeImagesFromPasteData = function (pastedData) {
        var images = pastedData.match(CKTextEditor._IMAGE_REGEX) || pastedData.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG);
        if (!images) {
            return [];
        }
        var data = [];
        var temp = [];
        for (var _i = 0, images_2 = images; _i < images_2.length; _i++) {
            var img = images_2[_i];
            temp = pastedData.split(img);
            if (temp.length > 1) {
                if (temp[0]) {
                    data.push(temp[0]);
                }
                pastedData = temp[1];
            }
        }
        if (temp[1]) {
            data.push(temp[1]);
        }
        return data;
    };
    CKTextEditor.prototype._splitRTEContentAtSelection = function () {
        var innerHTML = this._editor.getData();
        if (this._validHTML(innerHTML) && this._isCurrentSelectionTagValid()) {
            var data = [];
            var tempId = sp_core_library_["Guid"].newGuid().toString();
            var tempElement = CKEDITOR.dom.element.createFromHtml('<div>' + tempId + '</div>');
            var tempHTML = tempElement.$.outerHTML;
            this._editor.insertElement(tempElement);
            innerHTML = this._editor.getData();
            data = innerHTML.split(tempHTML);
            var editorData = {
                preImageData: data[0],
                postImageData: data[1]
            };
            return editorData;
        }
        else {
            this._handleAfterPaste();
            this._onImagePasteCallBack(false);
            return undefined;
        }
    };
    CKTextEditor.prototype._isCurrentSelectionTagValid = function () {
        var tagName = this._editor.getSelection().getStartElement().$ && this._editor.getSelection().getStartElement().$.tagName;
        if (tagName === 'A') {
            return false;
        }
        tagName =
            this._editor.getSelection().getStartElement().$.parentElement &&
                this._editor.getSelection().getStartElement().$.parentElement.tagName;
        return CKTextEditor._INVALID_TAGS.indexOf(tagName) === -1;
    };
    CKTextEditor.prototype._validHTML = function (html) {
        html = html.replace(/<[^>]*\/\s?>/g, ''); 
        html = html.replace(/<(br|hr|img).*?>/g, ''); 
        var openingTags = html.match(/<[^\/].*?>/g) || []; 
        var closingTags = html.match(/<\/.+?>/g) || []; 
        return openingTags.length === closingTags.length ? true : false;
    };
    CKTextEditor.prototype._onImagePasteInChrome = function (src) {
        var data = this._splitRTEContentAtSelection();
        if (data) {
            this._editor.setData(data.preImageData);
            this._onImagePasteCallBack(true, src, data.postImageData);
        }
    };
    CKTextEditor.prototype._getActualBackgroundColor = function (elem, value) {
        var propValue = value;
        while (elem && (propValue === 'transparent' || propValue === 'rgba(0, 0, 0, 0)') && elem !== this._editorElement) {
            elem = elem.parentElement;
            propValue = window.getComputedStyle(elem).backgroundColor;
        }
        return elem ? window.getComputedStyle(elem).backgroundColor : 'transparent';
    };
    CKTextEditor.prototype._getCssPropertyValue = function (propertyValue) {
        var selection = this._editor.getSelection();
        if (selection) {
            var startElement = selection.getStartElement();
            var selectedText = selection.getSelectedText();
            if (startElement) {
                var value = window.getComputedStyle(startElement.$).getPropertyValue(propertyValue);
                if (propertyValue === 'background-color') {
                    return this._getActualBackgroundColor(startElement.$, value);
                }
                else if (
                propertyValue === 'font-size' &&
                    selectedText !== '' &&
                    this._isOverlappingStyles(startElement.$, value, 'fontSize', propertyValue)) {
                    return undefined;
                }
                return value;
            }
        }
        return undefined;
    };
    CKTextEditor.prototype._isOverlappingStyles = function (element, styleValue, className, propertyValue) {
        var children = element.querySelectorAll("span[class*=" + className + "]");
        for (var i = 0; i < children.length; i++) {
            var childValue = window.getComputedStyle(children[i]).getPropertyValue(propertyValue);
            if (childValue !== styleValue) {
                return true;
            }
        }
        return false;
    };
    CKTextEditor.prototype._updateTableAlignCommandState = function () {
        var sel = this._editor && this._editor.getSelection();
        if (sel) {
            var startElement = sel.getStartElement();
            ckeditor_CKTableHelpers.setAlignTableCommandState(startElement, ckeditor_CKTableHelpers.tableCenterAlign, this._editor.getCommand('alignCenterTable'));
            ckeditor_CKTableHelpers.setAlignTableCommandState(startElement, ckeditor_CKTableHelpers.tableLeftAlign, this._editor.getCommand('alignLeftTable'));
            ckeditor_CKTableHelpers.setAlignTableCommandState(startElement, ckeditor_CKTableHelpers.tableRightAlign, this._editor.getCommand('alignRightTable'));
        }
    };
    CKTextEditor.moduleLoader = new ckeditor_CKLoader();
    CKTextEditor.logSource = sp_diagnostics_["_LogSource"].create('SPRteCKTextEditor');
    CKTextEditor._IMAGE_REGEX = new RegExp('<img.+?/>', 'gi');
    CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG = new RegExp('<img.+?>', 'gi');
    CKTextEditor._TABLE_REGEX = new RegExp('<table([\\w\\W]+?)/table>', 'gi');
    CKTextEditor._TABLE_REGEX_WITHOUT_CLOSING_TAG = new RegExp('<table.+?>', 'gi');
    CKTextEditor._TABLE_REGEX_WITHOUT_OPENING_TAG = new RegExp('</table>', 'gi');
    CKTextEditor._IMAGE_REGEX_WITH_SRC = new RegExp('<img.*?src="(.*?)"', 'gi');
    CKTextEditor._IMAGE_REGEX_SRC = new RegExp('<img.*?src="(.*?)"', 'i');
    CKTextEditor._IMAGE_PASTE = 'Image.Paste';
    CKTextEditor._PASTETIMEOUT = 5;
    CKTextEditor._INVALID_TAGS = ['TD', 'TR', 'OL', 'LI'];
    CKTextEditor._TEXT_FORMAT_KEY = 'linkText';
    CKTextEditor._TAB_FORMAT_KEY = 'shouldOpenInNewTab';
    CKTextEditor._fontSizeMap = new Map([
        ["12" , 'Small'],
        ["14" , 'Medium'],
        ["15" , 'MediumPlus'],
        ["17" , 'Large'],
        ["21" , 'XLarge'],
        ["24" , 'XLargePlus'],
        ["28" , 'XxLarge'],
        ["36" , 'XxLargePlus'],
        ["32" , 'XxxLarge'],
        ["42" , 'Super']
    ]);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_initialize", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_handleSelectionChangeConvert", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_isHeadingActive", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_getHeadingCommandDefinition", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_fakeSelectionChange", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_handlePluginsLoaded", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_handleInstanceReady", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_handleAfterPaste", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_handlePaste", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CKTextEditor.prototype, "_onBeforePaste", null);
    return CKTextEditor;
}());
/* harmony default export */ var ckeditor_CKTextEditor = __webpack_exports__["a"] = (CKTextEditor_CKTextEditor);


/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/a11y/RteA11y.module.scss.js
__webpack_require__(209);
var styles = {
    screenReaderOnly: 'screenReaderOnly_024ab190',
};
/* harmony default export */ var RteA11y_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/a11y/RteA11y.js
/* harmony export (immutable) */ __webpack_exports__["c"] = isEscape;
/* harmony export (immutable) */ __webpack_exports__["b"] = isEnter;
/* harmony export (immutable) */ __webpack_exports__["e"] = isShiftTab;
/* harmony export (immutable) */ __webpack_exports__["f"] = isTab;
/* harmony export (immutable) */ __webpack_exports__["d"] = isKey;
/* unused harmony export getFocusableChildren */
/* unused harmony export isElementFocusable */
/* unused harmony export getFocusableParent */
/* unused harmony export getFirstFocusableChild */
/* unused harmony export getFocusableDescendants */
/* unused harmony export getFocusableSiblings */
/* unused harmony export getNextFocusableElement */
/* unused harmony export getPrevFocusableElement */
/* unused harmony export isElementFocusableChildOf */
/* harmony export (immutable) */ __webpack_exports__["g"] = navigateInside;
/* unused harmony export navigateTo */
/* unused harmony export navigateOutOf */
/* harmony export (immutable) */ __webpack_exports__["a"] = ariaAlert;

function isEscape(e) {
    return isKey(27 , e);
}
function isEnter(e) {
    return isKey(13 , e);
}
function isShiftTab(e) {
    return isKey(9 , e, false, false, true);
}
function isTab(e) {
    return isKey(9 , e);
}
function isKey(keyCode, e, allowAlt, allowCtrl, allowShift) {
    if (allowAlt === void 0) { allowAlt = false; }
    if (allowCtrl === void 0) { allowCtrl = false; }
    if (allowShift === void 0) { allowShift = false; }
    return (e.keyCode === keyCode &&
        ((allowAlt && e.altKey) || (!allowAlt && !e.altKey)) &&
        ((allowCtrl && e.ctrlKey) || (!allowCtrl && !e.ctrlKey)) &&
        ((allowShift && e.shiftKey) || (!allowShift && !e.shiftKey)));
}
function getFocusableChildren(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var children = [];
    for (var _i = 0, _a = getFocusableDescendants(elem, ignoreTabIndex); _i < _a.length; _i++) {
        var descendant = _a[_i];
        if (isElementFocusableChildOf(descendant, elem)) {
            children.push(descendant);
        }
    }
    return children;
}
function isElementFocusable(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var tagName = elem.tagName.toLowerCase();
    if (elem &&
        !elem.hidden &&
        elem.offsetParent &&
        window.getComputedStyle(elem).display !== 'none' &&
        window.getComputedStyle(elem).visibility !== 'hidden') {
        var hasTabIndex = elem.hasAttribute('tabindex');
        var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
        if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
            return false;
        }
        if ((tagName === 'a' && !!elem.href) || elem.isContentEditable) {
            return true;
        }
        if ((tagName === 'button' || tagName === 'input' || tagName === 'select' || tagName === 'textarea') &&
            !elem.disabled) {
            return true;
        }
        if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
            return true;
        }
        if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
            return true;
        }
    }
    return false;
}
function getFocusableParent(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var parent = elem;
    do {
        parent = parent.parentElement;
    } while (!isElementFocusable(parent) && parent !== topElement);
    return parent;
}
function queryFocusableSelector(elem) {
    var selector = "button,input,textarea,select,a[href]:not([href='']),\
      [tabindex],[contenteditable='true'], [data-is-focusable='true']";
    return elem.querySelectorAll(selector);
}
function getFirstFocusableChild(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            return node;
        }
    }
    return undefined;
}
function getFocusableDescendants(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var descendants = [];
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            descendants.push(node);
        }
    }
    return descendants;
}
function getFocusableSiblings(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var children = getFocusableChildren(getFocusableParent(elem, topElement));
    var siblings = [];
    var insertPointer = 0;
    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
        var child = children_1[_i];
        if (child !== elem) {
            siblings.splice(insertPointer++, 0, child);
        }
        else {
            insertPointer = 0;
        }
    }
    return siblings;
}
function getNextFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[0];
}
function getPrevFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[siblings.length - 1];
}
function isElementFocusableChildOf(elem, ancestor) {
    var parent = elem.parentElement;
    while (parent.tagName !== 'BODY') {
        if (parent !== ancestor) {
            return true;
        }
        if (isElementFocusable(parent)) {
            break;
        }
        parent = parent.parentElement;
    }
    return false;
}
function navigateInside(elem) {
    var children = getFocusableChildren(elem);
    if (children.length) {
        children[0].focus();
        return true;
    }
    else {
        return false;
    }
}
function navigateTo(elem) {
    if (isElementFocusable(elem)) {
        elem.focus();
        return true;
    }
    else {
        return navigateInside(elem);
    }
}
function navigateOutOf(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    topElement = topElement || document.body;
    getFocusableParent(elem, topElement).focus();
}
var ariaAlertElementId = 'aria_alert_' +
    Math.random()
        .toString()
        .substr(2);
function ariaAlert(message) {
    var oldAlert = document.querySelector('#' + ariaAlertElementId);
    if (oldAlert) {
        document.body.removeChild(oldAlert);
    }
    var alertNode = document.createElement('p');
    alertNode.classList.add(RteA11y_module_scss.screenReaderOnly);
    alertNode.setAttribute('role', 'alert');
    alertNode.setAttribute('id', ariaAlertElementId);
    var alertText = document.createTextNode(message);
    alertNode.appendChild(alertText);
    document.body.appendChild(alertNode);
}


/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export DeferredCanvasToolbox */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DeferredToolboxComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return DeferredToolboxFullBleedComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeferredLessTextComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_loader__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__microsoft_sp_loader__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_webpart_base__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_sp_webpart_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_webpart_base__);



var CANVAS_TOOLBOX_COMPONENT_ID = '5388ac31-7915-4ba6-a021-0f8808dd5784';
var DeferredCanvasToolbox = (function () {
    function DeferredCanvasToolbox() {
    }
    DeferredCanvasToolbox.loadModule = function () {
        if (!DeferredCanvasToolbox._loadedModule) {
            DeferredCanvasToolbox._loadedModule =
                 true
                    ? Promise.resolve(__webpack_require__(231))
                    : SPComponentLoader.loadComponentById(CANVAS_TOOLBOX_COMPONENT_ID);
        }
        return DeferredCanvasToolbox._loadedModule;
    };
    return DeferredCanvasToolbox;
}());

var DeferredToolboxComponent = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](DeferredToolboxComponent, _super);
    function DeferredToolboxComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeferredToolboxComponent.prototype._internalLoad = function () {
        return DeferredCanvasToolbox.loadModule().then(function (chunk) { return chunk.Toolbox; });
    };
    return DeferredToolboxComponent;
}(__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_webpart_base__["_DeferredComponent"]));

var DeferredToolboxFullBleedComponent = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](DeferredToolboxFullBleedComponent, _super);
    function DeferredToolboxFullBleedComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeferredToolboxFullBleedComponent.prototype._internalLoad = function () {
        return DeferredCanvasToolbox.loadModule().then(function (chunk) { return chunk.ToolboxFullBleed; });
    };
    return DeferredToolboxFullBleedComponent;
}(__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_webpart_base__["_DeferredComponent"]));

var DeferredLessTextComponent = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](DeferredLessTextComponent, _super);
    function DeferredLessTextComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeferredLessTextComponent.prototype._internalLoad = function () {
        return DeferredCanvasToolbox.loadModule().then(function (chunk) { return chunk.LessText; });
    };
    return DeferredLessTextComponent;
}(__WEBPACK_IMPORTED_MODULE_2__microsoft_sp_webpart_base__["_DeferredComponent"]));



/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Styling.js
var package = __webpack_require__(1);
module.exports = {}
for (var key in package) {
  if (package.hasOwnProperty(key)) {
    module.exports[key] = package[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 64 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_64__;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
// Regex that finds {#} so it can be replaced by the arguments in string format
var FORMAT_REGEX = /\{(\d+)\}/g;
/**
 * String Format is like C# string format. Use template strings instead unless the string is dynamic.
 * Usage Example: "hello {0}!".format("mike") will return "hello mike!"
 * Calling format on a string with less arguments than specified in the format will substitute "undefined"
 */
function format(template) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    return template.replace(FORMAT_REGEX, function (match, valueIndex) {
        var value = values[valueIndex];
        // Checking null for consistency with old behavior, all other values pass through.
        return value === null ? '' : value;
    });
}
exports.format = format;
/**
 * Returns an array made of replacemant values and string literal values, in order.
 * @param template Base string with replacement tokens.
 * @param values Array of values to insert into corresponding replacement token.
 */
function formatToArray(template) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    var parts = [];
    var regexResult;
    var lastIndex = 0;
    while ((regexResult = FORMAT_REGEX.exec(template))) {
        // The full string of characters matched.
        var match = regexResult[0];
        // Get replacement value.
        var valueIndex = parseInt(match.replace(/\{|\}+/g, ''), 10);
        var replacementValue = values[valueIndex];
        // Get text between tokens and add to our array.
        if (regexResult.index > lastIndex) {
            parts.push(template.substring(lastIndex, regexResult.index));
        }
        // Save last index.
        lastIndex = FORMAT_REGEX.lastIndex;
        // Add replacement value to our array.
        parts.push(replacementValue);
    }
    // Grab any remaining text after the last match.
    if (lastIndex !== template.length) {
        parts.push(template.substring(lastIndex, template.length));
    }
    return parts;
}
exports.formatToArray = formatToArray;
/**
 * Returns true if s ends with suffix.
 */
function doesStringEndWith(s, suffix) {
    return s.substr(s.length - suffix.length) === suffix;
}
exports.doesStringEndWith = doesStringEndWith;
/**
 * Returns true if s starts with prefix.
 */
function doesStringStartWith(s, prefix) {
    return s.substr(0, prefix.length) === prefix;
}
exports.doesStringStartWith = doesStringStartWith;
/**
 * Return a string of the given length, using 0s to pad in from the right.
 */
function rightPad(data, length) {
    var result = data.toString();
    while (result.length < length) {
        result = result + "0";
    }
    return result;
}
exports.rightPad = rightPad;
/**
 * Look for any of the chars in searchValues in str.
 * Returns the index of the char found or -1 if nothing is found.
 */
function findOneOf(str, searchValues) {
    for (var idx = 0; idx < str.length; idx++) {
        if (searchValues.indexOf(str[idx]) >= 0) {
            return idx;
        }
    }
    return -1; //none of the searchValues exist in string
}
exports.findOneOf = findOneOf;
/**
 * Determines if two strings are equal when both converted to uppercase.
 */
function equalsCaseInsensitive(a, b) {
    if (a && b) {
        return a.toUpperCase() === b.toUpperCase();
    }
    return a === b;
}
exports.equalsCaseInsensitive = equalsCaseInsensitive;
/**
 * Capitalizes the first letter of str.
 */
function capitalize(str) {
    if (str) {
        return str[0].toUpperCase() + str.substr(1);
    }
    return str;
}
exports.capitalize = capitalize;
/**
 * De-capitalizes the first letter of str.
 */
function decapitalize(str) {
    if (str) {
        return str[0].toLowerCase() + str.substr(1);
    }
    return str;
}
exports.decapitalize = decapitalize;
/**
 * Selects a string based on plurality.
 *
 * @param count - The value to base selection on
 * @param single - The string to select when it's a singular value
 * @param multiple - The string to select when it's a plural value
 *
 * @deprecated This method does NOT give accurate results for many languages!!
 *             Use getLocalizedCountValue instead.
 */
function pluralSelect(count, single, plural) {
    return count === 1 ? single : plural;
}
exports.pluralSelect = pluralSelect;
/**
 * Given a specially formatted localized text, a set of intervals, and a count,
 * return the localized text which corresponds to the first interval the
 * count falls into.
 *
 * Please see https://microsoft.sharepoint.com/teams/OISGPortal/LocKits/_layouts/15/start.aspx#/Lockit%20Instructions/SharePoint%20Core%20Localization.aspx
 * for more details.
 *
 * @param {string} locText - || deliminated blocks of localized texts, representing
 *  the various singular and plural forms of the string  being localized
 * @param {string} intervals - || deliminated blocks of numeric intervals, defining the ranges
 *  of that interval. Has special support for , * and -.
 * @param {number} count - The count used to determine which interval to return.
 *
 * @return
 * The localized block which corresponds to the first interval the count falls into.
 *
 * @example
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 0)
 *   returns items
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 1)
 *   returns item
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 2)
 *   returns items
 */
function getLocalizedCountValue(locText, intervals, count) {
    'use strict';
    count = Number(count); // defensively make sure count is a number
    // !!!IMPORTANT!!! changes in this function need to be in sync with
    // the methods with the same name located at:
    // otools/inc/sts/stsom/utilities/SPLocUtility.cs
    // sts/Client/Script/Init/LocUtility.cs
    if (locText === undefined || intervals === undefined || count === undefined) {
        return null;
    }
    var ret = '';
    var locIndex = -1;
    var intervalsArray = intervals.split('||');
    for (var i = 0, length_1 = intervalsArray.length; i < length_1; i++) {
        var interval = intervalsArray[i];
        if (!interval) {
            continue;
        }
        var subIntervalsArray = interval.split(',');
        for (var _i = 0, subIntervalsArray_1 = subIntervalsArray; _i < subIntervalsArray_1.length; _i++) {
            var subInterval = subIntervalsArray_1[_i];
            if (!subInterval) {
                continue;
            }
            // there are three possiblities, wildcard, interval, or number
            if (isNaN(Number(subInterval))) {
                if (subInterval.indexOf('-') !== -1) {
                    // if it's an interval the format is Number-Number
                    var range = subInterval.split('-');
                    if (range.length !== 2) {
                        continue;
                    }
                    var min = void 0;
                    var max = void 0;
                    if (range[0] === '') {
                        min = 0;
                    }
                    else {
                        if (isNaN(Number(range[0]))) {
                            continue;
                        }
                        else {
                            min = parseInt(range[0], 10);
                        }
                    }
                    if (count >= min) {
                        if (range[1] === '') {
                            locIndex = i;
                            break;
                        }
                        else {
                            if (isNaN(Number(range[1]))) {
                                continue;
                            }
                            else {
                                max = parseInt(range[1], 10);
                            }
                        }
                        if (count <= max) {
                            locIndex = i;
                            break;
                        }
                    }
                }
                else if (subInterval.indexOf('*') !== -1) {
                    // Wildcard
                    var regexExpr = subInterval.trim().replace(/\*/g, '[0-9]*');
                    var regex = new RegExp("^" + regexExpr + "$");
                    if (regex.test(count.toString())) {
                        locIndex = i;
                        break;
                    }
                }
            }
            else {
                var exactNumber = parseInt(subInterval, 10);
                if (count === exactNumber) {
                    locIndex = i;
                    break;
                }
            }
        }
        if (locIndex !== -1) {
            break;
        }
    }
    if (locIndex !== -1) {
        var locValues = locText.split('||');
        if (locValues[locIndex]) {
            ret = locValues[locIndex];
        }
    }
    return ret;
}
exports.getLocalizedCountValue = getLocalizedCountValue;
/**
 * Format the locText with the localized count value.
 */
function formatWithLocalizedCountValue(locText, intervals, count) {
    'use strict';
    var template = getLocalizedCountValue(locText, intervals, count);
    var result = format(template, count.toString());
    return result;
}
exports.formatWithLocalizedCountValue = formatWithLocalizedCountValue;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var Promise_1 = __webpack_require__(27);
/**
 * Signal is used to manage a promise without having to pass a function to the Promise constructor.
 * Example:
 * var s = new Signal<boolean>();
 * setTimeout(() => {
 *    s.complete(true);
 * }, 1000);
 * return s.promise;
 */
var Signal = /** @class */ (function () {
    /**
     * Create a new Signal (also known as a Deferred in some circles.)
     * @param: oncancel A function to be called when the promise is cancelled.
     */
    function Signal(oncancel) {
        this._promise = new Promise_1.SignalPromise(oncancel);
    }
    /**
     * The underlying promise that the Signal manages.
     */
    Signal.prototype.getPromise = function () {
        return this._promise;
    };
    /**
     * Cancel the underlying promise.
     */
    Signal.prototype.cancel = function () {
        this._promise.cancel();
    };
    /**
     * Complete the underlying promise with the given value.
     */
    Signal.prototype.complete = function (value) {
        this._promise._completed(value);
    };
    /**
     * Put the underlying promise into the error state with the given value.
     */
    Signal.prototype.error = function (value) {
        this._promise._error(value);
    };
    return Signal;
}());
exports.default = Signal;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ErrorHelper_1 = __webpack_require__(21);
/**
 * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.
 * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.
 *
 * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a
 * new instance of the class and remember to call dispose() during your code's dispose handler.
 */
function noop() {
    // Do nothing.
}
function logToErrorHelper(error) {
    ErrorHelper_1.default.log(error);
}
var Async = /** @class */ (function () {
    function Async(parent, onError) {
        if (onError === void 0) { onError = logToErrorHelper; }
        this._isDisposed = false;
        this._parent = parent || null;
        this._onErrorHandler = onError;
        this._timeoutIds = null;
        this._immediateIds = null;
        this._animationFrameIds = null;
        this._intervalIds = null;
    }
    /**
     * Dispose function, clears all async operations.
     */
    Async.prototype.dispose = function () {
        if (this._isDisposed) {
            return;
        }
        this._isDisposed = true;
        this._parent = null;
        // Clear timeouts.
        if (this._timeoutIds) {
            for (var _i = 0, _a = Object.keys(this._timeoutIds); _i < _a.length; _i++) {
                var id = _a[_i];
                this.clearTimeout(Number(id));
            }
            this._timeoutIds = null;
        }
        // Clear immediates.
        if (this._immediateIds) {
            for (var _b = 0, _c = Object.keys(this._immediateIds); _b < _c.length; _b++) {
                var id = _c[_b];
                this.clearImmediate(Number(id));
            }
            this._immediateIds = null;
        }
        // Clear intervals.
        if (this._intervalIds) {
            for (var _d = 0, _e = Object.keys(this._intervalIds); _d < _e.length; _d++) {
                var id = _e[_d];
                this.clearInterval(Number(id));
            }
            this._intervalIds = null;
        }
        // Clear animation frames.
        if (this._animationFrameIds) {
            for (var _f = 0, _g = Object.keys(this._animationFrameIds); _f < _g.length; _f++) {
                var id = _g[_f];
                this.cancelAnimationFrame(Number(id));
            }
            this._animationFrameIds = null;
        }
    };
    /**
     * SetTimeout override, which will auto cancel the timeout during dispose.
     * @param callback Callback to execute.
     * @param duration Duration in milliseconds.
     * @return The setTimeout id.
     */
    Async.prototype.setTimeout = function (callback, duration) {
        var _this = this;
        var timeoutId = 0;
        if (!this._isDisposed) {
            var timeoutIds_1 = this._timeoutIds || (this._timeoutIds = {});
            /* tslint:disable:ban-native-functions */
            timeoutId = setTimeout(function () {
                // Time to execute the timeout, enqueue it as a foreground task to be executed.
                try {
                    // Now delete the record and call the callback.
                    delete timeoutIds_1[timeoutId];
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            }, duration);
            /* tslint:enable:ban-native-functions */
            timeoutIds_1[timeoutId] = true;
        }
        return timeoutId;
    };
    /**
     * Clears the timeout.
     * @param id Id to cancel.
     */
    Async.prototype.clearTimeout = function (id) {
        var timeoutIds = this._timeoutIds;
        if (timeoutIds && timeoutIds[id]) {
            /* tslint:disable:ban-native-functions */
            clearTimeout(id);
            /* tslint:enable:ban-native-functions */
            delete timeoutIds[id];
        }
    };
    /**
     * SetImmediate override, which will auto cancel the immediate during dispose.
     * @param callback Callback to execute.
     * @return The setTimeout id.
     */
    Async.prototype.setImmediate = function (callback) {
        var _this = this;
        var immediateId = 0;
        if (!this._isDisposed) {
            var immediateIds_1 = this._immediateIds || (this._immediateIds = {});
            var setImmediateCallback = function () {
                // Time to execute the timeout, enqueue it as a foreground task to be executed.
                try {
                    // Now delete the record and call the callback.
                    delete immediateIds_1[immediateId];
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            };
            /* tslint:disable:ban-native-functions */
            immediateId = window.setImmediate ? window.setImmediate(setImmediateCallback) : window.setTimeout(setImmediateCallback, 0);
            /* tslint:enable:ban-native-functions */
            immediateIds_1[immediateId] = true;
        }
        return immediateId;
    };
    /**
     * Clears the immediate.
     * @param id Id to cancel.
     */
    Async.prototype.clearImmediate = function (id) {
        var immediateIds = this._immediateIds;
        if (immediateIds && immediateIds[id]) {
            /* tslint:disable:ban-native-functions */
            window.clearImmediate ? window.clearImmediate(id) : window.clearTimeout(id);
            delete immediateIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * SetInterval override, which will auto cancel the timeout during dispose.
     * @param callback Callback to execute.
     * @param duration Duration in milliseconds.
     * @return The setTimeout id.
     */
    Async.prototype.setInterval = function (callback, duration) {
        var _this = this;
        var intervalId = 0;
        if (!this._isDisposed) {
            if (!this._intervalIds) {
                this._intervalIds = {};
            }
            /* tslint:disable:ban-native-functions */
            intervalId = setInterval(function () {
                // Time to execute the interval callback, enqueue it as a foreground task to be executed.
                try {
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            }, duration);
            /* tslint:enable:ban-native-functions */
            this._intervalIds[intervalId] = true;
        }
        return intervalId;
    };
    /**
     * Clears the interval.
     * @param id Id to cancel.
     */
    Async.prototype.clearInterval = function (id) {
        if (this._intervalIds && this._intervalIds[id]) {
            /* tslint:disable:ban-native-functions */
            clearInterval(id);
            delete this._intervalIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * Creates a function that, when executed, will only call the func function at most once per
     * every wait milliseconds. Provide an options object to indicate that func should be invoked
     * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled
     * function will return the result of the last func call.
     *
     * Note: If leading and trailing options are true func will be called on the trailing edge of
     * the timeout only if the the throttled function is invoked more than once during the wait timeout.
     *
     * @param func The function to throttle.
     * @param wait The number of milliseconds to throttle executions to. Defaults to 0.
     * @param options The options object.
     * @param options.leading Specify execution on the leading edge of the timeout.
     * @param options.trailing Specify execution on the trailing edge of the timeout.
     * @return The new throttled function.
     */
    Async.prototype.throttle = function (func, wait, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (this._isDisposed) {
            return noop;
        }
        var waitMS = wait || 0;
        var _a = options.leading, leading = _a === void 0 ? true : _a, _b = options.trailing, trailing = _b === void 0 ? true : _b;
        var lastExecuteTime = 0;
        var lastResult;
        var lastArgs;
        var timeoutId = null;
        var callback = function (userCall) {
            var now = (new Date()).getTime();
            var delta = now - lastExecuteTime;
            var waitLength = leading ? waitMS - delta : waitMS;
            if (delta >= waitMS && (!userCall || leading)) {
                lastExecuteTime = now;
                if (timeoutId) {
                    _this.clearTimeout(timeoutId);
                    timeoutId = null;
                }
                lastResult = func.apply(_this._parent, lastArgs);
            }
            else if (timeoutId === null && trailing) {
                timeoutId = _this.setTimeout(callback, waitLength);
            }
            return lastResult;
        };
        var resultFunction = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            lastArgs = args;
            return callback(true);
        };
        return resultFunction;
    };
    /**
     * Creates a function that will delay the execution of func until after wait milliseconds have
     * elapsed since the last time it was invoked. Provide an options object to indicate that func
     * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls
     * to the debounced function will return the result of the last func call.
     *
     * Note: If leading and trailing options are true func will be called on the trailing edge of
     * the timeout only if the the debounced function is invoked more than once during the wait
     * timeout.
     *
     * @param func The function to debounce.
     * @param wait The number of milliseconds to delay.
     * @param options The options object.
     * @param options.leading Specify execution on the leading edge of the timeout.
     * @param options.maxWait The maximum time func is allowed to be delayed before it's called.
     * @param options.trailing Specify execution on the trailing edge of the timeout.
     * @return The new debounced function.
     */
    Async.prototype.debounce = function (func, wait, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        if (this._isDisposed) {
            return noop;
        }
        var waitMS = wait || 0;
        var _a = options.leading, leading = _a === void 0 ? false : _a, _b = options.trailing, trailing = _b === void 0 ? true : _b, _c = options.maxWait, maxWait = _c === void 0 ? NaN : _c;
        var lastCallTime = 0;
        var lastExecuteTime = (new Date()).getTime();
        var lastResult;
        var lastArgs;
        var timeoutId = null;
        var callback = function (userCall) {
            var now = (new Date()).getTime();
            var executeImmediately = false;
            if (userCall) {
                if (leading && now - lastCallTime >= waitMS) {
                    executeImmediately = true;
                }
                lastCallTime = now;
            }
            var delta = now - lastCallTime;
            var waitLength = waitMS - delta;
            var maxWaitDelta = now - lastExecuteTime;
            var maxWaitExpired = false;
            if (!isNaN(maxWait)) {
                // maxWait only matters when there is a pending callback
                if (maxWaitDelta >= maxWait && timeoutId) {
                    maxWaitExpired = true;
                }
                else {
                    waitLength = Math.min(waitLength, maxWait - maxWaitDelta);
                }
            }
            if (delta >= waitMS || maxWaitExpired || executeImmediately) {
                if (timeoutId) {
                    _this.clearTimeout(timeoutId);
                    timeoutId = null;
                }
                lastExecuteTime = now;
                lastResult = func.apply(_this._parent, lastArgs);
            }
            else if ((timeoutId === null || !userCall) && trailing) {
                timeoutId = _this.setTimeout(callback, waitLength);
            }
            return lastResult;
        };
        var resultFunction = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            lastArgs = args;
            return callback(true);
        };
        return resultFunction;
    };
    Async.prototype.requestAnimationFrame = function (callback) {
        var _this = this;
        var animationFrameId = 0;
        if (!this._isDisposed) {
            var animationFrameIds_1 = this._animationFrameIds || (this._animationFrameIds = {});
            var animationFrameCallback = function () {
                try {
                    // Now delete the record and call the callback.
                    delete animationFrameIds_1[animationFrameId];
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            };
            /* tslint:disable:ban-native-functions */
            animationFrameId = window.requestAnimationFrame ? window.requestAnimationFrame(animationFrameCallback) : window.setTimeout(animationFrameCallback, 0);
            /* tslint:enable:ban-native-functions */
            animationFrameIds_1[animationFrameId] = true;
        }
        return animationFrameId;
    };
    Async.prototype.cancelAnimationFrame = function (id) {
        var animationFrameIds = this._animationFrameIds;
        if (animationFrameIds && animationFrameIds[id]) {
            /* tslint:disable:ban-native-functions */
            window.cancelAnimationFrame ? window.cancelAnimationFrame(id) : window.clearTimeout(id);
            /* tslint:enable:ban-native-functions */
            delete animationFrameIds[id];
        }
    };
    Async.prototype._logError = function (e) {
        if (this._onErrorHandler) {
            this._onErrorHandler(e);
        }
    };
    return Async;
}());
exports.default = Async;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ObjectUtil_1 = __webpack_require__(87);
var StringHelper_1 = __webpack_require__(65);
var UriPartial;
(function (UriPartial) {
    /** The scheme segment of the URI */
    UriPartial[UriPartial["scheme"] = 0] = "scheme";
    /** The scheme and authority segments of the URI */
    UriPartial[UriPartial["authority"] = 1] = "authority";
    /** The scheme, authority, and path segments of the URI */
    UriPartial[UriPartial["path"] = 2] = "path";
    /** The scheme, authority, path, and query segments of the URI */
    UriPartial[UriPartial["query"] = 3] = "query";
})(UriPartial = exports.UriPartial || (exports.UriPartial = {}));
var DELIMITERS = /[;\/?:@&=$,]/;
var AUTHORITY_TERMINATORS = /[\/?]/;
function queryToLower(queryObj) {
    var newQuery = {};
    for (var key in queryObj) {
        if (queryObj.hasOwnProperty(key)) {
            newQuery[key.toLowerCase()] = queryObj[key].toLowerCase();
        }
    }
    return newQuery;
}
/**
 * Partial port of groove\Misc\URI.cpp, which was based on RFC2396 and RFC3986 (http://www.ietf.org/rfc/rfc2396.txt).
 * There are a few differences between this implementation and the RFC:
 *  - Implementation does not support parameters (we don't use them, and partial implementation was incorrect)
 *  - Implementation supports some relative URIs at a glance but more investigation required
 *
 *   foo://example.com:8042/over/there?name=ferret#nose
 *   \_/   \______________/\_________/ \_________/ \__/
 *    |           |            |            |        |
 * scheme     authority       path        query   fragment
 *
 * Possible improvements:
 *  - Support path parameters
 *  - Fully support and test relative URLs based on RFC
 *  - Allow changing/removing remaining URI components (i.e. user, host, port, parameters)
 *  - URI.equals could allow ?foo=1&bar=2 equals ?bar=2&foo=1
 *  - URI.parseURI should have better error handling rather than just setting it as path
 *  - URI.getQueryAsObject should have better error handling for query of "a=1&a=2"
 */
var Uri = /** @class */ (function () {
    function Uri(uriString, options) {
        // All of these are decoded (if relevant) unless specified as encoded.
        this._scheme = "";
        this._user = "";
        this._host = "";
        this._port = "";
        this._path = "";
        this._pathSegments = [];
        this._pathEncoded = "";
        this._query = {};
        this._fragment = "";
        if (options) {
            this._queryCaseInsensitive = !!options.queryCaseInsensitive;
            this._pathCaseInsensitive = !!options.pathCaseInsensitive;
        }
        this._parseURI(uriString);
    }
    Uri.concatenate = function () {
        var uriParts = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            uriParts[_i] = arguments[_i];
        }
        var result = '';
        for (var i = 0; i < uriParts.length; i++) {
            var part = uriParts[i];
            if (i > 0) {
                part = Uri.ensureNoPrecedingSlash(part);
            }
            if (i < uriParts.length - 1) {
                part = Uri.ensureTrailingSlash(part);
            }
            result += part;
        }
        return result;
    };
    Uri.ensureNoPrecedingSlash = function (part) {
        return part[0] === "/" ? part.substr(1) : part;
    };
    Uri.ensureTrailingSlash = function (part) {
        return part[part.length - 1] !== "/" ? (part + "/") : part;
    };
    Uri.prototype.getScheme = function () {
        return this._scheme;
    };
    Uri.prototype.setScheme = function (scheme) {
        this._scheme = scheme;
    };
    Uri.prototype.getAuthority = function () {
        return this._getAuthority(false);
    };
    Uri.prototype.setAuthority = function (authority) {
        this._parseAuthority(authority);
    };
    Uri.prototype.getUser = function () {
        return this._user;
    };
    Uri.prototype.getHost = function () {
        return this._host;
    };
    Uri.prototype.getPort = function () {
        return this._port;
    };
    Uri.prototype.getPath = function (trimTrailingSlash) {
        var retPath = this._path;
        if (Boolean(trimTrailingSlash)) {
            // If the last character is a slash
            if (retPath !== null && retPath.lastIndexOf("/") === (retPath.length - 1)) {
                retPath = retPath.slice(0, -1); //trim last character
            }
        }
        return retPath;
    };
    /**
     * Returns a string containing the leftmost portion of the URI string, ending with the portion specified by part
     */
    Uri.prototype.getLeftPart = function (part) {
        var ret = this._scheme + "://"; // default value is UriPartial.scheme
        if (part === UriPartial.authority) {
            ret += this.getAuthority();
        }
        if (part === UriPartial.path) {
            ret += this.getPath();
        }
        if (part === UriPartial.query) {
            ret += this.getQuery();
        }
        return ret;
    };
    Uri.prototype.setPath = function (path) {
        if (path && path[0] !== "/") {
            path = "/" + path;
        }
        this._parsePath(path);
    };
    Uri.prototype.getPathSegments = function () {
        return this._pathSegments;
    };
    Uri.prototype.getLastPathSegment = function () {
        var pathSegments = this._pathSegments;
        return pathSegments[pathSegments.length - 1] || "";
    };
    Uri.prototype.getQuery = function (encoded) {
        return this._serializeQuery(encoded);
    };
    /**
     * Query is not well-defined but is commonly formatted as key=value and delimited with & or ;
     * (http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.2.2)
     *  - URI with query "a=1&b=2" or "a=1;b=2" will return {a: "1", b: "2"}
     *  - Mixed-mode will also work: "a=1&b=2;c=3" will return {a: "1", b: "2", c: "3"}
     *  - Assumes that parameters will be unique (i.e. "a=1&a=2" is not allowed and will produce unexpected results)
     */
    Uri.prototype.setQuery = function (query) {
        this.setQueryFromObject(this._deserializeQuery(query));
    };
    Uri.prototype.getQueryAsObject = function () {
        return this._query;
    };
    Uri.prototype.setQueryFromObject = function (queryObj) {
        this._query = {};
        for (var queryKey in queryObj) {
            if (queryObj.hasOwnProperty(queryKey)) {
                this.setQueryParameter(queryKey, queryObj[queryKey]);
            }
        }
    };
    Uri.prototype.getQueryParameter = function (queryKey) {
        var ret = null;
        var query = this._query;
        if (this._queryCaseInsensitive) {
            queryKey = queryKey.toLowerCase();
            for (var key in query) {
                if (query.hasOwnProperty(key) && key.toLowerCase() === queryKey) {
                    ret = query[key];
                }
            }
        }
        else {
            ret = query[queryKey];
        }
        return ret || null;
    };
    /**
     * Adds query parameter to the end if queryKey does not exist, or
     * overwrites existing query value if queryKey already exists.
     */
    Uri.prototype.setQueryParameter = function (queryKey, queryValue, ignoreEmptyValues) {
        if (ignoreEmptyValues === void 0) { ignoreEmptyValues = true; }
        var queryValueDecoded = this._decodeQueryString(queryValue);
        // there is no point adding undefined or modifying existing values to undefined or null.
        if (!!queryValueDecoded || ignoreEmptyValues) {
            this._query[this._decodeQueryString(queryKey)] = queryValueDecoded;
        }
    };
    Uri.prototype.removeQueryParameter = function (queryKey) {
        delete this._query[this._decodeQueryString(queryKey)];
    };
    Uri.prototype.getFragment = function () {
        return this._fragment;
    };
    Uri.prototype.setFragment = function (fragment) {
        if (fragment[0] === "#") {
            fragment = fragment.substring(1);
        }
        // Treat the fragment as a query string (decode + as space) because we pass in
        // query parameters using the fragment on page load.
        this._fragment = this._decodeQueryString(fragment);
    };
    /**
     * Does a strict equality check of URIs (including same query parameters
     * in the same order, and most comparisons case-sensitive).
     * According to RFC3986: scheme and host should be case-insensitive.
     * Note: This does not follow RFC2616's URI Comparison since it is not HTTP-specific.
     *
     * KNOWN ISSUE: Depending on your definition of "incorrect," this could return
     * incorrect results for URI parts that get decoded.
     * For example: http://somewhere/my%2fpath and http://somewhere/my/path
     * will compare as equal because the comparisons are done to decoded versions.
     */
    Uri.prototype.equals = function (uri) {
        return StringHelper_1.equalsCaseInsensitive(this._scheme, uri.getScheme()) &&
            this._user === uri.getUser() &&
            StringHelper_1.equalsCaseInsensitive(this._host, uri.getHost()) &&
            this._port === uri.getPort() &&
            this._fragment === uri.getFragment() &&
            this._equalsCaseAppropriate(this.getPath(/*trimTrailingSlash*/ true), uri.getPath(true), this._pathCaseInsensitive) &&
            this._equalsCaseAppropriate(this.getQuery(), uri.getQuery(), this._queryCaseInsensitive);
    };
    /**
     * Does an equivalence check of two URIs. Checks to see if the URIs are
     * equivalent, but they may not be exact! Strings are compared case
     * insensitive and query parameters can be in any order.
     *
     * KNOWN ISSUE: Depending on your definition of "incorrect," this could return
     * incorrect results for URI parts that get decoded.
     * For example: http://somewhere/my%2fpath and http://somewhere/my/path
     * will compare as equal because the comparisons are done to decoded versions.
     */
    Uri.prototype.equivalent = function (uri) {
        return StringHelper_1.equalsCaseInsensitive(this._scheme, uri.getScheme()) &&
            StringHelper_1.equalsCaseInsensitive(this._user, uri.getUser()) &&
            StringHelper_1.equalsCaseInsensitive(this._host, uri.getHost()) &&
            StringHelper_1.equalsCaseInsensitive(this._port, uri.getPort()) &&
            StringHelper_1.equalsCaseInsensitive(this.getPath(/*trimTrailingSlash*/ true), uri.getPath(true)) &&
            ObjectUtil_1.deepCompare(queryToLower(this.getQueryAsObject()), queryToLower(uri.getQueryAsObject())) &&
            StringHelper_1.equalsCaseInsensitive(this._fragment, uri.getFragment());
    };
    /**
     * Note that this returns the URL encoded/escaped while the getXXX() methods
     * for the individual components return the unescaped strings. Returning a
     * concatenation of the decoded components would change the semantics of the
     * URL. See section 2.4.2 of RFC 2396 (http://www.ietf.org/rfc/rfc2396.txt).
     *
     * Use doNotPercentEncodeHost to indicate that the output should not have a
     * percent-encoded host, such as when passing to the url parameter of
     * XmlHttpRequest.open(). Section 3.2.2 of RFC 2396 only allows alphanumeric
     * characters and hyphen in the host of a URL, so percent-encoded hosts are
     * not allowed. While section 3.2.2 of RFC 3986 does not restrict the host
     * character set anymore, not all browsers can handle a percent-encoded host
     * - DNS lookup fails.  But, they will convert the unencoded Unicode to the
     * IDNA encoding (punycode), so leaving the host as-is in this case is preferred.
     */
    Uri.prototype.toString = function (outputOptions) {
        return this._getStringInternal(/*encoded*/ true, outputOptions);
    };
    /**
     * This method should be used to obtain a string for display purposes only,
     * because as mentioned above, a decoded URL may have different semantics than
     * the encoded version.
     */
    Uri.prototype.getDecodedStringForDisplay = function () {
        return this._getStringInternal(/*encoded*/ false);
    };
    /*
     * Input URI of "foo://user:pass@host.com/alpha/beta/gamma/delta;p;a;r;a;m;s?q=1&u=2&e=3&r=4&y=5#fragment"
     * would return "foo://user:pass@host.com/alpha/beta/gamma/delta;p;a;r;a;m;s";
     */
    Uri.prototype.getStringWithoutQueryAndFragment = function () {
        return this._getStringWithoutQueryAndFragmentInternal(/*encoded=*/ true);
    };
    Uri.prototype._equalsCaseAppropriate = function (a, b, isCaseInsensitive) {
        if (isCaseInsensitive) {
            return StringHelper_1.equalsCaseInsensitive(a, b);
        }
        return a === b;
    };
    Uri.prototype._getStringInternal = function (encoded, outputOptions) {
        var ret = this._getStringWithoutQueryAndFragmentInternal(encoded, outputOptions);
        var query = this.getQuery(encoded);
        if (query) {
            ret += "?" + query;
        }
        if (this._fragment) {
            ret += "#" + (encoded ? encodeURIComponent(this._fragment) : this._fragment);
        }
        return ret;
    };
    Uri.prototype._getStringWithoutQueryAndFragmentInternal = function (encoded, outputOptions) {
        var ret = "";
        if (this._scheme) {
            ret += (encoded ? encodeURIComponent(this._scheme) : this._scheme) + ":";
        }
        // Authority includes user, host, and port
        var authority = this._getAuthority(/*encoded=*/ encoded, outputOptions);
        if (authority) {
            ret += "//" + authority;
        }
        if (this._pathEncoded) {
            ret += (encoded ? this._pathEncoded : this._path);
        }
        return ret;
    };
    Uri.prototype._deserializeQuery = function (queryStr) {
        var queryObj = {};
        if (queryStr.indexOf("?") === 0) {
            queryStr = queryStr.substring(1);
        }
        for (var _i = 0, _a = queryStr.split(/[;&]+/); _i < _a.length; _i++) {
            var queryPart = _a[_i];
            var keyEndIndex = queryPart.indexOf('=');
            // "foo" is a legal query string equivalent to "foo="
            if (keyEndIndex < 0) {
                keyEndIndex = queryPart.length;
            }
            if (keyEndIndex > 0) {
                queryObj[queryPart.substr(0, keyEndIndex)] = queryPart.substr(keyEndIndex + 1);
            }
        }
        return queryObj;
    };
    Uri.prototype._serializeQuery = function (encoded) {
        var queryStr = "";
        for (var queryKey in this._query) {
            if (this._query.hasOwnProperty(queryKey)) {
                var key = queryKey;
                var value = this._query[queryKey];
                if (encoded) {
                    key = encodeURIComponent(key);
                    value = encodeURIComponent(value);
                }
                if (value === null || value === "") {
                    queryStr += key + "=&";
                }
                else {
                    queryStr += key + "=" + value + "&";
                }
            }
        }
        if (queryStr !== "") {
            queryStr = queryStr.slice(0, -1); //trim extra & at the end
        }
        return queryStr;
    };
    Uri.prototype._parseURI = function (uriString) {
        var remainingString = uriString;
        // Find fragment
        var fragmentBeginPos = remainingString.indexOf("#");
        if (fragmentBeginPos >= 0) {
            var fragment = remainingString.substring(fragmentBeginPos + 1);
            this.setFragment(fragment);
            remainingString = remainingString.substring(0, fragmentBeginPos); //remove fragment
        }
        // Find scheme
        var schemeEndPos = remainingString.search(DELIMITERS);
        if (schemeEndPos >= 0) {
            if (remainingString[schemeEndPos] === ":") {
                this.setScheme(remainingString.substring(0, schemeEndPos));
                remainingString = remainingString.substring(schemeEndPos + 1); //remove scheme
            }
        }
        else {
            this.setPath(remainingString);
            return;
        }
        // Find authority
        var authority = "";
        var doubleSlashPos = remainingString.indexOf("//");
        if (doubleSlashPos === 0) {
            remainingString = remainingString.substring(2); //skip the //
            var authorityEndPos = remainingString.search(AUTHORITY_TERMINATORS);
            if (authorityEndPos >= 0) {
                authority = remainingString.substring(0, authorityEndPos);
                remainingString = remainingString.substring(authorityEndPos); //remove authority
            }
            else {
                authority = remainingString;
                remainingString = "";
            }
            this.setAuthority(authority);
            if (!remainingString) {
                this.setPath("");
                return;
            }
        }
        // Find query
        var queryBeginPos = remainingString.indexOf("?");
        if (queryBeginPos >= 0) {
            this.setQuery(remainingString.substring(queryBeginPos + 1));
            remainingString = remainingString.substring(0, queryBeginPos);
        }
        this.setPath(remainingString);
    };
    Uri.prototype._parseAuthority = function (authority) {
        this._host = authority;
        var userNameEndPos = authority.lastIndexOf("@");
        if (userNameEndPos >= 0) {
            this._host = this._host.substring(userNameEndPos + 1);
        }
        var hostPortSeparatorPos = this._host.indexOf(":");
        if (userNameEndPos < 0 && hostPortSeparatorPos < 0) {
            return;
        }
        var authorityComponents = authority;
        if (userNameEndPos < 0) {
            this._host = authorityComponents;
        }
        else {
            this._user = authorityComponents.substring(0, userNameEndPos);
            this._host = authorityComponents.substring(userNameEndPos + 1);
        }
        if (hostPortSeparatorPos >= 0) {
            this._port = this._host.substring(hostPortSeparatorPos + 1);
            this._host = this._host.substring(0, hostPortSeparatorPos);
        }
        this._user = decodeURIComponent(this._user);
        this._host = decodeURIComponent(this._host);
    };
    Uri.prototype._parsePath = function (remainingString) {
        this._path = decodeURIComponent(remainingString);
        var pathSegments = this._pathSegments = [];
        this._pathEncoded = remainingString;
        // We have to split the path BEFORE decoding so that encoded / characters
        // don't get interpreted as path separators.
        var encodedPathSegments = remainingString.split("/");
        for (var i = 0; i < encodedPathSegments.length; ++i) {
            pathSegments[i] = decodeURIComponent(encodedPathSegments[i]);
        }
        // Trims first/last element if empty
        if (pathSegments[0] === "") {
            pathSegments.shift(); // remove first element
        }
        if (pathSegments[pathSegments.length - 1] === "") {
            pathSegments.pop(); // remove last element
        }
    };
    Uri.prototype._getAuthority = function (encoded, outputOptions) {
        if (outputOptions === void 0) { outputOptions = {}; }
        // Note that if encoded is false, doNotPercentEncodeHost doesn't matter - the whole URI (including host) will not be encoded.
        var doNotPercentEncodeHost = outputOptions && outputOptions.doNotPercentEncodeHost;
        var authority = "";
        var user;
        var host;
        var port;
        if (encoded) {
            // While technically a reserved character, ':' is commonly used in the
            // username to denote username:password, so we special case not encoding
            // the first occurence of this character.
            user = encodeURIComponent(this._user).replace("%3A", ":");
            if (doNotPercentEncodeHost) {
                host = this._host;
            }
            else {
                host = encodeURIComponent(this._host);
            }
            port = encodeURIComponent(this._port);
        }
        else {
            user = this._user;
            host = this._host;
            port = this._port;
        }
        if (user !== "") {
            authority = user + "@";
        }
        if (this._host !== "") {
            authority += host;
        }
        if (this._port !== "") {
            authority += ":" + port;
        }
        return authority;
    };
    Uri.prototype._decodeQueryString = function (component) {
        // For query strings only, "+" is a valid substitute for a space, but decodeURIComponent
        // doesn't take this into account. (Note that replace("+", " ") only replaces one +.)
        var result = component;
        try {
            result = decodeURIComponent(component.replace(/\+/g, " "));
        }
        catch (e) {
            // %1 (or anything with a % that is not a result of calling encodeURIComponent)
            // would make decodeURIComponent throw a URI malformed exception.
            // Return the original value in these cases.
        }
        return result;
    };
    return Uri;
}());
exports.default = Uri;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function deserializeQuery(paramsString) {
    var viewParams = {};
    if (paramsString) {
        var paramParts = paramsString.split('&');
        for (var i = 0; i < paramParts.length; i++) {
            var param = paramParts[i].split('=');
            // For query strings only, '+' is a valid substitute for a space, but decodeURIComponent
            // doesn't take this into account.
            if (typeof param[1] !== 'undefined') {
                param[1] = param[1].replace(/\+/g, ' ');
                viewParams[param[0]] = decodeURIComponent(param[1]);
            }
        }
    }
    return viewParams;
}
exports.deserializeQuery = deserializeQuery;
function getQueryStringFromUrl(url) {
    return url.substring(url.indexOf('?') + 1);
}
exports.getQueryStringFromUrl = getQueryStringFromUrl;
function getUrlWithoutQueryString(url) {
    return url.substring(0, url.indexOf('?'));
}
exports.getUrlWithoutQueryString = getUrlWithoutQueryString;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Features_1 = __webpack_require__(93);
var FeaturesBasic_1 = __webpack_require__(58);
var AddressParser = __webpack_require__(69);
var BaseDataStore_1 = __webpack_require__(32);
var DataStoreCachingType_1 = __webpack_require__(28);
exports.ENABLE_PARAM_KEY = 'enableFeatures';
exports.DISABLE_PARAM_KEY = 'disableFeatures';
var STORE_KEY = 'Store';
var AllowFeatureOverrides = { ODB: 587, ODC: 'AllowFeatureOverrides', Fallback: false };
var SPODebugOnlyCookieRedirect = { ODB: 357, ODC: null, Fallback: false };
var _overrides = {};
var _store = new BaseDataStore_1.default("FeatureOverrides", DataStoreCachingType_1.default.session);
// Evaluate the AllowFeatureOverrides feature only once since we are going to need it a lot
var _canOverride = Features_1.default.isFeatureEnabled(AllowFeatureOverrides)
    // anywhere debugonlycookieredirect is enabled, we allow feature overrides too
    || Features_1.default.isFeatureEnabled(SPODebugOnlyCookieRedirect);
if (true) {
    _canOverride = true;
}
function init() {
    // Load existing values
    var overrides = _store.getValue(STORE_KEY);
    if (overrides) {
        _overrides = overrides;
    }
    else {
        _overrides = {};
    }
    // Parse the url and add any valid feature params in the override map
    var uri = location.search ? location.search.substring(1) : '';
    var params = AddressParser.deserializeQuery(uri);
    var enableFeatures = params[exports.ENABLE_PARAM_KEY];
    if (enableFeatures) {
        for (var _i = 0, _a = enableFeatures.split(','); _i < _a.length; _i++) {
            var param = _a[_i];
            _overrides[param] = true;
        }
    }
    var disableFeatures = params[exports.DISABLE_PARAM_KEY];
    if (disableFeatures) {
        for (var _b = 0, _c = disableFeatures.split(','); _b < _c.length; _b++) {
            var param = _c[_b];
            _overrides[param] = false;
        }
    }
    _store.setValue(STORE_KEY, _overrides);
}
init();
var FeatureOverrides = /** @class */ (function () {
    function FeatureOverrides() {
    }
    Object.defineProperty(FeatureOverrides, "Overrides", {
        get: function () {
            return _overrides;
        },
        enumerable: true,
        configurable: true
    });
    FeatureOverrides.isFeatureEnabled = function (feature, expFeatures) {
        // Check if there is an overriden value for the given feature
        if (_canOverride) {
            if (feature.ODB in _overrides) {
                return _overrides[feature.ODB];
            }
            else if (feature.ODC in _overrides) {
                return _overrides[feature.ODC];
            }
        }
        if (expFeatures) {
            return FeaturesBasic_1.isSPFeatureEnabled(feature, expFeatures);
        }
        return Features_1.default.isFeatureEnabled(feature);
    };
    FeatureOverrides.AllowFeatureOverrides = AllowFeatureOverrides;
    FeatureOverrides.SPODebugOnlyCookieRedirect = SPODebugOnlyCookieRedirect;
    return FeatureOverrides;
}());
exports.default = FeatureOverrides;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (true) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(71);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (true) {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Returns a copy of the specified object by deeply cloning all of its properties.
 */
function deepCopy(object) {
    var refsCopied = [];
    function copyRecurse(obj) {
        var result = null;
        if (obj) {
            if (Array.isArray(obj)) {
                // @ts-ignore
                result = [];
            }
            else {
                // create clone of the object with same prototype chain
                result = Object.create(Object.getPrototypeOf(obj));
            }
            // iterate over all the properties in the object
            Object.keys(obj).forEach(function (key) {
                // recursively copy the object's properties if the property is an object
                var value = obj[key];
                if (typeof value === 'object') {
                    // @ts-ignore
                    if (refsCopied.indexOf(value) !== -1) {
                        throw new Error("Cannot perform DeepCopy() because a circular reference was encountered, object: " + obj + ", property: " + key);
                    }
                    // @ts-ignore
                    refsCopied.push(value);
                    // @ts-ignore
                    result[key] = copyRecurse(value);
                    refsCopied.pop();
                }
                else {
                    // @ts-ignore
                    result[key] = value;
                }
            });
        }
        return result;
    }
    return copyRecurse(object);
}
exports.deepCopy = deepCopy;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Guid = __webpack_require__(77);
var CorrelationVector = /** @class */ (function () {
    function CorrelationVector(parent, current) {
        if (parent) {
            this.root = parent.root;
            this.parent = parent.current;
        }
        else {
            this.root = this.parent = Guid.Empty;
        }
        if (current) {
            this.current = current;
        }
        else {
            this.current = Guid.generate();
        }
    }
    CorrelationVector.prototype.toString = function () {
        return this.root + "#" + this.parent + "#" + this.current;
    };
    CorrelationVector.RootVector = window.rootVector || new CorrelationVector();
    return CorrelationVector;
}());
exports.CorrelationVector = CorrelationVector;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// tslint:disable:no-bitwise
Object.defineProperty(exports, "__esModule", { value: true });
function generateUuidPart(length) {
    var str = '';
    while (str.length < length) {
        var num = Math.random() * 16;
        num = num | 0; // clear decimal
        str += num.toString(16);
    }
    return str;
}
exports.Empty = '00000000-0000-0000-0000-000000000000';
/**
 * Return a v4 UUID as specified by RFC 4122 http://tools.ietf.org/html/rfc4122
 */
function generate() {
    var parts = [];
    parts.push(generateUuidPart(8));
    parts.push(generateUuidPart(4));
    // first digit must be 4 since we are using pseudorandom numbers
    var timeHighAndVersion = '4' + generateUuidPart(3);
    parts.push(timeHighAndVersion);
    // first digit must have first two bits set to 10
    var clockSeqHiAndReserved = generateUuidPart(4);
    var intVal = parseInt(clockSeqHiAndReserved[0], 10);
    intVal = intVal & 3; // clear out first two bits
    intVal = intVal | 8; // set first bit to 1
    clockSeqHiAndReserved = intVal.toString(16) + clockSeqHiAndReserved.substr(1);
    parts.push(clockSeqHiAndReserved);
    parts.push(generateUuidPart(12));
    return parts.join('-');
}
exports.generate = generate;
/**
 * Normalizes a GUID to lowercase. Returns '' if guid is not given.
 * @param includeBrackets - if true, add or keep brackets; if false, strip brackets
 */
function normalizeLower(guid, includeBrackets) {
    if (includeBrackets === void 0) { includeBrackets = false; }
    return guid ? _normalizeBrackets(guid.toLowerCase(), includeBrackets) : '';
}
exports.normalizeLower = normalizeLower;
/**
 * Normalizes a GUID to uppercase. Returns '' if guid is not given.
 * @param includeBrackets - if true, add or keep brackets; if false, strip brackets
 */
function normalizeUpper(guid, includeBrackets) {
    if (includeBrackets === void 0) { includeBrackets = false; }
    return guid ? _normalizeBrackets(guid.toUpperCase(), includeBrackets) : '';
}
exports.normalizeUpper = normalizeUpper;
function _normalizeBrackets(guid, includeBrackets) {
    var match = guid.match(/^\{(.*)\}$/);
    if (match) {
        return includeBrackets ? match[0] : match[1];
    }
    return includeBrackets ? '{' + guid + '}' : guid;
}


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
function assign(base, extension) {
    return tslib_1.__assign(base, extension);
}
exports.assign = assign;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(24);
exports.Engagement = SingleEventBase_1.createSingleEvent({
    eventName: 'Engagement,',
    shortEventName: 'Engagement'
}, {
    name: {
        isKey: true,
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    isIntentional: {
        isPrefixingDisabled: true,
        type: 3 /* Boolean */
    },
    scenario: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    location: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    usageType: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    currentPage: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    previousPage: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    experiment: {
        isPrefixingDisabled: true,
        type: 4 /* Object */
    },
    siteId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    webId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    listId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    groupId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    docId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    webTemplateId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    listTemplateId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    siteType: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    feature: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    component: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    extraData: 4 /* Object */,
    objectType: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    datasource: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    action: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    }
});


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var PairedEventBase_1 = __webpack_require__(81);
var ResultTypeEnum_1 = __webpack_require__(35);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
exports.Qos = PairedEventBase_1.createPairedEvent({
    eventName: 'Qos,',
    shortEventName: 'Qos'
}, {
    name: {
        isKey: true,
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    startTimeOverride: {
        isPrefixingDisabled: true,
        type: 2 /* Number */
    },
    resultCode: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    resultType: {
        typeRef: ResultTypeEnum_1.ResultTypeEnum,
        isPrefixingDisabled: true,
        type: 6 /* Enum */
    },
    error: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    extraData: 4 /* Object */,
    extraMetrics: {
        isPrefixingDisabled: true,
        type: 4 /* Object */
    }
});


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(75)
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var EventBase_1 = __webpack_require__(29);
var Manager_1 = __webpack_require__(33);
var ResultTypeEnum_1 = __webpack_require__(35);
var ErrorHelper = __webpack_require__(36);
var safeSerialize_1 = __webpack_require__(55);
var schemaExceptionErrorCode = 'GetSchemaException';
var promiseCreationFailureErrorCode = 'PromiseCreationFailed';
var timeoutErrorCode = 'Timeout';
function generateQosResult(resultType, resultCode, error) {
    var schema = {
        resultType: resultType
    };
    if (resultCode) {
        schema.resultCode = resultCode;
    }
    if (error) {
        schema.error = error;
    }
    return schema;
}
var PairedEventBase = /** @class */ (function (_super) {
    tslib_1.__extends(PairedEventBase, _super);
    function PairedEventBase(data, parent) {
        return _super.call(this, data, EventBase_1.ClonedEventType.Start, parent) || this;
    }
    PairedEventBase.instrumentPromise = function (startSchema, createPromise, getCompleteSchema, getErrorSchema, // tslint:disable-line:no-any
    timeoutMs, timeoutSchema, parent) {
        var promise;
        var event = new this(startSchema, parent);
        if (timeoutMs) {
            event.setTimeout(timeoutMs, timeoutSchema);
        }
        var onComplete = function (result) {
            var schema;
            if (getCompleteSchema) {
                try {
                    schema = getCompleteSchema(result);
                }
                catch (e) {
                    schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, schemaExceptionErrorCode, e.toString());
                }
            }
            else {
                schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Success);
            }
            event.end(schema);
        };
        var onError = function (errorArgs) {
            var schema;
            if (getErrorSchema) {
                try {
                    schema = getErrorSchema(errorArgs);
                }
                catch (e) {
                    schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, schemaExceptionErrorCode, e.toString());
                }
            }
            else if (errorArgs) {
                var failureResultType = (errorArgs instanceof Error && errorArgs.name === 'Canceled') ?
                    ResultTypeEnum_1.ResultTypeEnum.ExpectedFailure : ResultTypeEnum_1.ResultTypeEnum.Failure;
                schema = generateQosResult(failureResultType, undefined, safeSerialize_1.safeSerialize(errorArgs));
            }
            else {
                schema = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure);
            }
            event.end(schema);
        };
        try {
            promise = createPromise();
        }
        catch (e) {
            event.end(generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, promiseCreationFailureErrorCode, e.toString()));
            throw e;
        }
        promise.then(onComplete, onError);
        return promise;
    };
    PairedEventBase.prototype.setTimeout = function (ms, data) {
        this._clearTimeout();
        if (!data) {
            data = generateQosResult(ResultTypeEnum_1.ResultTypeEnum.Failure, timeoutErrorCode);
        }
        /* tslint:disable-next-line:ban-native-functions */
        window.setTimeout(this.end.bind(this, data), ms);
    };
    PairedEventBase.prototype.verbose = function (message) {
        if (this.endTime) {
            // event already ended, no need to log anymore
            return;
        }
        if (this._isQosEvent()) {
            var qosSchema = this.data;
            ErrorHelper.verbose(message, qosSchema.name);
        }
    };
    PairedEventBase.prototype.end = function (data) {
        // Make sure end can only be called once
        if (!this.endTime) {
            if (data) {
                this._setData(data);
            }
            // Set the end time
            this.endTime = Manager_1.Manager.getTime();
            // Log the event end
            this._logEvent(EventBase_1.ClonedEventType.End);
            // If this is a QOS event log and contains an error message trigger the upload of logs by calling
            // the ErrorHelper
            if (this._isQosEvent()) {
                var qosSchema = this.data;
                if (qosSchema.error) {
                    ErrorHelper.log(qosSchema.error, qosSchema.name, qosSchema.resultCode, qosSchema.resultType);
                }
            }
            this._clearTimeout();
        }
    };
    PairedEventBase.prototype._clearTimeout = function () {
        if (this.timeoutId) {
            /* tslint:disable-next-line:ban-native-functions */
            window.clearTimeout(this.timeoutId);
            this.timeoutId = undefined;
        }
    };
    PairedEventBase.prototype._isQosEvent = function () {
        return this.eventName.indexOf('Qos,') >= 0;
    };
    return PairedEventBase;
}(EventBase_1.EventBase));
function createPairedEvent(props, metadata, baseClass) {
    var PairedEvent = /** @class */ (function (_super) {
        tslib_1.__extends(PairedEvent, _super);
        function PairedEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PairedEvent;
    }(PairedEventBase));
    EventBase_1.addEventProps(PairedEvent.prototype, props, metadata, baseClass);
    return PairedEvent;
}
exports.createPairedEvent = createPairedEvent;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(24);
exports.Trace = SingleEventBase_1.createSingleEvent({
    eventName: 'Trace,',
    shortEventName: 'Trace',
    requiresParent: false
}, {
    message: 1 /* String */
});


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var PageTransitionType;
(function (PageTransitionType) {
    PageTransitionType[PageTransitionType["none"] = 0] = "none";
    PageTransitionType[PageTransitionType["fullPageLoad"] = 4] = "fullPageLoad";
    PageTransitionType[PageTransitionType["onePageAppNavigation"] = 5] = "onePageAppNavigation";
})(PageTransitionType || (PageTransitionType = {}));
exports.default = PageTransitionType;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.RUMOneDataUpload = SingleEventBase_1.createSingleEvent({
    eventName: 'RUMOneDataUpload,',
    shortEventName: 'RUMOneDataUpload'
}, {
    streamName: 1 /* String */,
    dictionary: 4 /* Object */
});
exports.default = exports.RUMOneDataUpload;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var EventBase_1 = __webpack_require__(52);
var Manager_1 = __webpack_require__(57);
var Beacon_event_1 = __webpack_require__(38);
var ErrorHelper_1 = __webpack_require__(21);
var PlatformDetection_1 = __webpack_require__(56);
var DataCompletenessInfo_1 = __webpack_require__(149);
var SimpleUri_1 = __webpack_require__(119);
var AriaTelemetryHandler_1 = __webpack_require__(151);
var Promise_1 = __webpack_require__(27);
var ARIA_QOS_NAME = "AriaBeacon";
var ariaTelemetry;
var initialized = false;
var config = {
    logStartEvents: false,
    Init: init,
    isInitialized: isInitialized
};
exports.default = config;
function isInitialized(aria) {
    return initialized;
}
function init(tenantToken, context, aria, dependencies) {
    if (dependencies === void 0) { dependencies = {}; }
    var _a = dependencies.platformDetection, platformDetection = _a === void 0 ? new PlatformDetection_1.default() : _a;
    try {
        ariaTelemetry = aria;
        config.logStartEvents = true;
        var loggerContext = {
            AccountType: EventBase_1.AccountType[context.accountType],
            BrowserIsMobile: platformDetection.isMobile,
            BrowserMajVer: platformDetection.browserMajor,
            BrowserMinVer: platformDetection.browserMinor,
            BrowserName: platformDetection.browserName,
            BrowserUserAgent: platformDetection.userAgent,
            Environment: context.environment,
            FarmLabel: context.farmLabel,
            IsAuthenticated: context.isAuthenticated ? 1 : 0,
            Market: context.market,
            Manifest: context.manifest,
            OSName: platformDetection.osName,
            OSVersion: platformDetection.osVersion,
            Session: context.session,
            SiteSubscriptionId: context.siteSubscriptionId || "",
            UserId: context.userId,
            Version: context.version,
            Workload: context.workload
        };
        if (context.farmLabel) {
            loggerContext.FarmLabel = context.farmLabel;
        }
        var completenessUri_1 = new SimpleUri_1.SimpleUri(context.completenessCallbackEndpoint);
        var completenessContext_1 = {
            telemetryTenantToken: tenantToken,
            appVersion: context.version,
            environment: context.environment,
            workload: context.workload,
            farmLabel: context.farmLabel,
            callbackEndpoint: completenessUri_1
        };
        var ariaTelemetryHandler = new AriaTelemetryHandler_1.AriaTelemetryHandler({
            ariaLoader: function () { return Promise_1.CancelablePromise.resolve(ariaTelemetry); },
            context: loggerContext,
            tenantToken: tenantToken,
            disableCookies: context.disableCookies,
            logStartEvents: config.logStartEvents,
            ariaQos: {
                isQosEvent: function (event) {
                    return Beacon_event_1.Beacon.isTypeOf(event) &&
                        !!event.data &&
                        event.data.name === ARIA_QOS_NAME;
                },
                reportQos: function (params) {
                    var isSuccess = params.result, statusCode = params.statusCode, events = params.events;
                    new Beacon_event_1.Beacon({
                        name: ARIA_QOS_NAME,
                        retryCount: 0,
                        totalRetries: 0,
                        eventCount: events ? events.length : 0
                    }).end({
                        success: isSuccess === 0,
                        status: statusCode + ''
                    });
                    if (true) {
                        // Display errors if the aria logger is failing to log
                        if (isSuccess !== 0) {
                            ErrorHelper_1.default.log(new Error("Aria logger failed with status code " + statusCode));
                        }
                    }
                    // If completeness Url is provided, send event to completeness endpoint
                    if (completenessUri_1.authority !== '') {
                        new DataCompletenessInfo_1.DataCompletenessInfo(completenessContext_1, isSuccess, statusCode, new Date().getTime(), events).send();
                    }
                }
            }
        });
        ariaTelemetryHandler.attach(Manager_1.Manager);
        initialized = true;
    }
    catch (e) {
        if (e instanceof ariaTelemetry.Exception) {
            e = new Error("Aria error: " + e.toString());
        }
        ErrorHelper_1.default.log(e);
    }
}


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Async_1 = __webpack_require__(67);
var ErrorHelper_1 = __webpack_require__(21);
var ObjectUtil_1 = __webpack_require__(87);
/**
 * Special status values based on states of the XHR instance.
 */
var XHRStatus;
(function (XHRStatus) {
    XHRStatus[XHRStatus["blocked"] = 0] = "blocked";
    XHRStatus[XHRStatus["exception"] = -1] = "exception";
    XHRStatus[XHRStatus["timeout"] = -2] = "timeout";
    XHRStatus[XHRStatus["abort"] = -3] = "abort";
})(XHRStatus = exports.XHRStatus || (exports.XHRStatus = {}));
var XHR = /** @class */ (function () {
    function XHR(options) {
        this._async = new Async_1.default(this);
        var url = options.url, _a = options.requestTimeoutInMS, requestTimeoutInMS = _a === void 0 ? XHR.DEFAULT_TIMEOUT_MS : _a, postData = options.json, _b = options.responseType, responseType = _b === void 0 ? '' : _b, _c = options.headers, headers = _c === void 0 ? {} : _c, _d = options.withCredentials, withCredentials = _d === void 0 ? false : _d, _e = options.needsCors, needsCors = _e === void 0 ? false : _e, progressCallback = options.onProgress, uploadProgressCallback = options.onUploadProgress;
        var _f = options.method, method = _f === void 0 ? postData ? 'POST' : 'GET' : _f;
        this._url = url;
        this._requestTimeoutInMS = requestTimeoutInMS;
        this._postData = postData;
        this._headers = headers;
        this._method = method;
        this._withCredentials = withCredentials;
        this._needsCors = needsCors;
        this._responseType = responseType;
        this._progressCallback = progressCallback;
        this._uploadProgressCallback = uploadProgressCallback;
    }
    XHR.prototype.abort = function (isCancelled) {
        var aborted = this._abortRequest();
        if (aborted && !isCancelled) {
            this._callFailureCallback(this._request, -3 /* abort */, false);
        }
    };
    XHR.prototype.start = function (successCallback, failureCallback) {
        var _this = this;
        this._successCallback = successCallback;
        this._failureCallback = failureCallback;
        var _a = this, method = _a._method, headers = _a._headers;
        try {
            this._request = this._getRequest();
            var _b = this, progressCallback_1 = _b._progressCallback, uploadProgressCallback_1 = _b._uploadProgressCallback, request_1 = _b._request, responseType = _b._responseType;
            if (progressCallback_1) {
                request_1.onprogress = function (event) {
                    try {
                        progressCallback_1(event);
                    }
                    catch (error) {
                        ErrorHelper_1.default.logError(error);
                    }
                };
            }
            if (uploadProgressCallback_1) {
                request_1.upload.onprogress = function (event) {
                    try {
                        uploadProgressCallback_1(event);
                    }
                    catch (error) {
                        ErrorHelper_1.default.logError(error);
                    }
                };
            }
            this._async.setTimeout(function () {
                // Check if we havent logged this event already
                if (!_this._completed) {
                    _this._timeoutCallback();
                }
            }, this._requestTimeoutInMS);
            // Report Qos on the actual qos calls
            request_1.onreadystatechange = function () {
                // Check if we havent logged this event in a timeout
                if (!_this._completed) {
                    var DONE = 4; // Default done readystate
                    try {
                        DONE = request_1.DONE || 4;
                    }
                    catch (e) {
                        // IE 9 will throw here if the request was aborted just swallow this
                    }
                    if (request_1.readyState === DONE) {
                        _this._requestEndCallback();
                    }
                }
            };
            request_1.open(method, this._url, true);
            if ("withCredentials" in request_1) {
                request_1.withCredentials = this._withCredentials;
            }
            // In IE, responseType has to be set after open is called
            request_1.responseType = responseType;
            // Headers have to be set after open is called
            for (var x in headers) {
                request_1.setRequestHeader(x, headers[x]);
            }
            request_1.send(this._postData);
        }
        catch (error) {
            ErrorHelper_1.default.logError(error, {
                origin: location ? location.origin : 'unknown',
                withCredentials: this._withCredentials,
                requestUrl: this._url,
                headers: ObjectUtil_1.safeSerialize(headers),
                method: method
            });
            // abort the request and set the exception status code
            this._abortRequest();
            this._callFailureCallback(this._request, -1 /* exception */, false);
        }
    };
    XHR.prototype._getRequest = function () {
        var _this = this;
        if (!this._needsCors || !window['XDomainRequest']) {
            return new XMLHttpRequest();
        }
        // This is only needed for IE 9 to support CORS requests
        // Note: we can not set headers on XDomainRequest
        var request = new XDomainRequest();
        request.setRequestHeader = function () { };
        request.onprogress = function () { };
        request.ontimeout = function () { };
        request.onload = function () {
            _this._requestEndCallback();
        };
        return request;
    };
    XHR.prototype._abortRequest = function () {
        var actuallyAborted = false;
        if (!this._completed) {
            this._completed = true;
            // Clear the timeout for the request
            this._async.dispose();
            // Cancel the request
            try {
                if (this._request) {
                    this._request.abort();
                }
            }
            catch (error) {
                // IE 9 will throw here if the request was aborted just swallow this
            }
            actuallyAborted = true;
        }
        return actuallyAborted;
    };
    XHR.prototype._timeoutCallback = function () {
        if (!this._completed) {
            this._abortRequest();
            this._callFailureCallback(this._request, -2 /* timeout */, true);
        }
    };
    XHR.prototype._callSuccessCallback = function (xhr, statusCode) {
        try {
            if (this._successCallback) {
                this._successCallback(xhr, statusCode);
            }
        }
        catch (error) {
            ErrorHelper_1.default.log(error);
        }
    };
    XHR.prototype._callFailureCallback = function (xhr, statusCode, timeout) {
        try {
            if (this._failureCallback) {
                this._failureCallback(xhr, statusCode, timeout);
            }
        }
        catch (error) {
            ErrorHelper_1.default.log(error);
        }
    };
    XHR.prototype._requestEndCallback = function () {
        if (!this._completed) {
            this._completed = true;
            var status_1 = -1 /* exception */;
            try {
                // Clear the timeout for the request
                this._async.dispose();
                try {
                    status_1 = this._request.status;
                }
                catch (error) {
                    // IE 9 will throw here if the request was aborted just swallow this
                }
            }
            catch (error) {
                status_1 = -1 /* exception */;
                ErrorHelper_1.default.log(error);
            }
            if (status_1 < 400 && status_1 > 0) {
                this._callSuccessCallback(this._request, status_1);
            }
            else {
                this._callFailureCallback(this._request, status_1, false);
            }
        }
    };
    XHR.DEFAULT_TIMEOUT_MS = 30000;
    return XHR;
}());
exports.default = XHR;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var UriEncoding_1 = __webpack_require__(45);
var deepCopy_1 = __webpack_require__(75);
exports.deepCopy = deepCopy_1.deepCopy;
var deepCompare_1 = __webpack_require__(150);
exports.deepCompare = deepCompare_1.deepCompare;
var safeSerialize_1 = __webpack_require__(55);
exports.safeSerialize = safeSerialize_1.safeSerialize;
var assign_1 = __webpack_require__(78);
exports.extend = assign_1.assign;
exports.DEFAULT_DELIMITER = '&';
exports.KEYVALUE_DELIMITER = '=';
/**
 * Serializes the object Name Values Pairs (Depth of 1).
 * Used for Query Strings and Cookie Values
 * @param {any} obj Object with name value pairs
 * @param {string} delimeter  Delimiter seperates the pairs
 * @param {boolean} skipEncoding True to skip encoding
 */
function serialize(obj, delimiter, skipEncoding) {
    delimiter = delimiter || exports.DEFAULT_DELIMITER;
    var values = Object.keys(obj).map(function (name) {
        // Get the value and convert it to a string
        var value = obj[name];
        value = value ? value.toString() : "";
        if (!skipEncoding) {
            value = UriEncoding_1.default.encodeURIComponent(value);
        }
        // Add the encoded value to the array
        return name + exports.KEYVALUE_DELIMITER + value;
    });
    return values.join(delimiter);
}
exports.serialize = serialize;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Regex that finds {#} so it can be replaced by the arguments in string format
var FORMAT_REGEX = /\{(\d+)\}/g;
/**
 * String Format is like C# string format. Use template strings instead unless the string is dynamic.
 * Usage Example: "hello {0}!".format("mike") will return "hello mike!"
 * Calling format on a string with less arguments than specified in the format will substitute "undefined"
 */
function format(template) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    return template.replace(FORMAT_REGEX, function (match, valueIndex) {
        var value = values[Number(valueIndex)];
        // Checking null for consistency with old behavior, all other values pass through.
        return value === null ? '' : "" + value;
    });
}
exports.format = format;
/**
 * Returns an array made of replacemant values and string literal values, in order.
 * @param template Base string with replacement tokens.
 * @param values Array of values to insert into corresponding replacement token.
 */
function formatToArray(template) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    var parts = [];
    var regexResult;
    var lastIndex = 0;
    while ((regexResult = FORMAT_REGEX.exec(template))) {
        // The full string of characters matched.
        var match = regexResult[0];
        // Get replacement value.
        var valueIndex = parseInt(match.replace(/\{|\}+/g, ''), 10);
        var replacementValue = values[valueIndex];
        // Get text between tokens and add to our array.
        if (regexResult.index > lastIndex) {
            parts.push(template.substring(lastIndex, regexResult.index));
        }
        // Save last index.
        lastIndex = FORMAT_REGEX.lastIndex;
        // Add replacement value to our array.
        parts.push(replacementValue);
    }
    // Grab any remaining text after the last match.
    if (lastIndex !== template.length) {
        parts.push(template.substring(lastIndex, template.length));
    }
    return parts;
}
exports.formatToArray = formatToArray;
/**
 * Returns true if s ends with suffix.
 */
function doesStringEndWith(s, suffix) {
    return s.substr(s.length - suffix.length) === suffix;
}
exports.doesStringEndWith = doesStringEndWith;
/**
 * Returns true if s starts with prefix.
 */
function doesStringStartWith(s, prefix) {
    return s.substr(0, prefix.length) === prefix;
}
exports.doesStringStartWith = doesStringStartWith;
/**
 * Return a string of the given length, using 0s to pad in from the right.
 */
function rightPad(data, length) {
    var result = data.toString();
    while (result.length < length) {
        result = result + "0";
    }
    return result;
}
exports.rightPad = rightPad;
/**
 * Return a string of the given length, using 0s to pad in from the left.
 */
function leftPad(data, length) {
    var result = data.toString();
    while (result.length < length) {
        result = "0" + result;
    }
    return result;
}
exports.leftPad = leftPad;
/**
 * Look for any of the chars in searchValues in str.
 * Returns the index of the char found or -1 if nothing is found.
 */
function findOneOf(str, searchValues) {
    for (var idx = 0; idx < str.length; idx++) {
        if (searchValues.indexOf(str[idx]) >= 0) {
            return idx;
        }
    }
    return -1; // none of the searchValues exist in string
}
exports.findOneOf = findOneOf;
/**
 * Determines if two strings are equal when both converted to uppercase.
 */
function equalsCaseInsensitive(a, b) {
    if (a && b) {
        return a.toUpperCase() === b.toUpperCase();
    }
    return a === b;
}
exports.equalsCaseInsensitive = equalsCaseInsensitive;
/**
 * Capitalizes the first letter of str.
 */
function capitalize(str) {
    if (str) {
        return str[0].toUpperCase() + str.substr(1);
    }
    return str;
}
exports.capitalize = capitalize;
/**
 * De-capitalizes the first letter of str.
 */
function decapitalize(str) {
    if (str) {
        return str[0].toLowerCase() + str.substr(1);
    }
    return str;
}
exports.decapitalize = decapitalize;
/**
 * Selects a string based on plurality.
 *
 * @param count - The value to base selection on
 * @param single - The string to select when it's a singular value
 * @param multiple - The string to select when it's a plural value
 *
 * @deprecated This method does NOT give accurate results for many languages!!
 *             Use getLocalizedCountValue instead.
 */
function pluralSelect(count, single, plural) {
    return count === 1 ? single : plural;
}
exports.pluralSelect = pluralSelect;
/**
 * Given a specially formatted localized text, a set of intervals, and a count,
 * return the localized text which corresponds to the first interval the
 * count falls into.
 *
 * Please see https://microsoft.sharepoint.com/teams/OISGPortal/LocKits/Lockit%20Instructions/SharePoint%20Core%20Localization.aspx
 * for more details.
 *
 * @param {string} locText - || deliminated blocks of localized texts, representing
 *  the various singular and plural forms of the string  being localized
 * @param {string} intervals - || deliminated blocks of numeric intervals, defining the ranges
 *  of that interval. Has special support for , * and -.
 * @param {number} count - The count used to determine which interval to return.
 *
 * @return
 * The localized block which corresponds to the first interval the count falls into.
 *
 * @example
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 0)
 *   returns items
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 1)
 *   returns item
 * StringHelper.getLocalizedCountValue('items||item||items', '0||1||2-', 2)
 *   returns items
 */
function getLocalizedCountValue(locText, intervals, count) {
    count = Number(count); // defensively make sure count is a number
    // !!!IMPORTANT!!! changes in this function need to be in sync with
    // the methods with the same name located at:
    // otools/inc/sts/stsom/utilities/SPLocUtility.cs
    // sts/Client/Script/Init/LocUtility.cs
    if (locText === undefined || intervals === undefined || count === undefined) {
        return '';
    }
    var ret = '';
    var locIndex = -1;
    var intervalsArray = intervals.split('||');
    for (var i = 0, length_1 = intervalsArray.length; i < length_1; i++) {
        var interval = intervalsArray[i];
        if (!interval) {
            continue;
        }
        var subIntervalsArray = interval.split(',');
        for (var _i = 0, subIntervalsArray_1 = subIntervalsArray; _i < subIntervalsArray_1.length; _i++) {
            var subInterval = subIntervalsArray_1[_i];
            if (!subInterval) {
                continue;
            }
            // there are three possiblities, wildcard, interval, or number
            if (isNaN(Number(subInterval))) {
                if (subInterval.indexOf('-') !== -1) {
                    // if it's an interval the format is Number-Number
                    var range = subInterval.split('-');
                    if (range.length !== 2) {
                        continue;
                    }
                    var min = void 0;
                    var max = void 0;
                    if (range[0] === '') {
                        min = 0;
                    }
                    else {
                        if (isNaN(Number(range[0]))) {
                            continue;
                        }
                        else {
                            min = parseInt(range[0], 10);
                        }
                    }
                    if (count >= min) {
                        if (range[1] === '') {
                            locIndex = i;
                            break;
                        }
                        else {
                            if (isNaN(Number(range[1]))) {
                                continue;
                            }
                            else {
                                max = parseInt(range[1], 10);
                            }
                        }
                        if (count <= max) {
                            locIndex = i;
                            break;
                        }
                    }
                }
                else if (subInterval.indexOf('*') !== -1) {
                    // Wildcard
                    var regexExpr = subInterval.trim().replace(/\*/g, '[0-9]*');
                    var regex = new RegExp("^" + regexExpr + "$");
                    if (regex.test(count.toString())) {
                        locIndex = i;
                        break;
                    }
                }
            }
            else {
                var exactNumber = parseInt(subInterval, 10);
                if (count === exactNumber) {
                    locIndex = i;
                    break;
                }
            }
        }
        if (locIndex !== -1) {
            break;
        }
    }
    if (locIndex !== -1) {
        var locValues = locText.split('||');
        if (locValues[locIndex]) {
            ret = locValues[locIndex];
        }
    }
    return ret;
}
exports.getLocalizedCountValue = getLocalizedCountValue;
/**
 * Format the locText with the localized count value.
 */
function formatWithLocalizedCountValue(locText, intervals, count) {
    var template = getLocalizedCountValue(locText, intervals, count);
    var result = format(template || '', count.toString());
    return result;
}
exports.formatWithLocalizedCountValue = formatWithLocalizedCountValue;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// NOTE: This module should have no dependencies!
Object.defineProperty(exports, "__esModule", { value: true });
function isDOMEventTarget(target) {
    return !!target && typeof target.addEventListener === 'function';
}
exports.isDOMEventTarget = isDOMEventTarget;
function isEventTarget(target) {
    return !!target && !!target.__events__;
}
exports.isEventTarget = isEventTarget;
function declare(parent, event) {
    var host = parent;
    var declaredEvents = host.__declaredEvents = host.__declaredEvents || {};
    if (typeof event === 'string') {
        declaredEvents[event] = true;
    }
    else {
        for (var i = 0; i < event.length; i++) {
            declaredEvents[event[i]] = true;
        }
    }
}
exports.declare = declare;
function raise(target, eventName, eventArgs, bubbleEvent) {
    var retVal;
    if (isDOMEventTarget(target)) {
        if (document.createEvent) {
            var ev = document.createEvent('HTMLEvents');
            ev.initEvent(eventName, bubbleEvent, true);
            ev.args = eventArgs;
            retVal = target.dispatchEvent(ev);
        }
    }
    else {
        while (target && retVal !== false) {
            if (isEventTarget(target)) {
                var events = target.__events__;
                var eventRecords = events[eventName];
                for (var id in eventRecords) {
                    var eventRecordList = eventRecords[id];
                    for (var listIndex = 0; retVal !== false && listIndex < eventRecordList.length; listIndex++) {
                        var record = eventRecordList[listIndex];
                        if (record.objectCallback) {
                            retVal = record.objectCallback.call(record.parent, eventArgs);
                        }
                    }
                }
                // If the target has a parent, bubble the event up.
                target = bubbleEvent ? target.parent : null;
            }
            else {
                target = null;
            }
        }
    }
    return retVal;
}
exports.raise = raise;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDataStore_1 = __webpack_require__(32);
var DataStoreCachingType_1 = __webpack_require__(28);
var Manager_1 = __webpack_require__(57);
var LogProcessor_1 = __webpack_require__(91);
var BeaconCache;
(function (BeaconCache) {
    "use strict";
    var _store = new BaseDataStore_1.default(LogProcessor_1.default.STORE_KEY,  true ?
        DataStoreCachingType_1.default.sharedMemory :
        DataStoreCachingType_1.default.session);
    BeaconCache.eventNamePrefix = "";
    BeaconCache.instance = null;
    BeaconCache.handlers = null;
    if (true) {
        try {
            console.log("Beacon: To disable logging to the console set \"window.disableBeaconLogToConsole = true\" in the debug window");
        }
        catch (error) {
            // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
            // debugging or stepping through the code polluting the UI with unhandled errors.
        }
    }
    var OdbBeaconCache = /** @class */ (function () {
        function OdbBeaconCache(eventNamePrefix, handlers) {
            var _this = this;
            BeaconCache.eventNamePrefix = eventNamePrefix;
            BeaconCache.handlers = handlers;
            this._handler = function (event) {
                _this.addEvent(event);
            };
            var bufferedEvents = Manager_1.Manager.addLogHandler(this._handler);
            // Add bufferred events to local store
            for (var x = 0; x < bufferedEvents.length; x++) {
                this.addEvent(bufferedEvents[x]);
            }
        }
        OdbBeaconCache.prototype.dispose = function () {
            Manager_1.Manager.removeLogHandler(this._handler);
        };
        OdbBeaconCache.prototype.addEvent = function (event) {
            if (event.enabled) {
                // put every new event to the session storage so that Sharepoint can upload it for us
                // if user navigates away before Beacon event
                LogProcessor_1.default.processAndLogEvent({
                    event: event,
                    logFunc: function (streamName, dictProperties) {
                        var storeSize = _store.getValue(LogProcessor_1.default.STORE_SIZE_KEY);
                        if (!storeSize) {
                            storeSize = 0;
                        }
                        _store.setValue(storeSize.toString(), { name: streamName, props: dictProperties });
                        _store.setValue(LogProcessor_1.default.STORE_SIZE_KEY, ++storeSize);
                    },
                    eventNamePrefix: BeaconCache.eventNamePrefix,
                    handlers: BeaconCache.handlers
                });
            }
        };
        return OdbBeaconCache;
    }());
    function addToLoggingManager(eventNamePrefix, handlers) {
        if (!BeaconCache.instance) {
            BeaconCache.instance = new OdbBeaconCache(eventNamePrefix, handlers);
        }
        else {
            throw new Error("The beaconCache has already been added to the logging manager with event name prefix " + eventNamePrefix + ".");
        }
    }
    BeaconCache.addToLoggingManager = addToLoggingManager;
})(BeaconCache || (BeaconCache = {}));
exports.default = BeaconCache;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Qos_event_1 = __webpack_require__(31);
var PLT_event_1 = __webpack_require__(156);
var Beacon_event_1 = __webpack_require__(38);
var UnhandledError_event_1 = __webpack_require__(157);
var RequireJSError_event_1 = __webpack_require__(158);
var CaughtError_event_1 = __webpack_require__(159);
var QosError_event_1 = __webpack_require__(160);
var Verbose_event_1 = __webpack_require__(161);
var Engagement_event_1 = __webpack_require__(34);
var EventBase_1 = __webpack_require__(52);
var RUMOneDataUpload_event_1 = __webpack_require__(84);
var PageInit_event_1 = __webpack_require__(162);
var DebugPriorityLevel_1 = __webpack_require__(163);
var LogProcessor;
(function (LogProcessor) {
    "use strict";
    LogProcessor.STORE_KEY = "SPCacheLogger";
    LogProcessor.STORE_SIZE_KEY = "Size";
    var SOURCE_V2_Engagement = "ClientV2Engagement";
    var DEBUG_LOG_STREAM = "ReliabilityLog";
    var USER_ENGAGEMENT_STREAM = "UserEngagement";
    var SOURCE_V2_Reliability = "ClientV2Reliability";
    // regex for SLAPI event names
    var SLAPI_EVENT_NAME_ALLOW = /[^a-z0-9\.\_\-\+]+/ig;
    var _spModuleLink = window['_spModuleLink'];
    var _appVersion = _spModuleLink ? _spModuleLink.buildNumber : "";
    // these are needed for Engagement and Qos logging
    var pageContext;
    var _siteId;
    var _webId;
    var _listId;
    var _groupId;
    var _isContextInfoInitialized = false;
    function processAndLogEvent(params) {
        var event = params.event, eventNamePrefix = params.eventNamePrefix, handlers = params.handlers, logFunc = params.logFunc;
        // Ignored events
        if (handlers.ignoredEventsHandler && handlers.ignoredEventsHandler(event)) {
            return;
        }
        // read these values from spPageContext and remove {}; in case values are not present set an empty string
        if (!_isContextInfoInitialized) {
            _isContextInfoInitialized = true;
            pageContext = window['_spPageContextInfo'];
            if (pageContext) {
                _siteId = pageContext.siteId ? pageContext.siteId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
                _webId = pageContext.webId ? pageContext.webId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
                _listId = pageContext.listId ? pageContext.listId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
                _groupId = pageContext.groupId ? pageContext.groupId.replace(SLAPI_EVENT_NAME_ALLOW, "") : "";
            }
            else {
                _siteId = "";
                _webId = "";
                _listId = "";
                _groupId = "";
            }
        }
        // Get the data to log
        var logDataArray = Engagement_event_1.Engagement.isTypeOf(event) ? _processEngagementEvent(event) :
            Qos_event_1.Qos.isTypeOf(event) ? _processQosEvent(event, handlers.qosEventNameHandler || null, handlers.qosEventExtraDataHandler || null) :
                PLT_event_1.PLT.isTypeOf(event) ? _processPLTEvent(event) :
                    UnhandledError_event_1.UnhandledError.isTypeOf(event) ? _processUnhandledErrorEvent(event) :
                        RequireJSError_event_1.RequireJSError.isTypeOf(event) ? _processRequireJSErrorEvent(event) :
                            CaughtError_event_1.CaughtError.isTypeOf(event) ? _processCaughtErrorEvent(event) :
                                Verbose_event_1.Verbose.isTypeOf(event) ? _processVerboseEvent(event) :
                                    Beacon_event_1.Beacon.isTypeOf(event) ? _processBeaconEvent(event) :
                                        RUMOneDataUpload_event_1.RUMOneDataUpload.isTypeOf(event) ? _processRUMOneDataUploadEvent(event) :
                                            PageInit_event_1.PageInit.isTypeOf(event) ? _processPageInitEvent(event) :
                                                null;
        // If the log data array is not defined the event was unhandled, log
        // the event name so is easy to discover and fix
        if (!logDataArray) {
            logDataArray = [{
                    userEngagementData: {
                        EngagementName: "UnknownEvent",
                        Duration: 0,
                        LogType: 0,
                        Properties: JSON.stringify({ name: event.eventName }),
                        ClientTime: event.eventType === EventBase_1.ClonedEventType.End ? event.endTime : event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                }];
        }
        // Log all the data in the array adding the event prefix to the tag/name
        for (var _i = 0, logDataArray_1 = logDataArray; _i < logDataArray_1.length; _i++) {
            var logData = logDataArray_1[_i];
            if (logData.debugData) {
                logData.debugData.Tag = _addEventPrefix(logData.debugData.Tag, eventNamePrefix).replace(SLAPI_EVENT_NAME_ALLOW, "");
                logFunc(DEBUG_LOG_STREAM, logData.debugData);
            }
            if (logData.userEngagementData) {
                // SPList: special case for Engagement events
                // set prefix to the name of the list type
                // to be able to track usage/engagement by list type
                var prefix = eventNamePrefix;
                if (Engagement_event_1.Engagement.isTypeOf(event) && prefix === 'SPList') {
                    // prefix will be set to a list type based on list base template
                    // if list type not found, [refix will be set back to generic SPList
                    prefix = _getScenarioNameFromListType();
                }
                logData.userEngagementData.EngagementName = _addEventPrefix(logData.userEngagementData.EngagementName, prefix)
                    .replace(SLAPI_EVENT_NAME_ALLOW, "");
                // SPList: special case for Qos events; add listBaseTemplate ID to the property bag
                if (Qos_event_1.Qos.isTypeOf(event) && eventNamePrefix === 'SPList') {
                    event.data.extraData["ListBaseTemplate"] = _getListBaseTemplate();
                }
                logFunc(USER_ENGAGEMENT_STREAM, logData.userEngagementData);
            }
            if (logData.rumOneData) {
                logFunc(logData.rumOneData.streamName, logData.rumOneData.dictionary);
            }
        }
    }
    LogProcessor.processAndLogEvent = processAndLogEvent;
    // get the list base template id
    function _getListBaseTemplate() {
        return pageContext ? pageContext.listBaseTemplate : -1;
    }
    var scenarioNames = {
        '100': 'ListNext',
        '101': 'DocsNext',
        '102': 'SurveyNext',
        '103': 'LinksNext',
        '104': 'AnnouncementsNext',
        '107': 'TasksNext',
        '109': 'PicLibNext'
    };
    // get the name of the listType; it's SPList for the unrecognized
    // list templates; TODO: add all templates
    function _getScenarioNameFromListType() {
        var listTemplate = _getListBaseTemplate();
        return scenarioNames[listTemplate] || 'SPList';
    }
    // string examples: "{\"w3cResponseEnd\":2", "\"appStart\":750"
    function _cleanString(dataPLT) {
        var cleanString = dataPLT;
        cleanString = cleanString.replace("{", "");
        cleanString = cleanString.replace(/\"/gi, "");
        cleanString = cleanString.replace("}", "");
        return cleanString;
    }
    function _addEventPrefix(eventName, prefix) {
        if (!prefix) {
            return eventName;
        }
        return prefix + '.' + eventName;
    }
    var resultTypeSuffixes = (_a = {},
        _a[Qos_event_1.ResultTypeEnum.Success] = '.Success',
        _a[Qos_event_1.ResultTypeEnum.Failure] = '.Failure',
        _a[Qos_event_1.ResultTypeEnum.ExpectedFailure] = '.ExpectedFailure',
        _a);
    function _getResultTypeSuffix(resultType) {
        return resultTypeSuffixes[resultType] || '';
    }
    function _processRUMOneDataUploadEvent(event) {
        if (!event.data) {
            return [{
                    userEngagementData: {
                        EngagementName: "RUMOne.no_EventData",
                        Duration: 0,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                }];
        }
        var rumOneDataUpdateEventData = event.data;
        return [{
                rumOneData: {
                    streamName: rumOneDataUpdateEventData.streamName,
                    dictionary: rumOneDataUpdateEventData.dictionary
                }
            }];
    }
    function _processPageInitEvent(event) {
        return [{
                userEngagementData: {
                    EngagementName: "PageInit",
                    Properties: !!event.data ? JSON.stringify(event.data) : '',
                    Duration: 0,
                    LogType: 0,
                    ClientTime: event.startTime,
                    Source: SOURCE_V2_Engagement
                }
            }];
    }
    function _processEngagementEvent(event) {
        var logDataList = [];
        // if the event has not data we will get this in COSMOS
        // if it's a start we have only the name and append ".Start" to it
        // else we look for resultCode and append it to data.name with result type
        // if resultCode is not present than we append only the result type to the name
        // i.e. serverDataGetValue.Start OR serverDataGetValue.ResponseText.GetAuth.ExpectedFailure
        var name = "no_EngagementName";
        var properties = "";
        var siteId = _siteId;
        var webId = _webId;
        var listId = _listId;
        var groupId = _groupId;
        if (event.data) {
            var engagementData = event.data;
            siteId = engagementData.siteId || siteId;
            webId = engagementData.webId || webId;
            listId = engagementData.listId || listId;
            groupId = engagementData.groupId || groupId;
            name = engagementData.name || name;
            // if there is an experimentData object, it means there is an experiment so create and log a new tag for it
            // put all the experiment data in the properties bag;
            if (engagementData.experiment) {
                var abExperiment = engagementData.experiment;
                var experimentData = abExperiment.getExperimentData();
                logDataList.push({
                    userEngagementData: {
                        EngagementName: _getExperimentEventName(experimentData, abExperiment.IsExperimentOn()),
                        Properties: JSON.stringify(experimentData),
                        Duration: 0,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement,
                        SiteId: siteId,
                        WebId: webId,
                        ListId: listId,
                        GroupId: groupId
                    }
                });
            }
            // put the extraData in the properties bag
            properties = engagementData.extraData ? JSON.stringify(engagementData.extraData) : "";
        }
        logDataList.push({
            userEngagementData: {
                EngagementName: name,
                Properties: properties,
                Duration: 0,
                LogType: 0,
                ClientTime: event.startTime,
                Source: SOURCE_V2_Engagement,
                SiteId: siteId,
                WebId: webId,
                ListId: listId,
                GroupId: groupId
            }
        });
        return logDataList;
    }
    function _getExperimentEventName(experimentData, isOn) {
        return (experimentData.name || 'noExperimentData') + ".Experiment" + (isOn ? 'Treatment' : 'Control') + ")";
    }
    function _processQosEvent(event, qoSEventNameHandler, qosEventExtraDataHandler) {
        var logData = {};
        // if the event has not data we will get this in COSMOS
        // if it's a start we have only the name and append ".Start" to it
        // else we look for resultCode and append it to data.name with result type
        // if resultCode is not present than we append only the result type to the name
        // i.e. serverDataGetValue.ResponseText.Success OR serverDataGetValue.ResponseText.GetAuth.ExpectedFailure
        var name = "no_QosName";
        var qosData = event.data || null;
        if (qosData) {
            if (qosData.name) {
                name = qosData.name;
            }
            if (qoSEventNameHandler) {
                name = qoSEventNameHandler(event, name);
            }
            qosData.extraData = qosData.extraData || {};
            if (qosEventExtraDataHandler) {
                qosEventExtraDataHandler(event, qosData);
            }
            qosData.extraData["appver"] = _appVersion;
        }
        // Duration is calculated only when we have an END event
        var durationTime = 0;
        if (event.eventType === EventBase_1.ClonedEventType.End && event.startTime && event.endTime) {
            durationTime = event.endTime - event.startTime;
        }
        logData.userEngagementData = {
            EngagementName: name,
            Properties: qosData && qosData.extraData ? JSON.stringify(qosData.extraData) : "",
            Duration: durationTime,
            LogType: 0,
            ClientTime: event.eventType === EventBase_1.ClonedEventType.End ? event.endTime : event.startTime,
            Source: SOURCE_V2_Reliability
        };
        return [logData];
    }
    function _processBeaconEvent(event) {
        var logData = {};
        var durationTime = 0;
        if (event.eventType === EventBase_1.ClonedEventType.End && event.startTime && event.endTime) {
            durationTime = event.endTime - event.startTime;
        }
        logData.userEngagementData = {
            EngagementName: "Beacon",
            Properties: event.data ? JSON.stringify(event.data) : "no_EventData",
            Duration: durationTime,
            LogType: 0,
            ClientTime: event.eventType === EventBase_1.ClonedEventType.End ? event.endTime : event.startTime,
            Source: SOURCE_V2_Reliability
        };
        return [logData];
    }
    function _processPLTEvent(event) {
        if (!event.data) {
            return [{
                    userEngagementData: {
                        EngagementName: "PLT.no_EventData",
                        Duration: 0,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                }];
        }
        var logDataList = [];
        //get the data for this event
        var pltData = event.data;
        // this will be the prefix for the tags; i.e. PLT.SetView-Files.w3cResponseEnd
        var name = "PLT." + pltData.name.replace(" ", "");
        // break down the PLT data and log each one as a separate record in the stream
        //{"name":"SetView-Files","w3cResponseEnd":424,"appStart":254,"preRender":20,"dataFetch":310,"postRender":327,"render":347,"plt":1335}
        var dataPLT = JSON.stringify(pltData).split(',');
        var duration = 0;
        // iterate through data and extract each type
        // create tags like this: PLT.<pagename>.w3cResponseEnd; PLT.<pagename>.appStart
        for (var i = 0; i < dataPLT.length; i++) {
            var cleanedPLTString = _cleanString(dataPLT[i]);
            // split the string and get the name and duration
            // special case for duration when appCacheHit is a boolean
            var subDataPLTs = cleanedPLTString.split(':');
            // skip the 'name' key-value pair
            if (_cleanString(subDataPLTs[1]) !== pltData.name) {
                if (subDataPLTs[1] === 'true') {
                    duration = 1;
                }
                else if (subDataPLTs[1] === 'false' || subDataPLTs[1] === 'null') {
                    duration = 0;
                }
                else {
                    duration = parseInt(subDataPLTs[1], 10);
                }
                logDataList.push({
                    userEngagementData: {
                        EngagementName: name + "." + subDataPLTs[0],
                        Properties: (subDataPLTs[0] === 'appCacheHit') ? JSON.stringify(event.data) : "",
                        Duration: duration,
                        LogType: 0,
                        ClientTime: event.startTime,
                        Source: SOURCE_V2_Engagement
                    }
                });
            }
        }
        return logDataList;
    }
    function _processUnhandledErrorEvent(event) {
        return [{
                userEngagementData: {
                    EngagementName: "UnhandledError",
                    Duration: 0,
                    LogType: 0,
                    ClientTime: event.startTime,
                    Source: SOURCE_V2_Engagement
                },
                debugData: {
                    Tag: "UnhandledError",
                    Level: DebugPriorityLevel_1.default.Normal,
                    Message: event.data ? JSON.stringify(event.data) : "no_EventData",
                    Misc: "",
                    ClientTime: event.startTime
                }
            }];
    }
    function _processRequireJSErrorEvent(event) {
        var logData = {};
        var name = "RequireJSError";
        var errorData;
        var errorMessage;
        if (event.data) {
            // clone all properties so that we can omit 'message' in JSON
            errorData = {};
            for (var key in event.data) {
                if (key !== "message") {
                    errorData[key] = event.data[key];
                }
                else {
                    errorMessage = event.data[key];
                }
            }
        }
        logData.userEngagementData = {
            EngagementName: name,
            Duration: 0,
            LogType: 0,
            ClientTime: event.startTime,
            Source: SOURCE_V2_Engagement
        };
        logData.debugData = {
            Tag: name,
            Level: DebugPriorityLevel_1.default.Normal,
            Message: errorMessage || "no_ErrorMessage",
            Misc: errorData ? JSON.stringify(errorData) : "no_ErrorData",
            ClientTime: event.startTime
        };
        return [logData];
    }
    function _processCaughtErrorEvent(event) {
        var logData = {};
        var name = "CaughtError";
        if (QosError_event_1.QosError.isTypeOf(event)) {
            if (event.data) {
                var qosErrorData = event.data;
                name = qosErrorData.name;
                if (qosErrorData.resultCode) {
                    name += "." + qosErrorData.resultCode;
                }
                name += _getResultTypeSuffix(qosErrorData.resultType);
            }
            else {
                name = "QosErrorEvent.no_EventData";
            }
        }
        else {
            // log it once in the UserEngagement stream to count the hits
            logData.userEngagementData = {
                EngagementName: name,
                Duration: 0,
                LogType: 0,
                ClientTime: event.startTime,
                Source: SOURCE_V2_Engagement
            };
        }
        // log it again in ReliabilityLog stream with data for debugging
        var caughtErrorData = event.data || null;
        logData.debugData = {
            Tag: name,
            Level: DebugPriorityLevel_1.default.Normal,
            Message: caughtErrorData && caughtErrorData.message || "",
            Misc: caughtErrorData && caughtErrorData.stack ? JSON.stringify(caughtErrorData.stack) : "",
            ClientTime: event.startTime
        };
        return [logData];
    }
    function _processVerboseEvent(event) {
        var logData = {};
        var name = "Verbose";
        if (event.data) {
            var verboseData = event.data;
            if (verboseData.name) {
                name = verboseData.name + ".Verbose";
            }
        }
        else {
            name += ".no_EventData";
        }
        // log it in ReliabilityLog stream with data for debugging
        logData.debugData = {
            Tag: name,
            Level: DebugPriorityLevel_1.default.Low,
            Message: verboseData.message,
            Misc: "",
            ClientTime: event.startTime
        };
        return [logData];
    }
    var _a;
})(LogProcessor || (LogProcessor = {}));
exports.default = LogProcessor;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ExperimentTypeEnum;
(function (ExperimentTypeEnum) {
    ExperimentTypeEnum[ExperimentTypeEnum["Unknown"] = 0] = "Unknown";
    ExperimentTypeEnum[ExperimentTypeEnum["User"] = 1] = "User";
    ExperimentTypeEnum[ExperimentTypeEnum["Site"] = 2] = "Site";
})(ExperimentTypeEnum = exports.ExperimentTypeEnum || (exports.ExperimentTypeEnum = {}));


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FeaturesBasic_1 = __webpack_require__(58);
/**
 * This file contains the known list of features (a.k.a. flights or ramps).
 * The signature of one entry is:
 *  static FeatureName: IFlight = { ODB: 100, ODC: "foo", Fallback: true };
 * ODB            Is the numerical value of the flight from the ExpFeature enumeration.
 *                Omit if the flight does not have a correspondent in ODB.
 * ODC            Is the string identifier in ODC.
 *                Omit if the flight does not have a correspondent ramp in ODC.
 * OneDrive       Is the value of the flight in OneDrive.
 *                Omit if the flight does not have a correspondent ramp in OneDrive.
 * Fallback       The state of the flight, true = on false = off.
 *                The fallback is used only when the ODB or ODC flight is not applicable.
 *                For example: The Flight is an ODB flight with no ODC counterpart and the app runs in ODC mode.
 *                The fallback also allows declaring app only switches that are not known to the backend.
 *                Omit if false.
 */
var Features = /** @class */ (function () {
    function Features() {
    }
    /**
     * Performs the initialization of the client side features for
     * SP and ODB in scenarios where the window['_spPageContextInfo']
     * is not available.
     *
     * @param {number[]} expFeatures - The bit map of the client side features
     * usually provided by the ISPPageContext.
     *
     * @example initSPExpFeatures(pageContextInfo.ExpFeatures)
     */
    Features.initSPExpFeatures = function (expFeatures) {
        Features._expFeatures = expFeatures;
    };
    /**
     * This function will return true when the feature is enabled and
     * will check the proper config for SP,ODB and/or ODC to determine.
     *
     * @requires In scenarios where the window['_spPagecontextInfo'] might not exist
     * this function requires initSPExpFeatures before checing the state of ODB features.
     *
     * @param {IFeature} feature - the feature to be checked if enabled.
     * @return {boolean} - True if the feature is found active.
     */
    Features.isFeatureEnabled = function (feature) {
        var result = !!feature.Fallback;
        // OneDriveWeb initialization
        var oneDrivePageContext = window['PageContext'];
        // ODC initialization
        var _odcFlightInfo = window['Flight'];
        var _odcConfig = window['FilesConfig'];
        // SP/ODB: for backward compatibility,
        // if _spPageContextInfo is still available
        // this performs the initialization of the _expFeatures.
        var _flighting = window['Flighting']; // Old SharePoint pages use this.
        var _spPageContextInfo = window['_spPageContextInfo'];
        if (!Features._expFeatures && _spPageContextInfo) {
            if (!_spPageContextInfo.ExpFeatures &&
                _flighting && _flighting.ExpFeatures) {
                _spPageContextInfo.ExpFeatures = _flighting.ExpFeatures;
            }
            Features.initSPExpFeatures(_spPageContextInfo.ExpFeatures);
        }
        var odb = feature.ODB;
        if (odb && Features._expFeatures) {
            result = FeaturesBasic_1.isSPFeatureEnabled(feature, Features._expFeatures);
        }
        if (feature.ODC && !!_odcConfig) {
            if (typeof feature.ODC === 'boolean') {
                result = feature.ODC;
            }
            else if (_odcFlightInfo && _odcFlightInfo.Ramps && _odcFlightInfo.Ramps[feature.ODC]) {
                result = true;
            }
            else if (_odcConfig && _odcConfig[feature.ODC]) {
                result = true;
            }
        }
        if (feature.OneDrive && !!oneDrivePageContext) {
            result = feature.OneDrive;
        }
        return result;
    };
    /* This feature is always on */
    Features.On = { Fallback: true };
    /* This feature is always off */
    Features.Off = {};
    //You should not add features here but in your own file
    Features._expFeatures = null;
    return Features;
}());
exports.default = Features;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var Promise_1 = __webpack_require__(27);
var Signal_1 = __webpack_require__(66);
var Scope_1 = __webpack_require__(47);
var Disposable_1 = __webpack_require__(59);
var lastId = 0;
var ResourceKey = /** @class */ (function () {
    function ResourceKey(nameOrOptions) {
        this.id = ++lastId;
        if (typeof nameOrOptions === 'string') {
            this.name = nameOrOptions;
        }
        else {
            this.name = nameOrOptions.name;
            this.factory = nameOrOptions.factory;
            this.loader = nameOrOptions.loader;
        }
    }
    Object.defineProperty(ResourceKey.prototype, "lazy", {
        /**
         * Gets an identifier for this {ResourceKey} as a lazy dependency (wrap in a function for deferred evaluation)
         */
        get: function () {
            return new ResourceDependency(this, 1 /* lazy */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceKey.prototype, "local", {
        /**
         * Gets an identifier for this {ResourceKey} as a local dependency (resolved in the local ResourceScope)
         */
        get: function () {
            return new ResourceDependency(this, 2 /* local */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceKey.prototype, "optional", {
        /**
         * Gets an identifier for this {ResourceKey} as an optional dependency
         */
        get: function () {
            return new ResourceDependency(this, 4 /* optional */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceKey.prototype, "bypass", {
        /**
         * Gets an identifier for this {ResourceKey} as an optional dependency
         */
        get: function () {
            return new ResourceDependency(this, 8 /* bypass */);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Provides information about this resource key
     */
    ResourceKey.prototype.toString = function () {
        return "Resource #" + this.id + " \"" + this.name + "\"";
    };
    return ResourceKey;
}());
exports.ResourceKey = ResourceKey;
var DependencyFlags;
(function (DependencyFlags) {
    DependencyFlags[DependencyFlags["none"] = 0] = "none";
    DependencyFlags[DependencyFlags["lazy"] = 1] = "lazy";
    DependencyFlags[DependencyFlags["local"] = 2] = "local";
    DependencyFlags[DependencyFlags["optional"] = 4] = "optional";
    DependencyFlags[DependencyFlags["bypass"] = 8] = "bypass";
})(DependencyFlags || (DependencyFlags = {}));
var ResourceDependency = /** @class */ (function () {
    function ResourceDependency(key, flags) {
        this.key = key;
        this.flags = flags;
    }
    Object.defineProperty(ResourceDependency.prototype, "lazy", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 1 /* lazy */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceDependency.prototype, "local", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 2 /* local */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceDependency.prototype, "optional", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 4 /* optional */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResourceDependency.prototype, "bypass", {
        get: function () {
            return new ResourceDependency(this.key, this.flags | 8 /* bypass */);
        },
        enumerable: true,
        configurable: true
    });
    return ResourceDependency;
}());
var ConstantResourceFactory = /** @class */ (function () {
    function ConstantResourceFactory(value) {
        this._value = value;
        this.dependencies = {};
    }
    ConstantResourceFactory.prototype.create = function () {
        return { instance: this._value };
    };
    return ConstantResourceFactory;
}());
exports.ConstantResourceFactory = ConstantResourceFactory;
exports.resourceScopeKey = new ResourceKey({
    name: 'resources'
});
exports.asyncLoadBarrierKey = new ResourceKey({
    name: 'asyncLoadBarrier'
});
var CacheOnSuccessLoader = /** @class */ (function () {
    function CacheOnSuccessLoader(loader) {
        this._loader = loader;
    }
    CacheOnSuccessLoader.prototype.load = function () {
        var _this = this;
        var load = preventCancellation(this._loader.load());
        load.catch(function () {
            // On error, reset the cache so the next load can try again.
            delete _this.load;
        });
        this.load = function () { return load; };
        return load;
    };
    return CacheOnSuccessLoader;
}());
var Handle = /** @class */ (function () {
    function Handle(entry, instanceManager) {
        this.entry = entry;
        this.manager = instanceManager;
    }
    Handle.prototype.getInstance = function (key, resourceScopeOptions) {
        var manager = this.manager;
        var factory = this.entry.factory;
        var resource = factory.create(manager.resolve(factory.dependencies, resourceScopeOptions));
        var instance = resource.instance;
        if (resource.disposable) {
            manager.scope.attach(resource.disposable);
        }
        this.getInstance = function () { return instance; };
        return instance;
    };
    Handle.prototype.promote = function (targetHandleManager) {
        var entry = this.entry;
        return new Handle({
            manager: targetHandleManager,
            loader: entry.loader,
            factory: entry.factory
        });
    };
    return Handle;
}());
var logBeginConstruction;
var logEndConstruction;
var logConsume;
var logExpose;
var log;
function getResolvedConstructor(resolvableConstructor, resolvedDependencies) {
    var Resolved = function (params) {
        var instance = resolvableConstructor.call(this, params, resolvedDependencies) || this;
        return instance;
    };
    if (true) {
        // This pattern results in the correct type being displayed in the debugger
        var wrappedConstructor_1 = Resolved;
        Resolved = function (params) {
            logBeginConstruction(resolvableConstructor, 'Resources.resolved');
            var instance = wrappedConstructor_1.call(Object.create(resolvableConstructor.prototype), params);
            logEndConstruction(resolvableConstructor, 'Resources.resolved');
            return instance;
        };
    }
    Resolved.prototype = resolvableConstructor.prototype;
    return Resolved;
}
exports.getResolvedConstructor = getResolvedConstructor;
var HandleManager = /** @class */ (function () {
    function HandleManager(parentOrOptions) {
        this._handles = {};
        this._isLocked = false;
        var options;
        if (parentOrOptions instanceof HandleManager) {
            if (parentOrOptions.isDisposed) {
                throw new Error('Parent ResourceScope has already been disposed!');
            }
            options = parentOrOptions.options;
            this._parent = parentOrOptions;
            this._level = parentOrOptions._level + 1;
        }
        else {
            options = parentOrOptions || {};
            this._level = 0;
            if (true) {
                // Check for setting and enable tracing if set
                if (!('__ResourceTraceState' in window) && (localStorage && localStorage['EnableResourceTracing'])) {
                    window['__ResourceTraceState'] = {
                        log: [],
                        stack: [],
                        types: {},
                        exposed: {}
                    };
                }
                log('Created new root level Resource Scope');
            }
        }
        this.scope = new Scope_1.default();
        this.options = options;
    }
    Object.defineProperty(HandleManager.prototype, "isDisposed", {
        get: function () {
            return this.scope.isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    HandleManager.prototype.block = function (key) {
        return this._expose(key);
    };
    HandleManager.prototype.isDescendantOf = function (manager) {
        return this._level > manager._level;
    };
    HandleManager.prototype.getHandle = function (key) {
        var manager = this;
        var keyId = key.id;
        // Starting with this scope, attempt to find the first scope with an entry (may be undefined)
        // for the given key. Stop when there are no more ancestor scopes.
        while (!(keyId in manager._handles) && manager._parent) {
            manager = manager._parent;
        }
        var handles = manager._handles;
        return handles[keyId] || this.options.useFactoriesOnKeys &&
            (key.factory && (handles[keyId] = new Handle({
                factory: key.factory,
                manager: manager
            })) || (key.loader && (handles[keyId] = new Handle({
                loader: new CacheOnSuccessLoader(key.loader),
                manager: manager
            }))));
    };
    HandleManager.prototype.expose = function (key, source, instance) {
        return this._expose(key, function (handleManager) { return new Handle({
            factory: source.factory,
            loader: source.loader,
            manager: handleManager
        }, instance && handleManager); });
    };
    HandleManager.prototype.getLoader = function () {
        this.lock();
        var loader = new ResourceLoader(this);
        this.getLoader = function () { return loader; };
        return loader;
    };
    HandleManager.prototype.dispose = function () {
        this.scope.dispose();
        this._handles = {};
        this.consume = this.resolve = onConsumeAfterDispose;
        this.getLoader = onLoadAfterDispose;
    };
    HandleManager.prototype.bind = function (key) {
        var handle = this.getHandle(key);
        if (handle) {
            return this._expose(key, function (handleManager) { return handle.promote(handleManager); });
        }
        return this;
    };
    HandleManager.prototype.lock = function () {
        this._isLocked = !!this.options.lockResourcesForChildren;
    };
    HandleManager.prototype.consume = function (dependency, scopeOptions) {
        var _this = this;
        this.lock();
        var key = (dependency.key || dependency);
        var options = dependency.flags;
        var thunk;
        if (key === exports.resourceScopeKey) {
            var resourceScope_1;
            thunk = function () {
                if (!resourceScope_1) {
                    resourceScope_1 = _this.scope.attach(new ResourceScope(_this, scopeOptions || { owner: "" + key }));
                }
                return resourceScope_1;
            };
        }
        else {
            var handle_1 = this._getValidHandle(dependency, []);
            if (!(handle_1 instanceof Error)) {
                thunk = function () { return handle_1.getInstance(key, scopeOptions || { owner: "" + key }); };
            }
            else if (!(options & 4 /* optional */)) {
                throw handle_1;
            }
        }
        return ((options & 1 /* lazy */) ? thunk : (thunk && thunk()));
    };
    HandleManager.prototype.isExposed = function (dependency) {
        return !(this._getValidHandle(dependency, []) instanceof Error);
    };
    HandleManager.prototype.resolve = function (dependencies, scopeOptions) {
        var result = {};
        for (var _i = 0, _a = Object.keys(dependencies); _i < _a.length; _i++) {
            var id = _a[_i];
            var dependency = dependencies[id];
            if (!dependency) {
                continue;
            }
            result[id] = this.consume(dependencies[id], scopeOptions);
        }
        return result;
    };
    HandleManager.prototype._getValidHandle = function (resourceDependency, stack) {
        var key = (resourceDependency.key || resourceDependency);
        var keyId = key.id;
        if (stack.indexOf(key) >= 0) {
            // Circular reference will *always* throw, even on isExposed.
            throw new Error(key + " has a circular dependency.");
        }
        // If we have a handle with a manager cached, return it.
        var localHandle = this._handles[keyId];
        if (localHandle && localHandle.manager) {
            return localHandle;
        }
        var handle = this.getHandle(key);
        if (!handle) {
            return new Error(key + " is being consumed, but has not been exposed by a parent scope.");
        }
        var entry = handle.entry;
        var factory = entry.factory;
        if (!factory) {
            return new Error(key + " is being consumed synchronously, but was exposed asynchronously and has not been loaded.");
        }
        // Find the highest possible scope at which an instance of T can be stored.
        stack.push(key);
        var instanceManager = handle.manager;
        var targetManager = (resourceDependency.flags & 2 /* local */)
            ? this : instanceManager || entry.manager;
        var dependencies = factory.dependencies || {};
        for (var _i = 0, _a = Object.keys(dependencies); _i < _a.length; _i++) {
            var id = _a[_i];
            var dependency = dependencies[id];
            // Dependency on resourceScopeKey does not affect targeting
            if (!dependency || (dependency.key || dependency) === exports.resourceScopeKey) {
                continue;
            }
            // Recurse on dependencies.
            var dependencyHandle = this._getValidHandle(dependency, stack);
            if (dependencyHandle instanceof Error) {
                if (!(dependency.flags & 4 /* optional */)) {
                    stack.pop();
                    return dependencyHandle;
                }
            }
            else if (dependencyHandle.manager.isDescendantOf(targetManager)) {
                targetManager = dependencyHandle.manager;
            }
        }
        stack.pop();
        if (!instanceManager || instanceManager !== targetManager) {
            // Need a new handle.
            handle = new Handle(entry, targetManager);
            // Place on targetManager, so that other levels can reuse
            targetManager._handles[keyId] = handle;
        }
        return this._handles[keyId] = handle;
    };
    HandleManager.prototype._expose = function (key, createHandle) {
        if (this.isDisposed) {
            throw new Error('Cannot expose a resource on a ResourceScope that has been disposed.');
        }
        if (key === exports.resourceScopeKey) {
            throw new Error('It is illegal to expose the ResourceScope key');
        }
        var keyId = key.id;
        var handleManager = this._isLocked ? this.scope.attach(new HandleManager(this)) : this;
        var handles = handleManager._handles;
        if (handles[keyId]) {
            if (this.options.noDoubleExpose) {
                throw new Error(key + " has already been exposed/consumed at this scope.");
            }
            else if (true) {
                log("Duplicate exposure of " + key + ".");
            }
        }
        handles[keyId] = createHandle ? createHandle(handleManager) : void 0;
        return handleManager;
    };
    return HandleManager;
}());
function onConsumeAfterDispose() {
    throw new Error('Cannot consume a resource from a ResourceScope that has been disposed.');
}
function onLoadAfterDispose() {
    throw new Error('Cannot load a resource from a ResourceScope that has been disposed.');
}
function voidify() {
    // Do nothing
}
function getFirstError(errors) {
    for (var key in errors) {
        if (errors[key]) {
            return Promise_1.default.reject(errors[key]);
        }
    }
    return Promise_1.default.reject(new Error('A dependency could not be loaded.'));
}
var ResourceLoader = /** @class */ (function () {
    function ResourceLoader(handleManager) {
        this._handleManager = handleManager;
        this._loadState = {};
        this._root = handleManager.consume(exports.asyncLoadBarrierKey.optional);
    }
    /**
     * Performs an async load of the specified resource. Should return a successful result if the value is optional or loads.
     * Should return an error result if the value is non-optional and fails to load.
     * Should return the same promise for multiple requests to the same key.
     */
    ResourceLoader.prototype.loadAsync = function (dependency) {
        // Loading the ResourceScope key is always successful.
        var key = dependency.key || dependency;
        if (key === exports.resourceScopeKey) {
            return Promise_1.default.resolve();
        }
        var options = dependency.flags;
        var promise = this._loadAsync(key, !!(options & 8 /* bypass */));
        return (options & 4 /* optional */) ? promise.catch(voidify) : promise;
    };
    ResourceLoader.prototype.loadAllAsync = function (dependencies, bypass) {
        if (dependencies) {
            var dependencyNames = Object.keys(dependencies);
            var length_1 = dependencyNames.length;
            if (length_1 > 0) {
                var promises = {};
                while (length_1--) {
                    var name_1 = dependencyNames[length_1];
                    var dependency = dependencies[name_1];
                    if (!dependency) {
                        continue;
                    }
                    promises[name_1] = this.loadAsync(bypass ? dependency.bypass : dependency);
                }
                return Promise_1.default.all(promises).then(voidify, getFirstError);
            }
        }
        return Promise_1.default.resolve();
    };
    ResourceLoader.prototype._loadAsync = function (key, bypass) {
        var _this = this;
        // Check the cache
        var keyId = key.id;
        var loadStateMap = this._loadState;
        var cached = loadStateMap[keyId];
        if (cached) {
            return cached;
        }
        // Validate that there is a valid handle for the key
        var handleManager = this._handleManager;
        var handle = handleManager.getHandle(key);
        if (!handle) {
            return loadStateMap[keyId] = Promise_1.default.reject(new Error(key + " is being loaded, but has no factory/loader."));
        }
        // Mark possible circular reference
        loadStateMap[keyId] = Promise_1.default.resolve();
        // If we have a synchronously available factory, load its dependencies
        var entry = handle.entry;
        var factory = entry.factory;
        if (factory) {
            return loadStateMap[keyId] = this.loadAllAsync(factory.dependencies);
        }
        // Finally, fall back to the loader
        var loader = entry.loader;
        if (!loader) {
            return loadStateMap[keyId] = Promise_1.default.reject(new Error(key + " is being loaded, but no loader was defined."));
        }
        var root = this._root;
        var rootPromise = !bypass && root && root.wait() || Promise_1.default.resolve();
        return loadStateMap[keyId] = rootPromise.then(function () { return loader.load(); }).then(function (value) {
            if (true) {
                log("Loaded " + key);
            }
            entry.factory = value;
            var factoryDependencies = value.dependencies;
            if (factoryDependencies) {
                return _this.loadAllAsync(factoryDependencies, bypass);
            }
        });
    };
    return ResourceLoader;
}());
var ResourceScope = /** @class */ (function () {
    function ResourceScope(parentOrOptions, options) {
        var parentOwner;
        var handleManager;
        if (parentOrOptions instanceof ResourceScope) {
            handleManager = parentOrOptions._handleManager;
            parentOwner = parentOrOptions._owner;
        }
        else if (parentOrOptions instanceof HandleManager) {
            handleManager = parentOrOptions;
        }
        else {
            options = parentOrOptions || options;
        }
        var scope = new Scope_1.default();
        if (handleManager) {
            if (handleManager.scope.isDisposed) {
                throw new Error('Parent ResourceScope has already been disposed.');
            }
            handleManager.lock();
            if (!handleManager.options.lockResourcesForChildren) {
                this._prepareWrite = this._fork;
            }
        }
        this._handleManager = handleManager || (handleManager = scope.attach(new HandleManager(options)));
        this._scope = scope;
        var owner = options ? options.owner : '';
        this._owner = parentOwner ? parentOwner + " > " + owner : owner;
        if (true) {
            log("new ResourceScope: '" + owner + "'");
        }
    }
    /**
     * Obtains an instance of a resource with the given key exposed by either this scope
     * or a parent. Throws if the resource is not found and isOptional is not set.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @returns an instance of the resource, if available in this scope or a parent.
     */
    ResourceScope.prototype.consume = function (dependency) {
        if (true) {
            logConsume(dependency);
        }
        return this._handleManager.consume(dependency);
    };
    /**
     * Obtains an instance of a resource with the given key exposed by either this scope
     * or a parent. Throws if the resource is not found and isOptional is not set.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @returns a promise for an instance of the resource, if available in this scope or a parent.
     */
    ResourceScope.prototype.consumeAsync = function (dependency) {
        if (true) {
            logConsume(dependency);
        }
        var handleManager = this._handleManager;
        return preventCancellation(handleManager.getLoader().loadAsync(dependency)).then(function () {
            return handleManager.consume(dependency);
        });
    };
    /**
     * Ensures that the specified dependencies have been loaded for synchronous consumption.
     * @param dependencies {IResourceDependencies} - the dependencies to load.
     * @returns a promise that will complete when the specified resources are available.
     */
    ResourceScope.prototype.load = function (dependencies) {
        return preventCancellation(this._handleManager.getLoader().loadAllAsync(dependencies));
    };
    /**
     * Exposes an asynchronous loader for a resource with the given type-safe key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @param loader - the object that can asynchronously load a factory of the desired type
     */
    ResourceScope.prototype.exposeAsync = function (key, loader) {
        this._expose(key, {
            loader: new CacheOnSuccessLoader(loader)
        });
    };
    /**
     * Exposes a factory for a resource with the given type-safe key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @param factory - the factory that will construct instances when required by this or any child scope.
     */
    ResourceScope.prototype.exposeFactory = function (key, factory) {
        this._expose(key, {
            factory: factory
        });
    };
    /**
     * Exposes a resource with the given type-safe key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @param instance - the instance of the resource to use within this scope.
     */
    ResourceScope.prototype.expose = function (key, instance) {
        if (true) {
            logExpose(key, this._owner, instance);
        }
        this._expose(key, {
            factory: new ConstantResourceFactory(instance)
        }, instance);
        return instance;
    };
    /**
     * Hides any resources exposed by parent scopes for the specified key.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     */
    ResourceScope.prototype.block = function (key) {
        this._handleManager = this._prepareWrite().block(key);
    };
    /**
     * Re-exposes the currently exposed resource at the specified key at the current resource scope.
     * The effect of this is that the lifetime of instances created by the resource system that depend on the
     * specific key will not exceed the lifetime of this resource scope.
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     */
    ResourceScope.prototype.bind = function (key) {
        this._handleManager = this._prepareWrite().bind(key);
    };
    /**
     * Checks if a given resource key is defined and known to the system.
     */
    ResourceScope.prototype.isDefined = function (key) {
        var handleManager = this._handleManager;
        return !handleManager.isDisposed && !!handleManager.getHandle(key);
    };
    /**
     * Checks if a given resource key is exposed in the resource scope (including in parent scopes).
     * @param key {ResourceKey} - a shared resource key corresponding to a specific named resource.
     * @return {boolean}
     */
    ResourceScope.prototype.isExposed = function (dependency) {
        if (true) {
            logConsume(dependency);
        }
        var handleManager = this._handleManager;
        return !handleManager.isDisposed && handleManager.isExposed(dependency);
    };
    /**
     * Produces an alternate constructor for the given type which pre-injects the instance with resources
     * before invoking the real constructor.
     * This function preserves the original argument types for the constructor, allowing validation
     * of arguments.
     * @param type - the type of object for which to create an injected constructor.
     * @returns an injected version of the original constructor for the type.
     */
    ResourceScope.prototype.injected = function (type, options) {
        if (options === void 0) { options = {}; }
        var injectChildResourceScope = options.injectChildResourceScope;
        var childOptions = {
            owner: options.owner || type.name
        };
        var resources = injectChildResourceScope ? this._scope.attach(new ResourceScope(this, childOptions)) : this;
        var Injected = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            this.resources = resources;
            var instance = type.apply(this, args) || this;
            if (injectChildResourceScope) {
                Disposable_1.hook(instance, disposeInstanceResources);
            }
            return instance;
        };
        if (true) {
            // This pattern results in the correct type being displayed in the debugger
            var wrappedConstructor_2 = Injected;
            Injected = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                logBeginConstruction(type, 'Resources.injected');
                var instance = wrappedConstructor_2.apply(Object.create(type.prototype), args);
                logEndConstruction(type, 'Resources.injected');
                return instance;
            };
        }
        Injected.prototype = type.prototype;
        return Injected;
    };
    /**
     * Resolves a set of resource keys
     *
     * @param dependencies - an object that maps names to {ResourceKey} instances.
     * @returns an object mapping the original names to the resolved resources.
     */
    ResourceScope.prototype.resolve = function (dependencies) {
        return this._handleManager.resolve(dependencies);
    };
    /**
     * Resolves a set of resource keys
     *
     * @param dependencies - an object that maps names to {ResourceKey} instances.
     * @returns an object mapping the original names to the resolved resources.
     */
    ResourceScope.prototype.resolveAsync = function (dependencies) {
        var _this = this;
        return this.load(dependencies).then(function () { return _this.resolve(dependencies); });
    };
    ResourceScope.prototype.resolved = function (type, dependencies) {
        return getResolvedConstructor(type, this.resolve(tslib_1.__assign({}, (type.dependencies || {}), (dependencies || {}))));
    };
    ResourceScope.prototype.resolvedAsync = function (type, dependencies) {
        var _this = this;
        return this.load(tslib_1.__assign({}, (type.dependencies || {}), (dependencies || {}))).then(function () { return _this.resolved(type, dependencies); });
    };
    /**
     * Disposes this resource scope and any resources bound to this scope's lifetime.
     */
    ResourceScope.prototype.dispose = function () {
        this._scope.dispose();
    };
    ResourceScope.prototype._expose = function (key, source, instance) {
        this._handleManager = this._prepareWrite().expose(key, source, instance);
    };
    // These methods are to support legacy call patterns by imitating old behavior
    ResourceScope.prototype._prepareWrite = function () {
        return this._handleManager;
    };
    ResourceScope.prototype._fork = function () {
        delete this._prepareWrite;
        if (true) {
            log("Fork: '" + this._owner + "'");
        }
        return this._scope.attach(new HandleManager(this._handleManager));
    };
    return ResourceScope;
}());
exports.ResourceScope = ResourceScope;
function disposeInstanceResources() {
    this.resources.dispose();
}
if (true) {
    var lastTypeNameId_1 = 0;
    var getTraceState_1 = function () {
        return window['__ResourceTraceState'];
    };
    logBeginConstruction = function (type, wrapperType) {
        var traceState = getTraceState_1();
        if (traceState) {
            var typeName = type['name'] + "_" + ++lastTypeNameId_1;
            var stack = traceState.stack, types = traceState.types;
            var parent_1 = stack[stack.length - 1] || '_root';
            stack.push(typeName);
            (types[parent_1] || (types[parent_1] = {}))[typeName] = wrapperType;
            if (!(typeName in types)) {
                types[typeName] = {};
            }
        }
    };
    logEndConstruction = function (type, wrapperType) {
        var traceState = getTraceState_1();
        if (traceState) {
            traceState.stack.pop();
        }
    };
    logConsume = function (dependency) {
        var traceState = getTraceState_1();
        var key = dependency.key || dependency;
        var isOptional = dependency.flags & 4 /* optional */;
        if (traceState) {
            var stack = traceState.stack, types = traceState.types;
            var parent_2 = stack[stack.length - 1] || '_root';
            (types[parent_2] || (types[parent_2] = {}))[isOptional ? key.id + "?" : key.id] = key.name;
        }
    };
    logExpose = function (key, owner, instance) {
        var traceState = getTraceState_1();
        if (traceState) {
            var typeName = instance && instance.constructor['name'];
            var exposed = traceState.exposed;
            (exposed[owner] || (exposed[owner] = [])).push({
                id: key.id,
                name: key.name,
                type: typeName
            });
        }
    };
    log = function (message) {
        var traceState = getTraceState_1();
        if (traceState) {
            traceState.log.push(message);
        }
    };
}
function preventCancellation(promise) {
    var signal = new Signal_1.default();
    promise.then(function (result) { return signal.complete(result); }, function (error) { return signal.error(error); });
    return signal.getPromise();
}
exports.default = ResourceScope;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HslColor_1 = __webpack_require__(96);
var RgbaColor_1 = __webpack_require__(25);
var Shades_1 = __webpack_require__(174);
/**
 * Utility class with static methods to work with Fabric-style themes.
 */
var FabricTheming = /** @class */ (function () {
    function FabricTheming() {
    }
    /**
     * Generates a palette of Fabric colors from a primary RGB color value.
     * @param {RgbaColor} primaryRgb Primary RGB color used to generate a palette.
     * @param {boolean} inverted Whether the theme is inverted, with a dark background and light foreground.
     */
    FabricTheming.generateFabricColors = function (primaryRgb, inverted) {
        if (inverted === void 0) { inverted = false; }
        var generatedShades = {
            "themeDarker": Shades_1.Shades.Darkest,
            "themeDark": Shades_1.Shades.Darker,
            "themeDarkAlt": Shades_1.Shades.Darker,
            "themeLight": Shades_1.Shades.Lighter,
            "themeLightAlt": Shades_1.Shades.Lighter,
            "themeLighter": Shades_1.Shades.Lightest,
            "themeLighterAlt": Shades_1.Shades.Lightest,
            "themePrimary": Shades_1.Shades.Unshaded,
            "themeAccent": Shades_1.Shades.Unshaded,
            "themeSecondary": Shades_1.Shades.Medium,
            "themeTertiary": Shades_1.Shades.Lighter,
            "themeTertiaryAlt": Shades_1.Shades.Lighter
        };
        // Expected color slots. Start each defaulting to null to avoid warnings about missing slots.
        var colors = FabricTheming._getDefaultThemeTokenMap();
        // Starting points for the generated palette.
        var primaryColor = RgbaColor_1.default.fromRgba(primaryRgb.R, primaryRgb.G, primaryRgb.B);
        for (var shadeName in generatedShades) {
            var shade = generatedShades[shadeName];
            if (inverted && shade !== Shades_1.Shades.Unshaded) {
                shade = Shades_1.Shades.Darkest + Shades_1.Shades.Lightest - shade;
            }
            colors[shadeName] = Shades_1.getShade(primaryColor, shade);
        }
        var accent = colors["themeAccent"];
        colors["themeAccentTranslucent10"] = accent ?
            RgbaColor_1.default.fromRgba(accent.R, accent.G, accent.B, 0.1 * RgbaColor_1.default.maxComponent) : null;
        // Handle neutral slots for inverted themes
        if (inverted) {
            var invertedText = '#f8f8f8'; // neutralLighterAlt
            var invertedNeutralQuaternary = '#6b6b6b';
            var invertedNeutralQuaternaryAlt = '#707070';
            var invertedNeutralColors = {
                'black': '#fff',
                'blackTranslucent40': '#66ffffff',
                'neutralDark': '#fff',
                'neutralPrimary': invertedText,
                'neutralPrimaryTranslucent50': '#7ff8f8f8',
                'neutralPrimaryAlt': '#f4f4f4',
                'neutralSecondary': '#eaeaea',
                'neutralSecondaryAlt': '#c8c8c8',
                'neutralTertiary': '#a6a6a6',
                'neutralTertiaryAlt': '#767676',
                'neutralQuaternary': invertedNeutralQuaternary,
                'neutralQuaternaryAlt': invertedNeutralQuaternaryAlt,
                'cmdbarSelected': invertedNeutralQuaternary,
                'cmdbarSelectedHover': invertedNeutralQuaternaryAlt,
                'neutralLight': '#666666',
                'neutralLighter': '#333',
                'neutralLighterAlt': '#212121',
                'primaryText': invertedText,
                'primaryBackground': '#000',
                'white': '#000',
                'whiteTranslucent40': '#66000000',
                'error': '#f00',
                'errorBackground': '#7e3333'
            };
            for (var neutralSlot in invertedNeutralColors) {
                if (invertedNeutralColors.hasOwnProperty(neutralSlot)) {
                    colors[neutralSlot] =
                        RgbaColor_1.default.fromHtmlColor(invertedNeutralColors[neutralSlot]);
                }
            }
        }
        return colors;
    };
    /**
     * Applies an Hsl delta to an HslColor to produce a new HslColor.
     * @param {HslColor} primaryHsl Starting HSL color value.
     * @param {number} hDelta Delta to apply to the hue.
     * @param {number} sDelta Delta to apply to the saturation.
     * @param {number} lDelta Delta to apply to the luminance.
     */
    FabricTheming.applyHslDelta = function (primaryHsl, hDelta, sDelta, lDelta) {
        var hue = primaryHsl.hue - hDelta;
        if (hue > 1 || hue < 0) {
            hue = hue - Math.floor(hue);
        }
        var sat = primaryHsl.sat - sDelta;
        if (sat > 1) {
            sat = 1;
        }
        else if (sat < 0) {
            sat = 0;
        }
        var lum = primaryHsl.lum - lDelta;
        if (lum > 1) {
            lum = 1;
        }
        else if (lum < 0) {
            lum = 0;
        }
        var hslValue = new HslColor_1.default(hue, sat, lum);
        return hslValue;
    };
    FabricTheming._getDefaultThemeTokenMap = function () {
        return {
            backgroundOverlay: null,
            primaryBackground: null,
            primaryText: null,
            themeDarker: null,
            themeDark: null,
            themeDarkAlt: null,
            themePrimary: null,
            themeSecondary: null,
            themeTertiary: null,
            themeLight: null,
            themeLighter: null,
            themeLighterAlt: null,
            black: null,
            cmdbarSelected: null,
            cmdbarSelectedHover: null,
            neutralDark: null,
            neutralPrimary: null,
            neutralPrimaryAlt: null,
            neutralPrimaryTranslucent50: null,
            neutralSecondary: null,
            neutralSecondaryAlt: null,
            neutralTertiary: null,
            neutralTertiaryAlt: null,
            neutralQuaternary: null,
            neutralQuaternaryAlt: null,
            neutralLight: null,
            neutralLighter: null,
            neutralLighterAlt: null,
            white: null,
            blackTranslucent40: null,
            whiteTranslucent40: null,
            yellow: null,
            yellowLight: null,
            orange: null,
            orangeLight: null,
            redDark: null,
            red: null,
            magentaDark: null,
            magenta: null,
            magentaLight: null,
            purpleDark: null,
            purple: null,
            purpleLight: null,
            blueDark: null,
            blueMid: null,
            blue: null,
            blueLight: null,
            tealDark: null,
            teal: null,
            tealLight: null,
            greenDark: null,
            green: null,
            greenLight: null,
            error: null,
            errorBackground: null,
            success: null,
            successBackground: null,
            alert: null,
            alertBackground: null,
            infoBackground: null,
            info: null,
            orangeLighter: null
        };
    };
    return FabricTheming;
}());
exports.default = FabricTheming;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RgbaColor_1 = __webpack_require__(25);
/**
 * A color represented by hue, saturation, luminance, and alpha (opacity) components.
 */
var HslColor = /** @class */ (function () {
    /**
     * Constructs a new HSL color object.
     * @param {number} h The hue (between 0 and 1) of the color.
     * @param {number} s The saturation (between 0 and 1) of the color.
     * @param {number} l The luminance (between 0 and 1) of the color.
     * @param {number} a The opacity (between 0 and 255) of the color.
     */
    function HslColor(h, s, l, a) {
        function LimitNumberToUnitInterval(value) {
            return Math.min(1.0, Math.max(0.0, value));
        }
        this.hue = LimitNumberToUnitInterval(h);
        this.sat = LimitNumberToUnitInterval(s);
        this.lum = LimitNumberToUnitInterval(l);
        this.alpha = a == null ? RgbaColor_1.default.maxComponent : a;
    }
    /**
     * Constructs an HslColor from an RgbaColor.
     * @param {RgbaColor} color The color to convert to HSL.
     */
    HslColor.fromRgba = function (color) {
        // Using integer values as much as possible to make comparisons easier.
        // I will indicate non-integer values with a  "_float" suffix.
        // These integer values are each some integer multiple of the true value.
        var scaleFactor = RgbaColor_1.default.maxComponent;
        var h_float = 0.0;
        var s_float = 0.0;
        var l_float = 0.0;
        var r = color.R;
        var g = color.G;
        var b = color.B;
        var cMax = Math.max(Math.max(r, g), b);
        var cMin = Math.min(Math.min(r, g), b);
        var twiceL = cMax + cMin;
        l_float = twiceL / (2 * scaleFactor);
        if (cMax === cMin) {
            s_float = 0.0;
            h_float = -1.0;
        }
        else {
            var dmax = cMax - cMin;
            var pmax = cMax + cMin;
            // The scale factor cancels when we divide scaled values, so divisions can ignore it.
            if (twiceL <= 1 * scaleFactor) {
                s_float = dmax / pmax;
            }
            else {
                s_float = dmax / (2 * scaleFactor - pmax); // Safe, since cMax != cMin
            }
            var dr_float = (cMax - r) * (1 / 6) / dmax;
            var dg_float = (cMax - g) * (1 / 6) / dmax;
            var db_float = (cMax - b) * (1 / 6) / dmax;
            if (r === cMax) {
                h_float = db_float - dg_float;
            }
            else if (g === cMax) {
                h_float = (1 / 3) + dr_float - db_float;
            }
            else {
                h_float = (2 / 3) + dg_float - dr_float;
            }
            if (h_float < 0) {
                h_float += 1.0;
            }
            if (h_float > 1.0) {
                h_float -= 1.0;
            }
        }
        return new HslColor(h_float, s_float, l_float, color.A);
    };
    /**
     * Converts a hue, saturation, or luminance value between 0 and 1 into
     * an integer between 0 and 255.
     */
    HslColor._hslComponentToByte = function (value) {
        var c_rgbaMax = RgbaColor_1.default.maxComponent;
        var result = Math.round(c_rgbaMax * value);
        return Math.min(c_rgbaMax, Math.max(0, result));
    };
    /**
     * Internal method which given the calculated magic numbers and the hue,
     * will calculate the appropriate RGB number.
     * This algorithm is intended to stay in-sync with the equivalent code in
     * mso\officespace\fscolorgallery.cpp.
     * @param {number} m1 The first magic number.
     * @param {number} m2 The second magic number.
     * @param {number} hue The hue to be converted using the magic numbers.
     */
    HslColor._hueToRgbComponent = function (m1, m2, hue) {
        var result;
        if (hue < 0) {
            hue += 1;
        }
        if (hue > 1) {
            hue -= 1;
        }
        if (hue < 1 / 6) {
            result = m1 + (m2 - m1) * hue * 6;
        }
        else if (hue < 1 / 2) {
            result = m2;
        }
        else if (hue < 2 / 3) {
            result = m1 + (m2 - m1) * (2 / 3 - hue) * 6;
        }
        else {
            result = m1;
        }
        return HslColor._hslComponentToByte(result);
    };
    /**
     * Darkens the color by the provided factor.
     * @param {number} factor The factor (between 0 and 1) by which to scale the luminance.
     */
    HslColor.prototype.darken = function (factor) {
        // TODO: Validate input.
        this.lum *= factor;
    };
    /**
     * Lightens the color by the provided factor.
     * @param {number} factor The factor (between 0 and 1) by which to scale the luminance.
     */
    HslColor.prototype.lighten = function (factor) {
        // TODO: Validate input.
        this.lum = this.lum * factor + (1 - factor);
    };
    /**
     * Returns an RgbaColor representation of this HslColor.
     */
    HslColor.prototype.toRgbaColor = function () {
        var r;
        var g;
        var b;
        var hue = this.hue;
        var saturation = this.sat;
        var luminance = this.lum;
        if (Math.round(saturation * RgbaColor_1.default.maxComponent) === 0) {
            r = g = b = HslColor._hslComponentToByte(luminance);
        }
        else {
            var m1;
            var m2;
            if (luminance <= 0.5) {
                m2 = luminance * (1 + saturation);
            }
            else {
                m2 = luminance + saturation - (luminance * saturation);
            }
            m1 = 2 * luminance - m2;
            r = HslColor._hueToRgbComponent(m1, m2, hue + (1 / 3));
            g = HslColor._hueToRgbComponent(m1, m2, hue);
            b = HslColor._hueToRgbComponent(m1, m2, hue - (1 / 3));
        }
        return RgbaColor_1.default.fromRgba(r, g, b, this.alpha);
    };
    return HslColor;
}());
exports.default = HslColor;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDataStore_1 = __webpack_require__(32);
var DataStoreCachingType_1 = __webpack_require__(28);
var THEME_CACHE_VERSION = '1.7';
var THEME_CACHE_PREFIX = 'odTheme';
var DATA_KEY = 'Data';
var TOKEN_KEY = 'CacheToken';
var VERSION_KEY = 'CacheVersion';
/**
 * Utility methods for caching theme data.
 */
var ThemeCache = /** @class */ (function () {
    function ThemeCache() {
    }
    /**
     * Clears the theme cache.
     */
    ThemeCache.clearThemeCache = function () {
        "use strict";
        var ds = ThemeCache.getThemeDataStore();
        ds.remove(DATA_KEY);
        ds.remove(TOKEN_KEY);
        ds.remove(VERSION_KEY);
    };
    /**
     * Reads the cached theme, if the cacheToken is compatible.
     * @param {string} cacheToken The cached value will only be returned if it has the same cache token.
     */
    ThemeCache.getCachedTheme = function (cacheToken) {
        "use strict";
        var cachedTheme;
        var ds = ThemeCache.getThemeDataStore();
        try {
            // Make sure the data was cached with the expected version and
            // the current theme cache token. Otherwise, return undefined.
            if (cacheToken === ds.getValue(TOKEN_KEY) &&
                THEME_CACHE_VERSION === ds.getValue(VERSION_KEY)) {
                cachedTheme = ds.getValue(DATA_KEY);
            }
        }
        catch (exReadCache) {
            // Ignore.
        }
        return cachedTheme;
    };
    /**
     * Updates the theme data in the cache.
     * @param {IThemeData} themeData The new theme data to cache.
     */
    ThemeCache.updateThemeCache = function (themeData, cacheToken) {
        "use strict";
        var ds = ThemeCache.getThemeDataStore();
        ds.setValue(DATA_KEY, themeData);
        ds.setValue(TOKEN_KEY, cacheToken || themeData.cacheToken);
        ds.setValue(VERSION_KEY, THEME_CACHE_VERSION);
    };
    /**
     * Returns an instance of the supporting data store for this cache.
     */
    ThemeCache.getThemeDataStore = function () {
        "use strict";
        return new BaseDataStore_1.default(THEME_CACHE_PREFIX, DataStoreCachingType_1.default.local);
    };
    return ThemeCache;
}());
exports.default = ThemeCache;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ItemType;
(function (ItemType) {
    ItemType[ItemType["File"] = 0] = "File";
    ItemType[ItemType["Folder"] = 1] = "Folder";
    ItemType[ItemType["Media"] = 2] = "Media";
    ItemType[ItemType["OneNote"] = 3] = "OneNote";
    ItemType[ItemType["Unknown"] = 4] = "Unknown";
    ItemType[ItemType["Error"] = 5] = "Error";
    ItemType[ItemType["App"] = 6] = "App";
    ItemType[ItemType["Subsite"] = 7] = "Subsite";
    /** A shortcut link pointing to some target destination or Url */
    ItemType[ItemType["Shortcut"] = 8] = "Shortcut";
})(ItemType = exports.ItemType || (exports.ItemType = {}));
exports.default = ItemType;


/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_StyleHelpers__ = __webpack_require__(39);

var CanvasEmphasisStyles = (function () {
    function CanvasEmphasisStyles() {
    }
    CanvasEmphasisStyles.getClassNames = function (props) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__common_StyleHelpers__["a" /* getClassNames */])(CanvasEmphasisStyles._getStyles, props);
    };
    CanvasEmphasisStyles._getStyles = function (props) {
        var theme = props.theme, root = props.root;
        var semanticColors = theme.semanticColors;
        return {
            root: [
                root,
                {
                    backgroundColor: semanticColors.bodyBackground,
                    color: semanticColors.bodyText
                }
            ]
        };
    };
    return CanvasEmphasisStyles;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasEmphasisStyles);


/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var CanvasEmphasis = (function () {
    function CanvasEmphasis() {
    }
    CanvasEmphasis.getVariantThemeForEmphasis = function (color, theme, variantEmphasis) {
        return variantEmphasis.then(function (variants) {
            var t = theme;
            switch (color) {
                case 2 :
                    t = variants.getSoftVariant(theme);
                    break;
                case 3 :
                    t = variants.getStrongVariant(theme);
                    break;
                case 1 :
                    t = variants.getNeutralVariant(theme);
                    break;
            }
            return t;
        });
    };
    return CanvasEmphasis;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasEmphasis);


/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ms_sp_telemetry__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ms_sp_telemetry___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__ms_sp_telemetry__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__CanvasSectionPart__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_Flights__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_KillSwitches__ = __webpack_require__(17);







var CanvasZonePart = (function () {
    function CanvasZonePart(zoneIdx, emphasis, map, webPartManager, propertyPaneController, layoutIndex) {
        this._index = zoneIdx;
        this._emphasis = emphasis;
        this._sectionsMap = new Map();
        this._controlComponentMap = map;
        this._webPartManager = webPartManager;
        this._propertyPaneController = propertyPaneController;
        this._elementKey = __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library__["Guid"].newGuid().toString();
        this._layoutIndex = layoutIndex;
    }
    Object.defineProperty(CanvasZonePart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "layoutIndex", {
        get: function () {
            return this._layoutIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "id", {
        get: function () {
            return __WEBPACK_IMPORTED_MODULE_5__common_Flights__["a" /* default */].isCanvasVerticalSectionFlightEnabled()
                ? this._layoutIndex + "_" + this._index
                : this._index.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "elementKey", {
        get: function () {
            return this._elementKey;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "sections", {
        get: function () {
            var sections = [];
            this._sectionsMap.forEach(function (section) {
                sections.push(section);
            });
            return sections.sort(function (section1, section2) {
                return section1.index - section2.index;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "layoutType", {
        get: function () {
            if (!this._layoutType) {
                this._layoutType = this._getCurrentColumnSize();
            }
            return this._layoutType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "emphasis", {
        get: function () {
            return this._emphasis;
        },
        enumerable: true,
        configurable: true
    });
    CanvasZonePart.prototype.addControl = function (canvasControl) {
        if (!__WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].isPositionValid(canvasControl.position)) {
            return undefined;
        }
        var curSectionIndex = canvasControl.position.sectionIndex;
        if (curSectionIndex === undefined) {
            return undefined;
        }
        var controlId;
        var sectionsToAdd = 1;
        var colDef = CanvasZonePart.columnDefinitionMap.get(canvasControl.controlType);
        if (colDef) {
            sectionsToAdd = colDef.sections;
        }
        if (__WEBPACK_IMPORTED_MODULE_5__common_Flights__["a" /* default */].isLayoutEmphasisFlightEnabled()) {
            canvasControl.emphasis = canvasControl.emphasis || {};
            canvasControl.emphasis = {
                zoneEmphasis: this._emphasis,
                sectionEmphasis: canvasControl.emphasis.sectionEmphasis,
                controlEmphasis: canvasControl.emphasis.controlEmphasis
            };
        }
        for (var i = 0; i < sectionsToAdd; ++i, ++curSectionIndex) {
            var section = this._sectionsMap.get(curSectionIndex);
            if (!section) {
                var factor = colDef && colDef.factor[i];
                if (isNaN(factor)) {
                    factor = canvasControl.position.sectionFactor;
                }
                var newSection = new __WEBPACK_IMPORTED_MODULE_4__CanvasSectionPart__["a" /* default */](curSectionIndex, canvasControl.emphasis && canvasControl.emphasis.sectionEmphasis, factor);
                if (canvasControl.position.controlIndex === undefined) {
                    canvasControl.position = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: undefined,
                        controlIndex: __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].firstLayoutIndex
                    });
                }
                controlId = newSection.addControl(canvasControl);
                if (controlId) {
                    this._sectionsMap.set(curSectionIndex, newSection);
                }
            }
            else {
                if (canvasControl.position.controlIndex !== undefined) {
                    controlId = section.addControl(canvasControl);
                }
                else {
                    canvasControl.position = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].generateNewLayoutIndex(this.sections, curSectionIndex),
                        controlIndex: undefined
                    });
                    if (canvasControl.position.sectionIndex === undefined) {
                        return undefined;
                    }
                    var newSecondarySection = new __WEBPACK_IMPORTED_MODULE_4__CanvasSectionPart__["a" /* default */](canvasControl.position.sectionIndex, canvasControl.emphasis && canvasControl.emphasis.sectionEmphasis);
                    canvasControl.position = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: undefined,
                        controlIndex: __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].firstLayoutIndex
                    });
                    controlId = newSecondarySection.addControl(canvasControl);
                    if (controlId) {
                        this._sectionsMap.set(canvasControl.position.sectionIndex, newSecondarySection);
                    }
                }
            }
        }
        return controlId;
    };
    CanvasZonePart.prototype.moveControl = function (control, newControlPosition) {
        if (!control || control.position.zoneIndex !== newControlPosition.zoneIndex) {
            return;
        }
        if (control.position.sectionIndex === newControlPosition.sectionIndex) {
            this._controlComponentMap.get(control.id).position = newControlPosition;
            var section = this._sectionsMap.get(newControlPosition.sectionIndex);
            section.moveControl(control, newControlPosition);
        }
        else {
            var newControl = this._controlComponentMap.get(control.id).component.serialize();
            newControl.position = newControlPosition;
            newControl.addedFromPersistedData = true;
            this.removeControl(control.position);
            this._webPartManager.disposeWebparts(control.id);
            this.addControl(newControl);
        }
    };
    CanvasZonePart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var section = this._sectionsMap.get(controlPosition.sectionIndex);
        if (!section) {
            return undefined;
        }
        var controlId = section.removeControl(controlPosition);
        return controlId;
    };
    CanvasZonePart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var section = this._sectionsMap.get(controlPosition.sectionIndex);
        if (!section) {
            return undefined;
        }
        return section.fetchControl(controlPosition);
    };
    CanvasZonePart.prototype.fetchAllControls = function (includeEmptySections) {
        var _this = this;
        if (includeEmptySections === void 0) { includeEmptySections = true; }
        var canvasControls = [];
        var sections = this.sections;
        sections.forEach(function (section) {
            var controls = section.fetchAllControls();
            if (includeEmptySections && controls.length === 0) {
                var emptySection = section.emptySectionControl;
                emptySection.position = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(emptySection.position, {
                    zoneIndex: _this._index,
                    sectionIndex: undefined,
                    controlIndex: undefined,
                    layoutIndex: _this._layoutIndex
                });
                if (__WEBPACK_IMPORTED_MODULE_5__common_Flights__["a" /* default */].isLayoutEmphasisFlightEnabled()) {
                    emptySection.emphasis = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(emptySection.emphasis, {
                        zoneEmphasis: _this._emphasis,
                        sectionEmphasis: undefined,
                        controlEmphasis: undefined
                    });
                }
                controls.push(emptySection);
            }
            canvasControls = canvasControls.concat(controls);
        });
        return canvasControls;
    };
    CanvasZonePart.prototype.changeEmphasis = function (emphasis) {
        this._emphasis = emphasis.zoneEmphasis;
        this._sectionsMap.forEach(function (section) {
            section.changeEmphasis(emphasis);
        });
        if (!__WEBPACK_IMPORTED_MODULE_6__common_KillSwitches__["a" /* default */].isPropertyPaneControllerFromServiceScopeKillSwitchActivated()) {
            this._propertyPaneController.requestAction(this.id, 5 );
        }
        else {
            this._webPartManager.requestPropertyPaneAction(this.id, 5 );
        }
    };
    CanvasZonePart.prototype.changeZone = function (zoneType) {
        var colDef = CanvasZonePart.columnDefinitionMap.get(zoneType);
        var sections = this.sections;
        var sectionsLength = sections.length;
        if (colDef.sections > sectionsLength) {
            this._increaseSections(sections, colDef);
        }
        else if (colDef.sections < sectionsLength) {
            this._reduceSections(sections, colDef);
        }
        else if (colDef.factor[0] !== sections[0].factor) {
            sections.forEach(function (sectionPart, index) {
                sectionPart.changeFactor(colDef.factor[index]);
            });
        }
        this._layoutType = zoneType;
    };
    CanvasZonePart.prototype.isEmpty = function () {
        return this.fetchAllControls(false).length === 0;
    };
    CanvasZonePart.prototype.dispose = function () {
        var controls = this.fetchAllControls(false);
        var numControls = controls.length;
        for (var i = 0; i < numControls; ++i) {
            this._webPartManager.disposeWebparts(controls[i].id);
            this._controlComponentMap.delete(controls[i].id);
        }
        this._sectionsMap.clear();
    };
    CanvasZonePart.prototype.changeZoneIndex = function (newZoneIndex) {
        var _this = this;
        this.fetchAllControls(false).forEach(function (control) {
            control.position = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(control.position, {
                zoneIndex: newZoneIndex
            });
            _this._controlComponentMap.get(control.id).position = control.position;
        });
        this._index = newZoneIndex;
    };
    CanvasZonePart.prototype._createQosScope = function (scope) {
        return new __WEBPACK_IMPORTED_MODULE_0__ms_sp_telemetry__["_QosMonitor"]("Canvas" + scope);
    };
    CanvasZonePart.prototype._increaseSections = function (currentSections, columnDefinition) {
        var qos = this._createQosScope('IncreaseSections');
        try {
            var currentSectionsLength = currentSections.length;
            currentSections.forEach(function (sectionPart, index) {
                sectionPart.changeFactor(columnDefinition.factor[index]);
            });
            var newSectionsLength = columnDefinition.sections;
            var currentSectionIndex = currentSections[currentSectionsLength - 1].index + 1;
            for (var i = currentSectionsLength; i < newSectionsLength; ++i) {
                var newSection = new __WEBPACK_IMPORTED_MODULE_4__CanvasSectionPart__["a" /* default */](currentSectionIndex, undefined, columnDefinition.factor[i]);
                this._sectionsMap.set(currentSectionIndex++, newSection);
            }
            qos.writeSuccess();
        }
        catch (err) {
            qos.writeUnexpectedFailure('Exception', err);
        }
    };
    CanvasZonePart.prototype._reduceSections = function (currentSections, columnDefinition) {
        var _this = this;
        var qos = this._createQosScope('ReduceSections');
        try {
            var currentSectionsLength = currentSections.length;
            var lastSection_1 = currentSections[columnDefinition.sections - 1];
            var lastSectionLastControl = lastSection_1.controls[lastSection_1.controls.length - 1];
            var newSectionsLength = columnDefinition.sections;
            var controlIndex_1 = 1;
            if (lastSectionLastControl) {
                controlIndex_1 = lastSectionLastControl.position.controlIndex;
            }
            for (var i = 0; i < newSectionsLength; ++i) {
                currentSections[i].changeFactor(columnDefinition.factor[i]);
            }
            for (var i = currentSectionsLength - 1; i >= newSectionsLength; --i) {
                currentSections[i].controls.forEach(function (control) {
                    var newControl = _this._controlComponentMap.get(control.id).component.serialize();
                    newControl.position = __WEBPACK_IMPORTED_MODULE_3__CanvasLayout__["a" /* default */].cloneMerge(newControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: lastSection_1.index,
                        sectionFactor: lastSection_1.factor,
                        controlIndex: ++controlIndex_1,
                        layoutIndex: undefined
                    });
                    newControl.addedFromPersistedData = true;
                    _this._webPartManager.disposeWebparts(control.id);
                    lastSection_1.addControl(newControl);
                });
                currentSections[i].dispose();
                this._sectionsMap.delete(currentSections[i].index);
            }
            qos.writeSuccess();
        }
        catch (err) {
            qos.writeUnexpectedFailure('Exception', err);
        }
    };
    CanvasZonePart.prototype._getCurrentColumnSize = function () {
        var sections = this.sections;
        var sectionsLength = sections.length;
        var firstSectionFactor = sections[0].factor;
        var columnSize;
        if (sectionsLength === 1) {
            columnSize = firstSectionFactor === 0 ? __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].FullWidth : __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].OneColumn;
        }
        else if (sectionsLength === 2) {
            if (firstSectionFactor === 4) {
                columnSize = __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].OneThirdColumnLeft;
            }
            else if (firstSectionFactor === 6) {
                columnSize = __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].TwoColumns;
            }
            else if (firstSectionFactor === 8) {
                columnSize = __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].OneThirdColumnRight;
            }
        }
        else if (sectionsLength === 3) {
            columnSize = __WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].ThreeColumns;
        }
        return columnSize;
    };
    CanvasZonePart.columnDefinitionMap = new Map([
        [__WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].OneColumn, { sections: 1, factor: [12] }],
        [__WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].FullWidth, { sections: 1, factor: [0] }],
        [__WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].TwoColumns, { sections: 2, factor: [6, 6] }],
        [__WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].ThreeColumns, { sections: 3, factor: [4, 4, 4] }],
        [__WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].OneThirdColumnRight, { sections: 2, factor: [8, 4] }],
        [__WEBPACK_IMPORTED_MODULE_2__canvasControl_CanvasControlType__["a" /* default */].OneThirdColumnLeft, { sections: 2, factor: [4, 8] }]
    ] );
    return CanvasZonePart;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasZonePart);


/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__canvasControl_CanvasControlType__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_Flights__ = __webpack_require__(6);




var CanvasSectionPart = (function () {
    function CanvasSectionPart(sectionIdx, emphasis, factor) {
        this._index = sectionIdx;
        this._emphasis = emphasis;
        this._factor = factor;
        this._controlsMap = new Map();
    }
    Object.defineProperty(CanvasSectionPart.prototype, "emptySectionControl", {
        get: function () {
            return {
                controlType: undefined,
                displayMode: __WEBPACK_IMPORTED_MODULE_0__microsoft_sp_core_library__["DisplayMode"].Edit,
                id: CanvasSectionPart.emptySectionId,
                position: {
                    zoneIndex: undefined,
                    sectionIndex: this._index,
                    controlIndex: undefined,
                    sectionFactor: this._factor
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "factor", {
        get: function () {
            return this._factor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "controls", {
        get: function () {
            var canvasControls = [];
            this._controlsMap.forEach(function (control) {
                canvasControls.push(control);
            });
            return canvasControls.sort(function (ctrl1, ctrl2) {
                return ctrl1.position.controlIndex - ctrl2.position.controlIndex;
            });
        },
        enumerable: true,
        configurable: true
    });
    CanvasSectionPart.prototype.addControl = function (canvasControl) {
        if (canvasControl.controlType === __WEBPACK_IMPORTED_MODULE_1__canvasControl_CanvasControlType__["a" /* default */].WebPartZone ||
            canvasControl.controlType === __WEBPACK_IMPORTED_MODULE_1__canvasControl_CanvasControlType__["a" /* default */].RTE) {
            if (!__WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].isPositionValid(canvasControl.position)) {
                return undefined;
            }
            var curControlIndex = canvasControl.position.controlIndex;
            if (curControlIndex === undefined) {
                return undefined;
            }
            if (__WEBPACK_IMPORTED_MODULE_3__common_Flights__["a" /* default */].isLayoutEmphasisFlightEnabled()) {
                canvasControl.emphasis = canvasControl.emphasis || {};
                canvasControl.emphasis = {
                    zoneEmphasis: canvasControl.emphasis.zoneEmphasis,
                    sectionEmphasis: this._emphasis,
                    controlEmphasis: canvasControl.emphasis.controlEmphasis
                };
            }
            var sectionControl = this._controlsMap.get(curControlIndex);
            if (!sectionControl) {
                this._controlsMap.set(curControlIndex, canvasControl);
            }
            else {
                var layoutControlItems = this.controls.map(function (control) {
                    return {
                        index: control.position.controlIndex
                    };
                });
                canvasControl.position = __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].cloneMerge(canvasControl.position, {
                    zoneIndex: undefined,
                    sectionIndex: undefined,
                    controlIndex: __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].generateNewLayoutIndex(layoutControlItems, curControlIndex)
                });
                if (canvasControl.position.controlIndex === undefined) {
                    return undefined;
                }
                this._controlsMap.set(canvasControl.position.controlIndex, canvasControl);
            }
        }
        return canvasControl.id;
    };
    CanvasSectionPart.prototype.moveControl = function (control, newControlPosition) {
        if (!control ||
            control.position.zoneIndex !== newControlPosition.zoneIndex ||
            control.position.sectionIndex !== newControlPosition.sectionIndex) {
            return;
        }
        this._controlsMap.delete(control.position.controlIndex);
        var siblingLayoutItems = this.controls.map(function (ctrl) {
            return {
                index: ctrl.position.controlIndex
            };
        });
        control.position = __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].cloneMerge(control.position, {
            controlIndex: __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].generateNewLayoutIndex(siblingLayoutItems, newControlPosition.controlIndex)
        });
        this._controlsMap.set(control.position.controlIndex, control);
    };
    CanvasSectionPart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var control = this._controlsMap.get(controlPosition.controlIndex);
        if (!control) {
            return undefined;
        }
        this._controlsMap.delete(control.position.controlIndex);
        return control.id;
    };
    CanvasSectionPart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        return this._controlsMap.get(controlPosition.controlIndex);
    };
    CanvasSectionPart.prototype.fetchAllControls = function () {
        return this.controls;
    };
    CanvasSectionPart.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasSectionPart.prototype.dispose = function () {
        this._controlsMap.clear();
    };
    CanvasSectionPart.prototype.changeFactor = function (newFactor) {
        this._controlsMap.forEach(function (control) {
            control.position = __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].cloneMerge(control.position, {
                zoneIndex: undefined,
                sectionIndex: undefined,
                sectionFactor: newFactor,
                controlIndex: undefined,
                layoutIndex: undefined
            });
        });
        this._factor = newFactor;
    };
    CanvasSectionPart.prototype.changeEmphasis = function (emphasis) {
        this._controlsMap.forEach(function (control) {
            control.emphasis = __WEBPACK_IMPORTED_MODULE_2__CanvasLayout__["a" /* default */].cloneMerge(control.emphasis, emphasis);
        });
        this._emphasis = emphasis.sectionEmphasis;
    };
    return CanvasSectionPart;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasSectionPart);


/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/prop-types/15.5.7/node_modules/prop-types/index.js
var prop_types = __webpack_require__(11);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@ms/odsp-utilities-bundle/4.2.4/node_modules/@ms/odsp-utilities-bundle/lib/index.js
var lib = __webpack_require__(15);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasControl/CanvasControlType.js
var CanvasControlType = __webpack_require__(8);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKTextEditor.js + 5 modules
var CKTextEditor = __webpack_require__(60);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasLayout.js + 4 modules
var CanvasLayout = __webpack_require__(9);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(12);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbarButton/ToolbarButton.js
var ToolbarButton = __webpack_require__(30);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbarSubMenu/ToolbarSubmenu.js
var ToolbarSubmenu = __webpack_require__(105);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/BaseRte.js + 4 modules
var BaseRte = __webpack_require__(49);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/SPRteCKEditorConfiguration.js
var SPRteCKEditorConfiguration = __webpack_require__(106);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/loc/RteStrings.resx.js
var RteStrings_resx = __webpack_require__(19);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/index.js + 7 modules
var sp_a11y_lib = __webpack_require__(14);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/SPRte.js



















var SPRte_SPRte = (function (_super) {
    tslib_es6["__extends"](SPRte, _super);
    function SPRte(props) {
        var _this = _super.call(this, props, { editor: CKTextEditor["a" /* default */], config: new SPRteCKEditorConfiguration["a" /* default */](), loader: CKTextEditor["a" /* default */].moduleLoader }) || this;
        _this.TAG_NAME = 'Canvas.';
        _this._restoreScrollTopOnNextFocus = false;
        _this._isPasting = false;
        _this._handleScroll = _this._async.debounce(_this._handleScroll, 100);
        return _this;
    }
    SPRte.prototype.componentDidMount = function () {
        _super.prototype.componentDidMount.call(this);
    };
    SPRte.prototype.componentDidUpdate = function (prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        if (this.state.displayMode === sp_core_library_["DisplayMode"].Edit && this.context.store && this.context.store.scrollableParent) {
            this._formattingbar
                ? this.context.store.scrollableParent.addEventListener('scroll', this._handleScroll)
                : this.context.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
        if (this.props.displayMode === sp_core_library_["DisplayMode"].Edit) {
            this._loadAndInstantiatePropertyPaneControl();
        }
        if (!false && !this._isRTESelected && !this.state.isFormattingBarHidden) {
            this._updateFormattingBar(true, true);
        }
        if (!this.state.currentSubmenuOpen && this._isPropertyPaneOpen && this._isRTESelected) {
            this._changePropertyPaneState(5 );
        }
    };
    SPRte.prototype.focus = function () {
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
        _super.prototype.focus.call(this);
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        if (this._isPropertyPaneOpen) {
            this._setDelayedFocus();
        }
    };
    SPRte.prototype._handleKeyDown = function (evt) {
        _super.prototype._handleKeyDown.call(this, evt);
        if (sp_a11y_lib["Keyboard"].isKey(80 , evt, { alt: true })) {
            sp_telemetry_["_EngagementLogger"].logEvent(this.TAG_NAME + 'PropertyPane.Focus', evt.type);
            this._changePropertyPaneState(1 );
            BaseRte["a" /* BaseRte */]._preventEventDefaultBehaviour(evt);
        }
    };
    SPRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, this._onImagePaste.bind(this), this._onPaste.bind(this), this._onContextualMenu.bind(this));
    };
    SPRte.prototype._onImagePaste = function (isImageValid, imageBlob, innerHTML) {
        _super.prototype._onImagePaste.call(this, isImageValid, imageBlob, innerHTML);
        if (isImageValid) {
            this._updateFormattingBar(true, true);
            this._createImageWebPartAndSplitRTE(innerHTML, imageBlob, this.props.position, this.props.id);
        }
    };
    SPRte.prototype._postEditorCreatedHandlerComplete = function () {
        if (!this.props.addedFromPersistedData) {
            this.focus();
        }
    };
    SPRte.prototype._closeLinkDialog = function () {
        this._restoreScrollTopOnNextFocus = true;
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        _super.prototype._closeLinkDialog.call(this);
    };
    SPRte.prototype._openLinkDialog = function (defaultAddress) {
        if (defaultAddress === void 0) { defaultAddress = ''; }
        _super.prototype._openLinkDialog.call(this, defaultAddress);
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
    };
    SPRte.prototype._restoreOnFocus = function () {
        var restore = _super.prototype._restoreOnFocus.call(this);
        if (this._restoreScrollTopOnNextFocus && this._currentScrollTop) {
            this._restoreScrollTopOnNextFocus = false;
            this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
            restore = true;
        }
        return restore;
    };
    SPRte.prototype._handleTextChange = function () {
        _super.prototype._handleTextChange.call(this);
        if (this._isPasting) {
            this._onAfterPaste();
        }
        if (this.state.displayMode === sp_core_library_["DisplayMode"].Edit && this.props.onChange) {
            this.props.onChange();
        }
    };
    SPRte.prototype._formattingBarButtons = function () {
        var _this = this;
        var alignButtons = [
            this._getFormatButtonProps('alignLeft', this.getFormatHandler(BaseRte["b" /* Format */].AlignLeft)),
            this._getFormatButtonProps('alignCenter', this.getFormatHandler(BaseRte["b" /* Format */].AlignCenter)),
            this._getFormatButtonProps('alignRight', this.getFormatHandler(BaseRte["b" /* Format */].AlignRight))
        ];
        var bulletButtons = [
            this._getFormatButtonProps('bullet', this.getFormatHandler(BaseRte["b" /* Format */].Bullet)),
            this._getFormatButtonProps('list', this.getFormatHandler(BaseRte["b" /* Format */].List))
        ];
        var buttons = [
            external__react_["createElement"](ToolbarSubmenu["a" /* default */], { a11yManagerId: this.props.a11yManagerId, key: "format", buttons: this._formatSubmenuButtons, isOpen: this.state.currentSubmenuOpen === 'format', isWide: true, onOpen: function () {
                    _this._isSelectionChangeFromToolbar = true;
                    _this.setState({ currentSubmenuOpen: 'format' });
                }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('bold', this.getFormatHandler(BaseRte["b" /* Format */].Bold)))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('italic', this.getFormatHandler(BaseRte["b" /* Format */].Italic)))),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('underline', this.getFormatHandler(BaseRte["b" /* Format */].Underline)))),
            external__react_["createElement"](ToolbarSubmenu["a" /* default */], { a11yManagerId: this.props.a11yManagerId, key: "align", buttons: alignButtons, isOpen: this.state.currentSubmenuOpen === 'align', onOpen: function () {
                    _this._isSelectionChangeFromToolbar = true;
                    _this.setState({ currentSubmenuOpen: 'align' });
                }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
            external__react_["createElement"](ToolbarSubmenu["a" /* default */], { a11yManagerId: this.props.a11yManagerId, key: "bullet", buttons: bulletButtons, isOpen: this.state.currentSubmenuOpen === 'bullet', onOpen: function () {
                    _this._isSelectionChangeFromToolbar = true;
                    _this.setState({ currentSubmenuOpen: 'bullet' });
                }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
            external__react_["createElement"](ToolbarButton["b" /* default */], tslib_es6["__assign"]({}, this._getFormatButtonProps('link', this._handleLink))),
            external__react_["createElement"](ToolbarButton["b" /* default */], { key: "more", canBeActive: false, fabricIconKey: "More", onClick: this._openPropertyPane, title: RteStrings_resx["a" /* default */].FormattingBarMoreButtonTitle, automationId: "more-button", onBlur: this._handleFormattingBarBlur })
        ];
        return buttons;
    };
    Object.defineProperty(SPRte.prototype, "_isPropertyPaneOpen", {
        get: function () {
            return this.context.store.webPartManager.isPropertyPaneOpen();
        },
        enumerable: true,
        configurable: true
    });
    SPRte.prototype._updateFormattingBar = function (isHidden, forceHide) {
        if (!this._editorElement) {
            return;
        }
        var updatePosition = true;
        var newState = {
            formattingBarPosition: {
                left: SPRte._TOOLBAR_DEFAULT_POSITION.left,
                top: SPRte._TOOLBAR_DEFAULT_POSITION.top,
                position: SPRte._TOOLBAR_DEFAULT_POSITION.position,
                right: SPRte._TOOLBAR_DEFAULT_POSITION.right
            },
            isFormattingBarHidden: isHidden
        };
        if (isHidden && this._formattingbarElement) {
            if (!forceHide && this._editableDiv && document.activeElement && document.activeElement === this._editableDiv) {
                isHidden = false;
            }
            else {
                var buttonNodes = this._formattingbarElement.querySelectorAll('.ToolbarButton');
                for (var i = 0; i < buttonNodes.length; i++) {
                    if (this._isSelectionChangeFromToolbar || document.activeElement.isEqualNode(buttonNodes[i])) {
                        this._isSelectionChangeFromToolbar = false;
                        newState.isFormattingBarHidden = false;
                        newState.formattingBarPosition = this.state.formattingBarPosition;
                        isHidden = false;
                        updatePosition = false;
                        break;
                    }
                }
            }
            if (isHidden && !document.activeElement.isContentEditable) {
                window.getSelection().removeAllRanges();
            }
        }
        if (!isHidden) {
            newState.isFormattingBarHidden = false;
            if (updatePosition) {
                newState.formattingBarPosition = this._getFormattingBarPosition();
            }
        }
        this.setState(newState);
    };
    SPRte.prototype._onBeforePaste = function () {
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
        this._isPasting = true;
    };
    SPRte.prototype._handleScroll = function () {
        if (this.state.formattingBarPosition) {
            var isSticky = this.state.formattingBarPosition.position === 'fixed';
            if (this._shouldFormattingBarStick() ? !isSticky : isSticky) {
                var newState = {
                    formattingBarPosition: this._getFormattingBarPosition(),
                    isLinkDialogOpen: false
                };
                this.setState(newState);
            }
        }
    };
    SPRte.prototype._getFormattingBarPosition = function () {
        var floatRight = (this._isRtl && !this._shouldFloatFormattingBar()) || (!this._isRtl && this._shouldFloatFormattingBar());
        var left = floatRight ? undefined : SPRte._TOOLBAR_DEFAULT_POSITION.left;
        var top = SPRte._TOOLBAR_DEFAULT_POSITION.top;
        var right = floatRight ? 0 : SPRte._TOOLBAR_DEFAULT_POSITION.right;
        var position = 'absolute';
        var isFloating = false;
        if (this._formattingbarElement) {
            if (this._currentSelection && this._currentSelection.start !== this._currentSelection.end) {
                var startBounds = this._editor.getBounds(this._currentSelection.start);
                var endBounds = this._editor.getBounds(Math.max(0, this._currentSelection.end - 1));
                if (startBounds.top === endBounds.top) {
                    isFloating = true;
                    endBounds.left = startBounds.left <= endBounds.left ? endBounds.left : this._editorElement.offsetWidth;
                    var toolbarLeft = (startBounds.left + endBounds.left) / 2 - this._formattingbarWidth / 2;
                    var controlZoneWidth = this._editorElement.offsetWidth + SPRte._CONTROLZONE_PADDING_HORIZONTAL * 2;
                    left =
                        toolbarLeft + this._formattingbarWidth <= controlZoneWidth
                            ? Math.max(toolbarLeft, SPRte._TOOLBAR_DEFAULT_POSITION.left)
                            : controlZoneWidth - this._formattingbarWidth;
                    top =
                        startBounds.top < SPRte._LINE_HEIGHT
                            ? SPRte._TOOLBAR_DEFAULT_POSITION.top
                            : startBounds.top + SPRte._TOOLBAR_DEFAULT_POSITION.top;
                    position = 'absolute';
                    if (left === 0) {
                        if (this._isRtl && !this._shouldFloatFormattingBar()) {
                            right = undefined;
                        }
                        else if (this._shouldFloatFormattingBar()) {
                            left = undefined;
                            right = 0;
                        }
                    }
                }
            }
            if (!isFloating && this._shouldFormattingBarStick()) {
                if (floatRight) {
                    right =
                        right +
                            window.innerWidth -
                            this._editorElement.getBoundingClientRect().right -
                            SPRte._CONTROLZONE_PADDING_HORIZONTAL;
                }
                else {
                    left =
                        SPRte._TOOLBAR_DEFAULT_POSITION.left +
                            this._editorElement.getBoundingClientRect().left -
                            SPRte._CONTROLZONE_PADDING_HORIZONTAL;
                }
                top = this.context.store.scrollableParent.getBoundingClientRect().top + SPRte._TOP_OFFSET;
                position = 'fixed';
            }
        }
        return { left: left, top: top, position: position, right: right };
    };
    Object.defineProperty(SPRte.prototype, "_isRTESelected", {
        get: function () {
            return this.context.store.selectedControlId === this.props.id;
        },
        enumerable: true,
        configurable: true
    });
    SPRte.prototype._setDelayedFocus = function () {
        var _this = this;
        this._async.setTimeout(function () { return _this._focusCore(); }, 0);
    };
    SPRte.prototype._onAfterPaste = function () {
        var _this = this;
        sp_telemetry_["_EngagementLogger"].logEvent(this.TAG_NAME + 'CopyPaste');
        this._isPasting = false;
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        window.setTimeout(function () {
            _this.context.store.scrollableParent.scrollTop = _this._currentScrollTop;
            var range = _this._editor.getSelection();
            if (range) {
                var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
                var cursorTop = _this._editor.getBounds(range.start).top;
                var editorTop = _this._editableDiv.getBoundingClientRect().top;
                if (editorTop + cursorTop > viewportHeight) {
                    _this.context.store.scrollableParent.scrollTop =
                        _this._currentScrollTop + editorTop + cursorTop - viewportHeight + SPRte._LINE_HEIGHT;
                }
            }
        }, 10);
    };
    SPRte.prototype._shouldFormattingBarStick = function () {
        if (this._editorElement) {
            var scrollableParentTop = this.context.store.scrollableParent && this.context.store.scrollableParent.getBoundingClientRect().top;
            var rteRect = this._editorElement.getBoundingClientRect();
            return rteRect.top <= scrollableParentTop && scrollableParentTop <= rteRect.bottom;
        }
    };
    SPRte.prototype._shouldFloatFormattingBar = function () {
        return this.props.position && this.props.position.sectionIndex === 3;
    };
    Object.defineProperty(SPRte.prototype, "_isPropertyPaneLoadedAndSelected", {
        get: function () {
            return this._spRtePropertyPane && this._isRTESelected;
        },
        enumerable: true,
        configurable: true
    });
    SPRte.prototype._createImageWebPartAndSplitRTE = function (innerHTML, imageSource, position, id) {
        var itemPropsRTE = {
            a11yManagerId: this.context.store.a11yManager.id,
            controlType: CanvasControlType["a" /* default */].RTE,
            displayMode: this.state.displayMode,
            id: sp_core_library_["Guid"].newGuid().toString(),
            position: CanvasLayout["a" /* default */].undefinedControlPosition,
            innerHTML: innerHTML,
            serviceScope: this.props.serviceScope
        };
        var imageWebPartManifestId = 'd1d91016-032f-456d-98a4-721247c305e8';
        var itemPropsImageWebPart = Object(sp_lodash_subset_["cloneDeep"])(this.context.store.getToolBoxItem(imageWebPartManifestId));
        if (itemPropsImageWebPart) {
            itemPropsImageWebPart.webPartData.properties.imageBlob = imageSource;
            itemPropsImageWebPart.webPartData.id = sp_core_library_["Guid"].newGuid().toString();
            this._addRTEAndImageWebPart(position, itemPropsRTE, itemPropsImageWebPart);
        }
    };
    SPRte.prototype._addRTEAndImageWebPart = function (position, itemPropsRTE, itemPropsImageWebPart) {
        var controls = this.context.store.canvasLayout.fetchAllControls();
        var currentIndex = Object(sp_lodash_subset_["findIndex"])(controls, function (control) {
            return (position.zoneIndex === control.position.zoneIndex &&
                position.sectionIndex === control.position.sectionIndex &&
                position.controlIndex === control.position.controlIndex &&
                position.sectionFactor === control.position.sectionFactor);
        });
        var nextIndex = currentIndex + 1;
        var nextControlPosition;
        if (nextIndex < controls.length &&
            controls[nextIndex].position.zoneIndex === position.zoneIndex &&
            controls[nextIndex].position.sectionIndex === position.sectionIndex) {
            nextControlPosition = controls[nextIndex].position;
            itemPropsImageWebPart.position = Object(sp_lodash_subset_["clone"])(nextControlPosition);
            this.context.store.addControlToCanvas(itemPropsImageWebPart, true);
            itemPropsRTE.position = Object(sp_lodash_subset_["clone"])(nextControlPosition);
            this._addRTEInCanvas(itemPropsRTE);
        }
        else {
            nextControlPosition = {
                zoneIndex: position.zoneIndex,
                sectionIndex: position.sectionIndex,
                sectionFactor: position.sectionFactor,
                controlIndex: position.controlIndex + 1,
                layoutIndex: position.layoutIndex
            };
            itemPropsRTE.position = Object(sp_lodash_subset_["clone"])(nextControlPosition);
            this._addRTEInCanvas(itemPropsRTE);
            itemPropsImageWebPart.position = Object(sp_lodash_subset_["clone"])(nextControlPosition);
            this.context.store.addControlToCanvas(itemPropsImageWebPart, true);
        }
    };
    SPRte.prototype._addRTEInCanvas = function (itemPropsRTE) {
        var spaceNormalizedInnerHtml;
        var shouldAddRTE;
        if (Flights["a" /* default */].isMultiImagePasteFlightEnabled()) {
            spaceNormalizedInnerHtml = itemPropsRTE.innerHTML.replace(SPRte._REMOVE_HTMLTAGS_REGEX, '');
            spaceNormalizedInnerHtml = spaceNormalizedInnerHtml.replace(SPRte._REMOVE_SPACES_REGEX, '');
            shouldAddRTE = spaceNormalizedInnerHtml !== '';
        }
        else {
            spaceNormalizedInnerHtml = itemPropsRTE.innerHTML.replace(SPRte._REMOVE_EXTRALINE_REGEX, '');
            shouldAddRTE = spaceNormalizedInnerHtml !== SPRte._EMPTY_RTE_HTML;
        }
        if (shouldAddRTE) {
            this.context.store.addControlToCanvas(itemPropsRTE, true);
        }
    };
    SPRte.prototype._openPropertyPane = function () {
        this._changePropertyPaneState(3 );
    };
    SPRte.prototype._changePropertyPaneState = function (propertyPaneState) {
        if (this._isPropertyPaneLoadedAndSelected) {
            this.context.store.webPartManager.requestPropertyPaneAction(this.props.id, propertyPaneState);
        }
    };
    SPRte.prototype._loadAndInstantiatePropertyPaneControl = function () {
        var _this = this;
        if (!this._spRtePropertyPane) {
            return __webpack_require__.e/* import() */(2).then(__webpack_require__.bind(null, 504)).then(function (spRtePropertyPane) {
                _this._spRtePropertyPane = spRtePropertyPane.default;
                if (!KillSwitches["a" /* default */].isPropertyPaneControllerFromServiceScopeKillSwitchActivated()) {
                    _this.context.store.propertyPaneController.registerConsumer(_this.props.id, new spRtePropertyPane.default(_this));
                }
                else {
                    _this.context.store.webPartManager.setPropertyPaneConsumer(_this.props.id, new spRtePropertyPane.default(_this));
                }
            });
        }
    };
    SPRte.contextTypes = {
        store: prop_types["object"].isRequired
    };
    SPRte._TOOLBAR_DEFAULT_POSITION = {
        left: 0,
        top: -36,
        position: 'absolute',
        right: undefined
    };
    SPRte._CONTROLZONE_PADDING_HORIZONTAL = 8;
    SPRte._LINE_HEIGHT = 23;
    SPRte._TOP_OFFSET = 10;
    SPRte._EMPTY_RTE_HTML = '<p>&nbsp;</p>';
    SPRte._REMOVE_EXTRALINE_REGEX = new RegExp(/\n/g);
    SPRte._REMOVE_HTMLTAGS_REGEX = new RegExp(/<([^>]+)>|&nbsp;/g);
    SPRte._REMOVE_SPACES_REGEX = new RegExp(/\\s+/g);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_handleKeyDown", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_postEditorCreatedHandlerComplete", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_onBeforePaste", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_handleScroll", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_onAfterPaste", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_openPropertyPane", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRte.prototype, "_changePropertyPaneState", null);
    return SPRte;
}(BaseRte["a" /* BaseRte */]));
/* harmony default export */ var rte_SPRte = (SPRte_SPRte);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/SPRteTouchDevice.js




var SPRteTouchDevice_SPRteTouchDevice = (function (_super) {
    tslib_es6["__extends"](SPRteTouchDevice, _super);
    function SPRteTouchDevice(props) {
        return _super.call(this, props) || this;
    }
    SPRteTouchDevice._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var isKillSwitchActivated = sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('50997e62-503e-4455-9ec6-fdf0f74f40b1'), '01/31/2018', 'Fix position for RTE format bar for touch device');
        var left = isRtl ? 254 : undefined;
        var top = isKillSwitchActivated ? 198 : -36;
        var position = isKillSwitchActivated ? 'fixed' : 'absolute';
        var right = undefined;
        return { left: left, top: top, position: position, right: right };
    };
    SPRteTouchDevice.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
    };
    SPRteTouchDevice.prototype._afterEditorCreated = function (editor) {
        _super.prototype._afterEditorCreated.call(this, editor);
    };
    SPRteTouchDevice.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    SPRteTouchDevice.prototype._getFormattingBarPosition = function () {
        return SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl);
    };
    SPRteTouchDevice.prototype._handleScroll = function () {
    };
    SPRteTouchDevice.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range) {
            return;
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SPRteTouchDevice.prototype, "_handleSelectionChange", null);
    return SPRteTouchDevice;
}(rte_SPRte));
/* harmony default export */ var rte_SPRteTouchDevice = (SPRteTouchDevice_SPRteTouchDevice);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(18);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: external "@microsoft/sp-component-base"
var sp_component_base_ = __webpack_require__(216);
var sp_component_base__default = /*#__PURE__*/__webpack_require__.n(sp_component_base_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasAnimations/CanvasScrollAnimation.js
var CanvasScrollAnimation = __webpack_require__(41);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/webPartZone/WebPartZone.js












var WebPartZone_WebPartZone = (function (_super) {
    tslib_es6["__extends"](WebPartZone, _super);
    function WebPartZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        var _a = _this.context.store, serviceScope = _a.serviceScope, webPartManager = _a.webPartManager;
        _this._webPartManager = webPartManager;
        if (Flights["a" /* default */].isLayoutEmphasisFlightEnabled()) {
            _this._childScope = serviceScope.startNewChild();
            _this._themeProvider = new sp_component_base_["_FabricThemeProvider"](_this._childScope, _this.props.emphasisTheme);
            _this._childScope.provide(sp_component_base_["_FabricThemeProvider"].serviceKey, _this._themeProvider);
            _this._childScope.finish();
        }
        _this.handleConfigureButtonClicked = _this.handleConfigureButtonClicked.bind(_this);
        _this.state = {
            displayMode: _this.props.displayMode
        };
        return _this;
    }
    WebPartZone.prototype.componentDidMount = function () {
        var _this = this;
        var store = this.context.store;
        var context = {
            domElement: this._webPartDiv,
            scrollableParent: store.scrollableParent,
            instanceId: this.props.id,
            manifest: this.props.webPartManifest,
            displayMode: this.props.displayMode,
            webPartData: this.props.webPartData,
            webpartLoadExtraLogInfo: sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('DD838206-C52A-4017-85F5-86E170AD4580'), '01/29/2018', 'Add engagementlog for web part load')
                ? {}
                : {
                    environmentType: sp_core_library_["EnvironmentType"][sp_core_library_["Environment"].type],
                    siteType: store.pageContext && store.pageContext.web ? store.pageContext.web.templateName : '',
                    pageLayoutType: store.pageLayoutType,
                    columnType: this.props.position && this.props.position.sectionFactor
                        ? this.props.position.sectionFactor.toString()
                        : '',
                    displayMode: sp_core_library_["DisplayMode"][store.displayMode],
                    webPartContainer: 'WebPartZone'
                },
            addedFromPersistedData: this.props.addedFromPersistedData,
            onViewportWebPartsRendered: this._onViewportWebPartsRendered.bind(this),
            totalWebparts: store.webPartsCount
        };
        if (Flights["a" /* default */].isLayoutEmphasisFlightEnabled()) {
            context.serviceScope = this._childScope;
        }
        this._loadWebPartPromise = this._webPartManager.loadWebPart(context).then(function () {
            try {
                _this._reveal();
                if (_this.state.displayMode === sp_core_library_["DisplayMode"].Edit && _this.props.id === store.selectedControlId) {
                    store.webPartManager.requestPropertyPaneAction(_this.props.id);
                }
                _this._isLoaded = true;
            }
            catch (err) {
                sp_diagnostics_["_TraceLogger"].logError(WebPartZone._logSource, err, 'didMount.set');
            }
        }, function (error) {
            sp_diagnostics_["_TraceLogger"].logError(WebPartZone._logSource, error, 'didMount.load');
            _this._reveal();
        });
    };
    WebPartZone.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.displayMode !== this.props.displayMode && this.props.displayMode === sp_core_library_["DisplayMode"].Read) {
            this._reveal();
        }
    };
    WebPartZone.prototype.shouldComponentUpdate = function (newProps, newState) {
        if (!Object(sp_lodash_subset_["isEqual"])(this.props.emphasisTheme, newProps.emphasisTheme)) {
            if (newProps.emphasisTheme) {
                this._themeProvider._setTheme(newProps.emphasisTheme);
            }
            else {
                this._themeProvider._clearTheme();
            }
        }
        return false;
    };
    WebPartZone.prototype.render = function () {
        var _this = this;
        var shouldHideZone = CanvasScrollAnimation["a" /* default */].isScrollAnimationsEnabled() && sp_core_library_["DisplayMode"].Read === this.props.displayMode;
        if (CanvasScrollAnimation["a" /* default */].isScrollAnimationsEnabled()) {
            return (external__react_["createElement"]("div", { ref: function (elem) { return (_this._revealDiv = elem); }, style: shouldHideZone ? { visibility: 'hidden' } : undefined },
                external__react_["createElement"]("div", { ref: function (htmlElement) { return (_this._webPartDiv = htmlElement); }, style: { width: '100%' } })));
        }
        else {
            return external__react_["createElement"]("div", { ref: function (htmlElement) { return (_this._webPartDiv = htmlElement); }, style: { width: '100%' } });
        }
    };
    WebPartZone.prototype.componentWillUnmount = function () {
        this._tryUnmountReactComponent();
    };
    Object.defineProperty(WebPartZone.prototype, "instanceId", {
        get: function () {
            return this.props.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartZone.prototype, "isFocusable", {
        get: function () {
            return !!sp_a11y_lib["Focus"].getFirstFocusableChild(this._webPartDiv);
        },
        enumerable: true,
        configurable: true
    });
    WebPartZone.prototype.focus = function () {
        if (!this.context.store.a11yManager.focusInside(this._webPartDiv)) {
            this.context.store.a11yManager.focusOutOf(this._webPartDiv);
        }
    };
    WebPartZone.prototype.handleConfigureButtonClicked = function (shouldToggle) {
        if (this._isLoaded) {
            this._webPartManager.requestPropertyPaneAction(this.props.id, shouldToggle ? 3  : 1 );
        }
    };
    WebPartZone.prototype.handleDeleteButtonClicked = function () {
        var _this = this;
        this._loadWebPartPromise.then(function () { return _this._webPartManager.onWebPartDelete(_this.props.id); });
    };
    WebPartZone.prototype.serialize = function () {
        var webPartData = this._isLoaded
            ? this._webPartManager.serialize(this.props.id).get(this.props.id)
            : this.props.webPartData;
        var serialization = JSON.parse(JSON.stringify(this.props));
        serialization.webPartData = webPartData;
        return serialization;
    };
    WebPartZone.prototype.setDisplayMode = function (newDisplayMode) {
        var _this = this;
        this.setState({
            displayMode: newDisplayMode
        });
        var qos = this.context.store.createQosScope("SetWebPartDisplayModeTo" + newDisplayMode);
        var qosData = {
            alias: this.props.webPartManifest && this.props.webPartManifest.alias,
            webPartId: this.props.webPartId
        };
        var errorLogger = function (error, tag) {
            if (_this.props.webPartManifest && _this.props.webPartManifest.isInternal) {
                qos.writeUnexpectedFailure(tag, error, qosData);
            }
            else {
                qos.writeExpectedFailure(tag + "External", error, qosData);
            }
        };
        this._loadWebPartPromise
            .then(function () {
            _this._webPartManager.setDisplayMode(newDisplayMode, _this.props.id);
            qos.writeSuccess();
        }, function (error) { return errorLogger(error, 'Rejected'); })
            .catch(function (error) { return errorLogger(error, 'AfterLoadCatchAll'); });
    };
    WebPartZone.prototype._reveal = function () {
        CanvasScrollAnimation["a" /* default */].instance.reveal(this._revealDiv);
    };
    WebPartZone.prototype._onViewportWebPartsRendered = function (endTime) {
        this.context.store.onViewportWebPartsRendered(endTime);
    };
    WebPartZone.prototype._tryUnmountReactComponent = function () {
        if (sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('fdc38999-3379-4858-b074-aae2935b0a42'), '6/26/2018', 'TryUnmountReactComponent') ||
            !this._webPartDiv) {
            return;
        }
        var didUnmount = external__react_dom_["unmountComponentAtNode"](this._webPartDiv);
        this._webPartDiv = undefined;
        var logEntry = new sp_diagnostics_["_LogEntry"](WebPartZone._logSource.id, 'TryUnmountReactComponent', sp_diagnostics_["_LogType"].Event, {
            didUnmount: didUnmount.toString()
        });
        sp_telemetry_["_EngagementLogger"].logEventWithLogEntry(logEntry);
    };
    WebPartZone.contextTypes = {
        store: prop_types["object"].isRequired
    };
    WebPartZone.webPartManagerInitialized = false;
    WebPartZone._logSource = sp_diagnostics_["_LogSource"].create('WebPartZone');
    return WebPartZone;
}(external__react_["Component"]));
/* harmony default export */ var webPartZone_WebPartZone = (WebPartZone_WebPartZone);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Utilities.js
var Utilities = __webpack_require__(104);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasControl/CanvasControlFactory.js








var CanvasControlFactory_CanvasControlFactory = (function () {
    function CanvasControlFactory() {
    }
    CanvasControlFactory.CreateCanvasControl = function (props, store, emphasisTheme) {
        props.emphasisTheme = emphasisTheme;
        props.onChange = store.notifyChanged;
        props.ref = store.addReference;
        var control;
        switch (props.controlType) {
            case CanvasControlType["a" /* default */].RTE:
                sp_telemetry_["_PageMetricsLogger"].recordMetric('RichTextEditors');
                var rteProps = tslib_es6["__assign"]({}, props, { serviceScope: store.serviceScope });
                if (Utilities["a" /* default */].isTouchEnabled()) {
                    control = external__react_["createElement"](rte_SPRteTouchDevice, rteProps);
                }
                else {
                    control = external__react_["createElement"](rte_SPRte, rteProps);
                }
                break;
            case CanvasControlType["a" /* default */].WebPartZone:
                control = external__react_["createElement"](webPartZone_WebPartZone, props);
                break;
        }
        return control;
    };
    return CanvasControlFactory;
}());
/* harmony default export */ var canvasControl_CanvasControlFactory = (CanvasControlFactory_CanvasControlFactory);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasDragZone/CanvasDragZoneConstants.js
var CanvasDragZoneConstants = __webpack_require__(26);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasToolboxHint/CanvasToolboxHint.js + 1 modules
var CanvasToolboxHint = __webpack_require__(107);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/a11y/CanvasA11yConstants.js
var CanvasA11yConstants = __webpack_require__(50);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasFullWidthSection.js
var CanvasFullWidthSection = __webpack_require__(40);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/StyleHelpers.js
var StyleHelpers = __webpack_require__(39);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/controlZone/ControlZone.styles.js

var ControlZone_styles_ControlZoneStyles = (function () {
    function ControlZoneStyles() {
    }
    ControlZoneStyles.getEmphasisBackgroundClass = function (props) {
        return Object(StyleHelpers["a" /* getClassNames */])(ControlZoneStyles._getEmphasisBackgroundStyle, props).root;
    };
    ControlZoneStyles._getEmphasisBackgroundStyle = function (props) {
        var root = props.root, theme = props.theme;
        var semanticColors = theme.semanticColors;
        return {
            root: [
                root,
                {
                    backgroundColor: semanticColors.bodyBackground,
                    margin: '-16px',
                    padding: '16px'
                }
            ]
        };
    };
    return ControlZoneStyles;
}());
/* harmony default export */ var ControlZone_styles = (ControlZone_styles_ControlZoneStyles);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/loc/CanvasStrings.resx.js
var CanvasStrings_resx = __webpack_require__(10);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/controlZone/ControlZone.js















var ControlZone_ControlZone = (function (_super) {
    tslib_es6["__extends"](ControlZone, _super);
    function ControlZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._handleClickCapture = _this._handleClickCapture.bind(_this);
        _this._handleKeydownCapture = _this._handleKeydownCapture.bind(_this);
        _this._handleMouseOut = _this._handleMouseOut.bind(_this);
        _this._handleMouseOver = _this._handleMouseOver.bind(_this);
        _this._handleToolbarKeydown = _this._handleToolbarKeydown.bind(_this);
        _this._handleTrapFocus = _this._handleTrapFocus.bind(_this);
        _this._handleControlFocus = _this._handleControlFocus.bind(_this);
        _this._selectControl = _this._selectControl.bind(_this);
        __webpack_require__(224);
        return _this;
    }
    ControlZone._getDragDisallowedAttribute = function (control) {
        if (!CanvasFullWidthSection["a" /* default */].isFullWidthControl(control)) {
            return CanvasDragZoneConstants["a" /* default */].fullWidthSectionTag;
        }
        else {
            return undefined;
        }
    };
    ControlZone._isWebPartExemptFromBackground = function (webPartId) {
        return (webPartId === '20745d7d-8581-4a6c-bf26-68279bc123fc' ||
            webPartId === '7cba020c-5ccb-42e8-b6fc-75b3149aba7b' ||
            webPartId === '8c88f208-6c77-4bdb-86a0-0c47b4316588' ||
            webPartId === 'c70391ea-0b10-4ee9-b2b4-006d3fcad0cd' 
        );
    };
    ControlZone.prototype.shouldComponentUpdate = function (nextProps) {
        var _a = this.props, displayMode = _a.displayMode, emphasis = _a.emphasis, emphasisTheme = _a.emphasisTheme, isSelected = _a.isSelected, position = _a.position;
        return (displayMode !== nextProps.displayMode ||
            isSelected !== nextProps.isSelected ||
            !Object(sp_lodash_subset_["isEqual"])(nextProps.position, position) ||
            !Object(sp_lodash_subset_["isEqual"])(nextProps.emphasis, emphasis) ||
            !Object(sp_lodash_subset_["isEqual"])(nextProps.emphasisTheme, emphasisTheme));
    };
    ControlZone.prototype.componentDidMount = function () {
        var store = this.context.store;
        var _a = this.props, children = _a.children, displayMode = _a.displayMode;
        var controlType = children[0].props.controlType;
        if (store.selectedControlId === this.props.id) {
            store.scrollIntoView('partial', this._domElement, 500, ControlZone._VERTICAL_MARGIN * 2);
            store.a11yManager.focusTo(this._domElement);
        }
        this._childControl = store.getControl(this.props.id, this.props.position);
        if (sp_core_library_["DisplayMode"].Edit === displayMode) {
            this._toolbarElement.addEventListener('keydown', this._handleToolbarKeydown);
            this._childControlElement.addEventListener('keydown', this._handleKeydownCapture, true);
        }
        if (sp_core_library_["DisplayMode"].Read === displayMode) {
            this._reveal(controlType);
        }
    };
    ControlZone.prototype.componentDidUpdate = function (prevProps) {
        var _a = this.props, children = _a.children, displayMode = _a.displayMode;
        var controlType = children[0].props.controlType;
        if (prevProps.displayMode !== displayMode) {
            if (displayMode === sp_core_library_["DisplayMode"].Edit) {
                this._toolbarElement.addEventListener('keydown', this._handleToolbarKeydown);
                this._childControlElement.addEventListener('keydown', this._handleKeydownCapture, true);
            }
            else if (displayMode === sp_core_library_["DisplayMode"].Read) {
                this._toolbarElement.removeEventListener('keydown', this._handleToolbarKeydown);
                this._childControlElement.removeEventListener('keydown', this._handleKeydownCapture, true);
                this._reveal(controlType);
            }
        }
        if (prevProps.position.sectionFactor !== this.props.position.sectionFactor) {
            this.context.store.webPartManager.notifyWebPartContainerResize(this.props.id);
        }
    };
    ControlZone.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, displayMode = _a.displayMode, emphasisTheme = _a.emphasisTheme, isSelected = _a.isSelected, id = _a.id, theme = _a.theme;
        var _b = children[0].props, controlType = _b.controlType, webPartId = _b.webPartId;
        var isReadMode = displayMode === sp_core_library_["DisplayMode"].Read;
        var accessibleLabel = '';
        var ariaPrimaryLabelById = "cswpAccessibleLabel_" + id;
        var ariaContextualLabelId = "cswpAccessibleLabelContextual_" + id;
        var ariaLabelledBy;
        if (controlType === CanvasControlType["a" /* default */].WebPartZone) {
            ariaLabelledBy = ariaContextualLabelId;
        }
        else if (controlType === CanvasControlType["a" /* default */].RTE) {
            accessibleLabel =
                lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].CanvasZoneAriaWebpartName || '', CanvasStrings_resx["a" /* default */].TextWebPartDisplayName || '') || '';
            ariaLabelledBy = ariaPrimaryLabelById;
        }
        if (displayMode === sp_core_library_["DisplayMode"].Edit) {
            accessibleLabel =
                lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].AriaWebPartOrSectionEnterTemplate || '', accessibleLabel, CanvasStrings_resx["a" /* default */].WebPartAriaLabel) || '';
            if (controlType === CanvasControlType["a" /* default */].WebPartZone) {
                ariaLabelledBy += " " + ariaPrimaryLabelById;
            }
        }
        var shouldHideZone = CanvasScrollAnimation["a" /* default */].isScrollAnimationsEnabled() &&
            CanvasControlType["a" /* default */].RTE === controlType &&
            sp_core_library_["DisplayMode"].Read === displayMode;
        var zoneClassName = Object(office_ui_fabric_react_bundle_["css"])('ControlZone', {
            'ControlZone--edit': !isReadMode,
            'ControlZone--selected': isSelected
        });
        var controlZoneEmphasisBackgroundClass;
        if (emphasisTheme && !ControlZone._isWebPartExemptFromBackground(webPartId)) {
            controlZoneEmphasisBackgroundClass = ControlZone_styles.getEmphasisBackgroundClass({
                root: 'ControlZoneEmphasisBackground',
                theme: theme
            });
        }
        return (
        external__react_["createElement"]("div", { "aria-labelledby": ariaLabelledBy, className: zoneClassName, "data-automation-id": "ControlZone", "data-drag-tag": CanvasDragZoneConstants["a" /* default */].controlZoneDragTag, "data-drag-disallowed-tag": children && children[0] && ControlZone._getDragDisallowedAttribute(children[0].props), "data-sp-a11y-id": Object(CanvasA11yConstants["c" /* getControlZoneA11yId */])(id), onMouseOut: this._handleMouseOut, onMouseOver: this._handleMouseOver, ref: function (ref) { return (_this._domElement = ref); }, 
            style: shouldHideZone ? { visibility: 'hidden' } : undefined, tabIndex: isReadMode ? undefined : 0 },
            external__react_["createElement"]("div", { className: controlZoneEmphasisBackgroundClass },
                external__react_["createElement"]("div", { className: "ControlZone-control", onClickCapture: isReadMode ? undefined : this._handleClickCapture, onFocus: isReadMode ? undefined : this._handleControlFocus, ref: function (ref) { return (_this._childControlElement = ref); } }, children[0]),
                external__react_["createElement"]("div", { ref: function (ref) { return (_this._toolbarElement = ref); } }, children[1]),
                displayMode === sp_core_library_["DisplayMode"].Edit && (external__react_["createElement"]("div", { id: ariaPrimaryLabelById, className: "ControlZone-screenReaderOnly" }, accessibleLabel)))));
    };
    ControlZone.prototype._handleControlFocus = function (e) {
        this._selectControl();
    };
    ControlZone.prototype._handleClickCapture = function (e) {
        this._selectControl();
    };
    ControlZone.prototype._handleKeydownCapture = function (evt) {
        if (this._childControl && this._childControl.props.controlType === CanvasControlType["a" /* default */].WebPartZone) {
            this._selectControl();
            if (sp_a11y_lib["Keyboard"].isEscape(evt)) {
                this.context.store.a11yManager.focusTo(this._domElement);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (sp_a11y_lib["Keyboard"].isKey(121 , evt, { alt: true })) {
                this.context.store.a11yManager.focusTo(this._toolbarElement);
                this.context.store.a11yManager.alert(CanvasStrings_resx["a" /* default */].ToolbarNavigationArrowKeys);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (sp_a11y_lib["Keyboard"].isKey(80 , evt, { alt: true })) {
                this.context.store.webPartManager.requestPropertyPaneAction(this._childControl.props.id, 1 );
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (!sp_a11y_lib["Keyboard"].isShiftTab(evt) || evt.target !== sp_a11y_lib["Focus"].getFirstFocusableChild(this._childControlElement)) {
                this.context.store.a11yManager.skipEvent(evt);
            }
        }
    };
    ControlZone.prototype._handleToolbarKeydown = function (evt) {
        if (this._childControl && this._childControl.props.controlType === CanvasControlType["a" /* default */].RTE) {
            this._selectControl();
            if (sp_a11y_lib["Keyboard"].isEscape(evt)) {
                this._childControl.focus();
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (sp_a11y_lib["Keyboard"].isTab(evt)) {
                this._childControl.focusFormattingBar();
                evt.stopPropagation();
                evt.preventDefault();
            }
        }
    };
    ControlZone.prototype._handleMouseOut = function (e) {
        this.context.store.hoveredControlId = undefined;
    };
    ControlZone.prototype._handleMouseOver = function (e) {
        this.context.store.hoveredControlId = this.props.id;
    };
    ControlZone.prototype._handleTrapFocus = function (e) {
        if (e.target === this._trapDiv) {
            this._childControl.focus();
        }
    };
    ControlZone.prototype._reveal = function (controlType) {
        if (CanvasControlType["a" /* default */].RTE === controlType) {
            CanvasScrollAnimation["a" /* default */].instance.reveal(this._domElement);
        }
    };
    ControlZone.prototype._selectControl = function () {
        if (this.context.store.selectedControlId !== this.props.id) {
            this.context.store.selectedControlId = this.props.id;
        }
    };
    ControlZone.contextTypes = {
        store: prop_types["object"].isRequired
    };
    ControlZone._VERTICAL_MARGIN = 22;
    return ControlZone;
}(external__react_["PureComponent"]));
/* harmony default export */ var controlZone_ControlZone = (ControlZone_ControlZone);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbar/Toolbar.js
var Toolbar = __webpack_require__(110);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasSection.scss.js
var CanvasSection_scss = __webpack_require__(111);
var CanvasSection_scss_default = /*#__PURE__*/__webpack_require__.n(CanvasSection_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasSection.js

















var SPACER_ID = '8654b779-4886-46d4-8ffb-b5ed960ee986';
var DIVIDER_ID = '2161a1c6-db61-4731-b97c-3cdb303f7cbb';
var LINK_PREVIEW_ID = '6410b3b6-d440-4663-8744-378976dc041e';
var HIDE_EDIT_BUTTON_WEBPART = new Set([DIVIDER_ID, LINK_PREVIEW_ID]);
var HIDE_MOVE_BUTTON_WEBPART = new Set([SPACER_ID, DIVIDER_ID]);
var CanvasSection_CanvasSection = (function (_super) {
    tslib_es6["__extends"](CanvasSection, _super);
    function CanvasSection(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._controlComponents = [];
        return _this;
    }
    CanvasSection._createEmptyControlLayout = function (zoneIndex, sectionIndex, controlIndex, layoutIndex) {
        return {
            zoneIndex: zoneIndex,
            sectionIndex: sectionIndex,
            controlIndex: controlIndex,
            layoutIndex: layoutIndex
        };
    };
    CanvasSection.prototype.render = function () {
        var _this = this;
        var store = this.context.store;
        var displayMode = store.displayMode;
        var _a = this.props, emphasisTheme = _a.emphasisTheme, section = _a.section, selectedPosition = _a.selectedPosition, theme = _a.theme, zoneIndex = _a.zoneIndex;
        var isEditMode = displayMode === sp_core_library_["DisplayMode"].Edit;
        if (isEditMode && section === undefined) {
            return (external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('CanvasSection', 'CanvasSection-sm12', 'CanvasSection-col', 'CanvasSection--edit'), "data-automation-id": "CanvasSection" },
                external__react_["createElement"](CanvasToolboxHint["a" /* default */], { ariaLabel: lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].ToolboxHintTitleWithLayout, CanvasStrings_resx["a" /* default */].ToolboxHintColumnOne), type: 2 , layout: this.props.hintLayout, theme: this.props.emphasisTheme })));
        }
        var isSectionSelected = selectedPosition.zoneIndex === zoneIndex && selectedPosition.sectionIndex === section.index;
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            isSectionSelected = isSectionSelected && selectedPosition.layoutIndex === this.props.layoutIndex;
        }
        var isLinkPreviewHideEditButtonsKillSwitchActivated = sp_core_library_["_SPKillSwitch"].isActivated(CanvasSection._linkPreviewHideEditButtonsKillSwitch, '12/05/2017', 'hideEditButtonOfLinkPreviewToolbarButtons');
        var controls = section.controls;
        var numControls = controls.length;
        this._controlComponents = [];
        controls.forEach(function (curCtrl, curIdx) {
            var isControlSelected = isSectionSelected && selectedPosition.controlIndex === curCtrl.position.controlIndex;
            var hideEditButton = false;
            var hideMoveButton = false;
            var webPartId = curCtrl.webPartId;
            if (!isLinkPreviewHideEditButtonsKillSwitchActivated) {
                hideEditButton = HIDE_EDIT_BUTTON_WEBPART.has(webPartId);
                hideMoveButton = HIDE_MOVE_BUTTON_WEBPART.has(webPartId);
            }
            else {
                hideEditButton = webPartId === DIVIDER_ID;
                hideMoveButton = webPartId === DIVIDER_ID || webPartId === SPACER_ID;
            }
            _this._controlComponents.push(external__react_["createElement"](controlZone_ControlZone, { displayMode: displayMode, emphasis: curCtrl.emphasis, emphasisTheme: emphasisTheme, id: curCtrl.id, isSelected: isControlSelected, key: curCtrl.id, position: curCtrl.position, theme: theme },
                canvasControl_CanvasControlFactory.CreateCanvasControl(curCtrl, store, emphasisTheme),
                external__react_["createElement"](Toolbar["a" /* default */], { controlType: curCtrl.controlType, displayMode: displayMode, id: curCtrl.id, onConfigureButtonClick: store.handleConfigureButtonClicked, onDeleteButtonClick: store.handleDeleteControlButtonClicked, controlPosition: curCtrl.position, hideEditButton: hideEditButton, hideMoveButton: hideMoveButton })));
            var nextControlIndex = curIdx + 1 === numControls
                ?
                    curCtrl.position.controlIndex + 1
                :
                    controls[curIdx + 1].position.controlIndex;
            var nextCtrlPosition = CanvasSection._createEmptyControlLayout(curCtrl.position.zoneIndex, curCtrl.position.sectionIndex, nextControlIndex, curCtrl.position.layoutIndex);
            _this._addToolBoxHint(nextCtrlPosition);
        });
        this._firstControlIdx = controls.length > 0 ? controls[0].position.controlIndex : CanvasLayout["a" /* default */].firstLayoutIndex;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: this._firstControlIdx,
            sectionFactor: section.factor,
            layoutIndex: this.props.layoutIndex
        };
        var isReadMode = displayMode === sp_core_library_["DisplayMode"].Read;
        var layoutSectionClassName = this._getLayoutSectionClassName(isReadMode, isSectionSelected);
        return (external__react_["createElement"]("div", { className: layoutSectionClassName, ref: function (ref) { return (_this._domElement = ref); }, "data-automation-id": "CanvasSection", "data-drag-tag": CanvasDragZoneConstants["a" /* default */].sectionDragTag, "data-drag-disallowedArea-tag": this._dragDisallowedAreaTag, "data-negative-space": true },
            this._getContentSelectionMechanism(firstControlLayout),
            this._controlComponents));
    };
    CanvasSection.prototype._addToolBoxHint = function (nextCtrlPosition) {
        this._controlComponents.push(external__react_["createElement"](CanvasToolboxHint["a" /* default */], { ariaLabel: this._getToolboxHintAccessibleTitle(), layout: nextCtrlPosition, key: "hint." + nextCtrlPosition.controlIndex, type: 2 , theme: this.props.emphasisTheme }));
    };
    CanvasSection.prototype._getLayoutSectionClassName = function (isReadMode, isSectionSelected) {
        var layoutSectionClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasSection', 'CanvasSection-col', 'CanvasSection-sm12', "CanvasSection-xl" + (this.props.section.factor || 12), {
            'CanvasSection--edit': !isReadMode,
            'CanvasSection--read': isReadMode,
            'CanvasSection--selected': isSectionSelected,
            'CanvasSection--reflow': this.props.shouldResize
        });
        return layoutSectionClassName;
    };
    CanvasSection.prototype._shouldCenterAlignHint = function () {
        return false;
    };
    CanvasSection.prototype._getContentSelectionMechanism = function (firstControlLayout) {
        return (external__react_["createElement"](CanvasToolboxHint["a" /* default */], { ariaLabel: this._getToolboxHintAccessibleTitle(), layout: firstControlLayout, type: 2 , theme: this.props.emphasisTheme }));
    };
    Object.defineProperty(CanvasSection.prototype, "_dragDisallowedAreaTag", {
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    CanvasSection.prototype._getToolboxHintAccessibleTitle = function () {
        var section = this.props.section;
        var columnNo = '';
        try {
            switch (section.index) {
                case 1:
                    columnNo = CanvasStrings_resx["a" /* default */].ToolboxHintColumnOne;
                    break;
                case 2:
                    columnNo = CanvasStrings_resx["a" /* default */].ToolboxHintColumnTwo;
                    break;
                case 3:
                    columnNo = CanvasStrings_resx["a" /* default */].ToolboxHintColumnThree;
                    break;
                default:
                    throw 'Unexpected Error';
            }
        }
        catch (err) {
            sp_diagnostics_["_TraceLogger"].logError(CanvasSection._logSource, err, "Canvas section has undefined index");
        }
        return lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].ToolboxHintTitleWithLayout, columnNo);
    };
    CanvasSection.contextTypes = {
        store: prop_types["object"].isRequired
    };
    CanvasSection._logSource = sp_diagnostics_["_LogSource"].create('CanvasSection');
    CanvasSection._linkPreviewHideEditButtonsKillSwitch = sp_core_library_["Guid"].parse('EB9E4DCF-49FA-4044-B9F7-CE23C705E1A8');
    return CanvasSection;
}(external__react_["Component"]));
/* harmony default export */ var canvasSection_CanvasSection = __webpack_exports__["a"] = (CanvasSection_CanvasSection);


/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ms_odsp_utilities_bundle__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ms_odsp_utilities_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__ms_odsp_utilities_bundle__);

var Utilities = (function () {
    function Utilities() {
    }
    Utilities.isTouchEnabled = function () {
        var platform = new __WEBPACK_IMPORTED_MODULE_0__ms_odsp_utilities_bundle__["PlatformDetection"]();
        return platform.isAndroid || platform.isIOS;
    };
    return Utilities;
}());
/* harmony default export */ __webpack_exports__["a"] = (Utilities);


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ms_sp_a11y__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__toolbarButton_ToolbarButton__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ToolbarSubmenu_scss__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ToolbarSubmenu_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__ToolbarSubmenu_scss__);







var DISPLAYBUTTON = 'displayButton';
var ToolbarSubmenu = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](ToolbarSubmenu, _super);
    function ToolbarSubmenu(props) {
        var _this = _super.call(this, props) || this;
        _this._hasExplicitActiveButton = false;
        if (props.a11yManagerId) {
            _this._a11yManager = __WEBPACK_IMPORTED_MODULE_3__ms_sp_a11y__["A11yManager"].getInstanceById(props.a11yManagerId);
        }
        _this.state = {
            isOpen: props.isOpen
        };
        return _this;
    }
    ToolbarSubmenu.prototype.componentDidMount = function () {
        document.addEventListener('click', this._handleDocumentClick);
    };
    ToolbarSubmenu.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this._isKeyboardNav && !this.state.isOpen) {
            if (this._a11yManager) {
                this._a11yManager.focusTo(this._focusElement);
            }
            else {
                __WEBPACK_IMPORTED_MODULE_3__ms_sp_a11y__["Focus"].focusTo(this._focusElement);
            }
            this._focusElement = undefined;
            this._isKeyboardNav = false;
        }
        if (this._isKeyboardNav && this.state.isOpen) {
            if (this._a11yManager) {
                this._a11yManager.focusInside(this._menuElement);
            }
            else {
                __WEBPACK_IMPORTED_MODULE_3__ms_sp_a11y__["Focus"].focusInside(this._menuElement);
            }
            this._isKeyboardNav = false;
        }
    };
    ToolbarSubmenu.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.isOpen !== nextProps.isOpen) {
            this.setState({ isOpen: nextProps.isOpen });
        }
    };
    ToolbarSubmenu.prototype.componentWillUnmount = function () {
        document.removeEventListener('click', this._handleDocumentClick);
    };
    ToolbarSubmenu.prototype.render = function () {
        var openedCssClass = this.state.isOpen ? 'is-open' : '';
        var wideCssClass = this.props.isWide ? 'ToolbarSubmenu--wide' : '';
        var activeButton = this._getActiveButton();
        this._bindButtonClickHandlers();
        var buttonElements = [];
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var buttonProps = _a[_i];
            buttonProps.tabIndex = this.state.isOpen ? 0 : -1;
            if (buttonProps === activeButton) {
                buttonProps.isActive = true;
            }
            buttonElements.push(__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__toolbarButton_ToolbarButton__["b" /* default */], __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({}, buttonProps)));
        }
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: "ToolbarSubmenu " + openedCssClass + " " + wideCssClass },
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__toolbarButton_ToolbarButton__["b" /* default */], { className: "ToolbarSubmenu-displayButton", fabricIconKey: activeButton.fabricIconKey, iconClassName: activeButton.iconClassName, key: "displayButton", onClick: this._handleClickOnDisplayButton, label: activeButton.label, tabIndex: this.state.isOpen ? -1 : 0, title: activeButton.title, onKeyDown: this._handleSubmenuItemsKeyDown, automationId: DISPLAYBUTTON, onBlur: this.props.onBlur }),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["Icon"], { className: "ToolbarSubmenu-caret", iconName: "CaretDownSolid8" }),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["FocusZone"], { isCircularNavigation: true },
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { role: "presentation", className: "ToolbarSubmenu-menuItems", ref: this._resolveRef('_menuElement'), onKeyDown: this._handleSubmenuKeyDown, "data-automation-id": "subMenuContainer" }, buttonElements))));
    };
    ToolbarSubmenu.prototype._bindButtonClickHandlers = function () {
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var buttonProps = _a[_i];
            buttonProps.onClick = this._handleOnButtonClick.bind(this, buttonProps.onClick);
        }
    };
    ToolbarSubmenu.prototype._getActiveButton = function () {
        this._hasExplicitActiveButton = false;
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var button = _a[_i];
            if (button.isActive) {
                this._hasExplicitActiveButton = true;
                return button;
            }
        }
        return this.props.buttons[0];
    };
    ToolbarSubmenu.prototype._handleSubmenuKeyDown = function (e) {
        if (this.state.isOpen && (e.key === 'ArrowRight' || e.key === 'ArrowLeft')) {
            this._isKeyboardNav = true;
            this._handleCloseSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleSubmenuItemsKeyDown = function (e) {
        if (e.key === 'ArrowDown') {
            this._isKeyboardNav = true;
            this._handleOpenSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleClickOnDisplayButton = function () {
        if (this.state.isOpen) {
            this._handleCloseSubmenu();
        }
        else {
            this._handleOpenSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleOpenSubmenu = function () {
        this._focusElement = document.activeElement;
        this.props.onOpen();
        this.setState({ isOpen: true });
    };
    ToolbarSubmenu.prototype._handleCloseSubmenu = function (isDocumentClick) {
        this.setState({ isOpen: false });
        this.props.onClose(isDocumentClick);
    };
    ToolbarSubmenu.prototype._handleOnButtonClick = function (onClickCallback) {
        onClickCallback();
        this._handleCloseSubmenu();
    };
    ToolbarSubmenu.prototype._handleDocumentClick = function (evt) {
        var currentTarget = evt.target;
        if (this.state.isOpen &&
            currentTarget.getAttribute('data-automation-id') !== DISPLAYBUTTON &&
            currentTarget.parentElement &&
            currentTarget.parentElement.getAttribute('data-automation-id') !== DISPLAYBUTTON) {
            this._handleCloseSubmenu(true);
        }
    };
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_bindButtonClickHandlers", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleSubmenuKeyDown", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleSubmenuItemsKeyDown", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleClickOnDisplayButton", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleOpenSubmenu", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleCloseSubmenu", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleOnButtonClick", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], ToolbarSubmenu.prototype, "_handleDocumentClick", null);
    return ToolbarSubmenu;
}(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["BaseComponent"]));
/* harmony default export */ __webpack_exports__["a"] = (ToolbarSubmenu);


/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__ = __webpack_require__(19);

var SPRteCKEditorConfiguration = (function () {
    function SPRteCKEditorConfiguration() {
        this._supportedFormatsArray = [
            {
                key: 'bold',
                editorKey: 'bold',
                browserKey: 'bold',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Bold',
                    shortcut: 'Ctrl+B',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarBoldButtonTitle
                }
            },
            {
                key: 'italic',
                editorKey: 'italic',
                browserKey: 'italic',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Italic',
                    shortcut: 'Ctrl+I',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarItalicButtonTitle
                }
            },
            {
                key: 'underline',
                editorKey: 'underline',
                browserKey: 'underline',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Underline',
                    shortcut: 'Ctrl+U',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarUnderlineButtonTitle
                }
            },
            {
                key: 'link',
                editorKey: 'link',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                masks: ['underline'],
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Link',
                    shortcut: 'Ctrl+K',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarLinkButtonTitle
                }
            },
            {
                key: 'alignLeft',
                editorKey: 'justifyleft',
                browserKey: 'justifyLeft',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignLeft',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarAlignLeftButtonTitle
                }
            },
            {
                key: 'alignCenter',
                editorKey: 'justifycenter',
                browserKey: 'justifyCenter',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignCenter',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarAlignCenterButtonTitle
                }
            },
            {
                key: 'alignRight',
                editorKey: 'justifyright',
                browserKey: 'justifyRight',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignRight',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarAlignRightButtonTitle
                }
            },
            {
                key: 'bullet',
                editorKey: 'bulletedlist',
                browserKey: 'insertUnorderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'BulletedList',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarBulletListButtonTitle
                }
            },
            {
                key: 'list',
                editorKey: 'numberedlist',
                browserKey: 'insertOrderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'NumberedList',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarNumberedListButtonTitle
                }
            },
            {
                key: 'h2',
                editorKey: 'heading2',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarHeading2ButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarHeading2ButtonTitle,
                    className: 'ToolbarButton--h2'
                }
            },
            {
                key: 'h3',
                editorKey: 'heading3',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarHeading3ButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarHeading3ButtonTitle,
                    className: 'ToolbarButton--h3'
                }
            },
            {
                key: 'h4',
                editorKey: 'heading4',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarHeading4ButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarHeading4ButtonTitle,
                    className: 'ToolbarButton--h4'
                }
            },
            {
                key: 'blockquote',
                editorKey: 'blockquote',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarQuoteButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarQuoteButtonTitle,
                    className: 'ToolbarButton--blockquote'
                }
            },
            {
                key: 'undo',
                editorKey: 'undo',
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].UndoButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].UndoButtonTitle,
                    fabricIconKey: 'Undo'
                }
            },
            {
                key: 'redo',
                editorKey: 'redo',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].RedoButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].RedoButtonTitle,
                    fabricIconKey: 'Redo'
                }
            },
            {
                key: 'strike',
                editorKey: 'strike',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].StrikeThroughButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].StrikeThroughButtonLabel,
                    fabricIconKey: 'Strikethrough'
                }
            },
            {
                key: 'subscript',
                editorKey: 'subscript',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SubscriptButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SubscriptButtonLabel,
                    fabricIconKey: 'Subscript'
                }
            },
            {
                key: 'superscript',
                editorKey: 'superscript',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SuperscriptButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SuperscriptButtonLabel,
                    fabricIconKey: 'Superscript'
                }
            },
            {
                key: 'justify',
                editorKey: 'justifyblock',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].JustifyButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].JustifyButtonLabel,
                    fabricIconKey: 'CollapseMenu'
                }
            },
            {
                key: 'indent',
                editorKey: 'indent',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].IncreaseIndentButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].IncreaseIndentButtonLabel,
                    fabricIconKey: 'IncreaseIndentLegacy'
                }
            },
            {
                key: 'outdent',
                editorKey: 'outdent',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DecreaseIndentButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DecreaseIndentButtonLabel,
                    fabricIconKey: 'DecreaseIndentLegacy'
                }
            },
            {
                key: 'customTable',
                editorKey: 'customTable',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableButtonLabel
                }
            },
            {
                key: 'rowInsertBefore',
                editorKey: 'rowInsertBefore',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertRowBeforeButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertRowBeforeButtonLabel,
                    fabricIconKey: 'InsertRowsAbove'
                }
            },
            {
                key: 'rowInsertAfter',
                editorKey: 'rowInsertAfter',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertRowAfterButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertRowAfterButtonLabel,
                    fabricIconKey: 'InsertRowsBelow'
                }
            },
            {
                key: 'columnInsertBefore',
                editorKey: 'columnInsertBefore',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertColumnLeftButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertColumnLeftButtonLabel,
                    fabricIconKey: 'InsertColumnsLeft'
                }
            },
            {
                key: 'columnInsertAfter',
                editorKey: 'columnInsertAfter',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertColumnRightButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].InsertColumnRightButtonLabel,
                    fabricIconKey: 'InsertColumnsRight'
                }
            },
            {
                key: 'rowDelete',
                editorKey: 'rowDelete',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteRowButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteRowButtonLabel,
                    fabricIconKey: 'DeleteRows'
                }
            },
            {
                key: 'columnDelete',
                editorKey: 'columnDelete',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteColumnButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteColumnButtonLabel,
                    fabricIconKey: 'DeleteColumns'
                }
            },
            {
                key: 'tableCustomDelete',
                editorKey: 'tableCustomDelete',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteTableButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteTableButtonLabel,
                    fabricIconKey: 'DeleteTable'
                }
            },
            {
                key: 'tableDelete',
                editorKey: 'tableDelete',
                isEditorNative: true,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteTableButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].DeleteTableButtonLabel,
                    fabricIconKey: 'DeleteTable'
                }
            },
            {
                key: 'unlink',
                editorKey: 'unlink',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarUnlinkButtonTitle,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].FormattingBarUnlinkButtonTitle,
                    fabricIconKey: 'RemoveLink'
                }
            },
            {
                key: 'simpleTableStyleTheme',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SimpleTableButtonThemeLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SimpleTableButtonThemeLabel
                }
            },
            {
                key: 'borderHeaderTableStyleTheme',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithHeaderBorderThemeLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithHeaderBorderThemeLabel
                }
            },
            {
                key: 'filledHeaderTableStyleTheme',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithFilledHeaderThemeLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithFilledHeaderThemeLabel
                }
            },
            {
                key: 'bandedRowTableStyleTheme',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsThemeLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsThemeLabel
                }
            },
            {
                key: 'bandedRowColumnTableStyleTheme',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsAndColumnsThemeLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsAndColumnsThemeLabel
                }
            },
            {
                key: 'simpleTableStyleNeutral',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SimpleTableButtonLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].SimpleTableButtonLabel
                }
            },
            {
                key: 'borderHeaderTableStyleNeutral',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithHeaderBorderLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithHeaderBorderLabel
                }
            },
            {
                key: 'filledHeaderTableStyleNeutral',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithFilledHeaderLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithFilledHeaderLabel
                }
            },
            {
                key: 'bandedRowTableStyleNeutral',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsLabel
                }
            },
            {
                key: 'bandedRowColumnTableStyleNeutral',
                editorKey: 'tableStyle',
                isEditorNative: false,
                button: {
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsAndColumnsLabel,
                    label: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].TableWithBandedRowsAndColumnsLabel
                }
            },
            {
                key: 'alignLeftTable',
                editorKey: 'alignLeftTable',
                browserKey: 'alignLeftTable',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignHorizontalLeft',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].AlignTableLeftLabel
                }
            },
            {
                key: 'alignCenterTable',
                editorKey: 'alignCenterTable',
                browserKey: 'alignCenterTable',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignHorizontalCenter',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].AlignTableCenterLabel
                }
            },
            {
                key: 'alignRightTable',
                editorKey: 'alignRightTable',
                browserKey: 'alignRightTable',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignHorizontalRight',
                    title: __WEBPACK_IMPORTED_MODULE_0__loc_RteStrings_resx__["a" /* default */].AlignTableRightLabel
                }
            }
        ];
        this._formats = new Map();
        for (var _i = 0, _a = this._supportedFormatsArray; _i < _a.length; _i++) {
            var format = _a[_i];
            this._formats.set(format.key, format);
        }
        var maskingFormats = this._supportedFormatsArray.filter(function (format) {
            return !!format.masks;
        });
        for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
            var maskingFormat = maskingFormats_1[_b];
            for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                var maskedFormatKey = _d[_c];
                var maskedFormat = this._formats.get(maskedFormatKey);
                if (!maskedFormat.maskedBy) {
                    maskedFormat.maskedBy = [maskingFormat.key];
                }
                else {
                    maskedFormat.maskedBy.push(maskingFormat.key);
                }
            }
        }
    }
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "editorElementClassName", {
        get: function () {
            return 'cke_editable';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "formats", {
        get: function () {
            return this._formats;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "supportedFormatsArray", {
        get: function () {
            return this._supportedFormatsArray;
        },
        enumerable: true,
        configurable: true
    });
    return SPRteCKEditorConfiguration;
}());
/* harmony default export */ __webpack_exports__["a"] = (SPRteCKEditorConfiguration);


/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/prop-types/15.5.7/node_modules/prop-types/index.js
var prop_types = __webpack_require__(11);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(18);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/5.120.0/react-dom@15.6.2+react@15.6.2/node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.js
var TooltipHost = __webpack_require__(46);
var TooltipHost_default = /*#__PURE__*/__webpack_require__.n(TooltipHost);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/a11y/CanvasA11yConstants.js
var CanvasA11yConstants = __webpack_require__(50);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasLayout.js + 4 modules
var CanvasLayout = __webpack_require__(9);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/CanvasAlignmentStyles.styles.js
var CanvasAlignmentStyles_styles = __webpack_require__(108);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasStore.js + 4 modules
var CanvasStore = __webpack_require__(109);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/StyleHelpers.js
var StyleHelpers = __webpack_require__(39);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasToolboxHint/CanvasToolboxHint.styles.js

var CanvasToolboxHint_styles_CanvasToolboxHintStyles = (function () {
    function CanvasToolboxHintStyles() {
    }
    CanvasToolboxHintStyles.getClassNames = function (props) {
        return Object(StyleHelpers["a" /* getClassNames */])(CanvasToolboxHintStyles._getStyles, props);
    };
    CanvasToolboxHintStyles._getStyles = function (props) {
        var theme = props.theme, root = props.root;
        var palette = theme.palette;
        return {
            root: [
                root,
                {
                    selectors: {
                        '&:hover::after, &:focus::after': {
                            borderTopColor: palette.themePrimary
                        },
                        '&:hover .CanvasToolboxHint-plusButton, &:focus .CanvasToolboxHint-plusButton': {
                            backgroundColor: palette.themePrimary,
                            boxShadow: '0 0 4px 0 ' + palette.themeDark,
                            color: palette.white
                        }
                    }
                }
            ],
            plusButton: [
                'CanvasToolboxHintEmphasis-plusButton',
                {
                    backgroundColor: palette.neutralTertiary,
                    boxShadow: '0 0 4px 0 ' + palette.blackTranslucent40,
                    color: palette.white
                }
            ]
        };
    };
    return CanvasToolboxHintStyles;
}());
/* harmony default export */ var CanvasToolboxHint_styles = (CanvasToolboxHint_styles_CanvasToolboxHintStyles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasToolboxHint/CanvasToolboxHint.js















var TOOLBOX_HORIZONTAL_POSITION = 30;
var HINT_TOOLBOX_SPACER = 4;
var TOOLBOX_HEIGHT = 330;
var TOOLBOX_MARGIN_TOP = 26;
var CanvasToolboxHint_CanvasToolboxHint = (function (_super) {
    tslib_es6["__extends"](CanvasToolboxHint, _super);
    function CanvasToolboxHint(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._isRTL = office_ui_fabric_react_bundle_["getRTL"];
        _this.state = CanvasToolboxHint._getState(props);
        if (Flights["a" /* default */].isLayoutEmphasisFlightEnabled()) {
            __webpack_require__(218);
        }
        else {
            __webpack_require__(221);
        }
        return _this;
    }
    CanvasToolboxHint._getState = function (props) {
        return {
            isVisible: props.isVisible,
            plusButtonRendered: false
        };
    };
    CanvasToolboxHint._offsetRight = function (elem) {
        var clientWidth = elem.clientWidth, offsetLeft = elem.offsetLeft, parentElement = elem.parentElement;
        return parentElement.offsetParent.clientWidth - clientWidth - parentElement.offsetLeft - offsetLeft;
    };
    CanvasToolboxHint.prototype.componentDidMount = function () {
        this._domNode = external__react_dom_["findDOMNode"](this);
        if (this.props.shouldFocus) {
            this.focus();
        }
    };
    CanvasToolboxHint.prototype.componentDidUpdate = function () {
        this.componentDidMount();
    };
    CanvasToolboxHint.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.isVisible !== this.props.isVisible) {
            this.setState(CanvasToolboxHint._getState(nextProps));
        }
    };
    CanvasToolboxHint.prototype.render = function () {
        var emphasisClassNames;
        var isCanvasSectionBackgroundFlightEnabled = Flights["a" /* default */].isLayoutEmphasisFlightEnabled();
        if (isCanvasSectionBackgroundFlightEnabled && this.props.theme) {
            emphasisClassNames = CanvasToolboxHint_styles.getClassNames({
                root: 'CanvasToolboxHintEmphasis',
                theme: this.props.theme
            });
        }
        var _a = this.props, adjacentZoneState = _a.adjacentZoneState, ariaLabel = _a.ariaLabel, isRootScrollableElement = _a.isRootScrollableElement, layout = _a.layout, shouldCenterAlign = _a.shouldCenterAlign, type = _a.type;
        var _b = this.context.store.toolboxProps, controlPosition = _b.controlPosition, isOpen = _b.isOpen;
        var hintClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasToolboxHint', (_c = {
                'is-visible': this.state.isVisible,
                'zone-selected': adjacentZoneState === 3  ||
                    (controlPosition.sectionIndex === layout.sectionIndex && isOpen),
                'zone-active': adjacentZoneState === 2 
            },
            _c[emphasisClassNames && emphasisClassNames.root] = isCanvasSectionBackgroundFlightEnabled,
            _c));
        var hintButtonWrapperClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasToolboxHint-plusButtonWrapper', {
            centerAlign: shouldCenterAlign,
            pushDownHint: isRootScrollableElement
        });
        var buttonTypeClassName;
        switch (type) {
            case 1 :
                hintClassName = Object(office_ui_fabric_react_bundle_["css"])(hintClassName, 'ZoneHint');
                buttonTypeClassName = 'CanvasToolboxHint-plusButtonZone';
                break;
            case 2 :
                hintClassName = Object(office_ui_fabric_react_bundle_["css"])(hintClassName, 'SectionHint');
                buttonTypeClassName = 'CanvasToolboxHint-plusButtonSection';
                break;
            case 0 :
            default:
                break;
        }
        var tooltipKillSwitchActive = KillSwitches["a" /* default */].isFixForSectionHintTooltipKilllSwitchActive();
        var tooltipClassId = 'toolboxhintTooltipId';
        var plusButtonClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasToolboxHint-plusButton', buttonTypeClassName, (_d = {},
            _d[emphasisClassNames && emphasisClassNames.plusButton] = isCanvasSectionBackgroundFlightEnabled,
            _d));
        var buttonInner = (external__react_["createElement"]("div", { className: hintButtonWrapperClassName },
            external__react_["createElement"]("div", { className: plusButtonClassName, ref: this._handlePlusButtonRef },
                external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { iconName: "Add" }))));
        var buttonInnerWithHost = (external__react_["createElement"](TooltipHost["TooltipHost"], { hostClassName: "CanvasTooltipHost", content: ariaLabel, id: tooltipClassId, tooltipProps: { targetElement: this._canvasToolPlusButton }, calloutProps: { gapSpace: 1 } }, buttonInner));
        var classNames;
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() && type === 1 ) {
            classNames = CanvasAlignmentStyles_styles["a" /* default */].getHintClassNames({
                root: hintClassName,
                offset: -(this._domNode && this._domNode.parentElement.offsetLeft)
            });
        }
        return (this.context.store.displayMode === sp_core_library_["DisplayMode"].Edit && (external__react_["createElement"]("button", { "aria-describedby": !tooltipKillSwitchActive ? tooltipClassId : undefined, "aria-haspopup": true, "aria-label": ariaLabel, className: Object(office_ui_fabric_react_bundle_["css"])(hintClassName, (_e = {},
                _e[classNames && classNames.root] = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled(),
                _e)), "data-automation-id": "toolboxHintButton", "data-sp-a11y-class": CanvasA11yConstants["a" /* canvasA11yClasses */].toolboxHint, onClick: this._handleClick, title: !tooltipKillSwitchActive ? undefined : ariaLabel }, !tooltipKillSwitchActive ? buttonInnerWithHost : buttonInner)));
        var _c, _d, _e;
    };
    CanvasToolboxHint.prototype.focus = function () {
        var _this = this;
        window.setTimeout(function () {
            if (_this._domNode) {
                _this._domNode.focus();
            }
        }, 0);
    };
    CanvasToolboxHint.prototype._handlePlusButtonRef = function (ref) {
        if (ref && !this.state.plusButtonRendered) {
            this.setState({
                plusButtonRendered: true
            });
        }
        this._canvasToolPlusButton = ref;
    };
    CanvasToolboxHint.prototype._handleClick = function () {
        var _this = this;
        this.context.store.selectedControlId = undefined;
        if (this.props.layout && this.props.layout.zoneIndex) {
            this.context.store.selectedZoneIndex = this.props.layout.zoneIndex;
        }
        var logPrefix = this._isWebpartHint ? 'WebPart' : 'Section';
        sp_telemetry_["_EngagementLogger"].logEvent(logPrefix + "Hint.Click");
        var _a = this._toolboxPosition, horizontalPosition = _a.horizontalPosition, verticalPosition = _a.verticalPosition;
        this.context.store.openToolbox(this.props.layout, verticalPosition, horizontalPosition, 
        this.props.isVisible ? undefined : this._handleToolboxClose);
        setTimeout(function () {
            return _this.setState({
                isVisible: true
            });
        });
    };
    CanvasToolboxHint.prototype._handleToolboxClose = function () {
        this.setState({
            isVisible: false
        });
        this.context.store.toolboxProps.isOpen = false;
    };
    Object.defineProperty(CanvasToolboxHint.prototype, "_isWebpartHint", {
        get: function () {
            return !!(this.props.layout && this.props.layout.sectionIndex);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasToolboxHint.prototype, "_toolboxPosition", {
        get: function () {
            if (this._domNode) {
                if (this._isWebpartHint) {
                    return this._webPartToolboxPosition;
                }
                else {
                    return this._sectionToolboxPosition;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasToolboxHint.prototype, "_sectionToolboxPosition", {
        get: function () {
            var verticalPosition = this._domNode.offsetTop;
            var horizontalPosition = TOOLBOX_HORIZONTAL_POSITION;
            verticalPosition -= TOOLBOX_HEIGHT / 3;
            var canvasTop = this.context.store.canvasElement.getBoundingClientRect().top;
            var canvasParentTop = this.context.store.scrollableParent.getBoundingClientRect().top;
            if (Math.abs(canvasTop - canvasParentTop) < Math.abs(verticalPosition) && verticalPosition < 0) {
                verticalPosition = -TOOLBOX_MARGIN_TOP;
            }
            if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
                horizontalPosition = horizontalPosition * 2 - this._domNode.parentElement.offsetLeft;
            }
            return {
                horizontalPosition: horizontalPosition,
                verticalPosition: verticalPosition
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasToolboxHint.prototype, "_webPartToolboxPosition", {
        get: function () {
            var horizontalPosition;
            var _a = this._domNode, clientWidth = _a.clientWidth, offsetTop = _a.offsetTop, offsetLeft = _a.offsetLeft, parentElement = _a.parentElement;
            var sectionContainer = this._domNode.parentElement;
            while (sectionContainer.offsetTop === 0 &&
                !sectionContainer.classList.contains('CanvasZoneContainer') &&
                sectionContainer.parentElement) {
                sectionContainer = sectionContainer.parentElement;
            }
            var verticalPosition = this._calculateWebPartToolboxVerticalPosition(sectionContainer.offsetTop + offsetTop);
            if (this._isRTL()) {
                horizontalPosition = CanvasToolboxHint._offsetRight(this._domNode) + clientWidth / 2;
            }
            else {
                horizontalPosition = offsetLeft;
                var layout = this.props.layout;
                var canvasElement = this.context.store.canvasElement;
                if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() &&
                    layout.layoutIndex === CanvasLayout["a" /* default */].verticalLayoutIndex &&
                    canvasElement.getBoundingClientRect().width > CanvasStore["a" /* default */].canvasMinWidth) {
                    var mainCanvasOffset = this.context.store.mainCanvasElement.offsetLeft;
                    horizontalPosition += sectionContainer.offsetLeft + CanvasToolboxHint._offsetRight(this._domNode);
                    if (mainCanvasOffset === 0) {
                        horizontalPosition += clientWidth / 3;
                    }
                    if (!this.context.store.shouldCenterAlign) {
                        verticalPosition = offsetTop;
                    }
                }
                else {
                    horizontalPosition += clientWidth / 2 + parentElement.offsetLeft;
                }
            }
            return {
                horizontalPosition: horizontalPosition,
                verticalPosition: verticalPosition
            };
        },
        enumerable: true,
        configurable: true
    });
    CanvasToolboxHint.prototype._calculateWebPartToolboxVerticalPosition = function (initialPosition) {
        var verticalPosition = initialPosition;
        var bottom = 0, canvasTop = 0, top = 0;
        var _a = this.context.store, canvasElement = _a.canvasElement, scrollableParent = _a.scrollableParent;
        if (canvasElement) {
            canvasTop = canvasElement.getBoundingClientRect().top;
        }
        if (scrollableParent) {
            var scrollRect = scrollableParent.getBoundingClientRect();
            bottom = scrollRect.bottom;
            top = scrollRect.top;
        }
        var toolboxPosition = TOOLBOX_HEIGHT + TOOLBOX_MARGIN_TOP + HINT_TOOLBOX_SPACER;
        var isToolboxAboveFold = verticalPosition - toolboxPosition > top;
        var isToolboxBelowFold = verticalPosition + toolboxPosition + canvasTop > bottom;
        if (isToolboxAboveFold && isToolboxBelowFold) {
            verticalPosition -= toolboxPosition;
        }
        return verticalPosition;
    };
    CanvasToolboxHint.contextTypes = {
        store: prop_types["object"].isRequired
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasToolboxHint.prototype, "_handlePlusButtonRef", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasToolboxHint.prototype, "_handleClick", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasToolboxHint.prototype, "_handleToolboxClose", null);
    return CanvasToolboxHint;
}(external__react_["Component"]));
/* harmony default export */ var canvasToolboxHint_CanvasToolboxHint = __webpack_exports__["a"] = (CanvasToolboxHint_CanvasToolboxHint);


/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_StyleHelpers__ = __webpack_require__(39);

var CanvasAlignmentStyles = (function () {
    function CanvasAlignmentStyles() {
    }
    CanvasAlignmentStyles.getToolbarClassNames = function (props) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__common_StyleHelpers__["a" /* getClassNames */])(CanvasAlignmentStyles._getToolbarStyles, props);
    };
    CanvasAlignmentStyles.getHintClassNames = function (props) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__common_StyleHelpers__["a" /* getClassNames */])(CanvasAlignmentStyles._getHintStyles, props);
    };
    CanvasAlignmentStyles._getToolbarStyles = function (props) {
        var offset = props.offset, root = props.root;
        return {
            root: [
                root,
                'AlignedToolbar',
                {
                    left: offset,
                    selectors: {
                        '[dir="rtl"] &': {
                            right: offset,
                            left: 0
                        }
                    }
                }
            ]
        };
    };
    CanvasAlignmentStyles._getHintStyles = function (props) {
        var offset = props.offset, root = props.root;
        var plusButtonWrapperWidth = 23;
        var increaseInWidth = plusButtonWrapperWidth + 11.5; 
        return {
            root: [
                root,
                'AlignedHint',
                {
                    left: offset + plusButtonWrapperWidth,
                    width: "calc(100% + " + -(offset + increaseInWidth) + "px)",
                    selectors: {
                        '[dir="rtl"] &': {
                            right: offset + plusButtonWrapperWidth,
                            left: 0
                        }
                    }
                }
            ]
        };
    };
    return CanvasAlignmentStyles;
}());
/* harmony default export */ __webpack_exports__["a"] = (CanvasAlignmentStyles);


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(12);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/sp-page-context"
var sp_page_context_ = __webpack_require__(64);
var sp_page_context__default = /*#__PURE__*/__webpack_require__.n(sp_page_context_);

// EXTERNAL MODULE: external "@microsoft/sp-webpart-base"
var sp_webpart_base_ = __webpack_require__(23);
var sp_webpart_base__default = /*#__PURE__*/__webpack_require__.n(sp_webpart_base_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasControl/CanvasControlType.js
var CanvasControlType = __webpack_require__(8);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasLayout.js + 4 modules
var CanvasLayout = __webpack_require__(9);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasFields.js



var CanvasFields_CanvasFields = (function () {
    function CanvasFields() {
        this.webpartsCount = 0;
        this.webPartsCount = 0;
        this.euplApprovedWebpartCount = 0;
    }
    Object.defineProperty(CanvasFields.prototype, "positionCandidateForDeletion", {
        get: function () {
            return this.canvasLayout.controlsState.deleteCandidateControlLayout;
        },
        set: function (layout) {
            this.canvasLayout.controlsState.deleteCandidateControlLayout = layout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasFields.prototype, "deletedControlLayout", {
        get: function () {
            return this.canvasLayout.controlsState.deletedControlLayout;
        },
        set: function (layout) {
            this.canvasLayout.controlsState.deletedControlLayout = layout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasFields.prototype, "canvasControls", {
        get: function () {
            var canvasControls = [];
            this.canvasLayouts.forEach(function (layout) {
                canvasControls = canvasControls.concat(layout.fetchAllControls());
            });
            return canvasControls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasFields.prototype, "siteSupportsFullWidth", {
        get: function () {
            return this.shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasFields.prototype, "selectedZoneIndex", {
        get: function () {
            return this.canvasLayout.controlsState.selectedZoneIndex;
        },
        set: function (zoneIndex) {
            this.selectedControlIdInternal = undefined;
            this.canvasLayout.controlsState.selectedZoneIndex = zoneIndex;
            var zoneId = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()
                ? this.selectedLayoutIndex + "_" + zoneIndex
                : zoneIndex.toString();
            if (zoneId) {
                this.webpartManager.requestPropertyPaneAction(zoneId);
            }
            this.render();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasFields.prototype, "selectedControlIdInternal", {
        get: function () {
            return this.canvasLayout.controlsState.selectedControlId;
        },
        set: function (id) {
            this.canvasLayout.controlsState.selectedControlId = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasFields.prototype, "hoveredControlId", {
        get: function () {
            return this.canvasLayout.controlsState.hoveredControlId;
        },
        set: function (id) {
            this.canvasLayout.controlsState.hoveredControlId = id;
        },
        enumerable: true,
        configurable: true
    });
    CanvasFields.prototype.getControl = function (position) {
        return this.canvasLayout.fetchControl(position);
    };
    Object.defineProperty(CanvasFields.prototype, "canvasLayout", {
        get: function () {
            return this.getLayout(this.selectedLayoutIndex);
        },
        enumerable: true,
        configurable: true
    });
    CanvasFields.prototype.getLayout = function (layoutIndex) {
        var isCanvasVerticalSectionFlightEnabled = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled();
        layoutIndex = (isCanvasVerticalSectionFlightEnabled && layoutIndex) || CanvasLayout["a" /* default */].firstLayoutIndex;
        return this.canvasLayouts.get(layoutIndex);
    };
    CanvasFields.prototype.instantiateCanvasLayout = function (notifyChanged, numberOfLayouts, variantEmphasis) {
        var _this = this;
        this.canvasLayouts = new Map();
        for (var i = 1; i <= numberOfLayouts; i++) {
            this.canvasLayouts.set(i, new CanvasLayout["a" /* default */](this.webpartManager, this.propertyPaneController, function () {
                notifyChanged();
                _this.render();
            }, i, variantEmphasis));
        }
    };
    CanvasFields.logSource = sp_diagnostics_["_LogSource"].create('CanvasStore');
    return CanvasFields;
}());
/* harmony default export */ var canvasComponent_CanvasFields = (CanvasFields_CanvasFields);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasAnimations/CanvasScrollAnimation.js
var CanvasScrollAnimation = __webpack_require__(41);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasSectionPart.js
var CanvasSectionPart = __webpack_require__(102);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasStoreCommonActions.js + 1 modules
var CanvasStoreCommonActions = __webpack_require__(136);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasWebPartHost/CanvasWebPartHost.js
var CanvasWebPartHost = (function () {
    function CanvasWebPartHost(serviceScope, handleResize, isViewportLoadingDisabled, handleCanvasChanged, reclaimFocus, setSelectedWebPartId, handlePropertyPaneOpenOrClose) {
        this._handleCanvasChanged = handleCanvasChanged;
        this._handleResize = handleResize;
        this._reclaimFocus = reclaimFocus;
        this._serviceScope = serviceScope;
        this._setSelectedWebPartId = setSelectedWebPartId;
        this._isViewportLoadingDisabled = isViewportLoadingDisabled;
        this._handlePropertyPaneOpenOrClose = handlePropertyPaneOpenOrClose;
        this.propertyPaneLifeCycleEventCallback = this.propertyPaneLifeCycleEventCallback.bind(this);
    }
    Object.defineProperty(CanvasWebPartHost.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasWebPartHost.prototype, "isViewportLoadingDisabled", {
        get: function () {
            return this._isViewportLoadingDisabled;
        },
        enumerable: true,
        configurable: true
    });
    CanvasWebPartHost.prototype.setDirty = function (wpInstanceId) {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    CanvasWebPartHost.prototype.propertyPaneLifeCycleEventCallback = function (event, data) {
        if (event === 3 ) {
            this._handleResize(document.querySelector('.ControlZone--selected'), 500, 44);
            if (this._handlePropertyPaneOpenOrClose) {
                this._handlePropertyPaneOpenOrClose();
            }
        }
        else if (event === 4  || event === 6 ) {
            this._reclaimFocus();
            if (this._handlePropertyPaneOpenOrClose) {
                this._handlePropertyPaneOpenOrClose();
            }
        }
        else if (event === 7  && this._setSelectedWebPartId && data) {
            this._setSelectedWebPartId(data.instanceId);
        }
    };
    return CanvasWebPartHost;
}());
/* harmony default export */ var canvasWebPartHost_CanvasWebPartHost = (CanvasWebPartHost);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/DeferredCanvasStoreEditActions.js


var DeferredCanvasStoreEditActions_DeferredCanvasStoreEditActions = (function (_super) {
    tslib_es6["__extends"](DeferredCanvasStoreEditActions, _super);
    function DeferredCanvasStoreEditActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeferredCanvasStoreEditActions.getInstance = function () {
        return this._getInstance();
    };
    DeferredCanvasStoreEditActions.prototype.create = function () {
        throw new Error('Cannot create an instance of CanvasStoreEditActions');
    };
    DeferredCanvasStoreEditActions.prototype._internalLoad = function () {
        return __webpack_require__.e/* import() */(4).then(__webpack_require__.bind(null, 505)).then(function (chunk) { return chunk.default; });
    };
    return DeferredCanvasStoreEditActions;
}(sp_core_library_["_DeferredClass"]));
/* harmony default export */ var canvasComponent_DeferredCanvasStoreEditActions = (DeferredCanvasStoreEditActions_DeferredCanvasStoreEditActions);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/loc/CanvasStrings.resx.js
var CanvasStrings_resx = __webpack_require__(10);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CreateEmptyZoneLayout.js
var CreateEmptyZoneLayout = __webpack_require__(42);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/utilities/HTMLCleanupUtils.js
function StripOutNewLinesAndSpacesFromInnerHTML(innerHTML) {
    return innerHTML.replace(/>\s+</g, '><');
}

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasStore.js





















var CanvasStore_CanvasStore = (function () {
    function CanvasStore(serviceScope, render, a11yManager, mode, numberOfLayouts, serializedCanvas, handleCanvasChanged, scrollThreshold, onViewportRendered, shouldCenterAlign, mobileBrowser, isRootScrollableElement, pageLayoutType, variantEmphasis, isViewportLoadingDisabled) {
        var _this = this;
        sp_core_library_["Validate"].isNotNullOrUndefined(serviceScope, 'serviceScope');
        sp_core_library_["Validate"].isNotNullOrUndefined(render, 'render');
        sp_core_library_["Validate"].isNotNullOrUndefined(mode, 'mode');
        sp_core_library_["Validate"].isNotNullOrUndefined(a11yManager, 'a11yManager');
        this.canvasFields = new canvasComponent_CanvasFields();
        this.canvasFields.propertyPaneController = serviceScope.consume(sp_webpart_base_["_PropertyPaneController"].serviceKey);
        this.canvasFields.a11yManager = a11yManager;
        this._handleViewportRendered = onViewportRendered;
        this.canvasFields.render = render;
        this.canvasFields.controlComponentMap = new Map();
        this.canvasFields.controlsProps = [];
        this.canvasFields.displayMode = mode;
        this.canvasFields.shouldCenterAlign = shouldCenterAlign;
        this.canvasFields.handleCanvasChanged = handleCanvasChanged;
        this.canvasFields.scrollThreshold = scrollThreshold || 0;
        this.canvasFields.pageLayoutType = pageLayoutType || '';
        this.canvasFields.webpartManager = sp_webpart_base_["ClientSideWebPartManagerFactory"].create(new canvasWebPartHost_CanvasWebPartHost(serviceScope, this.scrollIntoView.bind(this, 'full'), !!isViewportLoadingDisabled, handleCanvasChanged, this.reclaimFocus, function (id) {
            _this.canvasFields.selectedControlIdInternal = id;
        }, Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() ? this.handlePropertyPaneOpenOrClose : undefined));
        this.canvasFields.serviceScope = serviceScope;
        this._isMobileBrowser = !!mobileBrowser;
        this._isRootScrollableElement = !!isRootScrollableElement;
        var defaultLayout = CanvasLayout["a" /* default */].undefinedControlPosition;
        this.canvasFields.toolboxProps = {
            isLoading: true,
            isOpen: false,
            onItemClick: undefined,
            onlyLayouts: false,
            toolboxItems: [],
            verticalPosition: undefined,
            controlPosition: defaultLayout
        };
        this.canvasFields.instantiateCanvasLayout(this.notifyChanged, numberOfLayouts, variantEmphasis);
        this.canvasFields.variantEmphasis = variantEmphasis;
        if (this.canvasFields.displayMode === sp_core_library_["DisplayMode"].Edit) {
            this.initializeForEditMode();
        }
        this.canvasFields.serviceScope.whenFinished(function () {
            _this.canvasFields.pageContext = _this.canvasFields.serviceScope.consume(sp_page_context_["PageContext"].serviceKey);
        });
        this.canvasFields.serializeDoc = new DOMParser().parseFromString('', 'text/html');
        if (!this._canvasFields.serializeDoc) {
            this.canvasFields.serializeDoc = document.implementation.createHTMLDocument('serializeDocument');
        }
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            window.addEventListener('resize', sp_lodash_subset_["debounce"](this._handleResize, 100));
        }
    }
    CanvasStore._replaceImageTagsInHtmlString = function (htmlString) {
        return htmlString.replace(/<img((\s+[^\t\n\f \/>"'=]+(\s*=\s*(?:".*?"|'.*?'|[\^'">\s]+))?)+\s*|\s*)\/?>/gi, '<spimg$1></spimg>');
    };
    CanvasStore._isValidControlType = function (controlProps) {
        return (controlProps.controlType >= 3 && controlProps.controlType <= 10) || !!controlProps.position;
    };
    CanvasStore._tryAddControlDataToLogEntry = function (controlData, logEntry) {
        if (!controlData.controlType) {
            return;
        }
        try {
            var position = controlData.position;
            var positionAsString = "Zone:" + position.zoneIndex + "|Section:" + position.sectionIndex + "|SectionFactor:" + position.sectionFactor + "|Index:" + position.controlIndex;
            var title = controlData.controlType === CanvasControlType["a" /* default */].RTE
                ? CanvasControlType["a" /* default */][controlData.controlType].toString()
                : controlData.webPartData.title;
            logEntry.logProperties[title + "_" + controlData.id] = positionAsString;
        }
        catch (ex) {
        }
    };
    CanvasStore.prototype.initializeForEditMode = function () {
        var _this = this;
        var loadEditChunk = Promise.resolve();
        if (!this.canvasFields.dialogProps) {
            this.canvasFields.dialogProps = {
                isOpen: false,
                message: undefined,
                onConfirmation: undefined,
                onDismiss: undefined,
                title: undefined
            };
        }
        if (false) {
            this._canvasStoreEditAction = require('../canvasComponent/CanvasStoreEditActions').default;
            this._afterEditActionFileLoaded();
        }
        else {
            if (!this._canvasStoreEditAction) {
                loadEditChunk = canvasComponent_DeferredCanvasStoreEditActions.getInstance()
                    .load()
                    .then(function (chunk) {
                    _this._canvasStoreEditAction = chunk;
                    _this._afterEditActionFileLoaded();
                });
            }
        }
        return loadEditChunk;
    };
    Object.defineProperty(CanvasStore.prototype, "toolbox", {
        set: function (value) {
            this.canvasFields.toolbox = value;
            if (this.canvasFields.toolbox && this.canvasFields.deferredOpenCallback) {
                this.canvasFields.deferredOpenCallback();
                this.canvasFields.deferredOpenCallback = undefined;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "addReference", {
        get: function () {
            return this._addReference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "a11yManager", {
        get: function () {
            return this.canvasFields.a11yManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasFields", {
        get: function () {
            return this._canvasFields;
        },
        set: function (canvasFields) {
            this._canvasFields = canvasFields;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "confirmationDialogProps", {
        get: function () {
            return this.canvasFields.dialogProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "controlsProps", {
        get: function () {
            return this.canvasFields.canvasControls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasLayout", {
        get: function () {
            return this.canvasFields.canvasLayout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasLayouts", {
        get: function () {
            return this.canvasFields.canvasLayouts;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "deletedControlLayout", {
        get: function () {
            return this.canvasFields.deletedControlLayout;
        },
        set: function (layout) {
            this.canvasFields.deletedControlLayout = layout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "scrollableParent", {
        get: function () {
            return this.canvasFields.scrollableParent;
        },
        set: function (elem) {
            this.canvasFields.scrollableParent = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "displayMode", {
        get: function () {
            return this.canvasFields.displayMode;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.setDisplayMode = function (newMode) {
        var promise = Promise.resolve();
        if (!this._canvasStoreEditAction && newMode === sp_core_library_["DisplayMode"].Edit) {
            promise = this.initializeForEditMode();
        }
        if (this.canvasFields.displayMode !== newMode) {
            this.canvasFields.displayMode = newMode;
            for (var _i = 0, _a = this.canvasFields.canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                control.displayMode = newMode;
                var controlComponent = this._getControlComponentById(control.id, control.position);
                if (controlComponent) {
                    controlComponent.setDisplayMode(newMode);
                }
            }
            if (this.canvasFields.displayMode === sp_core_library_["DisplayMode"].Read) {
                this._afterReadModeSwitched();
                this.canvasFields.render();
            }
            else if (this.canvasFields.displayMode === sp_core_library_["DisplayMode"].Edit) {
                promise.then(this.canvasFields.render);
            }
        }
        return promise;
    };
    CanvasStore.prototype.moveControl = function (control, newControlPositon) {
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            if (control.position.layoutIndex === newControlPositon.layoutIndex) {
                this.canvasLayout.moveControl(control, newControlPositon);
            }
            else {
                this.canvasFields.canvasLayouts.get(control.position.layoutIndex).removeControl(control.position);
                control.position = newControlPositon;
                if (control.controlType === CanvasControlType["a" /* default */].WebPartZone) {
                    control.id = sp_core_library_["Guid"].newGuid().toString();
                }
                this.canvasFields.canvasLayouts.get(newControlPositon.layoutIndex).addControl(control);
                this.canvasFields.render();
            }
        }
        else {
            this.canvasLayout.moveControl(control, newControlPositon);
        }
    };
    Object.defineProperty(CanvasStore.prototype, "isNarrowMode", {
        get: function () {
            return this._isNarrowMode;
        },
        set: function (value) {
            this._isNarrowMode = value;
            this.canvasFields.render();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "siteSupportsFullWidth", {
        get: function () {
            return this.canvasFields.shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "shouldCenterAlign", {
        get: function () {
            return this.canvasFields.shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "isRootScrollableElement", {
        get: function () {
            return this._isRootScrollableElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "notifyChanged", {
        get: function () {
            return CanvasStoreCommonActions["a" /* default */].notifyChanged.bind(CanvasStore, this.canvasFields);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedZoneIndex", {
        get: function () {
            return this.canvasLayout.controlsState.selectedZoneIndex;
        },
        set: function (zoneIndex) {
            this.canvasFields.selectedZoneIndex = zoneIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "scrollThreshold", {
        get: function () {
            return this.canvasFields.scrollThreshold;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "pageContext", {
        get: function () {
            return this.canvasFields.pageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "pageLayoutType", {
        get: function () {
            return this.canvasFields.pageLayoutType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "serviceScope", {
        get: function () {
            return this.canvasFields.serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasElement", {
        get: function () {
            return this.canvasFields.canvasElement;
        },
        set: function (elem) {
            this.canvasFields.canvasElement = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "mainCanvasElement", {
        get: function () {
            return this.canvasFields.mainCanvasElement;
        },
        set: function (elem) {
            this.canvasFields.mainCanvasElement = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "hoveredControlId", {
        get: function () {
            return this.canvasFields.hoveredControlId;
        },
        set: function (id) {
            this.canvasFields.hoveredControlId = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedControlId", {
        get: function () {
            return this.canvasFields.selectedControlIdInternal;
        },
        set: function (id) {
            if (this.canvasFields.selectedControlIdInternal !== id) {
                this.canvasFields.selectedControlIdInternal = id;
                this.webPartManager.requestPropertyPaneAction(id);
                this.canvasFields.render();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "toolboxProps", {
        get: function () {
            return this.canvasFields.toolboxProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "webPartManager", {
        get: function () {
            return this.canvasFields.webpartManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "propertyPaneController", {
        get: function () {
            return this.canvasFields.propertyPaneController;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "isMobileBrowser", {
        get: function () {
            return this._isMobileBrowser;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedLayoutIndex", {
        get: function () {
            return this.canvasFields.selectedLayoutIndex
                ? this.canvasFields.selectedLayoutIndex
                : CanvasLayout["a" /* default */].firstLayoutIndex;
        },
        set: function (layoutIndex) {
            this.canvasFields.selectedLayoutIndex = layoutIndex;
            if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
                this.canvasFields.render();
            }
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.handleToolboxItemClick = function (itemProps) {
        this._canvasStoreEditAction.handleToolboxItemClick(this.canvasFields, itemProps);
    };
    CanvasStore.prototype.getControl = function (id, position) {
        return this._getControlComponentById(id, position);
    };
    CanvasStore.prototype.openToolbox = function (position, verticalPosition, horizontalPosition, onClose) {
        this._canvasStoreEditAction.openToolbox(this.canvasFields, position, verticalPosition, horizontalPosition, onClose);
        if (this.toolboxProps.onlyLayouts) {
            document.addEventListener('click', this.closeToolbox);
        }
    };
    CanvasStore.prototype.closeToolbox = function (ev) {
        if (KillSwitches["a" /* default */].isFixCloseToolboxKillSwitchActivated()) {
            this._canvasStoreEditAction.closeToolbox(this.canvasFields, ev);
            if (this.toolboxProps.onlyLayouts) {
                document.removeEventListener('click', this.closeToolbox);
            }
        }
        else {
            if (this.toolboxProps.onlyLayouts) {
                this._canvasStoreEditAction.closeToolbox(this.canvasFields, ev);
                document.removeEventListener('click', this.closeToolbox);
            }
        }
    };
    CanvasStore.prototype.shouldResize = function (layoutIndex) {
        var isPropertyPaneOpened = this.webPartManager.isPropertyPaneOpen();
        var canvasRect = this.canvasElement && this.canvasElement.getBoundingClientRect();
        return (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() &&
            this.displayMode === sp_core_library_["DisplayMode"].Edit &&
            layoutIndex === CanvasLayout["a" /* default */].firstLayoutIndex &&
            canvasRect &&
            canvasRect.width < CanvasStore.canvasMinWidth &&
            isPropertyPaneOpened);
    };
    CanvasStore.prototype.handleConfigureButtonClicked = function (id) {
        this._canvasStoreEditAction.handleConfigureButtonClicked(this.canvasFields, id);
    };
    CanvasStore.prototype.handleConfigureZoneButtonClicked = function (id, zoneFocusHandler) {
        this._canvasStoreEditAction.handleConfigureZoneButtonClicked(this.canvasFields, id, zoneFocusHandler);
    };
    CanvasStore.prototype.handleDeleteControlButtonClicked = function (layout) {
        this._canvasStoreEditAction.handleDeleteControlButtonClicked(this.canvasFields, layout);
    };
    CanvasStore.prototype.handleDeleteControlDialogDismiss = function () {
        this._canvasStoreEditAction.handleDeleteControlDialogDismiss(this.canvasFields);
    };
    CanvasStore.prototype.handleDeleteZoneButtonClicked = function (layout) {
        this._canvasStoreEditAction.handleDeleteZoneButtonClicked(this.canvasFields, layout);
    };
    CanvasStore.prototype.handleDeleteControlDialogConfirmation = function () {
        this._canvasStoreEditAction.handleDeleteControlDialogConfirmation(this.canvasFields);
    };
    CanvasStore.prototype.handleDeleteZoneDialogConfirmation = function () {
        this._canvasStoreEditAction.handleDeleteZoneDialogConfirmation(this.canvasFields);
    };
    CanvasStore.prototype.deleteControl = function (layout) {
        this._canvasStoreEditAction.deleteControl(this.canvasFields, layout);
    };
    CanvasStore.prototype.getToolBoxItem = function (id) {
        return this._canvasStoreEditAction.getToolBoxItem(this.canvasFields, id);
    };
    CanvasStore.prototype.handleWindowBlur = function (e) {
        this._canvasStoreEditAction.handleWindowBlur(this.canvasFields, e);
    };
    CanvasStore.prototype.deserialize = function (displayMode, serializedCanvas) {
        var qos = this.createQosScope('Deserialize');
        var controlProps;
        try {
            this.canvasFields.webPartsCount = 0;
            this.canvasFields.euplApprovedWebpartCount = 0;
            this.canvasFields.controlsProps = [];
            this.canvasFields.controlComponentMap = new Map();
            if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
                this._disposeCanvasLayouts();
            }
            else {
                this.canvasFields.canvasLayout.dispose();
            }
            if (CanvasScrollAnimation["a" /* default */].isScrollAnimationsEnabled()) {
                this.canvasFields.displayMode = displayMode;
                this.fetchWebparts();
            }
            if (serializedCanvas) {
                var controlAttribute = 'data-sp-canvascontrol';
                var tryJson = true;
                if (serializedCanvas.indexOf(controlAttribute) !== -1) {
                    var wrapper = document.createElement('div');
                    wrapper.innerHTML = CanvasStore._replaceImageTagsInHtmlString(serializedCanvas);
                    if (!sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].tryParse('6416768b-6758-49a1-9457-46b0265b8e55'), '1/23/2017', 'HTMLCleanup')) {
                        wrapper.innerHTML = StripOutNewLinesAndSpacesFromInnerHTML(wrapper.innerHTML);
                    }
                    var rows = wrapper.querySelectorAll("[" + controlAttribute + "]");
                    var rowLength = rows.length;
                    if (rowLength > 0) {
                        tryJson = false;
                        var lastZoneIndex = 1, lastSectionIndex = 1, lastControlIndex = 1;
                        var hasNonLayoutData = false, hasLayoutData = false;
                        for (var i = 0; i < rowLength; ++i) {
                            var row = rows[i];
                            var isLegacyHtml = !row.hasAttribute('data-sp-canvasdataversion');
                            if (isLegacyHtml) {
                                controlProps = this._deserializeLegacyCanvasControlHtml(row);
                            }
                            else {
                                controlProps = this._deserializeCanvasControlHtml(row);
                            }
                            if (controlProps) {
                                if (CanvasLayout["a" /* default */].isPositionValid(controlProps.position)) {
                                    lastZoneIndex = controlProps.position.zoneIndex || lastZoneIndex;
                                    lastSectionIndex = controlProps.position.sectionIndex || lastSectionIndex;
                                    lastControlIndex = controlProps.position.controlIndex || lastControlIndex;
                                    hasLayoutData = true;
                                }
                                else {
                                    hasNonLayoutData = true;
                                    controlProps.position = Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(lastZoneIndex, lastSectionIndex, ++lastControlIndex);
                                }
                                if (hasLayoutData === hasNonLayoutData) {
                                    sp_diagnostics_["_TraceLogger"].logVerbose(canvasComponent_CanvasFields.logSource, "Canvas layout data mismatch is found");
                                }
                                CanvasStoreCommonActions["a" /* default */].addControlToCanvas(this.canvasFields, controlProps);
                            }
                        }
                    }
                }
                if (tryJson) {
                    this._processCanvasContent(serializedCanvas);
                }
                sp_telemetry_["_PerformanceLogger"].addEUPLBreakdown('CanvasEUPLApprovedWebParts', {
                    data: this.canvasFields.euplApprovedWebpartCount,
                    needFlatten: true
                });
                sp_telemetry_["_PerformanceLogger"].addEUPLBreakdown('CanvasWebParts', {
                    data: this.canvasFields.webPartsCount,
                    needFlatten: true
                });
            }
            qos.writeSuccess();
        }
        catch (err) {
            CanvasStoreCommonActions["a" /* default */].handleMonitoredException(qos, err, controlProps);
        }
    };
    CanvasStore.prototype.dispose = function () {
        this.canvasFields.webpartManager.dispose();
        this.canvasLayout.dispose();
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            window.removeEventListener('resize', this._handleResize);
        }
    };
    CanvasStore.prototype.reclaimFocus = function () {
        this._canvasStoreEditAction.reclaimFocus(this.canvasFields);
    };
    CanvasStore.prototype.handlePropertyPaneOpenOrClose = function () {
        this.canvasFields.render();
    };
    CanvasStore.prototype.scrollIntoView = function (type, element, duration, margin, allowScrollUp) {
        if (margin === void 0) { margin = 0; }
        this._canvasStoreEditAction.scrollIntoView(this.canvasFields, type, element, duration, margin, allowScrollUp);
    };
    CanvasStore.prototype.serialize = function (toJson) {
        if (toJson) {
            return this._serializeAsJson();
        }
        return this._serializeAsJson();
    };
    CanvasStore.prototype.tryGeneratePreviewImageUrl = function () {
        var qos = CanvasStoreCommonActions["a" /* default */].createQosScope('GeneratePreviewImageUrl');
        try {
            var webpartIds = [];
            for (var _i = 0, _a = this._canvasFields.canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (control.controlType === CanvasControlType["a" /* default */].WebPartZone) {
                    webpartIds.push(control.id);
                }
            }
            var previewUrl = this._canvasFields.webpartManager.tryGeneratePreviewImageUrl(webpartIds);
            qos.writeSuccess();
            return previewUrl;
        }
        catch (err) {
            var pathLengthErrorKey = 'PathLengthError';
            if (err && err.message && err.message.indexOf(pathLengthErrorKey) > -1) {
                qos.writeExpectedFailure(pathLengthErrorKey, err);
                return undefined;
            }
            else {
                CanvasStoreCommonActions["a" /* default */].handleMonitoredException(qos, err);
            }
        }
    };
    CanvasStore.prototype.addControlToCanvas = function (control, shouldRender) {
        CanvasStoreCommonActions["a" /* default */].addControlToCanvas(this.canvasFields, control, shouldRender);
    };
    Object.defineProperty(CanvasStore.prototype, "webPartsCount", {
        get: function () {
            return this.canvasFields.webPartsCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "variantEmphasis", {
        get: function () {
            return this._canvasFields.variantEmphasis;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.onViewportWebPartsRendered = function (endTime) {
        if (this._handleViewportRendered) {
            this._handleViewportRendered(endTime);
        }
    };
    CanvasStore.prototype.fetchWebparts = function (force) {
        var _this = this;
        if (!this.canvasFields.fetchedWebparts && (sp_core_library_["DisplayMode"].Edit === this.canvasFields.displayMode || force)) {
            return this.canvasFields.webpartManager.fetchWebPartManifests().then(function () {
                _this.canvasFields.fetchedWebparts = true;
                _this.canvasFields.toolboxProps.errorMessage = undefined;
                CanvasStoreCommonActions["a" /* default */].fillToolboxItems(_this.canvasFields);
            }, function (error) {
                _this.canvasFields.toolboxProps.errorMessage = CanvasStrings_resx["a" /* default */].ToolboxErrorMessage;
                CanvasStoreCommonActions["a" /* default */].fillToolboxItems(_this.canvasFields);
            });
        }
        else {
            return Promise.resolve();
        }
    };
    CanvasStore.prototype.fillToolboxItems = function (isFullWidth, newToolboxProps) {
        CanvasStoreCommonActions["a" /* default */].fillToolboxItems(this.canvasFields, isFullWidth, newToolboxProps);
    };
    CanvasStore.prototype.createQosScope = function (scope) {
        return CanvasStoreCommonActions["a" /* default */].createQosScope(scope);
    };
    CanvasStore.prototype._handleResize = function () {
        this.canvasFields.render();
    };
    CanvasStore.prototype._deserializeLegacyCanvasControlHtml = function (row) {
        var controlProps = JSON.parse(decodeURI(row.getAttribute('data-sp-controldata')));
        if (controlProps) {
            if (!CanvasStore._isValidControlType(controlProps)) {
                sp_diagnostics_["_TraceLogger"].logVerbose(canvasComponent_CanvasFields.logSource, "Invalid Control Type");
                return undefined;
            }
            controlProps.displayMode = this.canvasFields.displayMode;
            controlProps.addedFromPersistedData = true;
            if (controlProps.controlType === CanvasControlType["a" /* default */].RTE) {
                controlProps.innerHTML = row.innerHTML;
            }
            var webPartData = controlProps.webPartData;
            if (webPartData) {
                var htmlString = webPartData.htmlProperties; 
                var htmlPropsDiv = row.querySelector('[data-sp-htmlproperties]');
                if (htmlPropsDiv) {
                    htmlString = htmlPropsDiv.innerHTML;
                }
                if (htmlString) {
                    htmlString = CanvasStore._replaceImageTagsInHtmlString(htmlString);
                }
                webPartData.serverProcessedContent = sp_webpart_base_["WebPartDataConverter"].convertServerProcessedHtmlToData(htmlString);
            }
        }
        return controlProps || undefined;
    };
    CanvasStore.prototype._deserializeCanvasControlHtml = function (row) {
        var controlProps = JSON.parse(row.getAttribute('data-sp-controldata'));
        if (!CanvasStore._isValidControlType(controlProps)) {
            sp_diagnostics_["_TraceLogger"].logVerbose(canvasComponent_CanvasFields.logSource, "Invalid Control Type");
            return undefined;
        }
        controlProps.displayMode = this.canvasFields.displayMode;
        controlProps.addedFromPersistedData = true;
        var webPartDiv = row.querySelector('[data-sp-webpart]');
        if (webPartDiv) {
            var webPartDivWrapper = document.createElement('div');
            webPartDivWrapper.appendChild(webPartDiv);
            controlProps.webPartData = sp_webpart_base_["WebPartDataConverter"].convertHtmlToWebPartData(webPartDivWrapper.innerHTML);
        }
        else {
            var rteDiv = row.querySelector('[data-sp-rte]');
            if (rteDiv || controlProps.controlType === CanvasControlType["a" /* default */].RTE) {
                controlProps.innerHTML = rteDiv ? rteDiv.innerHTML : row.innerHTML;
            }
            else if (rteDiv) {
                controlProps.innerHTML = rteDiv.innerHTML;
            }
        }
        return controlProps;
    };
    CanvasStore.prototype._processCanvasContent = function (serializedCanvas) {
        var _this = this;
        var canvasControls = JSON.parse(serializedCanvas);
        if (canvasControls) {
            canvasControls.forEach(function (control, index) {
                var controlProp = control;
                if (controlProp) {
                    controlProp.displayMode = _this.canvasFields.displayMode;
                    controlProp.addedFromPersistedData = true;
                    if (!CanvasLayout["a" /* default */].isPositionValid(controlProp.position)) {
                        controlProp.position = Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(index + 1);
                    }
                    _this.addControlToCanvas(controlProp);
                }
            });
        }
    };
    CanvasStore.prototype._serializeAsJson = function () {
        var qos = CanvasStoreCommonActions["a" /* default */].createQosScope('Serialize');
        var controlDataCollection = [];
        var controlData;
        var logEntry = new sp_diagnostics_["_LogEntry"]('CanvasStore', 'SerializeContentJSON', sp_diagnostics_["_LogType"].Event, {});
        try {
            var tempDiv_1;
            tempDiv_1 = this._canvasFields.serializeDoc.createElement('div');
            var _loop_1 = function (control) {
                if (control.id === CanvasSectionPart["a" /* default */].emptySectionId) {
                    control.id = undefined;
                    controlData = control;
                }
                else {
                    var controlComponent = this_1._getControlComponentById(control.id, control.position);
                    controlData = controlComponent.serialize();
                    controlData.webPartManifest = undefined;
                }
                CanvasStore._tryAddControlDataToLogEntry(controlData, logEntry);
                if (CanvasControlType["a" /* default */].WebPartZone === controlData.controlType &&
                    controlData.webPartData.serverProcessedContent) {
                    var searchablePlainTexts_1 = controlData.webPartData
                        .serverProcessedContent.searchablePlainTexts;
                    if (searchablePlainTexts_1) {
                        Object.keys(searchablePlainTexts_1).forEach(function (key) {
                            tempDiv_1.textContent = searchablePlainTexts_1[key];
                            searchablePlainTexts_1[key] = tempDiv_1.innerHTML;
                        });
                    }
                }
                controlDataCollection.push(controlData);
            };
            var this_1 = this;
            for (var _i = 0, _a = this._canvasFields.canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                _loop_1(control);
            }
            qos.writeSuccess(logEntry.logProperties);
        }
        catch (err) {
            CanvasStoreCommonActions["a" /* default */].handleMonitoredException(qos, err, controlData);
            throw err;
        }
        return JSON.stringify(controlDataCollection);
    };
    CanvasStore.prototype._getControlComponentById = function (id, position) {
        return CanvasStoreCommonActions["a" /* default */].getControlComponentById(this.canvasFields, id, position);
    };
    CanvasStore.prototype._setControlComponentById = function (id, component) {
        var layoutIndex = component && component.props && component.props.position && component.props.position.layoutIndex;
        this.canvasFields.getLayout(layoutIndex).addControlComponent(id, component);
    };
    CanvasStore.prototype._addReference = function (ref) {
        if (ref) {
            this._setControlComponentById(ref.props.id, ref);
        }
    };
    CanvasStore.prototype._afterEditActionFileLoaded = function () {
        var _this = this;
        if (!this.canvasFields.toolboxProps.onItemClick) {
            this.canvasFields.toolboxProps.onItemClick = function (itemProps) {
                return _this._canvasStoreEditAction.handleToolboxItemClick(_this.canvasFields, itemProps);
            };
        }
        this.fetchWebparts();
    };
    CanvasStore.prototype._afterReadModeSwitched = function () {
        this.canvasFields.selectedControlIdInternal = undefined;
        this.webPartManager.requestPropertyPaneAction(undefined, 2 );
        this.canvasFields.toolboxProps.isOpen = false;
        if (this.canvasFields.toolbox && !this.canvasFields.toolboxProps.onlyLayouts) {
            this.canvasFields.toolbox.closeToolbox();
        }
    };
    CanvasStore.prototype._disposeCanvasLayouts = function () {
        this.canvasLayouts.forEach(function (canvasLayout) {
            canvasLayout.dispose();
        });
    };
    CanvasStore.canvasMinWidth = 1024;
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleToolboxItemClick", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "openToolbox", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "closeToolbox", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleConfigureButtonClicked", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleConfigureZoneButtonClicked", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleDeleteControlButtonClicked", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleDeleteControlDialogDismiss", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleDeleteZoneButtonClicked", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleDeleteControlDialogConfirmation", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleDeleteZoneDialogConfirmation", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "deleteControl", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handleWindowBlur", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "reclaimFocus", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "handlePropertyPaneOpenOrClose", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "scrollIntoView", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "addControlToCanvas", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "_handleResize", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasStore.prototype, "_addReference", null);
    return CanvasStore;
}());
/* harmony default export */ var canvasComponent_CanvasStore = __webpack_exports__["a"] = (CanvasStore_CanvasStore);


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__canvas_canvasDragZone_CanvasDragZoneConstants__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__toolbarButton_ToolbarButton__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Toolbar_scss__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Toolbar_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__Toolbar_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__canvas_canvasLayout_CanvasLayout__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_Flights__ = __webpack_require__(6);











var Toolbar = (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](Toolbar, _super);
    function Toolbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Toolbar.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, controlPosition = _a.controlPosition, controlType = _a.controlType, displayMode = _a.displayMode, fixedPosition = _a.fixedPosition;
        var layout;
        var isMultiColumn = false;
        switch (controlType) {
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].RTE:
                layout = (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("div", { className: className || 'CanvasControlToolbar', role: "toolbar", ref: function (ref) { return (_this._domElement = ref); } },
                    this._getMoveHandle(__WEBPACK_IMPORTED_MODULE_5__canvas_canvasDragZone_CanvasDragZoneConstants__["a" /* default */].webpartDragHandleTag),
                    this._getDeleteButton()));
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].WebPartZone:
                layout = (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("div", { className: className || 'CanvasControlToolbar', role: "toolbar", ref: function (ref) { return (_this._domElement = ref); } },
                    this._getEditButton(),
                    this._getMoveHandle(__WEBPACK_IMPORTED_MODULE_5__canvas_canvasDragZone_CanvasDragZoneConstants__["a" /* default */].webpartDragHandleTag),
                    this._getDeleteButton()));
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].FullWidth:
                layout = (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("div", { className: className || 'CanvasControlToolbar', role: "toolbar" },
                    this._getMoveHandle(__WEBPACK_IMPORTED_MODULE_5__canvas_canvasDragZone_CanvasDragZoneConstants__["a" /* default */].zoneDragHandleTag),
                    this._getDeleteButton()));
                break;
            default:
                isMultiColumn = true;
                if (!__WEBPACK_IMPORTED_MODULE_10__common_Flights__["a" /* default */].isCanvasVerticalSectionFlightEnabled() ||
                    controlPosition.layoutIndex === __WEBPACK_IMPORTED_MODULE_9__canvas_canvasLayout_CanvasLayout__["a" /* default */].firstLayoutIndex) {
                    layout = (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("div", { className: className || 'CanvasControlToolbar', style: fixedPosition, role: "toolbar", ref: function (ref) { return (_this._domElement = ref); } },
                        this._getEditButton(controlType),
                        this._getMoveHandle(__WEBPACK_IMPORTED_MODULE_5__canvas_canvasDragZone_CanvasDragZoneConstants__["a" /* default */].zoneDragHandleTag),
                        this._getDeleteButton()));
                }
                else {
                    layout = (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"]("div", { className: className || 'CanvasControlToolbar', style: fixedPosition, role: "toolbar", ref: function (ref) { return (_this._domElement = ref); } }, this._getEditButton(controlType)));
                }
                break;
        }
        return __WEBPACK_IMPORTED_MODULE_1__microsoft_sp_core_library__["DisplayMode"].Edit === displayMode && __WEBPACK_IMPORTED_MODULE_3_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["FocusZone"], { isCircularNavigation: true }, layout);
    };
    Toolbar.prototype.getHeight = function () {
        return this._domElement.clientHeight;
    };
    Object.defineProperty(Toolbar.prototype, "toolBarElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toolbar.prototype, "_isWebPart", {
        get: function () {
            return this.props.controlType === __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].WebPartZone || this.props.controlType === __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].RTE;
        },
        enumerable: true,
        configurable: true
    });
    Toolbar.prototype._handleConfigureButtonClicked = function () {
        this.props.onConfigureButtonClick(this.props.id, this.props.controlPosition);
    };
    Toolbar.prototype._handleDeleteButtonClicked = function () {
        this.props.onDeleteButtonClick(this.props.controlPosition);
    };
    Toolbar.prototype._getDeleteButton = function () {
        return (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"](__WEBPACK_IMPORTED_MODULE_6__toolbarButton_ToolbarButton__["b" /* default */], { key: 'delete' + this.props.key, canBeActive: false, fabricIconKey: "Trash", onClick: this._handleDeleteButtonClicked, title: this._isWebPart ? __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__["a" /* default */].WebpartToolbarDeleteButtonTitle : __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__["a" /* default */].ZoneToolbarDeleteButtonTitle, automationId: "deleteButton" }));
    };
    Toolbar.prototype._getEditButton = function (controlType) {
        if (this.props.hideEditButton) {
            return null;
        }
        var fabricIconKey = '';
        switch (controlType) {
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].FullWidth:
                fabricIconKey = 'FullWidth';
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].OneColumn:
                fabricIconKey = 'SingleColumn';
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].OneThirdColumnLeft:
                fabricIconKey = Object(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["getRTL"])() ? 'ColumnLeftTwoThirds' : 'ColumnRightTwoThirds';
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].OneThirdColumnRight:
                fabricIconKey = Object(__WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["getRTL"])() ? 'ColumnRightTwoThirds' : 'ColumnLeftTwoThirds';
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].ThreeColumns:
                fabricIconKey = 'TripleColumn';
                break;
            case __WEBPACK_IMPORTED_MODULE_4__canvas_canvasControl_CanvasControlType__["a" /* default */].TwoColumns:
                fabricIconKey = 'DoubleColumn';
                break;
        }
        return (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"](__WEBPACK_IMPORTED_MODULE_6__toolbarButton_ToolbarButton__["b" /* default */], { key: 'edit' + this.props.key, canBeActive: false, fabricIconKey: fabricIconKey + "Edit", onClick: this._handleConfigureButtonClicked, title: this._isWebPart ? __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__["a" /* default */].WebpartToolbarConfigButtonTitle : __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__["a" /* default */].ZoneToolbarConfigButtonTitle, automationId: "configureButton" }));
    };
    Toolbar.prototype._getMoveHandle = function (handleTag) {
        if (this.props.hideMoveButton) {
            return null;
        }
        return (__WEBPACK_IMPORTED_MODULE_3_react__["createElement"](__WEBPACK_IMPORTED_MODULE_6__toolbarButton_ToolbarButton__["b" /* default */], { key: 'move' + this.props.key, canBeActive: false, fabricIconKey: "Move", title: this._isWebPart ? __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__["a" /* default */].WebpartToolbarMoveButtonTitle : __WEBPACK_IMPORTED_MODULE_8__loc_CanvasStrings_resx__["a" /* default */].ZoneToolbarMoveButtonTitle, automationId: "moveButton", dragHandleTag: handleTag }));
    };
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], Toolbar.prototype, "getHeight", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], Toolbar.prototype, "_handleConfigureButtonClicked", null);
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        __WEBPACK_IMPORTED_MODULE_2__microsoft_office_ui_fabric_react_bundle__["autobind"]
    ], Toolbar.prototype, "_handleDeleteButtonClicked", null);
    return Toolbar;
}(__WEBPACK_IMPORTED_MODULE_3_react__["Component"]));
/* harmony default export */ __webpack_exports__["a"] = (Toolbar);


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(229);


/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/legacy/lessText/LessText.module.scss.js
__webpack_require__(238);
var styles = {
    lessText: 'lessText_9664581f',
};
/* harmony default export */ var LessText_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/legacy/lessText/LessText.js




var LessText_LessText = (function (_super) {
    tslib_es6["__extends"](LessText, _super);
    function LessText(props) {
        var _this = _super.call(this, props) || this;
        _this._async = new office_ui_fabric_react_bundle_["Async"](_this);
        _this._eventGroup = new office_ui_fabric_react_bundle_["EventGroup"](_this);
        _this._handleWindowResize = _this._async.debounce(_this._handleWindowResizeCore, _this._delay);
        return _this;
    }
    LessText.prototype.componentDidMount = function () {
        this._async.setTimeout(this.update, 0);
        this._eventGroup.on(window, 'resize', this._handleWindowResize);
    };
    LessText.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.resizeDelayInMilliseconds !== nextProps.resizeDelayInMilliseconds) {
            this._handleWindowResize = this._async.debounce(this._handleWindowResizeCore, this._delay);
        }
    };
    LessText.prototype.componentDidUpdate = function () {
        this.update();
    };
    LessText.prototype.componentWillUnmount = function () {
        this._eventGroup.off(window, 'resize', this._handleWindowResize);
        this._eventGroup.dispose();
        this._async.dispose();
    };
    LessText.prototype.render = function () {
        var _this = this;
        return (external__react_["createElement"]("div", { "data-automation-id": 'less-text', ref: function (ref) { return _this._textContainerElement = ref; }, title: this.props.showTitle ? this.props.text : undefined, className: Object(office_ui_fabric_react_bundle_["css"])(LessText_module_scss.lessText, this.props.className) }, this.props.text));
    };
    LessText.prototype.update = function () {
        if (this._textContainerElement) {
            this._async.requestAnimationFrame(this._truncateLines);
        }
    };
    Object.defineProperty(LessText.prototype, "_separator", {
        get: function () {
            return this.props.separator || ''; 
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LessText.prototype, "_omission", {
        get: function () {
            return this.props.omission || '…';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LessText.prototype, "_delay", {
        get: function () {
            return this.props.resizeDelayInMilliseconds || 50;
        },
        enumerable: true,
        configurable: true
    });
    LessText.prototype._handleWindowResizeCore = function () {
        this.update();
    };
    Object.defineProperty(LessText.prototype, "_contentHeight", {
        get: function () {
            if (this._textContainerElement) {
                var contentStyles = window.getComputedStyle(this._textContainerElement);
                var padding = 0;
                if (contentStyles && contentStyles.paddingTop && contentStyles.paddingBottom) {
                    padding = parseFloat(contentStyles.paddingTop) + parseFloat(contentStyles.paddingBottom);
                }
                return this._textContainerElement.offsetHeight - padding;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    LessText.prototype._truncateLines = function () {
        if (!this._textContainerElement) {
            return;
        }
        var text = this.props.text || '';
        this._textContainerElement.textContent = text;
        var lines = Math.round(this.props.lines);
        var lineHeight = window
            .getComputedStyle(this._textContainerElement, undefined)
            .getPropertyValue('line-height');
        var maxHeight = lines * parseInt(lineHeight, 10);
        var currHeight = this._contentHeight;
        this._textArray = text.split(this._separator);
        var shouldTrim = currHeight > maxHeight && lines > 0;
        if (shouldTrim) {
            var trimmedLength = this._trimAndCalculateLength(currHeight, maxHeight);
            this._applyTextNumber(trimmedLength);
        }
        if (this.props.onAfterTruncate) {
            this.props.onAfterTruncate(shouldTrim);
        }
    };
    LessText.prototype._trimAndCalculateLength = function (currentValue, maxValue) {
        var allowedTextNumber = this._textArray.length;
        if (!this._textContainerElement) {
            return allowedTextNumber;
        }
        var minTextNumber = 1, maxTextNumber = allowedTextNumber;
        do {
            var currentTextNumber = Math.floor((minTextNumber + maxTextNumber + 1) / 2);
            this._applyTextNumber(currentTextNumber);
            currentValue = this._contentHeight;
            if (currentValue > maxValue) {
                maxTextNumber = currentTextNumber - 1;
            }
            else {
                minTextNumber = currentTextNumber;
            }
        } while (minTextNumber < maxTextNumber);
        return minTextNumber;
    };
    LessText.prototype._applyTextNumber = function (newTextNumber) {
        var newText = this._textArray.slice(0, newTextNumber);
        var newTextJoined = newText.join(this._separator);
        if (this._textContainerElement) {
            this._textContainerElement.textContent = this._textContainerElement.textContent === newTextJoined
                ? newTextJoined
                : newTextJoined + this._omission;
        }
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], LessText.prototype, "update", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], LessText.prototype, "_truncateLines", null);
    return LessText;
}(external__react_["PureComponent"]));


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/legacy/lessText/DelayLessText.js





var DelayLessText_DelayLessText = (function (_super) {
    tslib_es6["__extends"](DelayLessText, _super);
    function DelayLessText(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            render: false
        };
        _this._timeout = _this._deferRender();
        return _this;
    }
    DelayLessText.prototype.componentWillUnmount = function () {
        clearTimeout(this._timeout);
    };
    DelayLessText.prototype.render = function () {
        if (this.state.render) {
            return (external__react_["createElement"](LessText_LessText, tslib_es6["__assign"]({}, this.props)));
        }
        else {
            return (external__react_["createElement"]("span", { "data-automation-id": 'less-text', className: Object(office_ui_fabric_react_bundle_["css"])(LessText_module_scss.lessText, this.props.className) }, this.props.text));
        }
    };
    DelayLessText.prototype._deferRender = function () {
        var _this = this;
        return setTimeout(function () {
            _this.setState({
                render: true
            });
        }, 300);
    };
    return DelayLessText;
}(external__react_["PureComponent"]));


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/legacy/lessText/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return DelayLessText_DelayLessText; });



/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PivotItem", function() { return PivotItem; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);



var PivotItem = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](PivotItem, _super);
    function PivotItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PivotItem.prototype.render = function () {
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({}, Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"])), this.props.children));
    };
    return PivotItem;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/Pivot.types.js
module.exports = __webpack_require__(296);

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Button.js
var package = __webpack_require__(1);
module.exports = {}
for (var key in package) {
  if (package.hasOwnProperty(key)) {
    module.exports[key] = package[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Icon.js
var package = __webpack_require__(1);
module.exports = package.workaround_Icon;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Guid_1 = __webpack_require__(170);
var Killswitch = /** @class */ (function () {
    function Killswitch() {
    }
    /**
     * Performs the static initialization of the kill switches map.
     * @param {{[key: string]: boolean}} killSwitches - The map of all active killswitches.
     */
    Killswitch.initKillSwitches = function (killSwitches) {
        Killswitch._killSwitches = killSwitches || {};
    };
    /**
     * Returns true if the given SPO killswitch is found in the static map
     * of active killswitches.
     * @requires - The application should initialize the static map
     * of active killswitches using initKillSwitches before invoking this method.
     * @param killSwitch - The string representation of the guid identifying the
     * killswitch to check.
     * @param date - The date when the kill switch check has been added to the codebase.
     * @param message - A text message associated with the kill switch.
     * @returns True if the given kill switch is found active.
     */
    Killswitch.isActivated = function (killSwitch, date, message) {
        // use _spPageContextInfo for backward compatibility while still available
        var pageContext = window['_spPageContextInfo'];
        if (!Killswitch._killSwitches && pageContext && pageContext.killSwitches) {
            Killswitch.initKillSwitches(pageContext.killSwitches);
        }
        return killSwitch && Killswitch._killSwitches &&
            Killswitch._killSwitches[Guid_1.default.normalizeUpper(killSwitch, false /*includeBrackets*/)];
    };
    return Killswitch;
}());
exports.Killswitch = Killswitch;
function getKillSwitch(pageContext) {
    var killSwitches = pageContext && pageContext.killSwitches;
    return {
        isActivated: function (killSwitch, date, message) {
            return !!killSwitches && !!killSwitches[Guid_1.default.normalizeUpper(killSwitch, false /*includeBrackets*/)];
        }
    };
}
exports.getKillSwitch = getKillSwitch;


/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__(190);
var styles = {
    defaultIconClass: 'defaultIconClass_daca54c9',
    dropLocation: 'dropLocation_daca54c9',
    horizontalLine: 'horizontalLine_daca54c9',
    verticalLine: 'verticalLine_daca54c9',
    noselect: 'noselect_daca54c9',
    linePositionAbsolute: 'linePositionAbsolute_daca54c9',
    iconVisible: 'iconVisible_daca54c9',
    iconCollapsed: 'iconCollapsed_daca54c9',
    iconAdditionalStyle: 'iconAdditionalStyle_daca54c9',
    cursorDragging: 'cursorDragging_daca54c9',
    handleGrab: 'handleGrab_daca54c9',
    hideLine: 'hideLine_daca54c9',
};
/* harmony default export */ __webpack_exports__["a"] = (styles);


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var UriFormat;
(function (UriFormat) {
    UriFormat[UriFormat["absolute"] = 0] = "absolute";
    UriFormat[UriFormat["relative"] = 1] = "relative";
    UriFormat[UriFormat["serverRelative"] = 2] = "serverRelative";
})(UriFormat = exports.UriFormat || (exports.UriFormat = {}));
/**
 * Simplified implementation of a URI parser which does not attempt decoding of segments,
 * handling of query strings, or separation of the fragment.
 *
 * This class makes several assumptions about the format of input URLs:
 * - Absolute URLs begin with '<scheme>://<host>'
 * - Relative URLs being with '/'
 * - URLs never have a trailing '/'
 *
 * @class SimpleUri
 */
var SimpleUri = /** @class */ (function () {
    /**
     * Creates an instance of SimpleUri.
     *
     * @param {string} value
     */
    function SimpleUri(value) {
        if (value === void 0) { value = ''; }
        this._value = value;
    }
    Object.defineProperty(SimpleUri.prototype, "format", {
        /**
         * Determines the format of the URL.
         *
         * @readonly
         * @type {UriFormat}
         *
         * @example
         *  expect(new SimpleUri('/').format).to.equal(UriFormat.serverRelative);
         * @example
         *  expect(new SimpleUri('https://test').format).to.equal(UriFormat.absolute);
         * @example
         *  expact(new SimpleUri('test').format).to.equal(UriFormat.relative);
         */
        get: function () {
            return this._getFormat();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "authority", {
        /**
         * Gets the authority component of the URI, if the URI is fully-qualified.
         * The authority is formatted as
         * '<scheme>://<host>'
         * and never has a trailing '/'.
         *
         * @readonly
         * @type {string}
         *
         * @example
         *  expect(new SimpleUri('/').authority).to.equal('');
         * @example
         *  expect(new SimpleUri('https://test').authority).to.equal('https://test');
         * @example
         *  expect(new SimpleUri('https://test/').authority).to.equal('https://test');
         * @example
         *  expect(new SimpleUri('/bad/scheme://').authority).to.equal('');
         */
        get: function () {
            return this._getAuthority();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "domain", {
        /**
         * Gets the domain of the URI, which is everything in the authority after
         * the scheme and protocol.
         *
         * @readonly
         * @type {string}
         * @memberOf SimpleUri
         *
         * @example
         *  expect(new SimpleUri('/').domain).to.equal('');
         * @example
         *  expect(new SimpleUri('https://test').domain).to.equal('test');
         * @example
         *  expect(new SimpleUri('https://test/').domain).to.equal('test');
         */
        get: function () {
            return this._getDomain();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "path", {
        /**
         * Gets the path of the URI, which is everything after the authority.
         * If the URI has no authority, this returns the entire URI.
         * If there is only an authority, this returns ''.
         *
         * @readonly
         * @type {string}
         *
         * @example
         *  expect(new SimpleUri('https://test').path).to.equal('');
         * @example
         *  expect(new SimpleUri('/').path).to.equal('/');
         * @example
         *  expect(new SimpleUri('https://test/').path).to.equal('/');
         * @example
         *  expect(new SimpleUri('/bad/scheme://').path).to.equal('/bad/scheme://');
         */
        get: function () {
            return this._getPath();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleUri.prototype, "segments", {
        /**
         * Gets the segments of the path.
         * If there is no path, this is an empty array.
         * Otherwise, this returns all segments after the first '/'.
         *
         * @readonly
         * @type {string[]}
         *
         * @example
         *  expect(new SimpleUri('https://test').segments).to.deep.equal([]);
         * @example
         *  expect(new SimpleUri('/').segments).to.deep.equal(['']);
         * @example
         *  expect(new SimpleUri('/foo').segments).to.deep.equal(['foo']);
         * @example
         *  expect(new SimpleUri('/foo/').segments).to.deep.equal(['foo', '']);
         * @example
         *  expect(new SimpleUri('/foo/bar').segments).to.deep.equal(['foo', 'bar']);
         * @example
         *  expect(new SimpleUri('/bad/scheme://').segments).to.deep.equal(['bad', 'scheme:', '', '']);
         */
        get: function () {
            return this._getSegments();
        },
        enumerable: true,
        configurable: true
    });
    SimpleUri.prototype._getFormat = function () {
        var format;
        if (this._getAuthority()) {
            format = 0 /* absolute */;
        }
        else {
            var path = this._getPath();
            if (path.indexOf('/') === 0) {
                format = 2 /* serverRelative */;
            }
            else {
                format = 1 /* relative */;
            }
        }
        this._getFormat = function () { return format; };
        return format;
    };
    SimpleUri.prototype._getAuthority = function () {
        var authority;
        var endIndexOfRootDelimeter = this._getEndIndexOfRootDelimeter();
        if (endIndexOfRootDelimeter > -1) {
            var indexOfNextSegment = this._value.indexOf('/', endIndexOfRootDelimeter);
            if (indexOfNextSegment > -1) {
                authority = this._value.substring(0, indexOfNextSegment);
            }
            else {
                authority = this._value;
            }
        }
        else {
            authority = '';
        }
        this._getAuthority = function () { return authority; };
        return authority;
    };
    SimpleUri.prototype._getDomain = function () {
        var domain;
        var authority = this._getAuthority();
        if (authority) {
            var endIndexOfRootDelimeter = this._getEndIndexOfRootDelimeter();
            domain = authority.substring(endIndexOfRootDelimeter);
        }
        else {
            domain = '';
        }
        this._getDomain = function () { return domain; };
        return domain;
    };
    SimpleUri.prototype._getPath = function () {
        var path;
        var endIndexOfSchemeDelimeter = this._getEndIndexOfRootDelimeter();
        if (endIndexOfSchemeDelimeter > -1) {
            var indexOfNextSegment = this._value.indexOf('/', endIndexOfSchemeDelimeter);
            if (indexOfNextSegment > -1) {
                path = this._value.substring(indexOfNextSegment);
            }
            else {
                path = '';
            }
        }
        else {
            path = this._value;
        }
        this._getPath = function () { return path; };
        return path;
    };
    SimpleUri.prototype._getSegments = function () {
        var path = this._getPath();
        var segments = path.split('/');
        this._getSegments = function () { return segments; };
        return segments;
    };
    SimpleUri.prototype._getEndIndexOfRootDelimeter = function () {
        var endIndexOfRootDelimeter;
        var rootDelimeter = '//';
        var indexOfRootDelimeter = this._value.indexOf(rootDelimeter);
        var indexOfPathDelimeter = this._value.indexOf('/');
        if (indexOfRootDelimeter > -1 && indexOfRootDelimeter <= indexOfPathDelimeter) {
            endIndexOfRootDelimeter = indexOfRootDelimeter + rootDelimeter.length;
        }
        else {
            endIndexOfRootDelimeter = -1;
        }
        this._getEndIndexOfRootDelimeter = function () { return endIndexOfRootDelimeter; };
        return endIndexOfRootDelimeter;
    };
    return SimpleUri;
}());
exports.SimpleUri = SimpleUri;
exports.default = SimpleUri;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/FocusZone.js
var package = __webpack_require__(1);
module.exports = {}
for (var key in package) {
  if (package.hasOwnProperty(key)) {
    module.exports[key] = package[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/index.js + 7 modules
var lib = __webpack_require__(14);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxAnimation/index.js + 2 modules
var toolboxAnimation = __webpack_require__(43);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxCallout/ToolboxCallout.module.scss.js
__webpack_require__(234);
var styles = {
    container: 'container_44ffdc86',
    callout: 'callout_44ffdc86',
};
/* harmony default export */ var ToolboxCallout_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxCallout/ToolboxCallout.js







var toolboxHeight = 330;
var hintOffset = 28;
var toolboxTotalOffset = toolboxHeight + hintOffset;
var ToolboxCallout_ToolboxCallout = (function (_super) {
    tslib_es6["__extends"](ToolboxCallout, _super);
    function ToolboxCallout(props) {
        var _this = _super.call(this, props) || this;
        _this._calloutId = "toolbox-callout-" + ToolboxCallout._instanceId++;
        return _this;
    }
    ToolboxCallout.prototype.componentDidMount = function () {
        document.body.addEventListener('click', this._handleClick);
    };
    ToolboxCallout.prototype.componentWillUnmount = function () {
        document.body.removeEventListener('click', this._handleClick);
    };
    ToolboxCallout.prototype.render = function () {
        var _this = this;
        var renderPosition = this._renderPosition;
        var style = {
            top: renderPosition === 'down' ? this.props.verticalPosition : this.props.verticalPosition - toolboxTotalOffset,
            left: Object(office_ui_fabric_react_bundle_["getRTL"])() ? 0 : this._horizontalPositionStyle,
            right: Object(office_ui_fabric_react_bundle_["getRTL"])() ? this._horizontalPositionStyle : 0
        };
        var classNames = Object(office_ui_fabric_react_bundle_["css"])(ToolboxCallout_module_scss.callout, this.props.className, renderPosition === 'down' ? toolboxAnimation["b" /* animationStyles */].upIn : toolboxAnimation["b" /* animationStyles */].downIn);
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["FocusTrapZone"], { isClickableOutsideFocusTrap: true, forceFocusInsideTrap: false, ignoreExternalFocusing: true, "data-sp-a11y-skipkeys": 'all', className: ToolboxCallout_module_scss.container },
            external__react_["createElement"]("div", { id: this._calloutId, role: 'toolbar', className: classNames, onKeyDown: this._handleKeyDown, style: style, ref: function (callout) { return _this._callout = callout; } }, this.props.children)));
    };
    ToolboxCallout.prototype._handleClick = function (event) {
        var element = event.target;
        if (this.props.onDismiss &&
            this._isElement(element) &&
            !this._isInsideCallout(element)) {
            this.props.onDismiss(false );
        }
    };
    ToolboxCallout.prototype._handleKeyDown = function (event) {
        if (this.props.onDismiss && lib["Keyboard"].isEscape(event)) {
            this.props.onDismiss(true );
        }
    };
    ToolboxCallout.prototype._isInsideCallout = function (element) {
        if (sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('c0f65f53-4a47-4af9-a081-3e6d631ae48c'), '7/12/2018', 'SOX_CheckIsInsideCallout')) {
            while (element.tagName !== 'BODY' &&
                element.parentElement) {
                if (element.id === this._calloutId) {
                    return true;
                }
                element = element.parentElement;
            }
            return false;
        }
        else {
            if (!this._callout) {
                return false;
            }
            if (element === this._callout) {
                return true;
            }
            var randomSeed = Math.random().toString().substr(2);
            element.setAttribute("data-toolbox-callout-" + randomSeed, '1');
            var isInsideCallout = this._callout.querySelector("[data-toolbox-callout-" + randomSeed + "]") !== null;
            element.removeAttribute("data-toolbox-callout-" + randomSeed);
            return isInsideCallout;
        }
    };
    ToolboxCallout.prototype._isElement = function (element) {
        return Boolean(element &&
            element.tagName &&
            element.parentElement);
    };
    Object.defineProperty(ToolboxCallout.prototype, "_renderPosition", {
        get: function () {
            var _a = this.props.scrollableParent.getBoundingClientRect(), top = _a.top, bottom = _a.bottom;
            var canvasTop = this.props.canvasElement.getBoundingClientRect().top;
            if ((this.props.verticalPosition + toolboxTotalOffset + canvasTop > bottom) &&
                (this.props.verticalPosition + canvasTop - toolboxHeight > top) 
            ) {
                return 'up';
            }
            else {
                return 'down';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxCallout.prototype, "_horizontalPositionStyle", {
        get: function () {
            if (this.props.horizontalPosition > 0) {
                return this.props.horizontalPosition + "px";
            }
            else {
                return 'calc(50% - ' + (this.props.horizontalPosition) + 'px)';
            }
        },
        enumerable: true,
        configurable: true
    });
    ToolboxCallout._instanceId = 0;
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ToolboxCallout.prototype, "_handleClick", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ToolboxCallout.prototype, "_handleKeyDown", null);
    return ToolboxCallout;
}(external__react_["PureComponent"]));


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxCallout/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return ToolboxCallout_ToolboxCallout; });



/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var search_namespaceObject = {};
__webpack_require__.d(search_namespaceObject, "setQuery", function() { return setQuery; });
__webpack_require__.d(search_namespaceObject, "getQuery", function() { return getQuery; });
__webpack_require__.d(search_namespaceObject, "filterItems", function() { return filterItems; });

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxSearch/search.js



var logSource = sp_diagnostics_["_LogSource"].create('Toolbox');
var queryMap = new WeakMap();
function setQuery(context, query) {
    queryMap.set(context, query);
}
function getQuery(context) {
    return queryMap.get(context) || '';
}
function bySearch(query) {
    if (sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('4cf8503a-82b3-4596-bdd7-0a52bfb38aa4'), '8/2/2018', 'SOX_ToolboxSearchAsPlainString')) {
        try {
            var queryRegex_1 = new RegExp(query.trim(), 'i');
            return function (item) { return (item.displayName.search(queryRegex_1) >= 0 ||
                item.description.search(queryRegex_1) >= 0); };
        }
        catch (error) {
            sp_diagnostics_["_TraceLogger"].logError(logSource, error);
            return function () { return false; };
        }
    }
    else {
        var queryAsLowerCase_1 = query.toLowerCase();
        return function (item) { return (item.displayName.toLowerCase().indexOf(queryAsLowerCase_1) > -1 ||
            item.description.toLowerCase().indexOf(queryAsLowerCase_1) > -1); };
    }
}
function filterItems(items, query, source) {
    var result = items.filter(bySearch(query));
    sp_telemetry_["_EngagementLogger"].logEventWithLogEntry(new sp_diagnostics_["_LogEntry"](logSource.id, 'SearchResult', sp_diagnostics_["_LogType"].Event, {
        source: source,
        queryLength: query.trim().length.toString(),
        itemCount: result.length.toString()
    }));
    return result;
}

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxSearch/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return search_namespaceObject; });




/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxModel/ICanvasControl.js
var CanvasControlType;
(function (CanvasControlType) {
    CanvasControlType[CanvasControlType["WebPartZone"] = 3] = "WebPartZone";
    CanvasControlType[CanvasControlType["RTE"] = 4] = "RTE";
    CanvasControlType[CanvasControlType["TwoColumns"] = 5] = "TwoColumns";
    CanvasControlType[CanvasControlType["ThreeColumns"] = 6] = "ThreeColumns";
    CanvasControlType[CanvasControlType["OneThirdColumnRight"] = 7] = "OneThirdColumnRight";
    CanvasControlType[CanvasControlType["OneThirdColumnLeft"] = 8] = "OneThirdColumnLeft";
    CanvasControlType[CanvasControlType["FullWidth"] = 9] = "FullWidth";
    CanvasControlType[CanvasControlType["OneColumn"] = 10] = "OneColumn";
})(CanvasControlType = CanvasControlType || (CanvasControlType = {}));

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxModel/IToolboxItemShim.js
function mapToolboxItem(itemShim) {
    var id = itemShim.key ? itemShim.key.toString() : Math.random().toString();
    var item = {
        id: id,
        description: itemShim.description,
        groupId: itemShim.groupId,
        displayName: itemShim.displayName,
        imageSrc: itemShim.imageSrc,
        msIconName: itemShim.msIconName
    };
    return {
        id: id,
        item: item,
        control: itemShim.itemProps,
        manifest: itemShim.itemProps.webPartManifest 
    };
}

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxModel/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return CanvasControlType; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "b", function() { return mapToolboxItem; });




/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/legacy/lessText/index.js + 3 modules
var lessText = __webpack_require__(112);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxItem/ToolboxItemBase.module.scss.js
__webpack_require__(240);
var styles = {
    item: 'item_a6027ca2',
    flexBox: 'flexBox_a6027ca2',
    icon: 'icon_a6027ca2',
    title: 'title_a6027ca2',
};
/* harmony default export */ var ToolboxItemBase_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxItem/ToolboxItemBase.js
/* harmony export (immutable) */ __webpack_exports__["a"] = ToolboxItemBase;




function ToolboxItemBase(props) {
    return (external__react_["createElement"](office_ui_fabric_react_bundle_["CommandButton"], { role: 'listitem', styles: { root: props.itemStyles }, className: Object(office_ui_fabric_react_bundle_["css"])(ToolboxItemBase_module_scss.item, props.itemClassName), ariaLabel: props.item.displayName, ariaDescription: props.item.description, title: props.item.description, onClick: function () { return props.onClick(props.item.id); }, "data-automation-id": props.item.id, "data-item-size": props['data-item-size'] },
        external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])(ToolboxItemBase_module_scss.flexBox, props.flexBoxClassName) },
            external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { className: Object(office_ui_fabric_react_bundle_["css"])(ToolboxItemBase_module_scss.icon, props.iconClassName), iconName: props.item.msIconName, iconType: props.item.imageSrc ? office_ui_fabric_react_bundle_["IconType"].Image : office_ui_fabric_react_bundle_["IconType"].Default, imageProps: { src: props.item.imageSrc, alt: props.item.displayName, imageFit: office_ui_fabric_react_bundle_["ImageFit"].contain } }),
            external__react_["createElement"](lessText["a" /* LessText */], { text: props.item.displayName, className: Object(office_ui_fabric_react_bundle_["css"])(ToolboxItemBase_module_scss.title, props.titleClassName), showTitle: true, lines: props.titleLineCount, omission: '…' }))));
}


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(35), exports);


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var RUMOneLogger_1 = __webpack_require__(44);
exports.default = RUMOneLogger_1.APICallPerformanceData;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:CoverageThreshold(75)
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(81), exports);


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var Engagement_event_1 = __webpack_require__(34);
var Experiment_event_1 = __webpack_require__(168);
var ExperimentTypeEnum_1 = __webpack_require__(92);
var AddressParser_1 = __webpack_require__(69);
var FeatureOverrides_1 = __webpack_require__(70);
var murmurhash = __webpack_require__(169);
/**
 * Enum for the types of targets that can be used to run an experiment.
 */
var TargetType;
(function (TargetType) {
    TargetType[TargetType["user"] = 1] = "user";
    TargetType[TargetType["tenant"] = 2] = "tenant";
    TargetType[TargetType["farm"] = 3] = "farm";
    TargetType[TargetType["site"] = 4] = "site";
})(TargetType = exports.TargetType || (exports.TargetType = {}));
/**
 * Enum for the types of algorithms used for assignment
 */
var ABExpHash;
(function (ABExpHash) {
    /** Original implementation using DJB2 hash, and using user or site ID, farm label and site subscription ID as hash input. */
    ABExpHash[ABExpHash["v1"] = 1] = "v1";
    /** New implementation using Murmur hash, and only user or site id as hash input. */
    ABExpHash[ABExpHash["v2"] = 2] = "v2";
})(ABExpHash = exports.ABExpHash || (exports.ABExpHash = {}));
/**
 * This class will be used for AB Testing type of experiments.
 *
 * You can force a single experiment on or off using query params:
 *   `enableExp=MyExperimentName` or `disableExp=MyExperimentName`
 *
 * (Note: even if an experiment is forced on/off, the actual experiment state for the given target
 * will be logged, rather than the forced state.)
 */
var ABExperiment = /** @class */ (function () {
    /**
     * @param experimentData The data for the experiment.
     * @param aaToABFeature If provided, the experiment will initially run as an A/A experiment
     * under the given `name` plus "AA" at the end (e.g. "MyExperimentAA"). When the feature
     * is enabled, the experiment will convert to an A/B experiment using the original `name`.
     * (In an "A/A experiment," data is logged to help ensure everything is working correctly, but
     * everyone gets the old experience.)
     *
     * @example
     * // set the experiment data
     * let newMenuExperimentData: IABExperimentData = { name: "NewMenu", startDate: "11/17/2016", segmentPopulation: 0.4};
     * // create the experiment object
     * let newMenuExperiment: ABExperiment = new ABExperiment(newMenuExperimentData);
     */
    function ABExperiment(experimentData, aaToABFeature) {
        var originalName = experimentData.name;
        var isAAExperiment = aaToABFeature && !FeatureOverrides_1.default.isFeatureEnabled(aaToABFeature);
        this._experimentData = experimentData = tslib_1.__assign({ segmentPopulation: 0.5, targetType: TargetType.user, version: ABExpHash.v1 }, experimentData);
        if (isAAExperiment) {
            experimentData.name += 'AA';
        }
        this._isOn = false;
        if (!ABExperiment._pageContext) {
            // log that the App that wants to do experiments
            // does not have host settings and quit doing the experiment checks
            Engagement_event_1.Engagement.logData({ name: this._experimentData.name + ".Experiment.HostSettingsMissing" });
        }
        else {
            // set the isOn flag based on the target type
            // if it ever reaches the default then return false
            switch (this._experimentData.targetType) {
                case TargetType.user:
                    this._isOn = this._isUserExperimentOn();
                    break;
                case TargetType.tenant:
                    this._isOn = this._isTenantExperimentOn();
                    break;
                case TargetType.farm:
                    this._isOn = this._isFarmExperimentOn();
                    break;
                case TargetType.site:
                    this._isOn = this._isSiteExperimentOn();
                    break;
            }
        }
        // If we're in A/A experiment stage, everyone gets the old experience
        // (the checks above are still needed so we log which population segment the target is in)
        if (isAAExperiment) {
            this._isOn = false;
        }
        // Check whether the experiment has been forced on or off
        // (do this after the checks above so it doesn't affect logging)
        var viewParams = AddressParser_1.deserializeQuery((window.location.search || '').substr(1));
        if (viewParams['enableExp'] === originalName) {
            this._isOn = true;
        }
        else if (viewParams['disableExp'] === originalName) {
            this._isOn = false;
        }
    }
    /**
     * Initializes ABExperiment with the pageContext.
     * @param pageContext The _spPageContextInfo of the app where is experiment is running.
     */
    ABExperiment.init = function (pageContext) {
        ABExperiment._pageContext = tslib_1.__assign({}, pageContext, { userLoginName: pageContext.userLoginName || 'missing_user', siteSubscriptionId: pageContext.siteSubscriptionId || 'missing_tenant', farmLabel: pageContext.farmLabel || 'missing_farm', siteId: pageContext.siteId || 'missing_site' });
    };
    /** @deprecated Please use `init` */
    ABExperiment.Init = function (pageContext) {
        ABExperiment.init(pageContext);
    };
    /**
     * Returns the experiment data to be used for logging purposes.
     */
    ABExperiment.prototype.getExperimentData = function () {
        return this._experimentData;
    };
    /**
     * Checks if the current target is selected to be part of the experiment.
     */
    ABExperiment.prototype.isOn = function () {
        return this._isOn;
    };
    /**
     * Checks if the current target is selected to be part of the experiment.
     * @deprecated Use `isOn`
     */
    ABExperiment.prototype.IsExperimentOn = function () {
        return this._isOn;
    };
    /**
     * Checks if the current user is being selected to be part of the experiment.
     */
    ABExperiment.prototype._isUserExperimentOn = function () {
        // in case there are no host settings default to no experiments
        var pageContext = ABExperiment._pageContext;
        if (!pageContext) {
            return false;
        }
        var targetToken = '';
        var _a = this._experimentData, experimentName = _a.name, version = _a.version;
        if (version === ABExpHash.v1) {
            targetToken = experimentName + '_' +
                pageContext.userLoginName + '_' +
                pageContext.siteSubscriptionId + '_' +
                pageContext.farmLabel;
        }
        else if (version === ABExpHash.v2) {
            targetToken = experimentName + pageContext.userLoginName;
        }
        return this._isExperimentOn(targetToken);
    };
    /**
     * Checks if the current tenant is being selected to be part of the experiment.
     */
    ABExperiment.prototype._isTenantExperimentOn = function () {
        // in case there are no settings default to no experiment path
        var pageContext = ABExperiment._pageContext;
        if (!pageContext) {
            return false;
        }
        var targetToken = '';
        var _a = this._experimentData, experimentName = _a.name, version = _a.version;
        if (version === ABExpHash.v1) {
            targetToken = experimentName + '_' +
                pageContext.siteSubscriptionId + '_' +
                pageContext.farmLabel;
        }
        else if (version === ABExpHash.v2) {
            targetToken = experimentName + pageContext.siteSubscriptionId;
        }
        return this._isExperimentOn(targetToken);
    };
    /**
     * Checks if the current farm is being selected to be part of the experiment.
     */
    ABExperiment.prototype._isFarmExperimentOn = function () {
        // in case there are no settings default to no experiment path
        var pageContext = ABExperiment._pageContext;
        if (!pageContext) {
            return false;
        }
        var targetToken = '';
        var _a = this._experimentData, experimentName = _a.name, version = _a.version;
        if (version === ABExpHash.v1) {
            targetToken = experimentName + '_' +
                this._getSiteId() + '_' +
                pageContext.siteSubscriptionId + '_' +
                pageContext.farmLabel;
        }
        else if (version === ABExpHash.v2) {
            targetToken = experimentName + this._getSiteId();
        }
        return this._isExperimentOn(targetToken);
    };
    /**
     * Checks if the current site in the current tenant is being selected to be part of the experiment.
     */
    ABExperiment.prototype._isSiteExperimentOn = function () {
        // in case there are no settings default to no experiment path
        var pageContext = ABExperiment._pageContext;
        if (!pageContext) {
            return false;
        }
        // build the token using siteId and SiteSubscriptionId
        // since siteId is unique inside a tenant
        var targetToken = this._experimentData.name + '_' +
            this._getSiteId() + '_' +
            pageContext.siteSubscriptionId + '_' +
            pageContext.farmLabel;
        return this._isExperimentOn(targetToken);
    };
    /**
     * Returns the siteId if it is passed when ABExperiment is instantiated, else
     * returns the siteId present in the page context
     */
    ABExperiment.prototype._getSiteId = function () {
        var pageContext = ABExperiment._pageContext;
        return !!this._experimentData.siteId ? this._experimentData.siteId : pageContext.siteId;
    };
    /**
     * Returns true if the curent target type is being selected to be part of the experiment.
     * @param targetToken this is the unique identfier for target.
     * @returns true if the targetToken is in the segementPopulation defined for the experiment.
     */
    ABExperiment.prototype._isExperimentOn = function (targetToken) {
        if (!targetToken) {
            return false;
        }
        // get the hash number for the specified targetToken
        var varHash = 0;
        if (this._experimentData.version === ABExpHash.v1) {
            varHash = this._getHashNumber(targetToken);
        }
        else if (this._experimentData.version === ABExpHash.v2) {
            varHash = this._getHashNumberMurmur(targetToken);
        }
        // it returns true if varHash is less than segementPopulation
        // same time, it logs experiment info
        var result = varHash <= this._experimentData.segmentPopulation;
        this._logData(result);
        return result;
    };
    /**
     * Returns an unique number based on the string provided.
     * @param inputString this is the unique uber identfier for target.
     */
    ABExperiment.prototype._getHashNumber = function (inputString) {
        // in case there will be empty strings returns 1
        // this will take it to the experiment off path
        if (inputString.length === 0) {
            return 1;
        }
        var hash = 5381;
        for (var i = 0; i < inputString.length; ++i) {
            hash = ((hash << 5) + hash) + inputString.charCodeAt(i);
            hash = hash & hash;
        }
        hash = hash & 0xFFFF;
        return hash / 0xFFFF;
    };
    /**
     * Returns an unique number based on Murmur hash of string provided
     * @param inputString this is the unique uber identfier for target.
     */
    ABExperiment.prototype._getHashNumberMurmur = function (inputString) {
        return murmurhash.v3(inputString, 1) / 0xFFFFFFFF;
    };
    /**
     * Returns experiment type based on target type set
     */
    ABExperiment.prototype._getExperimentType = function () {
        if (this._experimentData.targetType === TargetType.user) {
            return ExperimentTypeEnum_1.ExperimentTypeEnum.User;
        }
        else if (this._experimentData.targetType === TargetType.site) {
            return ExperimentTypeEnum_1.ExperimentTypeEnum.Site;
        }
        else {
            // only user and site level experiments are supported
            return ExperimentTypeEnum_1.ExperimentTypeEnum.Unknown;
        }
    };
    /**
     * Log the experiment data for testing purposes.
     */
    ABExperiment.prototype._logData = function (isOn) {
        Experiment_event_1.Experiment.logData({
            name: "",
            isInRamp: isOn,
            experiment: this._experimentData.name,
            variant: isOn.toString(),
            assignmentType: this._getExperimentType(),
            // site level experiments require logging assignment IDs because unlike user IDs, it is not automatically captured.
            assignmentId: this._experimentData.targetType === TargetType.site ? this._getSiteId() : ""
        });
    };
    return ABExperiment;
}());
exports.ABExperiment = ABExperiment;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ErrorHelper_1 = __webpack_require__(21);
var Events = __webpack_require__(89);
function logToErrorHelper(error) {
    ErrorHelper_1.default.log(error);
}
/** An instance of EventGroup allows anything with a handle to it to trigger events on it.
 *  If the target is an HTMLElement, the event will be attached to the element and can be
 *  triggered as usual (like clicking for onclick).
 *  The event can be triggered by calling EventGroup.raise() here. If the target is an
 *  HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets
 *  handled here in EventGroup, and the handler is called in the context of the parent
 *  (which is passed in in the constructor).
 */
var EventGroup = /** @class */ (function () {
    /** parent: the context in which events attached to non-HTMLElements are called */
    function EventGroup(parent, onError) {
        if (onError === void 0) { onError = logToErrorHelper; }
        this._id = EventGroup._uniqueId++;
        this._parent = parent;
        this._onError = onError;
        this._eventRecords = [];
    }
    /**
     *  Events raised here by default have bubbling set to false and cancelable set to true.
     *  This applies also to built-in events being raised manually here on HTMLElements,
     *  which may lead to unexpected behavior if it differs from the defaults.
     */
    EventGroup.raise = function (target, eventName, eventArgs, bubbleEvent) {
        return Events.raise(target, eventName, eventArgs, bubbleEvent);
    };
    EventGroup.isObserved = function (target, eventName) {
        var events = target && target.__events__;
        return !!events && !!events[eventName];
    };
    /** Check to see if the target has declared support of the given event. */
    EventGroup.isDeclared = function (target, eventName) {
        var declaredEvents = target && target.__declaredEvents;
        return !!declaredEvents && !!declaredEvents[eventName];
    };
    EventGroup.stopPropagation = function (event) {
        if (event.stopPropagation) {
            event.stopPropagation();
        }
    };
    EventGroup.prototype.dispose = function () {
        if (!this._isDisposed) {
            this._isDisposed = true;
            this.off();
            this._parent = null;
        }
    };
    /** On the target, attach a set of events, where the events object is a name to function mapping. */
    EventGroup.prototype.onAll = function (target, events, useCapture) {
        for (var eventName in events) {
            this.on(target, eventName, events[eventName], useCapture);
        }
    };
    /** On the target, attach an event whose handler will be called in the context of the parent
     * of this instance of EventGroup.
     */
    EventGroup.prototype.on = function (target, eventName, callback, useCapture) {
        var _this = this;
        if (eventName.indexOf(',') > -1) {
            var events = eventName.split(/[ ,]+/);
            for (var i = 0; i < events.length; i++) {
                this.on(target, events[i], callback, useCapture);
            }
        }
        else {
            var parent = this._parent;
            var eventRecord = {
                target: target,
                eventName: eventName,
                parent: parent,
                callback: callback,
                objectCallback: null,
                elementCallback: null,
                useCapture: useCapture
            };
            // Initialize and wire up the record on the target, so that it can call the callback if the event fires.
            var events_1 = (target.__events__ = target.__events__ || {});
            events_1[eventName] = events_1[eventName] || {
                count: 0
            };
            events_1[eventName][this._id] = events_1[eventName][this._id] || [];
            events_1[eventName][this._id].push(eventRecord);
            events_1[eventName].count++;
            if (Events.isDOMEventTarget(target)) {
                var processElementEvent = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (_this._isDisposed) {
                        return;
                    }
                    try {
                        var result = callback.apply(parent, args);
                        if (result === false && args[0] && args[0].preventDefault) {
                            var e = args[0];
                            e.preventDefault();
                            EventGroup.stopPropagation(e);
                        }
                    }
                    catch (e) {
                        _this._onError(e);
                    }
                    return result;
                };
                eventRecord.elementCallback = processElementEvent;
                /* tslint:disable:ban-native-functions */
                target.addEventListener(eventName, processElementEvent, useCapture);
                /* tslint:enable:ban-native-functions */
            }
            else {
                var processObjectEvent = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (_this._isDisposed) {
                        return;
                    }
                    return callback.apply(parent, args);
                };
                eventRecord.objectCallback = processObjectEvent;
            }
            // Remember the record locally, so that it can be removed.
            this._eventRecords.push(eventRecord);
        }
    };
    EventGroup.prototype.off = function (target, eventName, callback, useCapture) {
        for (var i = 0; i < this._eventRecords.length; i++) {
            var eventRecord = this._eventRecords[i];
            if ((!target || target === eventRecord.target) &&
                (!eventName || eventName === eventRecord.eventName) &&
                (!callback || callback === eventRecord.callback) &&
                ((typeof useCapture !== 'boolean') || useCapture === eventRecord.useCapture)) {
                var events = eventRecord.target.__events__;
                var targetArrayLookup = events[eventRecord.eventName];
                var targetArray = targetArrayLookup ? targetArrayLookup[this._id] : null;
                // We may have already target's entries, so check for null.
                if (targetArray) {
                    if (targetArray.length === 1 || !callback) {
                        targetArrayLookup.count -= targetArray.length;
                        delete events[eventRecord.eventName][this._id];
                    }
                    else {
                        targetArrayLookup.count--;
                        targetArray.splice(targetArray.indexOf(eventRecord), 1);
                    }
                    if (!targetArrayLookup.count) {
                        delete events[eventRecord.eventName];
                    }
                }
                if (eventRecord.elementCallback) {
                    if (eventRecord.target.removeEventListener) {
                        eventRecord.target.removeEventListener(eventRecord.eventName, eventRecord.elementCallback, eventRecord.useCapture);
                    }
                }
                this._eventRecords.splice(i--, 1);
            }
        }
    };
    /** Trigger the given event in the context of this instance of EventGroup. */
    EventGroup.prototype.raise = function (eventName, eventArgs, bubbleEvent) {
        return EventGroup.raise(this._parent, eventName, eventArgs, bubbleEvent);
    };
    /** Declare an event as being supported by this instance of EventGroup. */
    EventGroup.prototype.declare = function (event) {
        var declaredEvents = this._parent.__declaredEvents = this._parent.__declaredEvents || {};
        if (typeof event === 'string') {
            declaredEvents[event] = true;
        }
        else {
            for (var i = 0; i < event.length; i++) {
                declaredEvents[event[i]] = true;
            }
        }
    };
    EventGroup._uniqueId = 0;
    return EventGroup;
}());
exports.EventGroup = EventGroup;
exports.default = EventGroup;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Callout.js
var package = __webpack_require__(1);
module.exports = {}
for (var key in package) {
  if (package.hasOwnProperty(key)) {
    module.exports[key] = package[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.js
module.exports = __webpack_require__(182);

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.base.js
module.exports = __webpack_require__(183);

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipHost", function() { return TooltipHost; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Tooltip__ = __webpack_require__(131);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Tooltip_types__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Tooltip_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__Tooltip_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TooltipHost_scss__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TooltipHost_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__TooltipHost_scss__);







var styles = __WEBPACK_IMPORTED_MODULE_6__TooltipHost_scss__;
var TooltipHost = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](TooltipHost, _super);
    // Constructor
    function TooltipHost(props) {
        var _this = _super.call(this, props) || this;
        // The wrapping div that gets the hover events
        _this._tooltipHost = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["createRef"])();
        // The ID of the setTimeout that will eventually close the tooltip if the
        // the tooltip isn't hovered over.
        _this._closingTimer = -1;
        // Show Tooltip
        _this._onTooltipMouseEnter = function (ev) {
            var overflowMode = _this.props.overflowMode;
            if (overflowMode !== undefined) {
                var overflowElement = _this._getTargetElement();
                if (overflowElement && !Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["hasOverflow"])(overflowElement)) {
                    return;
                }
            }
            _this._toggleTooltip(true);
            _this._clearDismissTimer();
        };
        // Hide Tooltip
        _this._onTooltipMouseLeave = function (ev) {
            if (_this.props.closeDelay) {
                _this._clearDismissTimer();
                _this._closingTimer = _this._async.setTimeout(function () {
                    _this._toggleTooltip(false);
                }, _this.props.closeDelay);
            }
            else {
                _this._toggleTooltip(false);
            }
        };
        _this._clearDismissTimer = function () {
            _this._async.clearTimeout(_this._closingTimer);
        };
        // Hide Tooltip
        _this._hideTooltip = function () {
            _this._toggleTooltip(false);
        };
        _this.state = {
            isTooltipVisible: false
        };
        return _this;
    }
    // Render
    TooltipHost.prototype.render = function () {
        var _a = this.props, calloutProps = _a.calloutProps, children = _a.children, content = _a.content, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, hostClassName = _a.hostClassName, id = _a.id, _b = _a.setAriaDescribedBy, setAriaDescribedBy = _b === void 0 ? true : _b, tooltipProps = _a.tooltipProps;
        var isTooltipVisible = this.state.isTooltipVisible;
        var tooltipId = id || Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('tooltip');
        var isContentPresent = !!(content || (tooltipProps && tooltipProps.onRenderContent && tooltipProps.onRenderContent()));
        var showTooltip = isTooltipVisible && isContentPresent;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({ className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-TooltipHost', styles.host, hostClassName), ref: this._tooltipHost }, { onFocusCapture: this._onTooltipMouseEnter }, { onBlurCapture: this._hideTooltip }, { onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave, "aria-describedby": setAriaDescribedBy && isTooltipVisible && content ? tooltipId : undefined }),
            children,
            showTooltip && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Tooltip__["Tooltip"], __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({ id: tooltipId, delay: delay, content: content, targetElement: this._getTargetElement(), directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL, calloutProps: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["assign"])({}, calloutProps, {
                    onMouseEnter: this._onTooltipMouseEnter,
                    onMouseLeave: this._onTooltipMouseLeave
                }), onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave }, Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"]), tooltipProps)))));
    };
    TooltipHost.prototype._getTargetElement = function () {
        if (!this._tooltipHost.current) {
            return undefined;
        }
        var overflowMode = this.props.overflowMode;
        // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative
        // to the parent element, otherwise it might look off.
        if (overflowMode !== undefined) {
            switch (overflowMode) {
                case __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__["TooltipOverflowMode"].Parent:
                    return this._tooltipHost.current.parentElement;
                case __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__["TooltipOverflowMode"].Self:
                    return this._tooltipHost.current;
            }
        }
        return this._tooltipHost.current;
    };
    TooltipHost.prototype._toggleTooltip = function (isTooltipVisible) {
        var _this = this;
        if (this.state.isTooltipVisible !== isTooltipVisible) {
            this.setState({ isTooltipVisible: isTooltipVisible }, function () { return _this.props.onTooltipToggle &&
                _this.props.onTooltipToggle(_this.state.isTooltipVisible); });
        }
    };
    TooltipHost.defaultProps = {
        delay: __WEBPACK_IMPORTED_MODULE_5__Tooltip_types__["TooltipDelay"].medium
    };
    return TooltipHost;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.types.js
module.exports = __webpack_require__(187);

/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/ControlsInOneRow.module.scss.js
__webpack_require__(194);
var styles = {
    controlsInOneRow: 'controlsInOneRow_445f31b1',
    spaceInBetween: 'spaceInBetween_445f31b1',
};
/* harmony default export */ var ControlsInOneRow_module_scss = (styles);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/ControlsInOneRow.js




var ControlsInOneRow_ControlsInOneRow = (function (_super) {
    tslib_es6["__extends"](ControlsInOneRow, _super);
    function ControlsInOneRow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ControlsInOneRow.prototype.render = function () {
        var cssClass = Object(office_ui_fabric_react_bundle_["css"])(ControlsInOneRow_module_scss.controlsInOneRow, (_a = {}, _a[ControlsInOneRow_module_scss.spaceInBetween] = this.props.spaceInBetween, _a));
        return external__react_["createElement"]("div", { className: cssClass }, this.props.children);
        var _a;
    };
    return ControlsInOneRow;
}(external__react_["Component"]));
/* harmony default export */ var common_ControlsInOneRow = __webpack_exports__["a"] = (ControlsInOneRow_ControlsInOneRow);


/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasLayout.js + 4 modules
var CanvasLayout = __webpack_require__(9);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasZonePart.js
var CanvasZonePart = __webpack_require__(101);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasControl/CanvasControlType.js
var CanvasControlType = __webpack_require__(8);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasFullWidthSection.js
var CanvasFullWidthSection = __webpack_require__(40);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasWebPartClassification.js
var CanvasWebPartClassification = __webpack_require__(137);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/shouldExcludeFromToolbox.js
var CONNECTORS_ID = '893a257e-9c92-49bc-8a36-2f6bb058da34';
var O365_VIDEO_ID = '275c0095-a77e-4f6d-a2a0-6a7626911518';
var LINK_PREVIEW_ID = '6410b3b6-d440-4663-8744-378976dc041e';
var PLANNER_ID = '39c4c1c2-63fa-41be-8cc2-f6c0b49b253d';
var ONPREM_EXCLUDE_WEBPART_FROM_TOOLBOX = new Set([O365_VIDEO_ID, LINK_PREVIEW_ID]);
var GROUP_ONLY_PARTS = new Set([CONNECTORS_ID, PLANNER_ID]);
function shouldExcludeFromToolbox(manifest, pageContext) {
    if (false) {
        return true;
    }
    return manifest.hiddenFromToolbox || missingRequiredGroup(manifest, pageContext);
}
function missingRequiredGroup(manifest, pageContext) {
    var hasGroup = Boolean(pageContext && pageContext.site && pageContext.site.group && pageContext.site.group.id);
    return !hasGroup && GROUP_ONLY_PARTS.has(manifest.id);
}

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasStoreCommonActions.js










var CanvasStoreCommonActions_CanvasStoreCommonActions = (function () {
    function CanvasStoreCommonActions() {
    }
    CanvasStoreCommonActions.isFullWidth = function (position) {
        return CanvasFullWidthSection["a" /* default */].isFullWidth(position);
    };
    CanvasStoreCommonActions.addControlToCanvas = function (canvasFields, control, shouldRender) {
        if (!control.id) {
            control.id = sp_core_library_["Guid"].newGuid().toString();
        }
        var isWebpartZone = control.controlType === CanvasControlType["a" /* default */].WebPartZone;
        if (isWebpartZone) {
            canvasFields.webPartsCount++;
            var webPartData = control.webPartData;
            if (webPartData && CanvasWebPartClassification["a" /* EUPL_APPROVED_WEB_PARTS */].has(webPartData.id)) {
                canvasFields.euplApprovedWebpartCount++;
            }
        }
        if (isWebpartZone && control.addedFromPersistedData) {
            var webPartProps = control;
            webPartProps.webPartManifest = CanvasStoreCommonActions.getManifestMap(canvasFields).get(webPartProps.webPartId);
        }
        if (CanvasStoreCommonActions.isFullWidth(control.position) && CanvasFullWidthSection["a" /* default */].isFullWidthControl(control)) {
            if (canvasFields.siteSupportsFullWidth) {
                CanvasFullWidthSection["a" /* default */].setFullWidthWebPartProperty(control, true);
            }
            else {
                var sectionFactor = CanvasZonePart["a" /* default */].columnDefinitionMap.get(CanvasControlType["a" /* default */].OneColumn).factor[0];
                var newPosition = CanvasLayout["a" /* default */].cloneMerge(control.position, {
                    sectionFactor: sectionFactor
                });
                control.position = newPosition;
                CanvasFullWidthSection["a" /* default */].setFullWidthWebPartProperty(control, false);
            }
        }
        var isCanvasVerticalSectionFlightEnabled = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled();
        var layoutIndex = control.position.layoutIndex;
        if (isCanvasVerticalSectionFlightEnabled ||
            (!isCanvasVerticalSectionFlightEnabled && (!layoutIndex || layoutIndex === CanvasLayout["a" /* default */].firstLayoutIndex))) {
            canvasFields.getLayout(layoutIndex).addControl(control);
        }
        if (shouldRender) {
            canvasFields.render();
            CanvasStoreCommonActions.notifyChanged(canvasFields);
        }
    };
    CanvasStoreCommonActions.createQosScope = function (scope) {
        return new sp_telemetry_["_QosMonitor"]("Canvas" + scope);
    };
    CanvasStoreCommonActions.getControlComponentById = function (canvasFields, id, position) {
        if (position) {
            return canvasFields.getLayout(position && position.layoutIndex).fetchControlComponentById(id);
        }
        else {
            return canvasFields.canvasLayout.fetchControlComponentById(id);
        }
    };
    CanvasStoreCommonActions.notifyChanged = function (canvasFields) {
        if (canvasFields.handleCanvasChanged) {
            canvasFields.handleCanvasChanged();
        }
    };
    CanvasStoreCommonActions.handleMonitoredException = function (qos, err, props) {
        var extraData; 
        if (props && props.controlType === CanvasControlType["a" /* default */].WebPartZone) {
            extraData = { id: props.webPartId };
        }
        qos.writeUnexpectedFailure('Exception', err, extraData);
    };
    CanvasStoreCommonActions.getManifestMap = function (canvasFields) {
        var tempMap = new Map();
        var manifests = canvasFields.webpartManager.getWebPartManifests();
        for (var _i = 0, manifests_1 = manifests; _i < manifests_1.length; _i++) {
            var manifest = manifests_1[_i];
            tempMap.set(manifest.id, manifest);
        }
        return tempMap;
    };
    CanvasStoreCommonActions.fillToolboxItems = function (canvasFields, isFullWidth, newToolboxProps) {
        var qos = CanvasStoreCommonActions.createQosScope('LoadWebPartsInToolbox');
        var toolboxProps = newToolboxProps || canvasFields.toolboxProps;
        try {
            toolboxProps.toolboxItems = [];
            CanvasStoreCommonActions.getManifestMap(canvasFields).forEach(
            function (manifest, cid) {
                if (shouldExcludeFromToolbox(manifest, canvasFields.pageContext)) {
                    return;
                }
                var i = 0;
                for (var _i = 0, _a = manifest.preconfiguredEntries; _i < _a.length; _i++) {
                    var entry = _a[_i];
                    var itemProps = {
                        controlType: CanvasControlType["a" /* default */].WebPartZone,
                        displayMode: sp_core_library_["DisplayMode"].Edit,
                        id: undefined,
                        position: CanvasLayout["a" /* default */].undefinedControlPosition,
                        webPartId: cid,
                        webPartData: CanvasStoreCommonActions._extractWebPartData(manifest, entry),
                        webPartManifest: manifest
                    };
                    var iconUrl = entry.iconImageUrl;
                    if (iconUrl && (KillSwitches["a" /* default */].isBase64IconUrlsKillSwitchActivated() || !sp_core_library_["UrlUtilities"].isDataUrl(iconUrl))) {
                        iconUrl = sp_core_library_["UrlUtilities"].resolve(iconUrl, manifest.loaderConfig.internalModuleBaseUrls[0]);
                    }
                    var toolboxItem = {
                        itemProps: itemProps,
                        description: entry.description.default,
                        displayName: entry.title.default,
                        msIconName: entry.officeFabricIconFontName,
                        imageSrc: iconUrl,
                        key: manifest.id + "_" + i++,
                        groupId: entry.groupId
                    };
                    if ((isFullWidth && CanvasFullWidthSection["a" /* default */].isFullWidthControl(itemProps)) || !isFullWidth) {
                        toolboxProps.toolboxItems.push(toolboxItem);
                    }
                }
            });
            toolboxProps.isLoading = false;
            qos.writeSuccess();
        }
        catch (err) {
            CanvasStoreCommonActions.handleMonitoredException(qos, err);
        }
        if (toolboxProps.isOpen) {
            canvasFields.render();
        }
    };
    CanvasStoreCommonActions._extractWebPartData = function (manifest, entry) {
        var webPartData = {
            id: manifest.id,
            instanceId: undefined,
            title: entry.title.default,
            description: entry.description.default,
            dataVersion: entry.dataVersion,
            properties: entry.properties
        };
        return webPartData;
    };
    return CanvasStoreCommonActions;
}());
/* harmony default export */ var canvasComponent_CanvasStoreCommonActions = __webpack_exports__["a"] = (CanvasStoreCommonActions_CanvasStoreCommonActions);


/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EUPL_APPROVED_WEB_PARTS; });
/* unused harmony export EUPL_CANDIDATE_WEB_PARTS */
var EUPL_APPROVED_WEB_PARTS = new Set([
    '20745d7d-8581-4a6c-bf26-68279bc123fc',
    'd1d91016-032f-456d-98a4-721247c305e8',
    'af8be689-990e-492a-81f7-ba3e4cd3ed9c',
    'c4bd7b2f-7b6e-4599-8485-16504575f590',
    '8c88f208-6c77-4bdb-86a0-0c47b4316588',
    'a5df8fdf-b508-4b66-98a6-d83bc2597f63',
    '0ef418ba-5d19-4ade-9db0-b339873291d0',
    '7f718435-ee4d-431c-bdbf-9c4ff326f46e',
    'c70391ea-0b10-4ee9-b2b4-006d3fcad0cd' 
]);
var EUPL_CANDIDATE_WEB_PARTS = new Set([
    'eb95c819-ab8f-4689-bd03-0c2d65d47b1f',
    'daf0b71c-6de8-4ef7-b511-faae7c388708',
    '6676088b-e28e-4a90-b9cb-d0d0303cd2eb' 
]);


/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxAnimation/index.js + 2 modules
var toolboxAnimation = __webpack_require__(43);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxCallout/index.js + 2 modules
var toolboxCallout = __webpack_require__(121);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxLoading/ToolboxLoading.module.scss.js
__webpack_require__(236);
var styles = {
    spinner: 'spinner_3ecc4404',
};
/* harmony default export */ var ToolboxLoading_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxLoading/ToolboxLoading.js




function ToolboxLoading(props) {
    return (external__react_["createElement"](toolboxCallout["a" /* ToolboxCallout */], { className: props.className, onDismiss: props.controller.closeToolbox, horizontalPosition: props.horizontalPosition, verticalPosition: props.verticalPosition, scrollableParent: props.scrollableParent, canvasElement: props.canvasElement },
        external__react_["createElement"](office_ui_fabric_react_bundle_["Spinner"], { type: office_ui_fabric_react_bundle_["SpinnerType"].large, className: ToolboxLoading_module_scss.spinner })));
}

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxLoading/ToolboxLoadingAnimationLayer.js


var ToolboxLoadingAnimationLayer = Object(toolboxAnimation["a" /* animation */])(ToolboxLoading, 1 );

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxLoading/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return ToolboxLoadingAnimationLayer; });



/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(18);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-a11y/lib/index.js + 7 modules
var lib = __webpack_require__(14);

// EXTERNAL MODULE: external "@microsoft/sp-application-base"
var sp_application_base_ = __webpack_require__(140);
var sp_application_base__default = /*#__PURE__*/__webpack_require__.n(sp_application_base_);

// EXTERNAL MODULE: external "@microsoft/sp-loader"
var sp_loader_ = __webpack_require__(51);
var sp_loader__default = /*#__PURE__*/__webpack_require__.n(sp_loader_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// CONCATENATED MODULE: ./lib/components/error/ErrorDialog.resx.js
var key = '_FQya7ZjwIyrOEutOa+omIA';
var allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var strings = allStrings[key];
/* harmony default export */ var ErrorDialog_resx = (strings);

// CONCATENATED MODULE: ./lib/components/error/ErrorDialog.js




var ErrorDialog_ErrorDialog = (function (_super) {
    tslib_es6["__extends"](ErrorDialog, _super);
    function ErrorDialog(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            showDialog: false
        };
        return _this;
    }
    ErrorDialog.prototype.render = function () {
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["Dialog"], { isOpen: this.state.showDialog, type: office_ui_fabric_react_bundle_["DialogType"].largeHeader, title: ErrorDialog_resx.Title, subText: ErrorDialog_resx.SubText, isBlocking: false },
            external__react_["createElement"]("span", null, ErrorDialog_resx.ClickHerePrefix),
            external__react_["createElement"](office_ui_fabric_react_bundle_["Link"], tslib_es6["__assign"]({}, {
                href: 'https://dev.office.com/sharepoint/docs/spfx/web-parts/get-started/build-a-hello-world-web-part'
            } ), ErrorDialog_resx.ClickHereLink),
            external__react_["createElement"]("span", null, ErrorDialog_resx.ClickHereSuffix),
            external__react_["createElement"](office_ui_fabric_react_bundle_["DialogFooter"], null,
                external__react_["createElement"](office_ui_fabric_react_bundle_["PrimaryButton"], { onClick: this._close, "data-automation-id": 'GulpServeWarningOkButton', text: ErrorDialog_resx.OkButtonText }))));
    };
    ErrorDialog.prototype.open = function () {
        this.setState({ showDialog: true });
    };
    ErrorDialog.prototype._close = function () {
        this.setState({ showDialog: false });
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ErrorDialog.prototype, "open", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ErrorDialog.prototype, "_close", null);
    return ErrorDialog;
}(external__react_["Component"]));
/* harmony default export */ var error_ErrorDialog = (ErrorDialog_ErrorDialog);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/prop-types/15.5.7/node_modules/prop-types/index.js
var prop_types = __webpack_require__(11);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// CONCATENATED MODULE: ./lib/components/workbenchCommandBar/WorkbenchCommandBar.resx.js
var WorkbenchCommandBar_resx_key = '_nCtJlVOXBHa59LgYtajnjA';
var WorkbenchCommandBar_resx_allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var WorkbenchCommandBar_resx_strings = WorkbenchCommandBar_resx_allStrings[WorkbenchCommandBar_resx_key];
/* harmony default export */ var WorkbenchCommandBar_resx = (WorkbenchCommandBar_resx_strings);

// CONCATENATED MODULE: ./lib/components/workbenchCommandBar/WorkbenchCommandBar.js




var WorkbenchCommandBar_WorkbenchCommandBar = (function (_super) {
    tslib_es6["__extends"](WorkbenchCommandBar, _super);
    function WorkbenchCommandBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WorkbenchCommandBar.prototype.render = function () {
        var items = this.props.isEditing ? [
            {
                key: 'save',
                name: WorkbenchCommandBar_resx.Save,
                icon: 'Save',
                ariaLabel: WorkbenchCommandBar_resx.Save,
                title: WorkbenchCommandBar_resx.SaveAltText,
                onClick: this.props.savePage,
                'data-automation-id': 'workbench-command-bar-save'
            },
            {
                key: 'discard',
                name: WorkbenchCommandBar_resx.Discard,
                icon: 'RevToggleKey',
                ariaLabel: WorkbenchCommandBar_resx.Discard,
                title: WorkbenchCommandBar_resx.DiscardAltText,
                onClick: this.props.clearPage,
                'data-automation-id': 'workbench-command-bar-discard'
            },
            {
                key: 'wpData',
                name: WorkbenchCommandBar_resx.WebPartData,
                icon: 'TriangleUp12',
                ariaLabel: WorkbenchCommandBar_resx.WebPartData,
                title: WorkbenchCommandBar_resx.WebPartDataAltText,
                onClick: this.props.onClickSerializeCanvasView,
                'data-automation-id': 'workbench-command-bar-serialize'
            }
        ] : [];
        var farItems = this.props.isEditing ? [
            {
                key: 'mobilePreview',
                name: WorkbenchCommandBar_resx.Mobile,
                icon: 'CellPhone',
                ariaLabel: WorkbenchCommandBar_resx.Mobile,
                title: WorkbenchCommandBar_resx.MobleAltText,
                onClick: this.props.onClickMobileView,
                'data-automation-id': 'workbench-command-bar-mobile-cellphone'
            },
            {
                key: 'tabletPreview',
                name: WorkbenchCommandBar_resx.Tablet,
                icon: 'Tablet',
                ariaLabel: WorkbenchCommandBar_resx.Tablet,
                title: WorkbenchCommandBar_resx.TabletAltText,
                onClick: this.props.onClickTabletView,
                'data-automation-id': 'workbench-command-bar-mobile-tablet'
            },
            {
                key: 'preview',
                name: WorkbenchCommandBar_resx.Preview,
                icon: 'View',
                ariaLabel: WorkbenchCommandBar_resx.Preview,
                title: WorkbenchCommandBar_resx.PreviewAltText,
                onClick: this.props.toggleEdit,
                'data-automation-id': 'workbench-command-bar-preview',
                'data-sp-a11y-id': 'previewButton'
            }
        ] : [
            {
                key: 'edit',
                name: WorkbenchCommandBar_resx.Edit,
                icon: 'Edit',
                ariaLabel: WorkbenchCommandBar_resx.Edit,
                title: WorkbenchCommandBar_resx.EditAltText,
                onClick: this.props.toggleEdit,
                'data-automation-id': 'workbench-command-bar-edit',
                'data-sp-a11y-id': 'editButton'
            }
        ];
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["CommandBar"], { "aria-live": 'polite', isSearchBoxVisible: false, items: items, farItems: farItems, role: 'toolbar' }));
    };
    return WorkbenchCommandBar;
}(external__react_["Component"]));
/* harmony default export */ var workbenchCommandBar_WorkbenchCommandBar = (WorkbenchCommandBar_WorkbenchCommandBar);

// EXTERNAL MODULE: external "@microsoft/sp-webpart-base"
var sp_webpart_base_ = __webpack_require__(23);
var sp_webpart_base__default = /*#__PURE__*/__webpack_require__.n(sp_webpart_base_);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/AtMention/DeferredAtMention.js


var DeferredAtMention_DeferredAtMention = (function (_super) {
    tslib_es6["__extends"](DeferredAtMention, _super);
    function DeferredAtMention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeferredAtMention.prototype._internalLoad = function () {
        return __webpack_require__.e/* import() */(0).then(__webpack_require__.bind(null, 500)).then(function (atMentionControl) { return atMentionControl.default; });
    };
    return DeferredAtMention;
}(sp_webpart_base_["_DeferredComponent"]));
/* harmony default export */ var AtMention_DeferredAtMention = (DeferredAtMention_DeferredAtMention);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@microsoft/sp-page-context"
var sp_page_context_ = __webpack_require__(64);
var sp_page_context__default = /*#__PURE__*/__webpack_require__.n(sp_page_context_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@ms/odsp-utilities-bundle/4.2.4/node_modules/@ms/odsp-utilities-bundle/lib/index.js
var odsp_utilities_bundle_lib = __webpack_require__(15);
var lib_default = /*#__PURE__*/__webpack_require__.n(odsp_utilities_bundle_lib);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(12);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-dragzone/lib/css/DragZone.module.scss.js
var DragZone_module_scss = __webpack_require__(118);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-dragzone/lib/DragZone.js




var DragZone_DragZone = (function (_super) {
    tslib_es6["__extends"](DragZone, _super);
    function DragZone(props) {
        var _this = _super.call(this, props) || this;
        var icon = _this.props.icon;
        if (icon) {
            icon.classList.add(DragZone_module_scss["a" /* default */].iconCollapsed);
            icon.classList.add(DragZone_module_scss["a" /* default */].iconAdditionalStyle);
        }
        if (_this.props.isEnabled) {
            _this._ensureDragZoneControl();
        }
        return _this;
    }
    DragZone.prototype.componentDidMount = function () {
        var _this = this;
        this._dragZoneControlOptions =
            sp_lodash_subset_["extend"]({ host: this._container }, this.props);
        if (this.props.isEnabled) {
            this._ensureDragZoneControl().then(function () {
                _this._dragZoneControl.activate();
            });
        }
    };
    DragZone.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (this.props.supportHorizontalReorder !== prevProps.supportHorizontalReorder) {
            this._dragZoneControlOptions.supportHorizontalReorder = this.props.supportHorizontalReorder;
        }
        if (this.props.isEnabled !== prevProps.isEnabled) {
            this._ensureDragZoneControl().then(function () {
                if (_this.props.isEnabled) {
                    _this._dragZoneControl.activate();
                }
                else {
                    _this._dragZoneControl.deactivate();
                }
            });
        }
        else if (this.props.isEnabled) {
            this._ensureDragZoneControl().then(function () {
                _this._dragZoneControl.refreshHandles();
            });
        }
    };
    DragZone.prototype.render = function () {
        var _this = this;
        return (external__react_["createElement"]("div", { ref: function (div1) { return _this._container = div1; }, className: this.props.className }, this.props.children));
    };
    DragZone.prototype._ensureDragZoneControl = function () {
        var _this = this;
        if (!this._dragZoneControlPromise) {
            this._dragZoneControlPromise = __webpack_require__.e/* import() */(3).then(__webpack_require__.bind(null, 501))
                .then(function (dragZoneControl) {
                _this._dragZoneControl = new dragZoneControl.DragZoneControl(_this._dragZoneControlOptions);
            });
        }
        return this._dragZoneControlPromise;
    };
    DragZone.defaultProps = {
        treeLevelTagsBottomUp: [],
        isEnabled: false,
        dropPositionOffsetTopPx: 0,
        dropPositionOffsetBottomPx: 0,
        dropPositionOffsetLeftPx: 0,
        dropPositionOffsetRightPx: 0,
        supportKeyboardAlternative: true
    };
    return DragZone;
}(external__react_["PureComponent"]));


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-dragzone/lib/index.js


// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasLayout/CanvasLayout.js + 4 modules
var CanvasLayout = __webpack_require__(9);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasControl/CanvasControlType.js
var CanvasControlType = __webpack_require__(8);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasDragZone/CanvasDragZone.module.scss.js
__webpack_require__(246);
var styles = {
    dragIconContainer: 'dragIconContainer_d2e458a7',
    dragIcon: 'dragIcon_d2e458a7',
    dragText: 'dragText_d2e458a7',
    singleColumn: 'singleColumn_d2e458a7',
    doubleColumn: 'doubleColumn_d2e458a7',
    tripleColumn: 'tripleColumn_d2e458a7',
    columnLeftTwoThirds: 'columnLeftTwoThirds_d2e458a7',
    columnRightTwoThirds: 'columnRightTwoThirds_d2e458a7',
    disabledArea: 'disabledArea_d2e458a7',
};
/* harmony default export */ var CanvasDragZone_module_scss = (styles);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/loc/CanvasStrings.resx.js
var CanvasStrings_resx = __webpack_require__(10);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasDragZone/CanvasDragIcon.js




var CanvasDragIcon_CanvasDragIcon = (function () {
    function CanvasDragIcon() {
        this._icon = this._getDefaultIcon();
    }
    CanvasDragIcon._extractLabelFromRTE = function (control) {
        var domParser = new DOMParser();
        var docToParse = domParser.parseFromString(control.innerHTML || '', 'text/html');
        var element = docToParse.firstElementChild && docToParse.firstElementChild;
        return (element && element.innerText) || CanvasStrings_resx["a" /* default */].DragIconFallbackRTEText;
    };
    Object.defineProperty(CanvasDragIcon.prototype, "HTMLIcon", {
        get: function () {
            return this._icon;
        },
        enumerable: true,
        configurable: true
    });
    CanvasDragIcon.prototype.setMoveIconBasedOnControl = function (control) {
        if (!control) {
            return;
        }
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        if (control.controlType === CanvasControlType["a" /* default */].RTE) {
            iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('Font');
            textControl.innerText = CanvasDragIcon._extractLabelFromRTE(control);
        }
        else if (control.controlType === CanvasControlType["a" /* default */].WebPartZone) {
            var webPart = control;
            if (webPart &&
                webPart.webPartManifest &&
                webPart.webPartManifest.preconfiguredEntries &&
                webPart.webPartManifest.preconfiguredEntries.length > 0) {
                var entry = webPart.webPartManifest.preconfiguredEntries[0]; 
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])(entry.officeFabricIconFontName);
            }
            textControl.innerText = webPart && webPart.webPartData && webPart.webPartData.title;
        }
        this._className = iconControl.className;
        this._innerText = textControl.innerText || textControl.innerHTML;
    };
    CanvasDragIcon.prototype.setMoveIconBasedOnZone = function (zone) {
        if (!zone) {
            return;
        }
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        if (!iconControl || !textControl) {
            return;
        }
        iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('Edit');
        var text;
        switch (zone.layoutType) {
            case CanvasControlType["a" /* default */].FullWidth:
                text = CanvasStrings_resx["a" /* default */].ToolboxFullWidthColumnPart;
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('FullWidth');
                break;
            case CanvasControlType["a" /* default */].OneColumn:
                text = CanvasStrings_resx["a" /* default */].ToolboxOneColumnPart;
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('SingleColumn');
                break;
            case CanvasControlType["a" /* default */].OneThirdColumnLeft:
                text = CanvasStrings_resx["a" /* default */].ToolboxOneThirdLeftColumnPart;
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('ColumnRightTwoThirds');
                break;
            case CanvasControlType["a" /* default */].OneThirdColumnRight:
                text = CanvasStrings_resx["a" /* default */].ToolboxOneThirdRightColumnPart;
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('ColumnLeftTwoThirds');
                break;
            case CanvasControlType["a" /* default */].ThreeColumns:
                text = CanvasStrings_resx["a" /* default */].ToolboxThreeColumnPart;
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('TripleColumn');
                break;
            case CanvasControlType["a" /* default */].TwoColumns:
                text = CanvasStrings_resx["a" /* default */].ToolboxTwoColumnPart;
                iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('DoubleColumn');
                break;
            default:
                if (true) {
                    throw new Error('A new layout has been added, need to add drag icon string');
                }
        }
        textControl.innerText = text;
        this._className = iconControl.className;
        this._innerText = text;
    };
    CanvasDragIcon.prototype.setDisallowedIcon = function () {
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        iconControl.className = Object(office_ui_fabric_react_bundle_["getIconClassName"])('StatusErrorFull');
        textControl.innerText = CanvasStrings_resx["a" /* default */].DragZoneMoveNotAllowed;
    };
    CanvasDragIcon.prototype.setToPreviousState = function () {
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        iconControl.className = this._className;
        textControl.innerText = this._innerText;
    };
    CanvasDragIcon.prototype._getDefaultIcon = function () {
        var dragIcon = document.createElement('div');
        dragIcon.className = CanvasDragZone_module_scss.dragIconContainer;
        var iconContainer = document.createElement('div');
        iconContainer.className = CanvasDragZone_module_scss.dragIcon;
        var iconElement = document.createElement('i');
        iconElement.setAttribute(CanvasDragIcon.DATA_INTERNAL_ID, CanvasDragIcon.ICON_INTERNAL_ID);
        iconContainer.appendChild(iconElement);
        var textContainer = document.createElement('div');
        textContainer.className = CanvasDragZone_module_scss.dragText;
        textContainer.classList.add('ms-fontSize-m');
        textContainer.setAttribute(CanvasDragIcon.DATA_INTERNAL_ID, CanvasDragIcon.TEXT_INTERNAL_ID);
        dragIcon.appendChild(iconContainer);
        dragIcon.appendChild(textContainer);
        document.body.appendChild(dragIcon);
        return dragIcon;
    };
    CanvasDragIcon.prototype._getTagByInternalId = function (internalId) {
        return this._icon.querySelector("[" + CanvasDragIcon.DATA_INTERNAL_ID + "='" + internalId + "']");
    };
    CanvasDragIcon.ICON_INTERNAL_ID = 'iconControl';
    CanvasDragIcon.TEXT_INTERNAL_ID = 'textControl';
    CanvasDragIcon.DATA_INTERNAL_ID = 'data-internal-id';
    return CanvasDragIcon;
}());
/* harmony default export */ var canvasDragZone_CanvasDragIcon = (CanvasDragIcon_CanvasDragIcon);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasDragZone/CanvasDragZoneConstants.js
var CanvasDragZoneConstants = __webpack_require__(26);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/KillSwitches.js
var KillSwitches = __webpack_require__(17);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/Flights.js
var Flights = __webpack_require__(6);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasDragZone/CanvasDragZone.js












var CanvasDragZone_CanvasDragZone = (function (_super) {
    tslib_es6["__extends"](CanvasDragZone, _super);
    function CanvasDragZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._dragIcon = new canvasDragZone_CanvasDragIcon();
        return _this;
    }
    CanvasDragZone._getZoneFromDragZonePosition = function (position, layout) {
        var zoneIndex = position[2];
        var zone = layout.zones && layout.zones.length > zoneIndex && layout.zones[zoneIndex];
        if (!zone) {
            throw new Error("ZoneNotFound, zoneIndex: " + zoneIndex);
        }
        return zone;
    };
    CanvasDragZone._getSectionFromDragZonePosition = function (position, zone) {
        var sectionIndex = position[1];
        var section = zone.sections && zone.sections.length > sectionIndex && zone.sections[sectionIndex];
        if (!section) {
            throw new Error('SectionNotFound, sectionIndex: ${sectionIndex}');
        }
        return section;
    };
    CanvasDragZone._droppedOnTheSamePosition = function (oldPosition, newPosition) {
        var oldControlIndex = oldPosition[0], oldSectionIndex = oldPosition[1], oldZoneIndex = oldPosition[2];
        var newControlIndex = newPosition[0], newSectionIndex = newPosition[1], newZoneIndex = newPosition[2];
        return (oldZoneIndex === newZoneIndex &&
            oldSectionIndex === newSectionIndex &&
            (oldControlIndex === newControlIndex - 1 || oldControlIndex === newControlIndex));
    };
    CanvasDragZone._isValidWebpartPosition = function (position) {
        return position && position.length === 3;
    };
    CanvasDragZone._isValidZonePosition = function (position) {
        return position && position.length === 1;
    };
    CanvasDragZone.prototype.render = function () {
        var dragZoneStrings = {
            handleTitle: KillSwitches["a" /* default */].isFixForTooltipKilllSwitchActive() ? CanvasStrings_resx["a" /* default */].DragZoneHandleTitle : '',
            moveStarted: CanvasStrings_resx["a" /* default */].DragZoneMoveStarted,
            moveComplete: CanvasStrings_resx["a" /* default */].DragZoneMoveComplete,
            moveCancelled: CanvasStrings_resx["a" /* default */].DragZoneMoveCancelled,
            moveNotAllowed: CanvasStrings_resx["a" /* default */].DragZoneMoveNotAllowedAriaLabel,
            moveInsideLevel: [
                CanvasStrings_resx["a" /* default */].DragZoneMoveInsideLevelControl,
                CanvasStrings_resx["a" /* default */].DragZoneMoveInsideLevelSection,
                CanvasStrings_resx["a" /* default */].DragZoneMoveInsideLevelZone
            ]
        };
        var sectionDragZoneStrings = {
            handleTitle: KillSwitches["a" /* default */].isFixForTooltipKilllSwitchActive() ? CanvasStrings_resx["a" /* default */].DragZoneHandleTitle : '',
            moveStarted: CanvasStrings_resx["a" /* default */].DragZoneMoveStarted,
            moveComplete: CanvasStrings_resx["a" /* default */].DragZoneMoveCompleteZone,
            moveCancelled: CanvasStrings_resx["a" /* default */].DragZoneMoveCancelled,
            moveNotAllowed: CanvasStrings_resx["a" /* default */].DragZoneMoveNotAllowedAriaLabel,
            moveInsideLevel: [CanvasStrings_resx["a" /* default */].DragZoneMoveInsideLevelControl]
        };
        var dragZoneProps = {
            treeLevelTagsBottomUp: [
                CanvasDragZoneConstants["a" /* default */].controlZoneDragTag,
                CanvasDragZoneConstants["a" /* default */].sectionDragTag,
                CanvasDragZoneConstants["a" /* default */].zoneDragTag
            ],
            dropPositionOffsetBottomPx: CanvasDragZoneConstants["a" /* default */].LINE_OFFSET_BOTTOM,
            dropPositionOffsetTopPx: CanvasDragZoneConstants["a" /* default */].LINE_OFFSET_TOP,
            onMoved: this._onWebpartMoved,
            onMoveStart: this._onWebpartMoveStart,
            canDropOnEmptyParent: true,
            dragHandleTag: CanvasDragZoneConstants["a" /* default */].webpartDragHandleTag,
            isEnabled: this.props.isEnabled,
            icon: this._dragIcon.HTMLIcon,
            dragZoneStrings: dragZoneStrings,
            disallowedTag: CanvasDragZoneConstants["a" /* default */].fullWidthSectionTag,
            disallowedClassName: CanvasDragZone_module_scss.disabledArea,
            scrollIntoView: this.props.store.scrollIntoView,
            onMoving: this._onWebpartMoving
        };
        var sectionDragZoneProps = {
            treeLevelTagsBottomUp: [CanvasDragZoneConstants["a" /* default */].zoneDragTag],
            dropPositionOffsetBottomPx: CanvasDragZoneConstants["a" /* default */].LINE_OFFSET_BOTTOM,
            dropPositionOffsetTopPx: CanvasDragZoneConstants["a" /* default */].LINE_OFFSET_TOP,
            onMoved: this._onZoneMoved,
            onMoveStart: this._onZoneMoveStart,
            canDropOnEmptyParent: false,
            dragHandleTag: CanvasDragZoneConstants["a" /* default */].zoneDragHandleTag,
            isEnabled: this.props.isEnabled,
            icon: this._dragIcon.HTMLIcon,
            dragZoneStrings: sectionDragZoneStrings,
            scrollIntoView: this.props.store.scrollIntoView,
            className: this.props.className
        };
        return (external__react_["createElement"](DragZone_DragZone, tslib_es6["__assign"]({}, sectionDragZoneProps),
            external__react_["createElement"](DragZone_DragZone, tslib_es6["__assign"]({}, dragZoneProps), this.props.children)));
    };
    CanvasDragZone.prototype._onWebpartMoveStart = function (position) {
        if (!CanvasDragZone._isValidWebpartPosition(position)) {
            return;
        }
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            var layoutIndex = this.props.store.selectedLayoutIndex;
            this._fixPositionForVerticalSection(position, layoutIndex);
            this._previouslySelectedLayoutIndex = layoutIndex;
        }
        var control = this._getControlFromDragZonePosition(position);
        this._dragIcon.setMoveIconBasedOnControl(control);
    };
    CanvasDragZone.prototype._onWebpartMoving = function (disallowed) {
        if (disallowed) {
            this._dragIcon.setDisallowedIcon();
        }
        else {
            this._dragIcon.setToPreviousState();
        }
    };
    CanvasDragZone.prototype._fixPositionForVerticalSection = function (position, selectedLayoutIndex) {
        if (selectedLayoutIndex === CanvasLayout["a" /* default */].verticalLayoutIndex) {
            position[2] = 0;
        }
    };
    CanvasDragZone.prototype._onZoneMoveStart = function (position) {
        if (!CanvasDragZone._isValidZonePosition(position)) {
            return;
        }
        var layout = this.props.store.canvasLayout;
        var zones = layout.zones;
        var oldZone = zones[position[0]];
        this._dragIcon.setMoveIconBasedOnZone(oldZone);
    };
    CanvasDragZone.prototype._onZoneMoved = function (oldPosition, newPosition) {
        if (oldPosition === newPosition ||
            !CanvasDragZone._isValidZonePosition(oldPosition) ||
            !CanvasDragZone._isValidZonePosition(newPosition) ||
            oldPosition[0] === newPosition[0] - 1 ||
            oldPosition[0] === newPosition[0]) {
            return;
        }
        var moveMonitor = new sp_telemetry_["_QosMonitor"]('CanvasZoneMove');
        var layout = this.props.store.canvasLayout;
        var zones = layout.zones;
        try {
            var oldIndex = oldPosition[0];
            var newIndex = newPosition[0];
            var oldZone = zones[oldIndex];
            var newZoneIndex = 0;
            if (newIndex < zones.length) {
                newZoneIndex = zones[newIndex].index;
            }
            else {
                newZoneIndex = zones[zones.length - 1].index + 1;
            }
            layout.moveZone(oldZone, newZoneIndex);
            moveMonitor.writeSuccess();
        }
        catch (err) {
            moveMonitor.writeUnexpectedFailure('ExceptionMovingZone', err);
        }
    };
    CanvasDragZone.prototype._onWebpartMoved = function (oldPosition, newPosition) {
        if ((oldPosition === newPosition && this._isSameLayout()) ||
            !CanvasDragZone._isValidWebpartPosition(oldPosition) ||
            !CanvasDragZone._isValidWebpartPosition(newPosition) ||
            (CanvasDragZone._droppedOnTheSamePosition(oldPosition, newPosition) && this._isSameLayout())) {
            return;
        }
        var moveMonitor = new sp_telemetry_["_QosMonitor"]('CanvasControlMove');
        try {
            if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
                this._fixPositionForVerticalSection(newPosition, this.props.store.selectedLayoutIndex);
                this._fixPositionForVerticalSection(oldPosition, this._previouslySelectedLayoutIndex);
            }
            var oldControl = this._getControlFromDragZonePosition(oldPosition, true);
            var newCanvasPosition = this._getNewPositionFromDragZonePosition(newPosition);
            if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
                oldControl.position = CanvasLayout["a" /* default */].cloneMerge(oldControl.position, {
                    layoutIndex: this._previouslySelectedLayoutIndex
                });
            }
            this.props.store.moveControl(oldControl, newCanvasPosition);
            moveMonitor.writeSuccess();
        }
        catch (err) {
            moveMonitor.writeUnexpectedFailure('ExceptionMovingControl', err);
        }
    };
    CanvasDragZone.prototype._isSameLayout = function () {
        return (!Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() ||
            this.props.store.selectedLayoutIndex === this._previouslySelectedLayoutIndex);
    };
    CanvasDragZone.prototype._getControlFromDragZonePosition = function (position, isWebPartMoved) {
        var layout = this.props.store.canvasLayout;
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() && isWebPartMoved) {
            layout = this.props.store.canvasLayouts.get(this._previouslySelectedLayoutIndex);
        }
        var zone = CanvasDragZone._getZoneFromDragZonePosition(position, layout);
        var section = CanvasDragZone._getSectionFromDragZonePosition(position, zone);
        var ctrlIdx = position[0];
        var control = section.controls && section.controls.length > ctrlIdx && section.controls[ctrlIdx];
        if (!control) {
            throw new Error('ControlNotFound, controlIndex: ${ctrlIdx}');
        }
        return control;
    };
    CanvasDragZone.prototype._getNewPositionFromDragZonePosition = function (position) {
        var zone = CanvasDragZone._getZoneFromDragZonePosition(position, this.props.store.canvasLayout);
        var section = zone && CanvasDragZone._getSectionFromDragZonePosition(position, zone);
        var controlIndex = position[0];
        if (section.controls.length === 0) {
            controlIndex = 1;
        }
        else if (controlIndex === section.controls.length) {
            controlIndex = section.controls[section.controls.length - 1].position.controlIndex + 1;
        }
        else {
            controlIndex = section.controls[controlIndex].position.controlIndex;
        }
        var newCanvasPosition = {
            controlIndex: controlIndex,
            sectionIndex: section.index,
            sectionFactor: section.factor,
            zoneIndex: zone.index,
            layoutIndex: this.props.store.selectedLayoutIndex
        };
        return newCanvasPosition;
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasDragZone.prototype, "_onWebpartMoveStart", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasDragZone.prototype, "_onWebpartMoving", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasDragZone.prototype, "_onZoneMoveStart", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasDragZone.prototype, "_onZoneMoved", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasDragZone.prototype, "_onWebpartMoved", null);
    return CanvasDragZone;
}(external__react_["Component"]));
/* harmony default export */ var canvasDragZone_CanvasDragZone = (CanvasDragZone_CanvasDragZone);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasToolboxHint/CanvasToolboxHint.js + 1 modules
var CanvasToolboxHint = __webpack_require__(107);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasSection.js + 6 modules
var CanvasSection = __webpack_require__(103);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasSection/CanvasFullWidthSection.js
var CanvasFullWidthSection = __webpack_require__(40);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbar/Toolbar.js
var Toolbar = __webpack_require__(110);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasZone/CanvasZone.scss.js
var CanvasZone_scss = __webpack_require__(248);
var CanvasZone_scss_default = /*#__PURE__*/__webpack_require__.n(CanvasZone_scss);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/a11y/CanvasA11yConstants.js
var CanvasA11yConstants = __webpack_require__(50);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/CanvasEmphasis/CanvasEmphasis.js
var CanvasEmphasis = __webpack_require__(100);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/CanvasEmphasis/CanvasEmphasisStyles.styles.js
var CanvasEmphasisStyles_styles = __webpack_require__(99);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/CanvasAlignmentStyles.styles.js
var CanvasAlignmentStyles_styles = __webpack_require__(108);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasZone/CanvasZone.js





















var CanvasZone_CanvasZone = (function (_super) {
    tslib_es6["__extends"](CanvasZone, _super);
    function CanvasZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.state = {
            accessibleLabel: '',
            emphasisTheme: Flights["a" /* default */].isLayoutEmphasisFlightEnabled() ? _this.props.theme : undefined,
            isToolbarFixed: false
        };
        _this._store = _this.context.store;
        _this._isTabPressed = false;
        return _this;
    }
    CanvasZone.prototype.componentDidMount = function () {
        if (this._domElement) {
            this._domElement.addEventListener('keydown', this._handleKeydownCapture, true);
            this._domElement.addEventListener('focus', this._handleZoneFocus, true);
            this._domElement.addEventListener('blur', this._handleZoneBlur, true);
            if (this.props.selectedPosition.zoneIndex === this.props.zone.index &&
                !this._isChildElement(document.activeElement)) {
                this.focus();
            }
        }
        if (Flights["a" /* default */].isLayoutEmphasisFlightEnabled() && this.props.emphasis) {
            this._updateEmphasisTheme(this.props.theme, this.props.emphasis);
        }
    };
    CanvasZone.prototype.componentDidUpdate = function (prevProps) {
        var _a = this.props, emphasis = _a.emphasis, theme = _a.theme;
        if (Flights["a" /* default */].isLayoutEmphasisFlightEnabled() &&
            (prevProps.emphasis !== emphasis || !Object(sp_lodash_subset_["isEqual"])(prevProps.theme, theme))) {
            this._updateEmphasisTheme(theme, emphasis);
        }
    };
    CanvasZone.prototype.componentWillUnmount = function () {
        if (this._domElement) {
            this._domElement.removeEventListener('keydown', this._handleKeydownCapture, true);
            this._domElement.removeEventListener('focus', this._handleZoneFocus, true);
            this._domElement.removeEventListener('blur', this._handleZoneBlur, true);
        }
    };
    CanvasZone.prototype.focus = function () {
        if (this._domElement) {
            this._domElement.focus();
        }
    };
    CanvasZone.prototype.render = function () {
        var _this = this;
        var displayMode = this._store.displayMode;
        var _a = this.props, fullWidth = _a.fullWidth, hintLayout = _a.hintLayout, layoutIndex = _a.layoutIndex, selectedPosition = _a.selectedPosition, shouldCenterAlign = _a.shouldCenterAlign, shouldResize = _a.shouldResize, theme = _a.theme, zone = _a.zone;
        var emphasisTheme = this.state.emphasisTheme;
        var classNames;
        var isCanvasSectionBackgroundFlightEnabled = Flights["a" /* default */].isLayoutEmphasisFlightEnabled();
        if (isCanvasSectionBackgroundFlightEnabled) {
            classNames = CanvasEmphasisStyles_styles["a" /* default */].getClassNames({
                root: 'CanvasZoneContainerEmphasis',
                theme: this.state.emphasisTheme
            });
        }
        var isReadMode = displayMode === sp_core_library_["DisplayMode"].Read;
        var layoutZoneClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasZone', 'row', {
            'CanvasZone--centerAlign': shouldCenterAlign,
            'CanvasZone--edit': !isReadMode,
            'CanvasZone--noMargin': !sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('43ff3fd1-36d4-40b7-8d78-220992e25af0'), '3/7/2018', 'Horizontal scroll in iOS/mobile web browser')
        });
        if (!isReadMode && zone === undefined) {
            return (external__react_["createElement"]("div", { className: layoutZoneClassName },
                external__react_["createElement"](CanvasSection["a" /* default */], { emphasisTheme: emphasisTheme, hintLayout: hintLayout, layoutIndex: hintLayout.layoutIndex, section: undefined, selectedPosition: selectedPosition, shouldResize: shouldResize, theme: theme, zoneIndex: hintLayout.zoneIndex })));
        }
        var isZoneOnlySelected = selectedPosition.zoneIndex === zone.index && !selectedPosition.controlIndex;
        var isControlWithinZoneSelected = selectedPosition.zoneIndex === zone.index && (!!selectedPosition.controlIndex || this._store.toolboxProps.isOpen);
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            isControlWithinZoneSelected =
                isControlWithinZoneSelected && selectedPosition.layoutIndex === this.props.layoutIndex;
        }
        var isCurZoneEmpty = true;
        var sectionComponents = [];
        var sections = zone.sections;
        sections.forEach(function (curSection, curIdx) {
            if (fullWidth) {
                sectionComponents.push(external__react_["createElement"](CanvasFullWidthSection["a" /* default */], { emphasisTheme: emphasisTheme, key: curSection.index, layoutIndex: layoutIndex, section: curSection, selectedPosition: selectedPosition, theme: theme, zoneIndex: zone.index }));
            }
            else {
                sectionComponents.push(external__react_["createElement"](CanvasSection["a" /* default */], { emphasisTheme: emphasisTheme, key: curSection.index, layoutIndex: layoutIndex, section: curSection, selectedPosition: selectedPosition, shouldResize: _this.props.shouldResize, theme: theme, zoneIndex: zone.index }));
            }
            if (isCurZoneEmpty && !curSection.isEmpty()) {
                isCurZoneEmpty = false;
            }
        });
        layoutZoneClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasZone', 'row', 'CanvasZone--alignment', {
            'CanvasZone--edit': !isReadMode,
            'CanvasZone--fullWidth': fullWidth,
            'CanvasZone--fullWidth--read': fullWidth && isReadMode,
            'CanvasZone--read': isReadMode,
            'CanvasZone--selected': isZoneOnlySelected,
            'CanvasZone--controlSelected': isControlWithinZoneSelected,
            'CanvasZone--empty': isCurZoneEmpty,
            'CanvasZone--centerAlign': shouldCenterAlign,
            'CanvasZone--reflow': this.props.shouldResize,
            'CanvasZone--noMargin': !sp_core_library_["_SPKillSwitch"].isActivated(sp_core_library_["Guid"].parse('43ff3fd1-36d4-40b7-8d78-220992e25af0'), '3/7/2018', 'Horizontal scroll in iOS/mobile web browser')
        });
        var layoutZoneContainerClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasZoneContainer', 'CanvasZoneContainer--hintUpdate', (_b = {
                'CanvasZoneContainer--read': isReadMode
            },
            _b[classNames && classNames.root] = isCanvasSectionBackgroundFlightEnabled,
            _b));
        var shouldAlignToolbar = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() && this.props.layoutIndex === CanvasLayout["a" /* default */].firstLayoutIndex;
        if (shouldAlignToolbar) {
            classNames = CanvasAlignmentStyles_styles["a" /* default */].getToolbarClassNames({
                root: 'CanvasZoneToolbar',
                offset: -(this._domElement && this._domElement.parentElement.offsetLeft)
            });
        }
        var zoneContents = (external__react_["createElement"]("div", { className: layoutZoneClassName, "data-automation-id": "CanvasZone", "data-drag-tag": CanvasDragZoneConstants["a" /* default */].zoneDragTag, "data-negative-space": true, tabIndex: isReadMode ? undefined : 0, "aria-label": isReadMode ? undefined : this.state.accessibleLabel, "data-sp-a11y-id": Object(CanvasA11yConstants["b" /* getCanvasZoneA11yId */])(zone.index.toString()) },
            sectionComponents,
            external__react_["createElement"](Toolbar["a" /* default */], { ref: this._resolveRef('_toolbarElement'), className: Object(office_ui_fabric_react_bundle_["css"])('CanvasZoneToolbar', (_c = {
                        FixedToolbar: this.state.isToolbarFixed
                    },
                    _c[classNames && classNames.root] = shouldAlignToolbar,
                    _c)), controlType: zone.layoutType, controlPosition: {
                    zoneIndex: zone.index,
                    sectionIndex: undefined,
                    controlIndex: undefined,
                    layoutIndex: layoutIndex
                }, displayMode: displayMode, id: zone.index.toString(), onConfigureButtonClick: this._onToolbarEditClick, onDeleteButtonClick: this._store.handleDeleteZoneButtonClicked, fixedPosition: this.state.fixedPosition })));
        return (external__react_["createElement"]("div", { className: layoutZoneContainerClassName, onClickCapture: !isReadMode && this._handleClickCapture, ref: this._resolveRef('_domElement'), "data-negative-space": true }, zoneContents));
        var _b, _c;
    };
    CanvasZone.prototype.handleScroll = function () {
        var zoneRect = this._domElement.getBoundingClientRect();
        var canvasRect = this._store.canvasElement.getBoundingClientRect();
        var stickTop = this._store.scrollableParent.getBoundingClientRect().top;
        var shouldToolbarStick = stickTop > zoneRect.top && stickTop < zoneRect.bottom - this._toolbarElement.getHeight();
        if (shouldToolbarStick !== this.state.isToolbarFixed) {
            this.setState({
                isToolbarFixed: shouldToolbarStick,
                fixedPosition: shouldToolbarStick
                    ? {
                        top: stickTop,
                        left: Object(office_ui_fabric_react_bundle_["getRTL"])() ? canvasRect.right - 32  : canvasRect.left
                    }
                    : undefined
            });
        }
    };
    CanvasZone.prototype._handleKeydownCapture = function (evt) {
        this._isTabPressed = false;
        if (this._domElement) {
            if (lib["Keyboard"].isEscape(evt)) {
                this._store.a11yManager.focusTo(this._domElement);
                this._store.a11yManager.alert(this._zoneLabel);
                evt.preventDefault();
            }
            else if (lib["Keyboard"].isKey(121 , evt, { alt: true })) {
                this._store.a11yManager.focusTo(this._toolbarElement.toolBarElement);
                this._store.a11yManager.alert(CanvasStrings_resx["a" /* default */].ToolbarNavigationArrowKeys);
                evt.preventDefault();
            }
            else if (lib["Keyboard"].isKey(80 , evt, { alt: true }) && this._isCanvasZoneActive) {
                this._onToolbarEditClick();
                evt.preventDefault();
            }
            else if (lib["Keyboard"].isTab(evt) || lib["Keyboard"].isShiftTab(evt)) {
                this._isTabPressed = true;
            }
            else if (lib["Keyboard"].isEnter(evt)) {
                this._clearAccessibleLabel();
            }
        }
    };
    CanvasZone.prototype._updateEmphasisTheme = function (theme, emphasis) {
        var _this = this;
        CanvasEmphasis["a" /* default */].getVariantThemeForEmphasis(emphasis, theme, this._store.variantEmphasis).then(function (t) {
            _this.setState({
                emphasisTheme: t
            });
        });
    };
    Object.defineProperty(CanvasZone.prototype, "_isCanvasZoneActive", {
        get: function () {
            return (document.activeElement &&
                (document.activeElement === this._domElement || document.activeElement.parentElement === this._domElement));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZone.prototype, "_zoneLabel", {
        get: function () {
            return odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].AriaWebPartOrSectionEnterTemplate || '', this._getSectionContextualAriaLabel(), CanvasStrings_resx["a" /* default */].SectionAriaLabel);
        },
        enumerable: true,
        configurable: true
    });
    CanvasZone.prototype._handleZoneFocus = function (evt) {
        var displayMode = this._store.displayMode;
        if (displayMode === sp_core_library_["DisplayMode"].Edit &&
            document.activeElement &&
            (document.activeElement === this._domElement || document.activeElement.parentElement === this._domElement)) {
            if (this.state.accessibleLabel === '') {
                this.setState({
                    accessibleLabel: this._zoneLabel
                });
            }
            this._selectZone();
        }
    };
    CanvasZone.prototype._getSectionContextualAriaLabel = function () {
        var zone = this.props.zone;
        var sections = zone.sections;
        var contextualLabel = '';
        var isCurZoneEmpty = true;
        sections.forEach(function (curSection) {
            var controls = curSection.controls;
            controls.forEach(function (control) {
                var webPartName = '';
                if (control.controlType === CanvasControlType["a" /* default */].RTE) {
                    webPartName = odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].CanvasZoneAriaWebpartName, CanvasStrings_resx["a" /* default */].TextWebPartDisplayName);
                }
                else {
                    var webPartProps = control;
                    webPartName = odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].CanvasZoneAriaWebpartName, webPartProps.webPartData.title);
                }
                if (contextualLabel === '') {
                    contextualLabel = webPartName;
                }
                else {
                    contextualLabel = odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].WebPartsInSectionLabel, contextualLabel, webPartName);
                }
            });
            if (isCurZoneEmpty && !curSection.isEmpty()) {
                isCurZoneEmpty = false;
            }
        });
        if (isCurZoneEmpty) {
            contextualLabel = CanvasStrings_resx["a" /* default */].EmptySectionAriaLabel;
        }
        return odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].SectionContextualAriaLabel, this.props.zoneLabel, this._getAccessibleSectionLabel(this.props.zone.layoutType), contextualLabel);
    };
    CanvasZone.prototype._handleZoneBlur = function (evt) {
        var target = evt.relatedTarget;
        if (this._isTabPressed && !this._isChildElement(target)) {
            this._store.selectedZoneIndex = -1;
        }
        this._isTabPressed = false;
        if (this._toolbarElement &&
            this._toolbarElement.toolBarElement &&
            this._toolbarElement.toolBarElement.contains(target)) {
            this._store.a11yManager.alert(CanvasStrings_resx["a" /* default */].ToolbarNavigationArrowKeys);
        }
    };
    CanvasZone.prototype._onToolbarEditClick = function () {
        if (this.props.zone && this.props.zone.index !== undefined) {
            this._store.handleConfigureZoneButtonClicked(this.props.zone.id, this.focus);
            this._selectZone();
        }
    };
    CanvasZone.prototype._handleClickCapture = function (e) {
        if (e.target !== this._domElement && e.target.getAttribute('data-negative-space') !== 'true') {
            return;
        }
        if (this.props.zone && this.props.zone.index !== undefined) {
            this._selectZone();
        }
    };
    CanvasZone.prototype._selectZone = function () {
        this._store.selectedZoneIndex = this.props.zone.index;
    };
    CanvasZone.prototype._isChildElement = function (elem) {
        return this._domElement && this._domElement.contains(elem);
    };
    CanvasZone.prototype._getAccessibleSectionLabel = function (layoutType) {
        switch (layoutType) {
            case CanvasControlType["a" /* default */].OneColumn:
                return CanvasStrings_resx["a" /* default */].ToolboxOneColumnPart;
            case CanvasControlType["a" /* default */].TwoColumns:
                return CanvasStrings_resx["a" /* default */].ToolboxTwoColumnPart;
            case CanvasControlType["a" /* default */].ThreeColumns:
                return CanvasStrings_resx["a" /* default */].ToolboxThreeColumnPart;
            case CanvasControlType["a" /* default */].OneThirdColumnRight:
                return CanvasStrings_resx["a" /* default */].ToolboxOneThirdRightColumnPart;
            case CanvasControlType["a" /* default */].OneThirdColumnLeft:
                return CanvasStrings_resx["a" /* default */].ToolboxOneThirdLeftColumnPart;
            case CanvasControlType["a" /* default */].FullWidth:
                return CanvasStrings_resx["a" /* default */].ToolboxFullWidthColumnPart;
            default:
                return undefined;
        }
    };
    CanvasZone.prototype._clearAccessibleLabel = function () {
        var _this = this;
        this._async.setTimeout(function () {
            _this.setState({
                accessibleLabel: ''
            });
        }, 100);
    };
    CanvasZone.contextTypes = {
        store: prop_types["object"].isRequired
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "focus", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "handleScroll", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "_handleKeydownCapture", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "_handleZoneFocus", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "_handleZoneBlur", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "_onToolbarEditClick", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "_handleClickCapture", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasZone.prototype, "_clearAccessibleLabel", null);
    CanvasZone = tslib_es6["__decorate"]([
        Object(office_ui_fabric_react_bundle_["customizable"])('CanvasZone', ['theme'])
    ], CanvasZone);
    return CanvasZone;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var canvasZone_CanvasZone = (CanvasZone_CanvasZone);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasAnimations/CanvasScrollAnimation.js
var CanvasScrollAnimation = __webpack_require__(41);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/confirmationDialog/ConfirmationDialog.js






var ConfirmationDialog_ConfirmationDialog = (function (_super) {
    tslib_es6["__extends"](ConfirmationDialog, _super);
    function ConfirmationDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConfirmationDialog.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.isOpen && !prevProps.isOpen) {
            var a11yManager = this.context.store.a11yManager;
            if (a11yManager) {
                a11yManager.alert(this._dialogDescription);
            }
        }
    };
    ConfirmationDialog.prototype.render = function () {
        var _a = this.props, isOpen = _a.isOpen, message = _a.message, onConfirmation = _a.onConfirmation, onDismiss = _a.onDismiss, title = _a.title, elementToFocusOnDismiss = _a.elementToFocusOnDismiss;
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["Dialog"], { isOpen: isOpen, onDismiss: onDismiss, title: title, subText: message, firstFocusableSelector: 'confirmButton', closeButtonAriaLabel: CanvasStrings_resx["a" /* default */].CloseButtonAriaLabel, 
            onDismissed: elementToFocusOnDismiss ? this._handleDismissed : undefined, ignoreExternalFocusing: !!elementToFocusOnDismiss },
            external__react_["createElement"](office_ui_fabric_react_bundle_["DialogFooter"], null,
                external__react_["createElement"](office_ui_fabric_react_bundle_["PrimaryButton"], { onClick: onConfirmation, ariaLabel: CanvasStrings_resx["a" /* default */].ConfirmationDialogYes, "data-automation-id": "confirmButton", className: "confirmButton", text: CanvasStrings_resx["a" /* default */].ConfirmationDialogYes }),
                external__react_["createElement"](office_ui_fabric_react_bundle_["DefaultButton"], { onClick: onDismiss, ariaLabel: CanvasStrings_resx["a" /* default */].ConfirmationDialogNo, "data-automation-id": "cancelButton", text: CanvasStrings_resx["a" /* default */].ConfirmationDialogNo }))));
    };
    ConfirmationDialog.prototype._handleDismissed = function () {
        var a11yManager = this.context.store.a11yManager;
        if (a11yManager) {
            a11yManager.focusTo(this.props.elementToFocusOnDismiss);
        }
    };
    Object.defineProperty(ConfirmationDialog.prototype, "_dialogDescription", {
        get: function () {
            var _a = this.props, title = _a.title, message = _a.message;
            return odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].DialogDescription, title, message);
        },
        enumerable: true,
        configurable: true
    });
    ConfirmationDialog.contextTypes = {
        store: prop_types["object"].isRequired
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ConfirmationDialog.prototype, "_handleDismissed", null);
    return ConfirmationDialog;
}(external__react_["Component"]));
/* harmony default export */ var confirmationDialog_ConfirmationDialog = (ConfirmationDialog_ConfirmationDialog);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CreateEmptyZoneLayout.js
var CreateEmptyZoneLayout = __webpack_require__(42);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbox/toolboxGroup/ToolboxGroup.scss.js
var ToolboxGroup_scss = __webpack_require__(251);
var ToolboxGroup_scss_default = /*#__PURE__*/__webpack_require__.n(ToolboxGroup_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbox/toolboxGroup/ToolboxGroup.js


function ToolboxGroup(props) {
    return (external__react_["createElement"]("section", { "aria-label": props.groupName, role: "group", className: "CanvasToolboxItemsGroup" },
        external__react_["createElement"]("header", { className: "CanvasToolboxItemsGroup-header" }, props.groupName),
        external__react_["createElement"]("div", { className: "CanvasToolboxItemsGroup-items" }, props.children)));
}

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/common/DeferredCanvasToolbox.js
var DeferredCanvasToolbox = __webpack_require__(62);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbox/toolboxItem/ToolboxItem.scss.js
var ToolboxItem_scss = __webpack_require__(254);
var ToolboxItem_scss_default = /*#__PURE__*/__webpack_require__.n(ToolboxItem_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbox/toolboxItem/ToolboxItem.js




function ToolboxItem(props) {
    return (external__react_["createElement"]("button", { className: 'CanvasToolboxItem', title: props.description, onClick: function () { return props.onClick(JSON.parse(JSON.stringify(props.itemProps))); }, "data-automation-id": props.automationId },
        external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { iconName: props.msIconName, className: "CanvasToolboxItem-icon" }),
        external__react_["createElement"](DeferredCanvasToolbox["a" /* DeferredLessTextComponent */], { deferredProps: {
                text: props.displayName,
                className: 'CanvasToolboxItem-title',
                showTitle: true,
                lines: 2,
                omission: '…'
            } })));
}

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbox/toolboxSmall/ToolboxSmall.scss.js
var ToolboxSmall_scss = __webpack_require__(257);
var ToolboxSmall_scss_default = /*#__PURE__*/__webpack_require__.n(ToolboxSmall_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbox/toolboxSmall/ToolboxSmall.js












var TOOLBOX_FOCUS_IDENTIFIER = 'beforeToolbox';
var SECTION_ITEM_GROUPID = '19ede092-2988-4759-9b2f-5396b160ce68';
var ToolboxSmall_ToolboxSmall = (function (_super) {
    tslib_es6["__extends"](ToolboxSmall, _super);
    function ToolboxSmall(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._isRTL = office_ui_fabric_react_bundle_["getRTL"];
        _this.state = {
            horizontalPosition: props.horizontalPosition,
            verticalPosition: props.verticalPosition
        };
        return _this;
    }
    ToolboxSmall.tryGetManifestFromItem = function (item) {
        return item.itemProps.webPartManifest;
    };
    ToolboxSmall._stopKeyboardEvent = function (e) {
        e.stopPropagation();
        e.preventDefault();
    };
    ToolboxSmall.prototype.render = function () {
        var _this = this;
        var _a = this.props, controlPosition = _a.controlPosition, errorMessage = _a.errorMessage, isOpen = _a.isOpen;
        var errorLabel;
        if (errorMessage) {
            errorLabel = external__react_["createElement"]("div", { className: "CanvasToolbox-Error" },
                " ",
                errorMessage,
                " ");
        }
        var toolboxContent = (external__react_["createElement"](office_ui_fabric_react_bundle_["FocusZone"], { direction: office_ui_fabric_react_bundle_["FocusZoneDirection"].horizontal, isCircularNavigation: true, componentRef: function (focusZone) { return (_this._focusZone = focusZone); } },
            errorLabel,
            this._toolboxContent));
        var horizontalPosition = !controlPosition.sectionIndex
            ? this.state.horizontalPosition
            : this._evalPlacement(this._domNode);
        return (external__react_["createElement"]("div", { className: this._canvasToolBoxContainerClassName },
            external__react_["createElement"]("div", { role: "toolbar", className: this._canvasToolBoxClassName, ref: this._resolveRef('_domNode'), style: {
                    visibility: isOpen ? 'visible' : 'hidden',
                    top: this.state.verticalPosition,
                    left: this._isRTL() ? 0 : horizontalPosition,
                    right: this._isRTL() ? horizontalPosition : 0
                } }, toolboxContent)));
    };
    ToolboxSmall.prototype.componentDidMount = function () {
        if (this._domNode) {
            if (this.props.isOpen) {
                var prevToolboxOpen = false;
                this._setToolboxFocus(this._domNode, prevToolboxOpen);
            }
            this._domNode.addEventListener('keydown', this._handleKeyDownCapture, true);
        }
    };
    ToolboxSmall.prototype.componentWillReceiveProps = function (nextProps) {
        this.setState({
            horizontalPosition: nextProps.horizontalPosition,
            verticalPosition: nextProps.verticalPosition
        });
    };
    ToolboxSmall.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.isOpen) {
            this._setToolboxFocus(this._domNode, prevProps.isOpen);
        }
        else {
            this.context.store.a11yManager.forgetSavedActiveElement(TOOLBOX_FOCUS_IDENTIFIER);
        }
    };
    Object.defineProperty(ToolboxSmall.prototype, "_canvasToolBoxClassName", {
        get: function () {
            return 'CanvasToolbox';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxSmall.prototype, "_canvasToolBoxContainerClassName", {
        get: function () {
            return 'CanvasToolboxContainer';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxSmall.prototype, "_toolboxContent", {
        get: function () {
            var _a = this.props, controlPosition = _a.controlPosition, onItemClick = _a.onItemClick;
            return external__react_["createElement"]("div", null, this._generateSectionGroup(controlPosition, onItemClick));
        },
        enumerable: true,
        configurable: true
    });
    ToolboxSmall.prototype._handleKeyDownCapture = function (e) {
        if (lib["Keyboard"].isEscape(e)) {
            this.context.store.a11yManager.restoreFocus(TOOLBOX_FOCUS_IDENTIFIER);
            this.context.store.closeToolbox();
            ToolboxSmall._stopKeyboardEvent(e);
        }
        else if (lib["Keyboard"].isTab(e)) {
            ToolboxSmall._stopKeyboardEvent(e);
        }
    };
    ToolboxSmall.prototype._setToolboxFocus = function (domNode, prevToolBoxOpen) {
        if (domNode) {
            this.context.store.a11yManager.saveActiveElementAs(TOOLBOX_FOCUS_IDENTIFIER);
            this._alertTotalCount(prevToolBoxOpen);
            this.context.store.a11yManager.focusTo(domNode);
        }
    };
    ToolboxSmall.prototype._evalPlacement = function (toolBox) {
        var halfToolBoxWidth = 0;
        if (toolBox !== undefined) {
            halfToolBoxWidth = toolBox.offsetWidth / 2;
        }
        if (this.state.horizontalPosition > 0) {
            return this.state.horizontalPosition - halfToolBoxWidth + "px";
        }
        else {
            return 'calc(50% - ' + (halfToolBoxWidth + this.state.horizontalPosition) + 'px)';
        }
    };
    ToolboxSmall.prototype._createSectionItemProps = function (controlType, position) {
        return {
            controlType: controlType,
            position: position,
            displayMode: sp_core_library_["DisplayMode"].Edit,
            id: undefined
        };
    };
    ToolboxSmall.prototype._generateSectionGroup = function (position, onItemClick) {
        var sections = [
            external__react_["createElement"](ToolboxItem, { automationId: "SingleColumnSectionToolboxItem", description: CanvasStrings_resx["a" /* default */].ToolboxOneColumnPart, displayName: CanvasStrings_resx["a" /* default */].ToolboxOneColumnPart, itemProps: this._createSectionItemProps(CanvasControlType["a" /* default */].OneColumn, position), key: "SingleColumnSectionToolboxItem", msIconName: "SingleColumn", onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            external__react_["createElement"](ToolboxItem, { automationId: "DoubleColumnSectionToolboxItem", description: CanvasStrings_resx["a" /* default */].ToolboxTwoColumnPart, displayName: CanvasStrings_resx["a" /* default */].ToolboxTwoColumnPart, itemProps: this._createSectionItemProps(CanvasControlType["a" /* default */].TwoColumns, position), key: "DoubleColumnSectionToolboxItem", msIconName: "DoubleColumn", onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            external__react_["createElement"](ToolboxItem, { automationId: "TripleColumnSectionToolboxItem", description: CanvasStrings_resx["a" /* default */].ToolboxThreeColumnPart, displayName: CanvasStrings_resx["a" /* default */].ToolboxThreeColumnPart, itemProps: this._createSectionItemProps(CanvasControlType["a" /* default */].ThreeColumns, position), key: "TripleColumnSectionToolboxItem", msIconName: "TripleColumn", onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            external__react_["createElement"](ToolboxItem, { automationId: "ColumnRightTwoThirdsSectionToolboxItem", description: CanvasStrings_resx["a" /* default */].ToolboxOneThirdLeftColumnPart, displayName: CanvasStrings_resx["a" /* default */].ToolboxOneThirdLeftColumnPart, itemProps: this._createSectionItemProps(CanvasControlType["a" /* default */].OneThirdColumnLeft, position), key: "ColumnRightTwoThirdsSectionToolboxItem", msIconName: "ColumnRightTwoThirds", onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }),
            external__react_["createElement"](ToolboxItem, { automationId: "ColumnLeftTwoThirdsSectionToolboxItem", description: CanvasStrings_resx["a" /* default */].ToolboxOneThirdRightColumnPart, displayName: CanvasStrings_resx["a" /* default */].ToolboxOneThirdRightColumnPart, itemProps: this._createSectionItemProps(CanvasControlType["a" /* default */].OneThirdColumnRight, position), key: "ColumnLeftTwoThirdsSectionToolboxItem", msIconName: "ColumnLeftTwoThirds", onClick: onItemClick, groupId: SECTION_ITEM_GROUPID })
        ];
        if (this.context.store.siteSupportsFullWidth) {
            sections.push(external__react_["createElement"](ToolboxItem, { automationId: "FullWidthSectionToolboxItem", description: CanvasStrings_resx["a" /* default */].ToolboxFullWidthColumnPart, displayName: CanvasStrings_resx["a" /* default */].ToolboxFullWidthColumnPart, itemProps: this._createSectionItemProps(CanvasControlType["a" /* default */].FullWidth, position), key: "FullWidthSectionToolboxItem", msIconName: "FullWidth", onClick: onItemClick, groupId: SECTION_ITEM_GROUPID }));
        }
        this._sectionCount = sections.length;
        return external__react_["createElement"](ToolboxGroup, { groupName: CanvasStrings_resx["a" /* default */].ToolboxSectionHeader }, sections);
    };
    ToolboxSmall.prototype._alertTotalCount = function (announceNavKeys) {
        var localizedItemCount = odsp_utilities_bundle_lib["StringHelper"].formatWithLocalizedCountValue(CanvasStrings_resx["a" /* default */].CanvasItems, CanvasStrings_resx["a" /* default */].CanvasItemsInterval, this._sectionCount);
        var message = announceNavKeys
            ? odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].ToolboxNavigationArrowKeys, localizedItemCount)
            : localizedItemCount;
        this.context.store.a11yManager.alert(message);
    };
    ToolboxSmall.contextTypes = {
        store: prop_types["object"].isRequired
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ToolboxSmall.prototype, "_handleKeyDownCapture", null);
    return ToolboxSmall;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var toolboxSmall_ToolboxSmall = (ToolboxSmall_ToolboxSmall);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/CanvasVerticalSection/CanvasVerticalSection.scss.js
var CanvasVerticalSection_scss = __webpack_require__(260);
var CanvasVerticalSection_scss_default = /*#__PURE__*/__webpack_require__.n(CanvasVerticalSection_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/CanvasVerticalSection/CanvasVerticalSection.js










var CanvasVerticalSection_CanvasVerticalSection = (function (_super) {
    tslib_es6["__extends"](CanvasVerticalSection, _super);
    function CanvasVerticalSection(props, context) {
        return _super.call(this, props, context) || this;
    }
    CanvasVerticalSection.prototype.componentDidMount = function () {
        _super.prototype.componentDidMount.call(this);
    };
    CanvasVerticalSection.prototype.render = function () {
        var layoutIndex = this.props.layoutIndex;
        var store = this.context.store;
        var firstCanvasVerticalSectionLayout = Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(CanvasLayout["a" /* default */].firstLayoutIndex, CanvasLayout["a" /* default */].firstLayoutIndex, undefined, layoutIndex);
        var canvasLayout = store.canvasLayouts.get(this.props.layoutIndex);
        var canvasVerticalSectionZones = canvasLayout.zones;
        if (canvasVerticalSectionZones.length === 0) {
            store.addControlToCanvas(this._firstCanvasVerticalSectionControl(firstCanvasVerticalSectionLayout, store.displayMode));
            canvasVerticalSectionZones = canvasLayout.zones;
        }
        return (external__react_["createElement"]("div", { className: 'CanvasVerticalSection' }, canvasVerticalSectionZones.length > 0 && (external__react_["createElement"](canvasZone_CanvasZone, { fullWidth: false, selectedPosition: store.canvasLayout.fetchCurrentSelection(), key: canvasVerticalSectionZones[0].elementKey, zone: canvasVerticalSectionZones[0], shouldCenterAlign: store.shouldCenterAlign, zoneLabel: CanvasStrings_resx["a" /* default */].CanvasVerticalSectionZoneLabel, layoutIndex: layoutIndex, emphasis: canvasVerticalSectionZones[0].emphasis, hintLayout: firstCanvasVerticalSectionLayout }))));
    };
    CanvasVerticalSection.prototype._firstCanvasVerticalSectionControl = function (position, displayMode) {
        return {
            position: position,
            displayMode: displayMode,
            id: undefined,
            controlType: CanvasControlType["a" /* default */].OneColumn
        };
    };
    CanvasVerticalSection.contextTypes = {
        store: prop_types["object"].isRequired
    };
    return CanvasVerticalSection;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var canvas_CanvasVerticalSection_CanvasVerticalSection = (CanvasVerticalSection_CanvasVerticalSection);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasComponent.scss.js
var CanvasComponent_scss = __webpack_require__(263);
var CanvasComponent_scss_default = /*#__PURE__*/__webpack_require__.n(CanvasComponent_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasComponent.js






















var CanvasComponent_CanvasComponent = (function (_super) {
    tslib_es6["__extends"](CanvasComponent, _super);
    function CanvasComponent(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._narrowMediaQuery = window.matchMedia('screen and (max-width: 640px)');
        _this._zonesMap = new Map();
        _this._handleScroll = _this._async.debounce(_this._handleScroll, 50);
        return _this;
    }
    CanvasComponent.prototype.componentDidMount = function () {
        _super.prototype.componentDidMount.call(this);
        sp_diagnostics_["_TraceLogger"].logVerbose(CanvasComponent._logSource, "CanvasComponent is mounted");
        var isEdit = this.props.store.displayMode === sp_core_library_["DisplayMode"].Edit;
        var canvasElement = external__react_dom_["findDOMNode"](this);
        this.props.store.canvasElement = canvasElement;
        if (Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()) {
            this.props.store.mainCanvasElement = this._canvasMain;
        }
        this.props.store.scrollableParent = this._findScrollableParent(canvasElement);
        if (this.props.store.isMobileBrowser) {
            CanvasScrollAnimation["a" /* default */].instance.init(window.document.documentElement);
        }
        else {
            CanvasScrollAnimation["a" /* default */].instance.init(this.props.store.scrollableParent);
        }
        if (isEdit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.addEventListener('scroll', this._handleScroll);
        }
        this._narrowMediaQuery.addListener(this._handleNarrowMediaQuery);
    };
    CanvasComponent.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
        if (this.props.store.displayMode === sp_core_library_["DisplayMode"].Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
        this._narrowMediaQuery.removeListener(this._handleNarrowMediaQuery);
        CanvasScrollAnimation["a" /* default */].instance.clear();
    };
    CanvasComponent.prototype.componentDidUpdate = function () {
        if (this.props.store.displayMode === sp_core_library_["DisplayMode"].Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.addEventListener('scroll', this._handleScroll);
        }
        else if (this.props.store.displayMode === sp_core_library_["DisplayMode"].Read && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
    };
    CanvasComponent.prototype.render = function () {
        var _this = this;
        sp_diagnostics_["_TraceLogger"].logVerbose(CanvasComponent._logSource, "CanvasComponent _render() is called");
        var store = this.props.store;
        var displayMode = store.displayMode;
        var toolboxProps = store.toolboxProps;
        var deletedControlLayout = store.deletedControlLayout;
        var canvasLayout = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled()
            ? store.canvasLayouts.get(CanvasLayout["a" /* default */].firstLayoutIndex)
            : store.canvasLayout;
        var selectedLayout = store.canvasLayout.fetchCurrentSelection();
        var shouldCenterAlign = store.shouldCenterAlign;
        var isEdit = displayMode === sp_core_library_["DisplayMode"].Edit;
        var zoneComponents = [];
        var zones = canvasLayout.zones;
        var numZones = zones.length;
        var shouldResize = store.shouldResize(CanvasLayout["a" /* default */].firstLayoutIndex);
        zones.forEach(function (curZone, curIdx) {
            zoneComponents.push(external__react_["createElement"](canvasZone_CanvasZone, { ref: function (zoneControl) {
                    if (zoneControl) {
                        _this._zonesMap.set(curZone.elementKey, zoneControl);
                    }
                    else {
                        _this._zonesMap.delete(curZone.elementKey);
                    }
                }, fullWidth: _this._isFullWidthSectionEnabled(curZone), selectedPosition: selectedLayout, key: curZone.elementKey, zone: curZone, shouldCenterAlign: shouldCenterAlign, zoneLabel: _this._getZoneAriaLabel(curIdx + 1, numZones), emphasis: curZone.emphasis, layoutIndex: CanvasLayout["a" /* default */].firstLayoutIndex, shouldResize: shouldResize }));
            var nextZoneIndex = curIdx + 1 === numZones
                ?
                    curZone.index + 1
                :
                    zones[curIdx + 1].index;
            var nextZoneLayout = Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(nextZoneIndex);
            var zoneBeforeState = _this._getZoneSelectionState(selectedLayout, zones[curIdx].index);
            var zoneAfterState = curIdx < zones.length - 1 && _this._getZoneSelectionState(selectedLayout, zones[curIdx + 1].index);
            var adjacentZoneState = zoneBeforeState > zoneAfterState ? zoneBeforeState : zoneAfterState;
            zoneComponents.push(external__react_["createElement"](CanvasToolboxHint["a" /* default */], { adjacentZoneState: adjacentZoneState, ariaLabel: CanvasStrings_resx["a" /* default */].ToolboxHintSectionTitleOnlyLayouts, isVisible: true, key: "hint." + nextZoneLayout.zoneIndex, layout: nextZoneLayout, shouldCenterAlign: shouldCenterAlign, shouldFocus: deletedControlLayout.zoneIndex === nextZoneIndex, type: 1  }));
        });
        if (isEdit) {
            var latestZoneIndex = numZones > 0 ? zones[numZones - 1].index + 1 : CanvasLayout["a" /* default */].firstLayoutIndex;
            var emptyCanvasSectionLayout = Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(latestZoneIndex, CanvasLayout["a" /* default */].firstLayoutIndex);
            zoneComponents.push(external__react_["createElement"]("div", { className: numZones === 0 && 'EmptyCanvasHint', key: "LastHint" },
                external__react_["createElement"](canvasZone_CanvasZone, { hintLayout: emptyCanvasSectionLayout, selectedPosition: selectedLayout, zone: undefined, shouldCenterAlign: shouldCenterAlign, emphasis: undefined, layoutIndex: CanvasLayout["a" /* default */].firstLayoutIndex, shouldResize: shouldResize })));
        }
        store.deletedControlLayout = CanvasLayout["a" /* default */].undefinedControlPosition;
        var isCanvasVerticalSectionFlightEnabled = Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled();
        var className = Object(office_ui_fabric_react_bundle_["css"])('Canvas', 'grid', 'Canvas--withLayout', {
            'Canvas--edit': isEdit,
            Original: !isCanvasVerticalSectionFlightEnabled
        });
        var firstZoneIdx = zones.length > 0 ? zones[0].index : CanvasLayout["a" /* default */].firstLayoutIndex;
        var firstZoneLayout = Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(firstZoneIdx);
        var toolBoxHintHasFocus = deletedControlLayout.zoneIndex === firstZoneLayout.zoneIndex;
        var toolboxContainerItems;
        if (!toolboxProps.onlyLayouts) {
            if (toolboxProps.errorMessage) {
                toolboxContainerItems = new Error(toolboxProps.errorMessage);
            }
            else if (toolboxProps.isLoading) {
                toolboxContainerItems = undefined;
            }
            else {
                toolboxContainerItems = toolboxProps.toolboxItems;
            }
        }
        var cultureName = store.serviceScope.consume(sp_page_context_["PageContext"].serviceKey).cultureInfo.currentUICultureName;
        var canvasContent = (external__react_["createElement"]("div", { className: className, role: isEdit ? 'application' : undefined },
            external__react_["createElement"](CanvasToolboxHint["a" /* default */], { adjacentZoneState: zones.length > 0
                    ? this._getZoneSelectionState(selectedLayout, zones[0].index)
                    : 1 , ariaLabel: CanvasStrings_resx["a" /* default */].ToolboxHintSectionTitleOnlyLayouts, isRootScrollableElement: store.isRootScrollableElement, isVisible: true, layout: firstZoneLayout, shouldCenterAlign: shouldCenterAlign, shouldFocus: toolBoxHintHasFocus, type: 1  }),
            zoneComponents,
            !toolboxProps.onlyLayouts ? (external__react_["createElement"](DeferredCanvasToolbox["b" /* DeferredToolboxComponent */], { deferredProps: {
                    items: toolboxContainerItems,
                    onClickItem: toolboxProps.onItemClick,
                    onCloseToolbox: toolboxProps.onClose,
                    instanceRef: function (instance) { return (store.toolbox = instance); },
                    a11yManager: store.a11yManager,
                    siteSupportsFullWidth: store.siteSupportsFullWidth,
                    scrollableParent: store.scrollableParent,
                    canvasElement: store.canvasElement,
                    cultureName: cultureName
                }, duration: isEdit ? 0 : -1 })) : (external__react_["createElement"](toolboxSmall_ToolboxSmall, tslib_es6["__assign"]({}, toolboxProps))),
            external__react_["createElement"](confirmationDialog_ConfirmationDialog, tslib_es6["__assign"]({}, store.confirmationDialogProps))));
        if (isCanvasVerticalSectionFlightEnabled) {
            canvasContent = (external__react_["createElement"]("div", { className: this._getClassName('CanvasComponentWrapper'), onFocus: this._handleFocus, onMouseEnter: this._handleFocus },
                external__react_["createElement"]("div", { className: this._getClassName('CanvasComponentMain'), ref: this._resolveRef('_canvasMain') }, canvasContent),
                external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('CanvasVerticalSectionContainer', {
                        isEdit: store.displayMode === sp_core_library_["DisplayMode"].Edit,
                        'CanvasVerticalSectionContainer--reflow': shouldResize
                    }) },
                    external__react_["createElement"](canvas_CanvasVerticalSection_CanvasVerticalSection, { layoutIndex: CanvasLayout["a" /* default */].verticalLayoutIndex }))));
        }
        var canvasSectionBarBgClassName = Object(office_ui_fabric_react_bundle_["css"])('CanvasSectionBarBg', {
            WithVerticalSection: isCanvasVerticalSectionFlightEnabled
        });
        return (external__react_["createElement"]("div", { className: "CanvasComponent" },
            isEdit ? external__react_["createElement"]("div", { className: canvasSectionBarBgClassName }) : undefined,
            external__react_["createElement"](office_ui_fabric_react_bundle_["Dialog"], { isOpen: isEdit && store.isNarrowMode, isBlocking: true, title: CanvasStrings_resx["a" /* default */].NarrowModeDialogTitle, subText: CanvasStrings_resx["a" /* default */].NarrowModeDialogSubtitle }),
            external__react_["createElement"](canvasDragZone_CanvasDragZone, { store: store, isEnabled: isEdit }, canvasContent)));
    };
    CanvasComponent.prototype.getChildContext = function () {
        return {
            store: this.props.store
        };
    };
    CanvasComponent.prototype._getClassName = function (className) {
        var shouldResize = this.props.store.shouldResize(CanvasLayout["a" /* default */].firstLayoutIndex);
        return Object(office_ui_fabric_react_bundle_["css"])(className, (_a = {},
            _a[className + "--reflow"] = shouldResize,
            _a));
        var _a;
    };
    CanvasComponent.prototype._handleFocus = function (event) {
        var store = this.props.store;
        var targetElement = event.target;
        var layoutIndex = this._canvasMain.contains(targetElement)
            ? CanvasLayout["a" /* default */].firstLayoutIndex
            : CanvasLayout["a" /* default */].verticalLayoutIndex;
        if (store.selectedLayoutIndex !== layoutIndex) {
            store.selectedLayoutIndex = layoutIndex;
        }
    };
    CanvasComponent.prototype._handleScroll = function () {
        this._zonesMap.forEach(function (zoneControl, key) {
            if (zoneControl) {
                zoneControl.handleScroll();
            }
        });
    };
    CanvasComponent.prototype._handleNarrowMediaQuery = function () {
        this.props.store.isNarrowMode = this._narrowMediaQuery.matches;
    };
    CanvasComponent.prototype._getZoneAriaLabel = function (zoneIndex, zonesLength) {
        return odsp_utilities_bundle_lib["StringHelper"].format(CanvasStrings_resx["a" /* default */].SectionPositionAriaLabel, zoneIndex, zonesLength);
    };
    CanvasComponent.prototype._isFullWidthSectionEnabled = function (zone) {
        return zone.sections[0] && zone.sections[0].factor === 0 && this.props.store.siteSupportsFullWidth;
    };
    CanvasComponent.prototype._getZoneSelectionState = function (selectedLayout, zoneIndex) {
        if (!selectedLayout) {
            return 1 ;
        }
        var isZoneSelected = selectedLayout.zoneIndex === zoneIndex;
        var isZoneActive = (!!selectedLayout.controlIndex || this.props.store.toolboxProps.isOpen) && isZoneSelected;
        if (isZoneActive) {
            return 2 ;
        }
        if (isZoneSelected) {
            return 3 ;
        }
        return 1 ;
    };
    CanvasComponent.prototype._findScrollableParent = function (canvasElement) {
        return this._findScrollableParentImpl(canvasElement, true) || this._findScrollableParentImpl(canvasElement, false);
    };
    CanvasComponent.prototype._findScrollableParentImpl = function (canvasElement, optimize) {
        var DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';
        var canvasContainer = canvasElement;
        var hasScrollbar = false;
        do {
            canvasContainer = canvasContainer.parentElement;
            if (canvasContainer) {
                if (optimize) {
                    hasScrollbar = canvasContainer.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true';
                }
                else {
                    var overflowY = window.getComputedStyle(canvasContainer)['overflow-y'];
                    hasScrollbar = overflowY === 'scroll' || overflowY === 'auto';
                }
            }
        } while (!hasScrollbar && canvasContainer && canvasContainer.tagName !== 'BODY');
        return hasScrollbar || !optimize ? canvasContainer : undefined;
    };
    CanvasComponent.childContextTypes = {
        store: prop_types["object"].isRequired
    };
    CanvasComponent._logSource = sp_diagnostics_["_LogSource"].create('CanvasComponent');
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasComponent.prototype, "_handleFocus", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasComponent.prototype, "_handleScroll", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasComponent.prototype, "_handleNarrowMediaQuery", null);
    return CanvasComponent;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var canvasComponent_CanvasComponent = (CanvasComponent_CanvasComponent);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvasComponent/CanvasStore.js + 4 modules
var CanvasStore = __webpack_require__(109);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvas/LayoutCanvas.scss.js
var LayoutCanvas_scss = __webpack_require__(266);
var LayoutCanvas_scss_default = /*#__PURE__*/__webpack_require__.n(LayoutCanvas_scss);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/canvas/canvas/Canvas.js













var Canvas_Canvas = (function () {
    function Canvas(container, canvasOptions) {
        this._render = this._render.bind(this);
        this._container = container;
        var a11yManager;
        if (canvasOptions.a11yManagerId) {
            a11yManager = lib["A11yManager"].getInstanceById(canvasOptions.a11yManagerId);
        }
        if (!a11yManager) {
            a11yManager = lib["A11yManager"].create(container);
        }
        this._store = new CanvasStore["a" /* default */](canvasOptions.serviceScope, this._render, a11yManager, canvasOptions.mode, Flights["a" /* default */].isCanvasVerticalSectionFlightEnabled() ? 2 : 1, canvasOptions.serializedCanvasContent, canvasOptions.handleCanvasChanged, canvasOptions.scrollThreshold, canvasOptions.handleViewportRendered, canvasOptions.shouldCenterAlign, canvasOptions.mobileBrowser, canvasOptions.isRootScrollableElement, canvasOptions.pageLayoutType, canvasOptions.variantEmphasis);
    }
    Canvas.instantiateCanvas = function (container, canvasOptions) {
        var canvas = new Canvas(container, canvasOptions);
        if (canvasOptions.mode === sp_core_library_["DisplayMode"].Read) {
            return Promise.resolve(canvas);
        }
        else {
            return canvas._store.initializeForEditMode().then(function () { return canvas; });
        }
    };
    Canvas.prototype.render = function (displayMode, serializedCanvas) {
        var _this = this;
        var loadEditChunk;
        this._internalDispose();
        this._store.webPartManager.disposeWebparts();
        if (displayMode === sp_core_library_["DisplayMode"].Edit) {
            loadEditChunk = this._store.initializeForEditMode().then(function () {
                window.addEventListener('blur', _this._store.handleWindowBlur, true);
            });
        }
        this._store.deserialize(displayMode, serializedCanvas);
        if (loadEditChunk) {
            loadEditChunk.then(function () { return _this._render(); });
        }
        else {
            this._render();
        }
        if (!this._store.webPartsCount) {
            this._store.onViewportWebPartsRendered(sp_telemetry_["_PerformanceLogger"].now());
        }
    };
    Object.defineProperty(Canvas.prototype, "count", {
        get: function () {
            return this._store.controlsProps.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Canvas.prototype, "previewImageUrl", {
        get: function () {
            return this._store.tryGeneratePreviewImageUrl();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Canvas.prototype, "displayMode", {
        get: function () {
            return this._store.displayMode;
        },
        enumerable: true,
        configurable: true
    });
    Canvas.prototype.setDisplayMode = function (newMode) {
        return this._store.setDisplayMode(newMode);
    };
    Canvas.prototype.dispose = function () {
        this._internalDispose();
        if (!sp_core_library_["_SPKillSwitch"].isActivated(Canvas._unmountLayoutKillSwitch, '03/28/2017', 'Unmount page layout')) {
            this._store.dispose();
        }
    };
    Canvas.prototype.openToolbox = function (row) {
        var didToolboxOpen = false;
        if (this._store.displayMode === sp_core_library_["DisplayMode"].Edit && 0 <= row && row <= this._store.controlsProps.length) {
            var hint = document.querySelectorAll('.CanvasToolboxHint')[row];
            this._store.openToolbox(Object(CreateEmptyZoneLayout["a" /* CreateEmptyZoneLayout */])(row), hint.offsetTop);
            didToolboxOpen = true;
        }
        return didToolboxOpen;
    };
    Canvas.prototype.serialize = function (toJson) {
        return this._store.serialize(toJson);
    };
    Canvas.prototype.fetchWebparts = function (force) {
        return this._store.fetchWebparts(force);
    };
    Canvas.prototype.ensureEdit = function () {
        return this._store.initializeForEditMode();
    };
    Canvas.prototype._internalDispose = function () {
        window.removeEventListener('blur', this._store.handleWindowBlur, true);
        external__react_dom_["unmountComponentAtNode"](this._container);
    };
    Canvas.prototype._render = function () {
        var coreElementProps = {
            store: this._store
        };
        var coreElement = external__react_["createElement"](canvasComponent_CanvasComponent, coreElementProps);
        this._coreComponent = external__react_dom_["render"](coreElement, this._container);
    };
    Canvas._unmountLayoutKillSwitch = sp_core_library_["Guid"].tryParse('{7FA46D79-8E10-4B16-AC6B-7EE901B81746}');
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], Canvas.prototype, "serialize", null);
    return Canvas;
}());
/* harmony default export */ var canvas_Canvas = (Canvas_Canvas);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/BaseRte.js + 4 modules
var BaseRte = __webpack_require__(49);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/ckeditor/CKTextEditor.js + 5 modules
var CKTextEditor = __webpack_require__(60);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/webPartRte/CKEditorForWebPartRte.js



var CKEditorForWebPartRte_CKEditorForWebPartRte = (function (_super) {
    tslib_es6["__extends"](CKEditorForWebPartRte, _super);
    function CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback, onKeyDownCallBack, placeholder) {
        var _this = _super.call(this, config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback) || this;
        var pluginsToBeRemoved = 'contextmenu,menubutton,scayt,liststyle,tableselection,tabletools,magicline,link,resize,autogrow,elementspath,divarea';
        _this._ckEditorConfig = {
            disableNativeSpellChecker: false,
            on: {
                change: _this._handleTextChange,
                selectionChange: _this._handleSelectionChangeConvert
            },
            removePlugins: "tableselection," + pluginsToBeRemoved,
            extraPlugins: 'justify,placeholdertext',
            placeholder: placeholder,
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: _this._startupFocus,
            fullPage: false,
            resize_enabled: false,
            width: '100%',
            height: 200,
            title: false
        };
        _this._onKeyDownCallBack = onKeyDownCallBack;
        _this._ckEditorConfig.allowedContent = true;
        _this._initialize(currentHTML);
        return _this;
    }
    CKEditorForWebPartRte.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack, onKeyDownCallBack, placeholder) {
        return new Promise(function (resolve) {
            CKEditorForWebPartRte.moduleLoader
                .loadModule(config.editorSource)
                .then(function () {
                var editor = new CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () {
                    resolve(editor);
                }, onKeyDownCallBack, placeholder);
            })
                .catch(function (error) {
                sp_diagnostics_["_TraceLogger"].logError(CKEditorForWebPartRte.logSource, error);
            });
        });
    };
    CKEditorForWebPartRte.prototype._initialize = function (currentHTML) {
        if (!this._ckEditorConfig) {
            return;
        }
        var textPart = document.createElement('textarea');
        this._editorElement.appendChild(textPart);
        this._editor = CKEDITOR.replace(textPart, this._ckEditorConfig);
        this._editor.setData(currentHTML);
        this._editor.on('key', this._handleKeyDown.bind(this));
        this._addCustomToolbarCommands();
    };
    CKEditorForWebPartRte.prototype._handleKeyDown = function (ev) {
        var keyboardEvent = ev.data && ev.data.domEvent && ev.data.domEvent.$;
        if (keyboardEvent && this._onKeyDownCallBack) {
            this._onKeyDownCallBack(keyboardEvent);
            if (keyboardEvent.defaultPrevented) {
                ev.cancel();
            }
        }
    };
    CKEditorForWebPartRte.logSource = sp_diagnostics_["_LogSource"].create('CKEditorForWebPartRte');
    return CKEditorForWebPartRte;
}(CKTextEditor["a" /* default */]));
/* harmony default export */ var webPartRte_CKEditorForWebPartRte = (CKEditorForWebPartRte_CKEditorForWebPartRte);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/SPRteCKEditorConfiguration.js
var SPRteCKEditorConfiguration = __webpack_require__(106);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/a11y/RteA11y.js + 1 modules
var RteA11y = __webpack_require__(61);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/loc/RteStrings.resx.js
var RteStrings_resx = __webpack_require__(19);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-rte/rte/webPartRte/WebPartRte.js











var WebPartRte_WebPartRte = (function (_super) {
    tslib_es6["__extends"](WebPartRte, _super);
    function WebPartRte(props) {
        var _this = _super.call(this, props, WebPartRte.defaultOptions) || this;
        _this.TAG_NAME = 'WebPartRte.';
        return _this;
    }
    WebPartRte._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? undefined : 0;
        var top = -202;
        var position = 'relative';
        var right = isRtl ? 0 : undefined;
        return { left: left, top: top, position: position, right: right };
    };
    WebPartRte.prototype.focus = function () {
        _super.prototype.focus.call(this);
    };
    WebPartRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: WebPartRte._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    WebPartRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, function () {
        }, function () {
        }, function () {
        }, this._handleEditorKeyDown, this.props.placeholder);
    };
    WebPartRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._handleTextChange();
        var formattingbarElement = external__react_dom_["findDOMNode"](this._formattingbar);
        this._editorElement.style.position = 'relative';
        this._editorElement.style.top = formattingbarElement.offsetHeight + "px";
        formattingbarElement.style.top = "-" + this._editorElement.offsetHeight + "px";
        var iframe = this._editorElement.querySelector('iframe');
        if (iframe) {
            iframe.contentDocument.addEventListener('paste', this._onBeforePaste, true);
            var ariaLabel = odsp_utilities_bundle_lib["StringHelper"].format(RteStrings_resx["a" /* default */].RichTextEditorIframeTitle, this.props.ariaLabel || '', RteStrings_resx["a" /* default */].RichTextEditorAriaLabel);
            iframe.setAttribute('title', ariaLabel);
        }
        this._initPagePicker();
    };
    WebPartRte.prototype._finalizeAction = function (ariaActionName) {
        _super.prototype._finalizeAction.call(this, ariaActionName);
        if (this.props.onChanged) {
            this.props.onChanged(this._editor ? this._editor.getHTML() : this.props.innerHTML);
        }
    };
    WebPartRte.prototype._handleKeyDown = function (evt) {
    };
    WebPartRte.prototype._handleEditorKeyDown = function (evt) {
        if (Object(RteA11y["d" /* isKey */])(121 , evt, true)  && this._formattingbarElement) {
            sp_telemetry_["_EngagementLogger"].logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            Object(RteA11y["g" /* navigateInside */])(this._formattingbarElement);
            var screenReaderInstruction = odsp_utilities_bundle_lib["StringHelper"].format(RteStrings_resx["a" /* default */].RichTextNavigationAltF10Keys, RteStrings_resx["a" /* default */].ToolbarNavigationArrowKeys, RteStrings_resx["a" /* default */].ToolbarNavigationShiftTabKey);
            Object(RteA11y["a" /* ariaAlert */])(screenReaderInstruction);
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (Object(RteA11y["d" /* isKey */])('K'.charCodeAt(0), evt, false, true) ) {
            this._handleLink();
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (!Object(RteA11y["d" /* isKey */])(9 , evt) && !Object(RteA11y["d" /* isKey */])(9 , evt, false, false, true) ) {
            this._redispatchKeyboardEvent(evt);
        }
    };
    WebPartRte.prototype._redispatchKeyboardEvent = function (evt) {
        var emptyEvent = document.createEvent('Event');
        emptyEvent.initEvent(evt.type, true, true);
        var clonedEvent = Object(sp_lodash_subset_["merge"])(emptyEvent, {
            keyCode: evt.keyCode,
            code: evt.code,
            which: evt.which,
            altKey: evt.altKey,
            ctrlKey: evt.ctrlKey
        });
        if (this._editorElement) {
            this._editorElement.dispatchEvent(clonedEvent);
        }
    };
    WebPartRte.defaultOptions = {
        editor: webPartRte_CKEditorForWebPartRte,
        config: new SPRteCKEditorConfiguration["a" /* default */](),
        loader: webPartRte_CKEditorForWebPartRte.moduleLoader
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WebPartRte.prototype, "_handleEditorKeyDown", null);
    return WebPartRte;
}(BaseRte["a" /* BaseRte */]));
/* harmony default export */ var webPartRte_WebPartRte = (WebPartRte_WebPartRte);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/sp-canvas/toolbar/toolbarButton/ToolbarButton.js
var ToolbarButton = __webpack_require__(30);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas/lib/index.js






// CONCATENATED MODULE: C:/agent/1/_work/5/s/spfx-core/sp-webpart-base/lib/propertyPane/propertyPaneController/PropertyPaneController.module.scss.js
__webpack_require__(269);
var PropertyPaneController_module_scss_styles = {
    showPane: 'showPane_60798c51',
    spPropertyPaneContainer: 'spPropertyPaneContainer_60798c51',
    shrinkContent: 'shrinkContent_60798c51',
};
/* harmony default export */ var PropertyPaneController_module_scss = (PropertyPaneController_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/canvasHost/CanvasHost.module.scss.js
__webpack_require__(271);
var CanvasHost_module_scss_styles = {
    canvasHost: 'canvasHost_4b2a34d3',
    belowHeader: 'belowHeader_4b2a34d3',
    content: 'content_4b2a34d3',
    hasHeader: 'hasHeader_4b2a34d3',
    hasCommandBar: 'hasCommandBar_4b2a34d3',
    NavPane: 'NavPane_4b2a34d3',
};
/* harmony default export */ var CanvasHost_module_scss = (CanvasHost_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/canvasHost/CanvasHost.resx.js
var CanvasHost_resx_key = '_vd/LT/qfiQhbHFfeM1GtlA';
var CanvasHost_resx_allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var CanvasHost_resx_strings = CanvasHost_resx_allStrings[CanvasHost_resx_key];
/* harmony default export */ var CanvasHost_resx = (CanvasHost_resx_strings);

// CONCATENATED MODULE: ./lib/components/canvasHost/CanvasHost.js








var CanvasHost_CanvasHost = (function (_super) {
    tslib_es6["__extends"](CanvasHost, _super);
    function CanvasHost() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CanvasHost.prototype.componentDidMount = function () {
        var _this = this;
        var canvasOptions = {
            serviceScope: this.props.store.serviceScope,
            mode: this._getDisplayMode()
        };
        this._canvasPromise =
            canvas_Canvas.instantiateCanvas(this._canvasElement, canvasOptions).then(function (canvas) {
                _this._canvas = canvas;
                if (canvasOptions.mode === sp_core_library_["DisplayMode"].Edit) {
                    _this._setDisplayModePromise = Promise.resolve();
                }
                _this._afterCanvasInitialized();
            });
    };
    CanvasHost.prototype.componentDidUpdate = function (props) {
        var _this = this;
        var mode = this._getDisplayMode();
        if (this._canvas) {
            this._canvasPromise.then(function () {
                _this._setDisplayModePromise = _this._canvas.setDisplayMode(mode);
            });
        }
    };
    CanvasHost.prototype.render = function () {
        var _this = this;
        var rootClass = Object(office_ui_fabric_react_bundle_["css"])(CanvasHost_module_scss.canvasHost, (_a = {},
            _a[CanvasHost_module_scss.hasHeader] = this.props.hasOfficeHeader,
            _a[CanvasHost_module_scss.hasCommandBar] = this.props.hasCommandBar,
            _a));
        return (external__react_["createElement"]("div", { className: rootClass },
            external__react_["createElement"]("div", { className: CanvasHost_module_scss.belowHeader },
                external__react_["createElement"]("div", { className: CanvasHost_module_scss.content },
                    external__react_["createElement"]("div", { ref: function (canvasElement) { return _this._canvasElement = canvasElement; } })))));
        var _a;
    };
    CanvasHost.prototype._getDisplayMode = function () {
        return this.props.isEditing ? sp_core_library_["DisplayMode"].Edit : sp_core_library_["DisplayMode"].Read;
    };
    CanvasHost.prototype._clearPage = function () {
        this._canvas.render(this._getDisplayMode());
        var propertyPaneContainer = document.getElementById('propertyPaneContainer');
        if (propertyPaneContainer) {
            propertyPaneContainer.classList.remove(PropertyPaneController_module_scss.showPane);
            window.setTimeout(function () {
                while (propertyPaneContainer.firstChild) {
                    propertyPaneContainer.removeChild(propertyPaneContainer.firstChild);
                }
            }, 1000);
        }
    };
    CanvasHost.prototype._afterCanvasInitialized = function () {
        var _this = this;
        this.props.store.getPageReadyPromise().then(function () {
            var render = function () {
                _this._canvas.render(_this._getDisplayMode(), _this.props.store.getPageState());
                _this.props.store.setClearCallback(_this._clearPage);
                _this.props.store.setSerializeCallback(_this._canvas.serialize);
            };
            _this._canvas.fetchWebparts(true)
                .then(render)
                .catch(function (error) {
                console.error(sp_core_library_["Text"].format(CanvasHost_resx.FetchFailedError, error));
                render();
            });
        });
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], CanvasHost.prototype, "_clearPage", null);
    return CanvasHost;
}(external__react_["Component"]));
/* harmony default export */ var canvasHost_CanvasHost = (CanvasHost_CanvasHost);

// CONCATENATED MODULE: ./lib/components/mobilePreview/MobilePreviewDevices.js
var mobilePreviewDevices = {
    phones: [
        { name: 'iPhone 6 Plus', width: 414, height: 736 },
        { name: 'Samsung Galaxy S6/S7', width: 360, height: 640 },
        { name: 'iPhone 5', width: 320, height: 568 },
        { name: 'Microsoft Lumia 1520', width: 432, height: 768 }
    ],
    tablets: [
        { name: 'Microsoft Surface Pro 3', width: 1440, height: 960 },
        { name: 'Microsoft Surface Pro', width: 1280, height: 720 },
        { name: 'iPad', width: 1024, height: 768 },
        { name: 'iPad Pro', width: 1366, height: 1024 },
        { name: 'Samsung Galaxy Tab', width: 1280, height: 800 }
    ],
    desktops: []
};

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewClickStop/MobilePreviewClickStop.module.scss.js
__webpack_require__(273);
var MobilePreviewClickStop_module_scss_styles = {
    clickStop: 'clickStop_e0b2a17f',
    clickStopSelected: 'clickStopSelected_e0b2a17f',
    navBarItem: 'navBarItem_e0b2a17f',
};
/* harmony default export */ var MobilePreviewClickStop_module_scss = (MobilePreviewClickStop_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/MobilePreview.resx.js
var MobilePreview_resx_key = '_1JArBGDet5Uj9pJOV/9sFw';
var MobilePreview_resx_allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var MobilePreview_resx_strings = MobilePreview_resx_allStrings[MobilePreview_resx_key];
/* harmony default export */ var MobilePreview_resx = (MobilePreview_resx_strings);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewClickStop/MobilePreviewClickStop.js







var MobilePreviewClickStop_MobilePreviewClickStop = (function (_super) {
    tslib_es6["__extends"](MobilePreviewClickStop, _super);
    function MobilePreviewClickStop(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewClickStop.prototype.render = function () {
        var _this = this;
        var effectiveWidth = this.props.device.width;
        if (this.props.deviceType === DeviceType.Phone) {
            if (this.props.orientation === DeviceOrientation.Landscape) {
                effectiveWidth = this.props.device.height;
            }
        }
        else if (this.props.deviceType === DeviceType.Tablet) {
            if (this.props.orientation === DeviceOrientation.Portrait) {
                effectiveWidth = this.props.device.height;
            }
        }
        var leftCalc = "calc(50% - " + effectiveWidth / 2 + "px)";
        var divStyle = {
            width: effectiveWidth,
            left: leftCalc
        };
        var className = Object(office_ui_fabric_react_bundle_["css"])(MobilePreviewClickStop_module_scss.navBarItem, MobilePreviewClickStop_module_scss.clickStop, (_a = {},
            _a[MobilePreviewClickStop_module_scss.clickStopSelected] = this.props.selected,
            _a));
        return (external__react_["createElement"]("li", { className: className, role: 'button', "aria-label": this.props.device.name, tabIndex: 0, onClick: this._handleClick, onKeyDown: this._handleKeyDown, style: divStyle, onFocus: this._handleFocus, ref: function (c) { return _this._mainDiv = c; } }));
        var _a;
    };
    MobilePreviewClickStop.prototype._handleFocus = function () {
        if (document.activeElement === this._mainDiv && !this.props.selected) {
            this.context.a11yManager.alert(MobilePreview_resx.ScreenReaderDevicePickerSelectionChanged);
        }
    };
    MobilePreviewClickStop.prototype._handleClick = function () {
        this.props.onClick(this.props.device);
    };
    MobilePreviewClickStop.prototype._handleKeyDown = function (evt) {
        if (evt.keyCode === 13) {
            this._handleClick();
        }
    };
    MobilePreviewClickStop.contextTypes = {
        a11yManager: prop_types["object"]
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreviewClickStop.prototype, "_handleFocus", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreviewClickStop.prototype, "_handleClick", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreviewClickStop.prototype, "_handleKeyDown", null);
    return MobilePreviewClickStop;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewClickStop_MobilePreviewClickStop = (MobilePreviewClickStop_MobilePreviewClickStop);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewClickStopBar/MobilePreviewClickStopBar.module.scss.js
__webpack_require__(275);
var MobilePreviewClickStopBar_module_scss_styles = {
    clickStopNavBar: 'clickStopNavBar_310706ca',
    navBarItems: 'navBarItems_310706ca',
    mobilePreviewDeviceTitle: 'mobilePreviewDeviceTitle_310706ca',
};
/* harmony default export */ var MobilePreviewClickStopBar_module_scss = (MobilePreviewClickStopBar_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewClickStopBar/MobilePreviewClickStopBar.js






var MobilePreviewClickStopBar_MobilePreviewClickStopBar = (function (_super) {
    tslib_es6["__extends"](MobilePreviewClickStopBar, _super);
    function MobilePreviewClickStopBar(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewClickStopBar.prototype.render = function () {
        var props = this.props;
        var deviceDiv = [];
        var _loop_1 = function (device) {
            var selected = false;
            if (device === props.currentDevice) {
                selected = true;
            }
            deviceDiv.push(external__react_["createElement"](mobilePreviewClickStop_MobilePreviewClickStop, { key: device.name, device: device, onClick: function () { return props.onSelectClickStop(device); }, selected: selected, orientation: props.currentOrientation, deviceType: this_1.props.deviceType }));
        };
        var this_1 = this;
        for (var _i = 0, _a = props.devices; _i < _a.length; _i++) {
            var device = _a[_i];
            _loop_1(device);
        }
        return (external__react_["createElement"]("div", { className: MobilePreviewClickStopBar_module_scss.clickStopNavBar, "data-sp-a11y-alertonfocusin": MobilePreview_resx.ScreenReaderDevicePickerEntered },
            external__react_["createElement"](office_ui_fabric_react_bundle_["FocusZone"], { direction: office_ui_fabric_react_bundle_["FocusZoneDirection"].horizontal },
                external__react_["createElement"]("ul", { className: MobilePreviewClickStopBar_module_scss.navBarItems },
                    deviceDiv,
                    external__react_["createElement"]("div", { id: 'clickStopBarLabel', className: MobilePreviewClickStopBar_module_scss.mobilePreviewDeviceTitle }, props.currentDevice.name)))));
    };
    return MobilePreviewClickStopBar;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewClickStopBar_MobilePreviewClickStopBar = (MobilePreviewClickStopBar_MobilePreviewClickStopBar);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewHeaderBar/MobilePreviewHeaderBar.module.scss.js
__webpack_require__(277);
var MobilePreviewHeaderBar_module_scss_styles = {
    mobilePreviewNavBar: 'mobilePreviewNavBar_72d6885f',
    navBarItems: 'navBarItems_72d6885f',
    navBarItemSm: 'navBarItemSm_72d6885f',
    navBarItemMd: 'navBarItemMd_72d6885f',
    navBarItem: 'navBarItem_72d6885f',
    'ms-Grid': 'ms-Grid_72d6885f',
    navBarItemRight: 'navBarItemRight_72d6885f',
    mobilePreviewTitle: 'mobilePreviewTitle_72d6885f',
    mobilePreviewXIcon: 'mobilePreviewXIcon_72d6885f',
    col: 'col_72d6885f',
};
/* harmony default export */ var MobilePreviewHeaderBar_module_scss = (MobilePreviewHeaderBar_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewURLEntry/MobilePreviewURLEntry.module.scss.js
__webpack_require__(279);
var MobilePreviewURLEntry_module_scss_styles = {
    mobilePreviewURLbar: 'mobilePreviewURLbar_88cc42d7',
    mobilePreviewTextfield: 'mobilePreviewTextfield_88cc42d7',
    mobilePreviewURLbutton: 'mobilePreviewURLbutton_88cc42d7',
};
/* harmony default export */ var MobilePreviewURLEntry_module_scss = (MobilePreviewURLEntry_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewURLEntry/MobilePreviewURLEntry.js





var MobilePreviewURLEntry_MobilePreviewURLEntry = (function (_super) {
    tslib_es6["__extends"](MobilePreviewURLEntry, _super);
    function MobilePreviewURLEntry() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewURLEntry.prototype.render = function () {
        return (external__react_["createElement"]("div", { className: MobilePreviewURLEntry_module_scss.mobilePreviewURLbar },
            external__react_["createElement"](office_ui_fabric_react_bundle_["TextField"], tslib_es6["__assign"]({ className: MobilePreviewURLEntry_module_scss.mobilePreviewTextfield, onChanged: this._validateAndCompleteURL }, { placeholder: MobilePreview_resx.UrlTextBoxPlaceholder } )),
            external__react_["createElement"](office_ui_fabric_react_bundle_["Button"], { className: MobilePreviewURLEntry_module_scss.mobilePreviewURLbutton, onClick: this.props.onClickURLSubmit }, "View Preview")));
    };
    MobilePreviewURLEntry.prototype._validateAndCompleteURL = function (value) {
        if (!value || value === '') {
            return;
        }
        var regex = /https?:\/\//;
        if (!regex.test(value)) {
            value = 'http://' + value;
        }
        this.props.onChangeURL(value);
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreviewURLEntry.prototype, "_validateAndCompleteURL", null);
    return MobilePreviewURLEntry;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewURLEntry_MobilePreviewURLEntry = (MobilePreviewURLEntry_MobilePreviewURLEntry);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewDeviceTypeSelector/MobilePreviewDeviceTypeSelector.module.scss.js
__webpack_require__(281);
var MobilePreviewDeviceTypeSelector_module_scss_styles = {
    mobilePreviewDeviceIcon: 'mobilePreviewDeviceIcon_c7e819cb',
    navBarItemRight: 'navBarItemRight_c7e819cb',
};
/* harmony default export */ var MobilePreviewDeviceTypeSelector_module_scss = (MobilePreviewDeviceTypeSelector_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewDeviceTypeSelector/MobilePreviewDeviceTypeSelector.js





var MobilePreviewDeviceTypeSelector_MobilePreviewDeviceTypeSelector = (function (_super) {
    tslib_es6["__extends"](MobilePreviewDeviceTypeSelector, _super);
    function MobilePreviewDeviceTypeSelector() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewDeviceTypeSelector.prototype.render = function () {
        var _this = this;
        var spanClassNameMobile = Object(office_ui_fabric_react_bundle_["css"])(Object(office_ui_fabric_react_bundle_["getIconClassName"])('CellPhone'), MobilePreviewDeviceTypeSelector_module_scss.mobilePreviewDeviceIcon);
        var spanClassNameTablet = Object(office_ui_fabric_react_bundle_["css"])(Object(office_ui_fabric_react_bundle_["getIconClassName"])('Tablet'), MobilePreviewDeviceTypeSelector_module_scss.mobilePreviewDeviceIcon);
        return (external__react_["createElement"]("div", null,
            external__react_["createElement"]("div", { className: MobilePreviewDeviceTypeSelector_module_scss.navBarItemRight },
                external__react_["createElement"]("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(DeviceType.Phone); } },
                    external__react_["createElement"]("span", { className: spanClassNameMobile }))),
            external__react_["createElement"]("div", { className: MobilePreviewDeviceTypeSelector_module_scss.navBarItemRight },
                external__react_["createElement"]("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(DeviceType.Tablet); } },
                    external__react_["createElement"]("span", { className: spanClassNameTablet })))));
    };
    return MobilePreviewDeviceTypeSelector;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewDeviceTypeSelector_MobilePreviewDeviceTypeSelector = (MobilePreviewDeviceTypeSelector_MobilePreviewDeviceTypeSelector);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewHeaderBar/MobilePreviewHeaderBar.js






var MobilePreviewHeaderBar_MobilePreviewHeaderBar = (function (_super) {
    tslib_es6["__extends"](MobilePreviewHeaderBar, _super);
    function MobilePreviewHeaderBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewHeaderBar.prototype.render = function () {
        var mobilePreviewURLEntry = external__react_["createElement"](mobilePreviewURLEntry_MobilePreviewURLEntry, { onChangeURL: this.props.onChangeURL, onClickURLSubmit: this.props.onClickURLSubmit });
        var mobilePreviewDeviceTypeSelector = external__react_["createElement"](mobilePreviewDeviceTypeSelector_MobilePreviewDeviceTypeSelector, { onChangeDeviceType: this.props.onChangeDeviceType });
        var navBarItemMdClass = Object(office_ui_fabric_react_bundle_["css"])('ms-hiddenMdDown', MobilePreviewHeaderBar_module_scss.navBarItemMd);
        var navBarItemRightClass = Object(office_ui_fabric_react_bundle_["css"])(MobilePreviewHeaderBar_module_scss.navBarItem, MobilePreviewHeaderBar_module_scss.navBarItemRight);
        var xClass = Object(office_ui_fabric_react_bundle_["css"])(Object(office_ui_fabric_react_bundle_["getIconClassName"])('Cancel'), MobilePreviewHeaderBar_module_scss.mobilePreviewXIcon);
        return (external__react_["createElement"]("div", { className: MobilePreviewHeaderBar_module_scss.mobilePreviewNavBar },
            external__react_["createElement"]("div", { className: MobilePreviewHeaderBar_module_scss.navBarItems },
                external__react_["createElement"]("div", { className: MobilePreviewHeaderBar_module_scss.navBarItemSm },
                    external__react_["createElement"]("span", { className: MobilePreviewHeaderBar_module_scss.mobilePreviewTitle }, "Mobile Preview")),
                external__react_["createElement"]("div", { className: navBarItemMdClass }, mobilePreviewURLEntry),
                external__react_["createElement"]("div", { className: MobilePreviewHeaderBar_module_scss.col },
                    external__react_["createElement"]("div", { className: navBarItemRightClass },
                        external__react_["createElement"]("a", { role: 'button', onClick: this.props.onExit },
                            external__react_["createElement"]("span", { className: xClass }))),
                    mobilePreviewDeviceTypeSelector))));
    };
    return MobilePreviewHeaderBar;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewHeaderBar_MobilePreviewHeaderBar = (MobilePreviewHeaderBar_MobilePreviewHeaderBar);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewDeviceView/MobilePreviewDeviceView.module.scss.js
__webpack_require__(283);
var MobilePreviewDeviceView_module_scss_styles = {
    mobilePreviewDevice: 'mobilePreviewDevice_4799eba0',
    mobilePreviewPortrait: 'mobilePreviewPortrait_4799eba0',
    mobilePreviewLandscape: 'mobilePreviewLandscape_4799eba0',
    mobilePreviewTablet: 'mobilePreviewTablet_4799eba0',
    mobilePreviewIframe: 'mobilePreviewIframe_4799eba0',
};
/* harmony default export */ var MobilePreviewDeviceView_module_scss = (MobilePreviewDeviceView_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewDeviceView/MobilePreviewDeviceView.js





var MobilePreviewDeviceView_MobilePreviewDeviceView = (function (_super) {
    tslib_es6["__extends"](MobilePreviewDeviceView, _super);
    function MobilePreviewDeviceView(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDeviceView.prototype.render = function () {
        var formStyle = {
            width: this.props.currentDevice.width,
            height: this.props.currentDevice.height
        };
        var mobilePreviewClassName = Object(office_ui_fabric_react_bundle_["css"])(MobilePreviewDeviceView_module_scss.mobilePreviewDevice, this.props.deviceType === DeviceType.Tablet ? MobilePreviewDeviceView_module_scss.mobilePreviewTablet :
            this.props.currentOrientation === DeviceOrientation.Portrait ? MobilePreviewDeviceView_module_scss.mobilePreviewPortrait :
                MobilePreviewDeviceView_module_scss.mobilePreviewLandscape);
        if (this.props.deviceType === DeviceType.Phone) {
            if (this.props.currentOrientation === DeviceOrientation.Landscape) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        if (this.props.deviceType === DeviceType.Tablet) {
            if (this.props.currentOrientation === DeviceOrientation.Portrait) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        return (external__react_["createElement"]("div", { className: mobilePreviewClassName, style: formStyle },
            external__react_["createElement"]("iframe", { className: MobilePreviewDeviceView_module_scss.mobilePreviewIframe, src: this.props.url })));
    };
    return MobilePreviewDeviceView;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewDeviceView_MobilePreviewDeviceView = (MobilePreviewDeviceView_MobilePreviewDeviceView);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewDimensionInput/MobilePreviewDimensionInput.module.scss.js
__webpack_require__(285);
var MobilePreviewDimensionInput_module_scss_styles = {
    xField: 'xField_38bf9b5c',
    yField: 'yField_38bf9b5c',
    mobilePreviewTextfieldXY: 'mobilePreviewTextfieldXY_38bf9b5c',
    xyTextfields: 'xyTextfields_38bf9b5c',
    xyLabels: 'xyLabels_38bf9b5c',
};
/* harmony default export */ var MobilePreviewDimensionInput_module_scss = (MobilePreviewDimensionInput_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewDimensionInput/MobilePreviewDimensionInput.js





var MobilePreviewDimensionInput_MobilePreviewDimensionInput = (function (_super) {
    tslib_es6["__extends"](MobilePreviewDimensionInput, _super);
    function MobilePreviewDimensionInput(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDimensionInput.prototype.render = function () {
        var xContainerClassName = Object(office_ui_fabric_react_bundle_["css"])(MobilePreviewDimensionInput_module_scss.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss.xField);
        var yContainerClassName = Object(office_ui_fabric_react_bundle_["css"])(MobilePreviewDimensionInput_module_scss.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss.yField);
        return (external__react_["createElement"]("div", null,
            external__react_["createElement"]("div", { className: xContainerClassName },
                external__react_["createElement"]("label", { className: MobilePreviewDimensionInput_module_scss.xyLabels }, MobilePreview_resx.Width + ":"),
                external__react_["createElement"]("input", { "aria-label": MobilePreview_resx.Width, className: MobilePreviewDimensionInput_module_scss.xyTextfields, onChange: this.props.onChangedX, value: this.props.currentDevice.width.toString() })),
            external__react_["createElement"]("div", { className: yContainerClassName },
                external__react_["createElement"]("label", { className: MobilePreviewDimensionInput_module_scss.xyLabels }, MobilePreview_resx.Height + ":"),
                external__react_["createElement"]("input", { "aria-label": MobilePreview_resx.Height, className: MobilePreviewDimensionInput_module_scss.xyTextfields, onChange: this.props.onChangedY, value: this.props.currentDevice.height.toString() }))));
    };
    return MobilePreviewDimensionInput;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewDimensionInput_MobilePreviewDimensionInput = (MobilePreviewDimensionInput_MobilePreviewDimensionInput);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewRotate/MobilePreviewRotate.module.scss.js
__webpack_require__(287);
var MobilePreviewRotate_module_scss_styles = {
    mobilePreviewRotateIcon: 'mobilePreviewRotateIcon_b15be5d5',
};
/* harmony default export */ var MobilePreviewRotate_module_scss = (MobilePreviewRotate_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreviewRotate/MobilePreviewRotate.js





var MobilePreviewRotate_MobilePreviewRotate = (function (_super) {
    tslib_es6["__extends"](MobilePreviewRotate, _super);
    function MobilePreviewRotate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewRotate.prototype.render = function () {
        var rotateIconClass = Object(office_ui_fabric_react_bundle_["css"])(Object(office_ui_fabric_react_bundle_["getIconClassName"])('Refresh'), MobilePreviewRotate_module_scss.mobilePreviewRotateIcon);
        return (external__react_["createElement"]("div", null,
            external__react_["createElement"]("a", { role: 'button', onClick: this._onClickRotate },
                external__react_["createElement"]("span", { className: rotateIconClass }))));
    };
    MobilePreviewRotate.prototype._onClickRotate = function () {
        var orientation = this.props.currentOrientation === DeviceOrientation.Portrait
            ? DeviceOrientation.Landscape
            : DeviceOrientation.Portrait;
        this.props.onRotate(orientation);
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreviewRotate.prototype, "_onClickRotate", null);
    return MobilePreviewRotate;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreviewRotate_MobilePreviewRotate = (MobilePreviewRotate_MobilePreviewRotate);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreview/MobilePreview.module.scss.js
__webpack_require__(289);
var MobilePreview_module_scss_styles = {
    mobilePreviewContainer: 'mobilePreviewContainer_e24a3989',
    mobilePreviewDeviceContainer: 'mobilePreviewDeviceContainer_e24a3989',
};
/* harmony default export */ var MobilePreview_module_scss = (MobilePreview_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/mobilePreview/mobilePreview/MobilePreview.js











var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["Phone"] = 0] = "Phone";
    DeviceType[DeviceType["Tablet"] = 1] = "Tablet";
})(DeviceType = DeviceType || (DeviceType = {}));
var DeviceOrientation;
(function (DeviceOrientation) {
    DeviceOrientation[DeviceOrientation["Portrait"] = 0] = "Portrait";
    DeviceOrientation[DeviceOrientation["Landscape"] = 1] = "Landscape";
})(DeviceOrientation = DeviceOrientation || (DeviceOrientation = {}));
var MobilePreview_MobilePreview = (function (_super) {
    tslib_es6["__extends"](MobilePreview, _super);
    function MobilePreview(props) {
        var _this = _super.call(this, props) || this;
        _this.inProgressURL = '';
        if (!_this.props.devices) {
            _this.devices = mobilePreviewDevices;
        }
        else {
            _this.devices = _this.props.devices;
        }
        var deviceType = _this.props.deviceType || DeviceType.Phone;
        _this.defaultPhone = _this.devices.phones[_this.devices.phones.length - 1];
        _this.defaultTablet = _this.devices.tablets[_this.devices.tablets.length - 1];
        _this.state = {
            currentOrientation: deviceType === DeviceType.Phone ?
                DeviceOrientation.Portrait : DeviceOrientation.Landscape,
            currentDevice: deviceType === DeviceType.Phone ? _this.defaultPhone : _this.defaultTablet,
            deviceType: deviceType,
            url: window.location.href + '?Mode=Read'
        };
        _this._sortDevices();
        return _this;
    }
    MobilePreview.prototype.render = function () {
        var _this = this;
        this._sortDevices();
        var mobilePreviewClickStopBar = external__react_["createElement"](mobilePreviewClickStopBar_MobilePreviewClickStopBar, { currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, devices: this.state.deviceType === DeviceType.Phone ? this.devices.phones : this.devices.tablets, deviceType: this.state.deviceType, onSelectClickStop: this._onClickstopChangeForm });
        var mobilePreviewHeaderBar = external__react_["createElement"](mobilePreviewHeaderBar_MobilePreviewHeaderBar, { onChangeURL: this._onChangedURLField, onExit: this.props.onExit, onClickURLSubmit: this._onClickURL, onChangeDeviceType: this._onClickChangeDeviceType });
        var mobilePreviewDeviceView = external__react_["createElement"](mobilePreviewDeviceView_MobilePreviewDeviceView, { currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, deviceType: this.state.deviceType, url: this.state.url });
        var mobilePreviewDimensionInput = external__react_["createElement"](mobilePreviewDimensionInput_MobilePreviewDimensionInput, { currentDevice: this.state.currentDevice, onChangedX: this._onChangedX, onChangedY: this._onChangedY });
        var mobilePreviewRotate = external__react_["createElement"](mobilePreviewRotate_MobilePreviewRotate, { onRotate: this._onClickRotate, currentOrientation: this.state.currentOrientation });
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["FocusTrapZone"], null,
            external__react_["createElement"]("div", { "data-sp-a11y-zone": '1', "data-sp-a11y-alertonfocusin": MobilePreview_resx.ScreenReaderMobilePreviewEntered, className: MobilePreview_module_scss.mobilePreviewContainer, ref: function (c) { return _this._mainDiv = c; } },
                mobilePreviewHeaderBar,
                mobilePreviewClickStopBar,
                external__react_["createElement"]("div", { className: MobilePreview_module_scss.mobilePreviewDeviceContainer },
                    mobilePreviewDimensionInput,
                    mobilePreviewRotate,
                    mobilePreviewDeviceView))));
    };
    MobilePreview.prototype.componentDidMount = function () {
        if (this._mainDiv) {
            this._mainDiv.addEventListener('keydown', this._handleKeyDown, true);
        }
    };
    MobilePreview.prototype._onClickstopChangeForm = function (device) {
        this.setState({
            currentDevice: device,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onClickRotate = function (orientation) {
        this.setState({
            currentDevice: this.state.currentDevice,
            currentOrientation: orientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onClickChangeDeviceType = function (type) {
        this.setState({
            currentDevice: type === DeviceType.Phone ? this.defaultPhone : this.defaultTablet,
            currentOrientation: type === DeviceType.Phone ? DeviceOrientation.Portrait : DeviceOrientation.Landscape,
            deviceType: type,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedX = function (event) {
        var heightTarget = event.target;
        var customDevice = {
            name: 'Custom Device',
            width: +heightTarget.value,
            height: this.state.currentDevice.height
        };
        this.setState({
            currentDevice: customDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedY = function (event) {
        var heightTarget = event.target;
        var customDevice = {
            name: 'Custom Device',
            height: +heightTarget.value,
            width: this.state.currentDevice.width
        };
        this.setState({
            currentDevice: customDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedURLField = function (value) {
        this.inProgressURL = value;
    };
    MobilePreview.prototype._onClickURL = function () {
        if (this.inProgressURL === '' || this.inProgressURL === undefined) {
            return;
        }
        this.setState({
            currentDevice: this.state.currentDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.inProgressURL
        });
    };
    MobilePreview.prototype._handleKeyDown = function (evt) {
        if (evt.keyCode === 27) {
            this.props.onExit();
        }
    };
    MobilePreview.prototype._sortDevices = function () {
        if (this.state.deviceType === DeviceType.Phone) {
            this.devices.phones.sort(this._comparePhones);
            this.defaultPhone = this.devices.phones[this.devices.phones.length - 1];
        }
        else {
            this.devices.tablets.sort(this._compareTablets);
            this.defaultTablet = this.devices.tablets[this.devices.tablets.length - 1];
        }
    };
    MobilePreview.prototype._comparePhones = function (deviceA, deviceB) {
        var aMeasure = deviceA.width;
        var bMeasure = deviceB.width;
        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
            aMeasure = deviceA.height;
            bMeasure = deviceB.height;
        }
        return bMeasure - aMeasure;
    };
    MobilePreview.prototype._compareTablets = function (deviceA, deviceB) {
        var aMeasure = deviceA.height;
        var bMeasure = deviceB.height;
        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
            aMeasure = deviceA.width;
            bMeasure = deviceB.width;
        }
        return bMeasure - aMeasure;
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onClickstopChangeForm", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onClickRotate", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onClickChangeDeviceType", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onChangedX", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onChangedY", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onChangedURLField", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_onClickURL", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_handleKeyDown", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_sortDevices", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_comparePhones", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], MobilePreview.prototype, "_compareTablets", null);
    return MobilePreview;
}(external__react_["Component"]));
/* harmony default export */ var mobilePreview_MobilePreview = (MobilePreview_MobilePreview);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/5.120.0/react-dom@15.6.2+react@15.6.2/node_modules/office-ui-fabric-react/lib/components/Pivot/Pivot.js
var Pivot = __webpack_require__(291);
var Pivot_default = /*#__PURE__*/__webpack_require__.n(Pivot);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/5.120.0/react-dom@15.6.2+react@15.6.2/node_modules/office-ui-fabric-react/lib/components/Pivot/PivotItem.js
var PivotItem = __webpack_require__(301);
var PivotItem_default = /*#__PURE__*/__webpack_require__.n(PivotItem);

// CONCATENATED MODULE: ./lib/components/serializedCanvasView/encodingUtilities.js

function htmlEncode(str) {
    if (str) {
        return str
            .replace(/\&/g, '&amp;')
            .replace(/\</g, '&lt;')
            .replace(/\>/g, '&gt;');
    }
    else {
        return str;
    }
}
function getReactLines(str) {
    if (str) {
        if (typeof str === 'string') {
            str = str.split('\n');
        }
        var encodedLines = str.map(function (line) { return htmlEncode(line).replace(/\s/g, '&nbsp;'); });
        return (external__react_["createElement"]("div", { dangerouslySetInnerHTML: { __html: encodedLines.join('<br />') } }));
    }
}

// CONCATENATED MODULE: ./lib/components/serializedCanvasView/serializedWebPart/SerializedWebPart.module.scss.js
__webpack_require__(302);
var SerializedWebPart_module_scss_styles = {
    serializedWebPartItem: 'serializedWebPartItem_1892135d',
};
/* harmony default export */ var SerializedWebPart_module_scss = (SerializedWebPart_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/serializedCanvasView/SerializedCanvasView.module.scss.js
__webpack_require__(304);
var SerializedCanvasView_module_scss_styles = {
    container: 'container_a2e64628',
    content: 'content_a2e64628',
    pivotItem: 'pivotItem_a2e64628',
    learnMoreLink: 'learnMoreLink_a2e64628',
    serializedTextArea: 'serializedTextArea_a2e64628',
};
/* harmony default export */ var SerializedCanvasView_module_scss = (SerializedCanvasView_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/serializedCanvasView/serializedWebPart/SerializedWebPart.js







var SerializedWebPart_SerializedWebPart = (function (_super) {
    tslib_es6["__extends"](SerializedWebPart, _super);
    function SerializedWebPart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedWebPart.prototype.render = function () {
        var serializedString = sp_webpart_base_["WebPartDataConverter"].convertWebPartDataToHtml(this.props.serializedWebPart);
        var escapedSerializedString = htmlEncode(serializedString);
        var webPartXmlLines = ['<webParts>',
            '  <webPart xmlns="http://schemas.microsoft.com/WebPart/v3">',
            '    <metaData>',
            '      <type name="Microsoft.SharePoint.WebPartPages.ClientSideWebPart,',
            '        Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" />',
            '      <importErrorMessage>Cannot Import WebPart</importErrorMessage>',
            '    </metaData>',
            '    <data>',
            '      <properties>',
            "        <property name=\"Title\" type=\"string\">" + this.props.serializedWebPart.title + "</property>",
            "        <property name=\"Description\" type=\"string\">" + this.props.serializedWebPart.description + "</property>",
            "        <property name=\"IconUrl\" type=\"string\">" + '' + "</property>",
            "        <property name=\"ClientSideWebPartId\">" + this.props.serializedWebPart.id + "</property>",
            "        <property name=\"ClientSideWebPartData\" type=\"string\">" + escapedSerializedString + "</property>",
            '      </properties>',
            '    </data>',
            '  </webPart>',
            '</webParts>'];
        return (external__react_["createElement"]("p", { key: this.props.serializedWebPart.instanceId, className: Object(office_ui_fabric_react_bundle_["css"])(SerializedWebPart_module_scss.serializedWebPartItem, SerializedCanvasView_module_scss.serializedTextArea) }, getReactLines(webPartXmlLines)));
    };
    return SerializedWebPart;
}(external__react_["Component"]));
/* harmony default export */ var serializedWebPart_SerializedWebPart = (SerializedWebPart_SerializedWebPart);

// CONCATENATED MODULE: ./lib/components/serializedCanvasView/SerializedCanvasView.resx.js
var SerializedCanvasView_resx_key = '_8EVKOH1av6NjR/ZNfdafrw';
var SerializedCanvasView_resx_allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var SerializedCanvasView_resx_strings = SerializedCanvasView_resx_allStrings[SerializedCanvasView_resx_key];
/* harmony default export */ var SerializedCanvasView_resx = (SerializedCanvasView_resx_strings);

// CONCATENATED MODULE: ./lib/components/serializedCanvasView/SerializedCanvasView.js










var SerializedCanvasView_SerializedCanvasView = (function (_super) {
    tslib_es6["__extends"](SerializedCanvasView, _super);
    function SerializedCanvasView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedCanvasView.prototype.render = function () {
        var webpartDataCollection = (this.props.getSerializedData)
            ? JSON.parse(decodeURI(this.props.getSerializedData(true) || '[]'))
                .filter(function (controlData) { return controlData.controlType === CanvasControlType["a" /* default */].WebPartZone; })
                .map(function (controlData) { return controlData.webPartData; })
            : [];
        var serializedData = (this.props.getSerializedData) ? this.props.getSerializedData(false) : '';
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["Dialog"], { isOpen: this.props.isVisible, type: office_ui_fabric_react_bundle_["DialogType"].normal, onDismiss: this.props.closeCallback, title: SerializedCanvasView_resx.WebPartData, isBlocking: false, containerClassName: SerializedCanvasView_module_scss.container, contentClassName: SerializedCanvasView_module_scss.content },
            external__react_["createElement"]("div", null,
                external__react_["createElement"](Pivot["Pivot"], null,
                    external__react_["createElement"](PivotItem["PivotItem"], { linkText: SerializedCanvasView_resx.ModernPages },
                        external__react_["createElement"]("div", { className: SerializedCanvasView_module_scss.pivotItem },
                            external__react_["createElement"]("p", { className: SerializedCanvasView_module_scss.serializedTextArea }, getReactLines(serializedData)))),
                    external__react_["createElement"](PivotItem["PivotItem"], { linkText: SerializedCanvasView_resx.ClassicPages },
                        external__react_["createElement"]("div", { className: SerializedCanvasView_module_scss.pivotItem }, webpartDataCollection.map(function (webpartData) {
                            return external__react_["createElement"](serializedWebPart_SerializedWebPart, { key: webpartData.instanceId, serializedWebPart: webpartData });
                        })))),
                external__react_["createElement"](office_ui_fabric_react_bundle_["Link"], tslib_es6["__assign"]({ className: SerializedCanvasView_module_scss.learnMoreLink }, {
                    href: 'https://dev.office.com/sharepoint/docs/' +
                        'spfx/web-parts/get-started/provision-sp-assets-from-package',
                    target: '_blank'
                } ), SerializedCanvasView_resx.WebPartDataHelpInfoLink)),
            external__react_["createElement"](office_ui_fabric_react_bundle_["DialogFooter"], null,
                external__react_["createElement"](office_ui_fabric_react_bundle_["Button"], { onClick: this.props.closeCallback }, SerializedCanvasView_resx.Close))));
    };
    return SerializedCanvasView;
}(external__react_["Component"]));
/* harmony default export */ var serializedCanvasView_SerializedCanvasView = (SerializedCanvasView_SerializedCanvasView);

// CONCATENATED MODULE: ./lib/components/workbench/Workbench.resx.js
var Workbench_resx_key = '_IusqdbcSoVYQiit3+QRSxw';
var Workbench_resx_allStrings = ( false) ?
    require("../../resx-strings/en-us.json") :
    __webpack_require__(16);
var Workbench_resx_strings = Workbench_resx_allStrings[Workbench_resx_key];
/* harmony default export */ var Workbench_resx = (Workbench_resx_strings);

// CONCATENATED MODULE: ./lib/components/workbench/Workbench.module.scss.js
__webpack_require__(306);
var Workbench_module_scss_styles = {
    workbench: 'workbench_f801a7e9',
    header: 'header_f801a7e9',
    headerMenu: 'headerMenu_f801a7e9',
    headerTitle: 'headerTitle_f801a7e9',
    headerPerson: 'headerPerson_f801a7e9',
    pageContent: 'pageContent_f801a7e9',
    commandBar: 'commandBar_f801a7e9',
};
/* harmony default export */ var Workbench_module_scss = (Workbench_module_scss_styles);

// CONCATENATED MODULE: ./lib/components/workbench/Workbench.js












var Workbench_WorkBench = (function (_super) {
    tslib_es6["__extends"](WorkBench, _super);
    function WorkBench(props, context) {
        var _this = _super.call(this, props, context) || this;
        var urlParams = new sp_core_library_["UrlQueryParameterCollection"](window.location.href);
        _this.state = {
            displayMobilePreview: false,
            showSerializedCanvasView: false,
            mobilePreviewDeviceType: DeviceType.Phone,
            isEditing: (urlParams.getValue('Mode') !== 'Read'),
            officeHeaderTitle: Workbench_resx.Office365Title,
            hasOfficeHeader: false,
            hasCommandBar: false
        };
        _this._a11yManager = lib["A11yManager"].getInstanceById(_this.props.a11yManagerId);
        return _this;
    }
    WorkBench.prototype.getChildContext = function () {
        return {
            a11yManager: this._a11yManager
        };
    };
    WorkBench.prototype.render = function () {
        var mobilePreview = undefined;
        var pageStore = this.props.pageStore;
        if (this.state.displayMobilePreview) {
            mobilePreview = external__react_["createElement"](mobilePreview_MobilePreview, { onExit: this._closeMobilePreview, deviceType: this.state.mobilePreviewDeviceType });
        }
        var serializeCallback = pageStore.getSerializeCallback();
        return (external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])(Workbench_module_scss.workbench, 'is-focusVisible') },
            external__react_["createElement"]("div", { className: Workbench_module_scss.header },
                external__react_["createElement"]("div", { className: Workbench_module_scss.headerMenu },
                    external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { iconName: 'Waffle' })),
                external__react_["createElement"]("div", { className: Workbench_module_scss.headerTitle },
                    external__react_["createElement"]("em", null, this.state.officeHeaderTitle),
                    Workbench_resx.SharePointWorkbenchTitle),
                external__react_["createElement"]("div", { className: Workbench_module_scss.headerPerson },
                    external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { iconName: 'Contact' }))),
            external__react_["createElement"]("div", null,
                external__react_["createElement"]("div", { id: 'workbenchCommandBar', className: Workbench_module_scss.commandBar },
                    external__react_["createElement"](workbenchCommandBar_WorkbenchCommandBar, { isEditing: this.state.isEditing, onClickMobileView: this._onClickMobileView, onClickTabletView: this._onClickTabletView, toggleEdit: this._toggleEdit, clearPage: pageStore.clearPageState, savePage: pageStore.savePageState, onClickSerializeCanvasView: this._onClickSerializeCanvasView })),
                external__react_["createElement"]("div", { id: 'workbenchPageContent', className: Workbench_module_scss.pageContent },
                    external__react_["createElement"](canvasHost_CanvasHost, { store: pageStore, isEditing: this.state.isEditing, hasOfficeHeader: this.state.hasOfficeHeader, hasCommandBar: this.state.hasCommandBar }))),
            mobilePreview,
            external__react_["createElement"](serializedCanvasView_SerializedCanvasView, { getSerializedData: function (json) { return (serializeCallback) ? serializeCallback(json) : undefined; }, isVisible: this.state.showSerializedCanvasView, closeCallback: this._closeClickSerializeCanvasView })));
    };
    WorkBench.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.isEditing !== prevState.isEditing) {
            if (this.state.isEditing) {
                this._a11yManager.focusById('previewButton');
                this._a11yManager.alert(Workbench_resx.ScreenReaderDisplayModeSwitchToEditMode);
            }
            else {
                this._a11yManager.focusById('editButton');
                this._a11yManager.alert(Workbench_resx.ScreenReaderDisplayModeSwitchToReadMode);
            }
        }
    };
    WorkBench.prototype._toggleEdit = function () {
        this.setState({
            isEditing: !this.state.isEditing
        });
    };
    WorkBench.prototype._onClickMobileView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: DeviceType.Phone
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._onClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: true
        });
    };
    WorkBench.prototype._closeClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: false
        });
    };
    WorkBench.prototype._onClickTabletView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: DeviceType.Tablet
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._closeMobilePreview = function () {
        this.setState({
            displayMobilePreview: false,
            mobilePreviewDeviceType: DeviceType.Phone
        });
        this._setSuiteNavZIndex('5');
    };
    WorkBench.prototype._setSuiteNavZIndex = function (value) {
        var suiteNav = document.getElementById('SuiteNavPlaceHolder');
        if (suiteNav) {
            suiteNav.style.zIndex = value;
        }
    };
    WorkBench.childContextTypes = {
        a11yManager: prop_types["object"].isRequired
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WorkBench.prototype, "_toggleEdit", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WorkBench.prototype, "_onClickMobileView", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WorkBench.prototype, "_onClickSerializeCanvasView", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WorkBench.prototype, "_closeClickSerializeCanvasView", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WorkBench.prototype, "_onClickTabletView", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], WorkBench.prototype, "_closeMobilePreview", null);
    return WorkBench;
}(external__react_["Component"]));


// CONCATENATED MODULE: ./lib/stores/PageStore.js


var PageStore_PageStore = (function () {
    function PageStore(serviceScope) {
        var _this = this;
        this._PAGE_DATA_KEY = 'sp_webpart_workbench_state';
        this._pageReadyPromise = new Promise(function (resolve) {
            _this._resolvePageReady = resolve;
        });
        this._serviceScope = serviceScope;
        window.setInterval(this.savePageState, 3 * 1000);
    }
    Object.defineProperty(PageStore.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    PageStore.prototype.getSerializeCallback = function () {
        return this._serializePage;
    };
    PageStore.prototype.setSerializeCallback = function (callback) {
        this._serializePage = callback;
        if (window['SP']) {
            window['SP'].logSerializedPageState = callback;
        }
    };
    PageStore.prototype.setClearCallback = function (callback) {
        this._clearPage = callback;
    };
    PageStore.prototype.savePageState = function () {
        if (this._serializePage) {
            sessionStorage.setItem(this._PAGE_DATA_KEY, this._serializePage());
        }
    };
    PageStore.prototype.clearPageState = function () {
        sessionStorage.removeItem(this._PAGE_DATA_KEY);
        if (this._clearPage) {
            this._clearPage();
        }
    };
    PageStore.prototype.getPageState = function () {
        return sessionStorage.getItem(this._PAGE_DATA_KEY);
    };
    PageStore.prototype.getPageReadyPromise = function () {
        return this._pageReadyPromise;
    };
    PageStore.prototype.setPageReady = function () {
        this._resolvePageReady();
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "getSerializeCallback", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "setSerializeCallback", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "setClearCallback", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "savePageState", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "clearPageState", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "getPageState", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "getPageReadyPromise", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PageStore.prototype, "setPageReady", null);
    return PageStore;
}());


// CONCATENATED MODULE: ./lib/spWebpartWorkbench.resx.js
var spWebpartWorkbench_resx_key = '_NAR8NFw8cblGJm9t5CjqOw';
var spWebpartWorkbench_resx_allStrings = ( false) ?
    require("./resx-strings/en-us.json") :
    __webpack_require__(16);
var spWebpartWorkbench_resx_strings = spWebpartWorkbench_resx_allStrings[spWebpartWorkbench_resx_key];
/* harmony default export */ var spWebpartWorkbench_resx = (spWebpartWorkbench_resx_strings);

// CONCATENATED MODULE: ./lib/workbench.module.scss.js
__webpack_require__(308);
var workbench_module_scss_styles = {};
/* harmony default export */ var workbench_module_scss = (workbench_module_scss_styles);

// CONCATENATED MODULE: ./lib/spWebpartWorkbench.js












var DEBUG_MANIFESTS_URLS_TO_TRY = [
    'https://localhost:4321/temp/manifests.js',
    'http://localhost:4321/temp/manifests.js'
];
var spWebpartWorkbench_SpWebpartWorkbench = (function (_super) {
    tslib_es6["__extends"](SpWebpartWorkbench, _super);
    function SpWebpartWorkbench() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpWebpartWorkbench.prototype.onLoad = function () {
        var _this = this;
        this._pageStore = new PageStore_PageStore(this.context.serviceScope);
        if (window.ENVIRONMENTTYPE !== 'Local') {
            var debugManifestsPromise = sp_loader_["SPComponentLoader"]._loadDebugManifestsForWorkbench(DEBUG_MANIFESTS_URLS_TO_TRY[0]);
            var _loop_1 = function (i) {
                debugManifestsPromise.catch(function (error) {
                    return sp_loader_["SPComponentLoader"]._loadDebugManifestsForWorkbench(DEBUG_MANIFESTS_URLS_TO_TRY[i]);
                });
            };
            for (var i = 1; i < DEBUG_MANIFESTS_URLS_TO_TRY.length; i++) {
                _loop_1(i);
            }
            debugManifestsPromise.then(function () {
                console.debug(spWebpartWorkbench_resx.SuccessfullyLoadedText); 
                _this._pageStore.setPageReady();
            }).catch(function (error) {
                var errorMessage = sp_core_library_["Text"].format(spWebpartWorkbench_resx.ErrorLoadingText, error.toString());
                console.error(errorMessage); 
                _this._renderErrorDialog();
                _this._pageStore.setPageReady();
            });
        }
        else {
            this._pageStore.setPageReady();
        }
        return Promise.resolve();
    };
    SpWebpartWorkbench.prototype.onRender = function () {
        var a11yManager = lib["A11yManager"].create(this.domElement);
        external__react_dom_["render"](
        external__react_["createElement"]("div", null,
            external__react_["createElement"](Workbench_WorkBench, { pageStore: this._pageStore, a11yManagerId: a11yManager.id })), this.domElement);
    };
    SpWebpartWorkbench.prototype._renderErrorDialog = function () {
        if (!this._errorDialog) {
            var div = document.createElement('div');
            this._errorDialog = external__react_dom_["render"](external__react_["createElement"](error_ErrorDialog, null), div);
            document.body.insertBefore(div, document.body.lastChild.nextSibling);
        }
        this._errorDialog.open();
    };
    return SpWebpartWorkbench;
}(sp_application_base_["BaseApplication"]));
/* harmony default export */ var spWebpartWorkbench = __webpack_exports__["default"] = (new spWebpartWorkbench_SpWebpartWorkbench());


/***/ }),
/* 140 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_140__;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(71);
var invariant = __webpack_require__(72);
var warning = __webpack_require__(73);

var ReactPropTypesSecret = __webpack_require__(74);
var checkPropTypes = __webpack_require__(142);

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if ("dev" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey]) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
       true ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



if (true) {
  var invariant = __webpack_require__(72);
  var warning = __webpack_require__(73);
  var ReactPropTypesSecret = __webpack_require__(74);
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * This file exports members of ODSP-utilities that are directly used by telemetry. There is a second,
 *  "extended" odsp-utilities package in odsp-utilities-telemetry.ts
 *
 * IMPORTANT: When editing this file, make sure you make the corresponding edit to OdspUtilitiesWorkaroundLoader.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
// Case 1: export multiple functions from the file.
// Case 2: export a named class from the file.
var EventBase_1 = __webpack_require__(52);
exports.addEventProps = EventBase_1.addEventProps;
exports.ClonedEventType = EventBase_1.ClonedEventType;
exports.ValidationErrorType = EventBase_1.ValidationErrorType;
exports.AccountType = EventBase_1.AccountType;
exports.EventBase = EventBase_1.EventBase;
var Engagement_event_1 = __webpack_require__(34);
exports.Engagement = Engagement_event_1.Engagement;
var Nav_event_1 = __webpack_require__(144);
exports.Nav = Nav_event_1.Nav;
var PLTHttpRequest_event_1 = __webpack_require__(145);
exports.PLTHttpRequest = PLTHttpRequest_event_1.PLTHttpRequest;
var Qos_event_1 = __webpack_require__(31);
exports.Qos = Qos_event_1.Qos;
var ResultTypeEnum_1 = __webpack_require__(125);
exports.ResultTypeEnum = ResultTypeEnum_1.ResultTypeEnum;
// Case 3: export a class as default from the file.
var APICallPerformanceData_1 = __webpack_require__(126);
exports.APICallPerformanceData = APICallPerformanceData_1.default;
var AriaLoggerCore_1 = __webpack_require__(85);
exports.AriaLoggerCore = AriaLoggerCore_1.default;
var Beacon_1 = __webpack_require__(153);
exports.Beacon = Beacon_1.default;
var BeaconCache_1 = __webpack_require__(90);
exports.BeaconCache = BeaconCache_1.default;
var ControlPerformanceData_1 = __webpack_require__(164);
exports.ControlPerformanceData = ControlPerformanceData_1.default;
var CorrelationVector_1 = __webpack_require__(165);
exports.CorrelationVector = CorrelationVector_1.default;
var ErrorHelper_1 = __webpack_require__(21);
exports.ErrorHelper = ErrorHelper_1.default;
var PageTransitionType_1 = __webpack_require__(83);
exports.PageTransitionType = PageTransitionType_1.default;
var RUMOneLogger_1 = __webpack_require__(44);
exports.RumOneLogger = RUMOneLogger_1.default;



/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.Nav = SingleEventBase_1.createSingleEvent({
    eventName: 'Nav,',
    shortEventName: 'Nav'
}, {
    viewParams: 4 /* Object */,
    url: 1 /* String */
});
exports.default = exports.Nav;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.PLTHttpRequest = SingleEventBase_1.createSingleEvent({
    eventName: 'PLTHttpRequest,',
    shortEventName: 'PLTHttpRequest',
    samplingFeature: { ODB: true, ODC: 'PLTHttpRequestSampling', Fallback: false }
}, {
    startTime: 2 /* Number */,
    url: 1 /* String */,
    duration: 2 /* Number */
});
exports.default = exports.PLTHttpRequest;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CircularBuffer = /** @class */ (function () {
    function CircularBuffer(size) {
        if (size <= 0) {
            throw new Error('Size must be positive');
        }
        this._size = size;
        this._buffer = new Array(size);
        this._length = 0;
        this._head = -1;
    }
    CircularBuffer.prototype.push = function (item) {
        if (this._length < this._size) {
            this._length++;
        }
        this._head++;
        if (this._head === this._size) {
            this._head = 0;
        }
        this._buffer[this._head] = item;
    };
    CircularBuffer.prototype.popOldest = function () {
        if (this._length === 0) {
            return null;
        }
        var tail = (this._head - this._length + 1 + this._size) % this._size;
        this._length--;
        return this._buffer[tail];
    };
    return CircularBuffer;
}());
exports.CircularBuffer = CircularBuffer;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Use PlatformDetection to evaluate which user experience makes sense for the user's
 * platform. NOTE: This class is NOT COMPLETE! Meaning not all values are parsed out of
 * the user agent. If something is missing that you need, add it and add unit tests.
 * WARNING: Avoid using browser checks when you can use detection techniques for caps checking.
 */
var PlatformDetection = /** @class */ (function () {
    function PlatformDetection(inputAgent) {
        if (!inputAgent) {
            inputAgent = (window && window.navigator && navigator.userAgent) || '';
        }
        var userAgent = inputAgent;
        var agent = inputAgent.toLowerCase();
        // We want to figure out which ONE browser the user is most likely on.
        // The order of the checks is important so we're not deceived by (for example)
        // Chrome saying that it's Safari.
        // (Each regular expression captures the version number so we can parse it later.)
        var match;
        var isIE;
        var isIE9;
        var isEdge;
        var isFirefox;
        var isChrome;
        var isSafari;
        function testBrowserVersion(pattern) {
            return match = RegExp(pattern + "(\\d+)([\\d.]*)").exec(agent);
        }
        if (testBrowserVersion('msie ')) {
            // IE <= 10 has something like 'MSIE 9' in the user agent.
            // This is also what newer versions do in compatibility mode.
            isIE = true;
            isIE9 = !!match && match[1] === '9';
        }
        else if (testBrowserVersion('trident.*rv:')) {
            // This is IE 11. Sample user agent contains:
            // Trident/7.0; other stuff... rv:11.0
            isIE = true;
        }
        else if (testBrowserVersion('edge/')) {
            // This is Edge (it pretends to be Chrome and Safari).
            isEdge = true;
        }
        else if (testBrowserVersion('fxios|firefox/')) {
            isFirefox = true;
        }
        else if (testBrowserVersion('(?:chrome|crios)/')) {
            // Note: lots of random browsers say they're Chrome and will end up in this bucket
            isChrome = true;
        }
        else if (/safari\/(\d+)/.test(agent)) {
            isSafari = true;
            testBrowserVersion('version/');
        }
        // Some other browser categories:
        //   IE Mobile: /iemobile\/(\d+)/
        //   IE Mobile in desktop mode: contains WPDesktop; get version from Trident version
        //   Opera (currently goes into Chrome bucket): /opr\/(\d+)/
        // Parse the captured version number for user's browser.
        var browserMajor = match && parseInt(match[1], 10) || 0;
        var browserMinor = match && match[2] && match[2].substr(1) || '0';
        // Parse device which gives hints about os / mobile state.
        // Windows Phone IE sometimes pretends to be Android, so explicitly check for Windows Phone first.
        // (wpdesktop is used by Windows Phone in desktop mode.)
        var isWinPhone = /windows phone|wpdesktop/.test(agent);
        var deviceMatch = isWinPhone || /ipad|iphone|ipod|android/.exec(agent);
        var device = deviceMatch && deviceMatch[0];
        var isAndroid = device === 'android';
        var isIPad = device === 'ipad';
        var isIOS = !!device && !isAndroid;
        var isMac = !deviceMatch && agent.indexOf('macintosh') > -1;
        var isWindows = !deviceMatch && agent.indexOf('windows nt') > -1;
        // Other operating systems:
        //   Chrome OS: /cros/
        //   Linux: /linux/ (Android can also say it's Linux, so check for Android first)
        // WARNING: Avoid using browser checks when you can use detection techniques for caps checking.
        var isUnlimitedStyleSheetsSupported = false;
        var isWebDavSupported = false;
        var isFolderUploadSupported = false;
        var isHtml5FileUploadSupported = false;
        if (window.document) {
            /**
             * Checks to see if styleSheet exists as a property off of a style element.
             * This will determine if style registration should be done via cssText (<= IE9) or not
             */
            var emptyStyle = document.createElement('style');
            emptyStyle.type = 'text/css';
            isUnlimitedStyleSheetsSupported = !emptyStyle.styleSheet;
            isWebDavSupported = 'addBehavior' in document.createElement('div');
            var input = document.createElement('input');
            input.type = 'file';
            var file = window.File;
            var fileProto = file && file.prototype;
            isHtml5FileUploadSupported = !!(fileProto && (fileProto.slice || fileProto.mozSlice || fileProto.webkitSlice));
            isFolderUploadSupported = 'webkitdirectory' in input;
        }
        var osVersionMatch = /[\s\(](os|os x|windows (?:phone|nt)|android) ([\d._]+)/.exec(agent);
        return {
            // Browser identification
            isChrome: !!isChrome,
            isEdge: !!isEdge,
            isFirefox: !!isFirefox,
            isIE: !!isIE,
            isIE9: !!isIE9,
            isSafari: !!isSafari,
            browserName: isIE ? 'IE' : isEdge ? 'Edge' : isChrome ? 'Chrome' : isFirefox ? 'Firefox' : isSafari ? 'Safari' : 'NA',
            browserMajor: browserMajor,
            browserMinor: browserMinor,
            // OS Identification
            isAndroid: isAndroid,
            isIOS: isIOS,
            isMac: isMac,
            isWindows: isWindows,
            isWinPhone: isWinPhone,
            osVersion: osVersionMatch ? osVersionMatch[2] : 'NA',
            osName: isWindows ? 'Windows' : isWinPhone ? 'Windows Phone' : isMac ? 'OSX' : isIOS ? 'IOS' : isAndroid ? 'Android' : 'NA',
            isWindows81: !deviceMatch && /windows (?:8\.1|nt 6\.3)/.test(agent),
            isWindows10: !deviceMatch && agent.indexOf('windows nt 10') > -1,
            isWindows7: !deviceMatch && agent.indexOf('windows nt 6.1') > -1,
            // Device identification
            isMobile: !!deviceMatch,
            isIPad: isIPad,
            // Capabilities
            areCSS3TransitionsSupported: !isIE || browserMajor > 9,
            areTouchEventsSupported: 'ontouchstart' in window,
            isFolderUploadSupported: isFolderUploadSupported,
            isHtml5FileUploadSupported: isHtml5FileUploadSupported,
            isRetinaSupported: window.devicePixelRatio > 1,
            isUnlimitedStyleSheetsSupported: isUnlimitedStyleSheetsSupported,
            isWebDavSupported: isWebDavSupported,
            // Raw user agent
            userAgent: userAgent
        };
    }
    return PlatformDetection;
}());
exports.PlatformDetection = PlatformDetection;


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var performance = window.performance;
var HighResolutionTimingSupported = !!performance && typeof performance.mark === 'function' &&
    typeof performance.clearMarks === 'function' &&
    typeof performance.now === 'function';
exports.HighResolutionTimingSupported = HighResolutionTimingSupported;
exports.MARKER_PREFIX = "EUPL.";
var _markCount = 0;
var _perfMarks = window['_perfMarks'] = window['_perfMarks'] || []; // used for browsers do not support native performance.mark
function mark(name, limit) {
    'use strict';
    var markName = name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0 ? name : exports.MARKER_PREFIX + name;
    if (limit === null || limit === undefined || _markCount < limit) {
        if (HighResolutionTimingSupported) {
            performance.mark(markName);
        }
        else {
            _perfMarks.push({
                name: markName,
                startTime: Date.now()
            });
        }
        _markCount++;
    }
}
exports.mark = mark;
function getMarkerTime(name) {
    'use strict';
    var markName = name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0 ? name : exports.MARKER_PREFIX + name;
    if (HighResolutionTimingSupported) {
        var mark_1 = performance.getEntriesByName(markName);
        return mark_1 && mark_1.length > 0 ? Math.round(mark_1[0].startTime) : NaN;
    }
    else {
        var mark_2 = _perfMarks.filter(function (mark) { return mark.name === markName; })[0];
        return mark_2 && mark_2.startTime;
    }
}
exports.getMarkerTime = getMarkerTime;
function clearMarks(names) {
    'use strict';
    var markNames = [];
    if (names) {
        markNames = names.map(function (name) {
            return name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0 ? name : exports.MARKER_PREFIX + name;
        });
    }
    if (HighResolutionTimingSupported) {
        performance.getEntriesByType("mark").filter(function (mark) {
            if (markNames.length > 0) {
                return markNames.indexOf(mark.name) >= 0;
            }
            return mark.name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0;
        }).forEach(function (mark) {
            performance.clearMarks(mark.name);
        });
    }
    else {
        _perfMarks = [];
    }
}
exports.clearMarks = clearMarks;
function getAllMarks() {
    'use strict';
    if (HighResolutionTimingSupported) {
        return performance.getEntriesByType("mark").filter(function (mark) {
            return mark.name.lastIndexOf(exports.MARKER_PREFIX, 0) === 0;
        });
    }
    else {
        return _perfMarks;
    }
}
exports.getAllMarks = getAllMarks;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var XHR_1 = __webpack_require__(86);
var ErrorHelper_1 = __webpack_require__(21);
var DataCompletenessInfo = /** @class */ (function () {
    function DataCompletenessInfo(context, isSuccess, statusCode, timestamp, events) {
        this._endpointUrl = context.callbackEndpoint.authority + context.callbackEndpoint.path;
        var eventSummary = {};
        if (events) {
            for (var e = 0; e < events.length; ++e) {
                eventSummary[events[e].EventType] = eventSummary[events[e].EventType] + 1 || 1;
            }
        }
        var completenessDataObj = {
            'TelemetryTenantId': context.telemetryTenantToken.substring(0, 32),
            'AppVersion': context.appVersion,
            'EventType': isSuccess,
            'StatusCode': statusCode,
            'EventCount': events ? events.length : 0,
            'Timestamp': timestamp,
            'Environment': context.environment || "",
            'DatapointSchemaVersion': '1.0',
            'TelemetrySource': 'Aria',
            'EventSummary': eventSummary,
            'Workload': context.workload || "",
            'FarmLabel': context.farmLabel || ""
        };
        this._dataCompletenessJson = JSON.stringify(completenessDataObj);
    }
    Object.defineProperty(DataCompletenessInfo.prototype, "endpointUrl", {
        get: function () {
            return this._endpointUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataCompletenessInfo.prototype, "dataCompletenessJson", {
        get: function () {
            return this._dataCompletenessJson;
        },
        enumerable: true,
        configurable: true
    });
    DataCompletenessInfo.prototype.send = function () {
        var xhr = new XHR_1.default({
            method: 'POST',
            url: this._endpointUrl,
            json: this._dataCompletenessJson,
            requestTimeoutInMS: 1000
        });
        xhr.start(function (xhr, status) {
            // success, no op
        }, function (xhr, statusCode, timeout) {
            if (true) {
                // Display errors if the completeness info couldn't be sent
                ErrorHelper_1.default.log(new Error("DataCompletenessInfo failed to be sent with status code " + statusCode));
            }
        });
    };
    return DataCompletenessInfo;
}());
exports.DataCompletenessInfo = DataCompletenessInfo;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Deeply compares the objects by recursively comparing all their properties,
 * objects with circular references are not supported, prototype members and functions are ignored
 */
function deepCompare(objA, objB, equivalent) {
    // keep track of references that have been compared to find circular references while walking down either object
    var refsComparedA = [];
    var refsComparedB = [];
    var compare = equivalent ? equivalent : function (a, b) { return (a === b); };
    function equals(a, b) {
        // try a simple equality test first
        if (a === b) {
            return true;
        }
        if ((a === null) || (b === null)) {
            return false;
        }
        // if both are objects, then further comparison is required
        if ((typeof (a) === 'object') && (typeof (b) === 'object')) {
            // perform deep comparison over object's properties
            var aKeys = Object.keys(a).sort();
            var bKeys_1 = Object.keys(b).sort();
            // does one object have a different number of properties?
            if (aKeys.length !== bKeys_1.length) {
                return false;
            }
            var keysMatch = aKeys.every(function (key, index) {
                // key names should match
                if (key !== bKeys_1[index]) {
                    return false;
                }
                else if (typeof (a[key]) === 'function' || typeof (b[key]) === 'function') {
                    // skip comparison of function properties
                    return true;
                    // @ts-ignore
                }
                else if (!compare(a[key], b[key])) {
                    // if this is an Object then recursive testing is needed on its properties
                    if (typeof a[key] === 'object') {
                        // if this property was encountered before then we're going in circles, give up
                        // @ts-ignore
                        if (refsComparedA.indexOf(a[key]) !== -1) {
                            throw new Error("Cannot perform DeepCompare() because a circular reference was encountered, object: " + a + ", property: " + key);
                        }
                        // @ts-ignore
                        refsComparedA.push(a[key]);
                        // @ts-ignore
                        if (refsComparedB.indexOf(b[key]) !== -1) {
                            throw new Error("Cannot perform DeepCompare() because a circular reference was encountered, object: " + b + ", property: " + key);
                        }
                        // @ts-ignore
                        refsComparedB.push(b[key]);
                        // recursive compare object's properties
                        if (!equals(a[key], b[key])) {
                            return false;
                        }
                        refsComparedA.pop();
                        refsComparedB.pop();
                        return true;
                    }
                    else {
                        // properties don't match
                        return false;
                    }
                }
                else {
                    return true;
                }
            });
            if (!keysMatch) {
                return false;
            }
        }
        else {
            // parameters aren't equal, and at least one is not an Object
            return false;
        }
        // everything is equal
        return true;
    }
    return equals(objA, objB);
}
exports.deepCompare = deepCompare;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var EventBase_1 = __webpack_require__(29);
var AriaEventBuilder_1 = __webpack_require__(152);
var ErrorHelper = __webpack_require__(36);
var index_1 = __webpack_require__(88);
var AriaTelemetryHandler = /** @class */ (function () {
    function AriaTelemetryHandler(params) {
        var _a = params.logStartEvents, logStartEvents = _a === void 0 ? true : _a, _b = params.context, context = _b === void 0 ? {} : _b;
        this._ariaLoader = params.ariaLoader;
        this._logStartEvents = logStartEvents;
        this._disableCookies = params.disableCookies;
        this._tenantToken = params.tenantToken;
        this._ariaQosParams = params.ariaQos;
        this._ariaOfflineCacheParams = params.offlineCache;
        this._context = context;
    }
    AriaTelemetryHandler.prototype.attach = function (manager) {
        var _this = this;
        var isDetached = false;
        var logHandler;
        this._getAria().then(function (aria) {
            if (isDetached) {
                return;
            }
            logHandler = _this._createLogHandler(aria);
            manager.addLogHandler(logHandler).forEach(logHandler);
        });
        return function () {
            isDetached = true;
            if (logHandler) {
                manager.removeLogHandler(logHandler);
            }
        };
    };
    AriaTelemetryHandler.prototype._getAria = function () {
        var _this = this;
        var loadAria = this._ariaLoader().then(function (aria) {
            _this._initializeLogManager(aria);
            return aria;
        });
        this._getAria = function () { return loadAria; };
        return loadAria;
    };
    AriaTelemetryHandler.prototype._createLogHandler = function (aria) {
        var _this = this;
        var logger = this._createLogger(aria);
        var ariaQosParams = this._ariaQosParams;
        return function (event) {
            // Try/catch individual events so that one bad event doesn't cause the rest to fail to get logged
            try {
                if (event.enabled && (event.eventType !== EventBase_1.ClonedEventType.Start || _this._logStartEvents) &&
                    !(ariaQosParams && ariaQosParams.isQosEvent(event))) {
                    var eventProperties = AriaEventBuilder_1.buildAriaEvent(aria, event);
                    logger.logEvent(eventProperties);
                }
            }
            catch (exception) {
                var error = void 0;
                if (exception instanceof aria.Exception) {
                    error = new Error("Aria error: " + exception.toString());
                }
                if (!exception || !exception.handled) {
                    // Only log the exception if it was not already logged before
                    ErrorHelper.log(error || exception);
                }
            }
        };
    };
    AriaTelemetryHandler.prototype._initializeLogManager = function (aria) {
        var _this = this;
        var ariaOfflineCacheParams = this._ariaOfflineCacheParams;
        if (!aria.LogManager.isInitialized()) {
            aria.LogManager.initialize(this._tenantToken, tslib_1.__assign({ disableCookies: this._disableCookies }, (ariaOfflineCacheParams ? {
                browserOverrides: {
                    onGetData: ariaOfflineCacheParams.getData,
                    onSaveData: ariaOfflineCacheParams.saveData
                }
            } : {})));
            if (typeof window !== 'undefined' && typeof window.addEventListener === 'function') {
                window.addEventListener('beforeunload', function (ev) {
                    aria.LogManager.flush();
                });
            }
        }
        var ariaQosParams = this._ariaQosParams;
        if (ariaQosParams) {
            aria.LogManager.addCallbackListener(function (callbackType, statusCode, tenantToken, events) {
                if (tenantToken !== _this._tenantToken) {
                    return;
                }
                ariaQosParams.reportQos({
                    result: callbackType,
                    statusCode: statusCode,
                    events: events
                });
            });
        }
    };
    AriaTelemetryHandler.prototype._createLogger = function (aria) {
        var logger = new aria.Logger(this._tenantToken);
        var context = this._context;
        var session = context.Session, version = context.Version, osName = context.OSName, osVersion = context.OSVersion, market = context.Market, userId = context.UserId, manifest = context.Manifest, otherContext = tslib_1.__rest(context, ["Session", "Version", "OSName", "OSVersion", "Market", "UserId", "Manifest"]);
        var semanticContext = logger.getSemanticContext();
        if (semanticContext.contextMap) {
            if (session) {
                semanticContext.contextMap['AppInfo.Session'] = session;
            }
            if (manifest) {
                semanticContext.contextMap['AppInfo.Manifest'] = manifest;
            }
        }
        if (version) {
            semanticContext.setAppVersion(version);
        }
        semanticContext.setUserLanguage(market || '');
        if (userId) {
            semanticContext.setUserId(userId);
        }
        if (osName) {
            semanticContext.setDeviceOsName(osName);
        }
        if (osVersion) {
            semanticContext.setDeviceOsVersion(osVersion);
        }
        for (var key in otherContext) {
            if (Object.prototype.hasOwnProperty.call(otherContext, key)) {
                var value = otherContext[key];
                if (value === undefined || value === null) {
                    continue;
                }
                var finalKey = index_1.capitalize(key);
                logger.setContext(finalKey, otherContext[key]);
            }
        }
        return logger;
    };
    return AriaTelemetryHandler;
}());
exports.AriaTelemetryHandler = AriaTelemetryHandler;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EventBase_1 = __webpack_require__(29);
var index_1 = __webpack_require__(88);
var ErrorHelper = __webpack_require__(36);
/**
 * Receives an event produced by the telemetry system and extracts and formats the data suitable
 * for logging to Aria.
 */
function getAriaEventInfo(event) {
    var values = {
        'CorrelationVector': event.vector.toString(),
        'ValidationErrors': event.validationErrors,
        'WebLog_FullName': event.eventName,
        'WebLog_EventType': EventBase_1.ClonedEventType[event.eventType]
    };
    if (event.eventType === EventBase_1.ClonedEventType.End) {
        values.Duration = event.endTime - event.startTime;
    }
    var names = event.eventName.split(',');
    for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {
        var name_1 = names_1[_i];
        if (name_1) {
            values["WebLog_Type_" + name_1] = 1;
        }
    }
    var data = event.data, context = event.context;
    if (context) {
        for (var key in context) {
            if (Object.prototype.hasOwnProperty.call(context, key)) {
                var value = context[key];
                if (value === undefined || value === null) {
                    continue;
                }
                var loggingName = index_1.capitalize(key);
                values[loggingName] = value;
            }
        }
    }
    if (data) {
        for (var field in data) {
            if (Object.prototype.hasOwnProperty.call(data, field)) {
                var value = data[field];
                if (value === undefined || value === null) {
                    continue;
                }
                var propertyMetadata = event.metadata[field];
                if (propertyMetadata) {
                    var loggingName = propertyMetadata.isPrefixingDisabled ?
                        index_1.capitalize(field) :
                        index_1.capitalize(propertyMetadata.definedInName) + "_" + field;
                    var type = propertyMetadata.type;
                    if (type === 4 /* Object */) {
                        for (var subField in value) {
                            if (value[subField] !== undefined) {
                                values[loggingName + "_" + subField.replace('.', '_')] = value[subField];
                            }
                        }
                    }
                    else {
                        values[loggingName] = type === 6 /* Enum */ ? propertyMetadata.typeRef[value] : value;
                    }
                }
            }
        }
    }
    return {
        name: event.isEventTypePrefixingDisabled ? names[names.length - 2] : "ev_" + names[names.length - 2],
        values: values
    };
}
exports.getAriaEventInfo = getAriaEventInfo;
/**
 * Given an Aria implementation, builds an event suitable for logging.
 */
function buildAriaEvent(ariaTelemetry, event) {
    var _a = getAriaEventInfo(event), name = _a.name, values = _a.values;
    var eventProperties = new ariaTelemetry.EventProperties();
    eventProperties.name = name;
    setProperties(ariaTelemetry, eventProperties, values);
    return eventProperties;
}
exports.buildAriaEvent = buildAriaEvent;
function setProperties(ariaTelemetry, properties, values) {
    // We are getting a lot of errorCode 3 aria errors complaining about invalid property keys
    // In order to fix the problem we need to know what the problematic keys are
    var lastKey;
    try {
        for (var key in values) {
            if (Object.prototype.hasOwnProperty.call(values, key)) {
                lastKey = key;
                properties.setProperty(key, values[key]);
            }
        }
    }
    catch (exception) {
        var errorCode = void 0;
        var error = void 0;
        if (exception instanceof ariaTelemetry.Exception) {
            errorCode = exception.ErrorCode();
            error = new Error("Aria error: " + exception.toString());
        }
        if (error) {
            // If it is an aria error that is thrown then log it with the error code and the key we tried to set
            exception.handled = true;
            ErrorHelper.logError(error, {
                errorCode: errorCode,
                propertyKey: lastKey
            });
        }
        // Regardless of what kind of error it was, rethrow the error so we don't try to log the event
        throw exception;
    }
}


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var ErrorHelper_1 = __webpack_require__(21);
var BeaconBase_1 = __webpack_require__(154);
var BeaconCache_1 = __webpack_require__(90);
var BaseDataStore_1 = __webpack_require__(32);
var DataStoreCachingType_1 = __webpack_require__(28);
var LogProcessor_1 = __webpack_require__(91);
var Beacon;
(function (Beacon) {
    "use strict";
    var LOGGING_REQUEST_TIMEOUT = 10000; // 10 seconds
    var FLUSH_TIMEOUT = 5000; // 5 seconds
    var BEACON_BATCH_SIZE = 100;
    var BEACON_MAX_CRITICAL_FLUSH_INTERVAL_SIZE = 5000; // 5 seconds
    // SLAPI
    var SLAPI_STREAM_ID = 1234;
    var SLAPI_JSON_VERSION = "V1";
    var SLAPI_IDX_VERSION = 0;
    var SLAPI_IDX_EVENTNAME = 1;
    var SLAPI_IDX_PROPERTY_START = 2;
    // BSQM Constants
    var SLAPI_MAX_DATA_SIZE = 64 * 1024;
    var SLAPI_MAX_ROWS_IN_STREAM = 1000;
    var SLAPI_SIZE_DWORD = 4;
    var SLAPI_SIZE_DATAPOINT_ENTRY = 3 * 4 /*SIZE_DWORD*/;
    var SLAPI_SIZE_STREAM_ENTRY = 3 * 4 /*SIZE_DATAPOINT_ENTRY*/;
    var SLAPI_MS_BTN_EPOCHS = 11644473600000; // Milliseconds between 1/1/1070 and 1/1/1601
    var SLAPI_MAX_INT32 = 0xFFFFFFFF;
    var SLAPI_MAX_SQM_DATAID = 0x7FFFFFFF;
    var SLAPI_DATAKEY_SESSION_NORMAL = 0;
    var SLAPI_DATAKEY_SESSION_CONTINUATION = 1;
    var SLAPI_FLAG_BSQM_ENABLED = 0x00000010;
    // const SLAPI_FLAG_QOS_ENABLED = 0x00000020;
    // SQM Datapoints
    var SLAPI_DATAID_BSQM_MAXSTREAMROWSSTREAMID = 8048;
    var SLAPI_DATAID_BSQM_MAXSTREAMROWS = 7993;
    var SLAPI_DATAID_SESSION_TYPE = 60;
    var WSAStreamRow = /** @class */ (function () {
        function WSAStreamRow(values) {
            this.Tic = 0;
            this.Vals = null;
            var _this = this;
            _this.Tic = _getTicks32();
            var numValues = values.length;
            _this.Vals = new Array(numValues);
            for (var i = 0; i < numValues; i++) {
                _this.Vals[i] = values[i];
            }
        }
        return WSAStreamRow;
    }());
    var WSADatapoint = /** @class */ (function () {
        function WSADatapoint(id, value) {
            var _this = this;
            _this.Id = id;
            _this.Val = value;
            _this.Tic = _getTicks32();
        }
        return WSADatapoint;
    }());
    var WSAStream = /** @class */ (function () {
        function WSAStream(id, width) {
            var _this = this;
            _this.Id = id;
            _this.Width = width;
            _this.Rows = new Array(0);
        }
        return WSAStream;
    }());
    var WSAData = /** @class */ (function () {
        function WSAData() {
            this.StartTime = null;
            this.EndTime = null;
            this.Flags = 0;
            this.wsaDatapoints = null;
            this.wsaStreams = null;
            var _this = this;
            _this.StartTime = _getTicks64();
            _this.EndTime = null;
            _this.CorrelationId = null;
            _this.Flags = SLAPI_FLAG_BSQM_ENABLED;
            _this.wsaDatapoints = new Array(0);
            _this.wsaStreams = new Array(0);
        }
        return WSAData;
    }());
    var _startTicks = 0;
    var _wsaData = null;
    var _numDatapoints = 0;
    var _numStreams = 0;
    var _numStreamBytes = 0;
    var _dictStreams = null;
    var _dictDatapoints = null;
    var _streamRowCount = 0;
    var _isDataAvailableForUpload = false;
    var _isContinuation = false;
    var _isInitialized = false;
    var _emptyCorrelationId = '00000000-0000-0000-0000-000000000000';
    var _eventNamePrefix = "";
    var _store = null;
    var _storeSize = null;
    var _instance = null;
    var _handlers = null;
    if (true) {
        try {
            console.log("Beacon: To disable logging to the console set \"window.disableBeaconLogToConsole = true\" in the debug window");
        }
        catch (error) {
            // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
            // debugging or stepping through the code polluting the UI with unhandled errors.
        }
    }
    var OdbBeacon = /** @class */ (function (_super) {
        tslib_1.__extends(OdbBeacon, _super);
        function OdbBeacon(eventNamePrefix, handlers, cacheEnabled, correlationId, flushTimeout) {
            if (flushTimeout === void 0) { flushTimeout = FLUSH_TIMEOUT; }
            var _this = _super.call(this, '/_layouts/15/WsaUpload.ashx', BEACON_BATCH_SIZE, [flushTimeout], true, /* useSlidingWindow */ BEACON_MAX_CRITICAL_FLUSH_INTERVAL_SIZE, BeaconBase_1.default.DEFAULT_TOTAL_RETRIES, BeaconBase_1.default.DEFAULT_RESET_TOTAL_RETRIES_AFTER, cacheEnabled /* ignorePreviousEvents */) || this;
            _eventNamePrefix = eventNamePrefix;
            _handlers = handlers;
            _store = new BaseDataStore_1.default(LogProcessor_1.default.STORE_KEY,  true ? DataStoreCachingType_1.default.sharedMemory : DataStoreCachingType_1.default.session);
            _storeSize = _store.getValue(LogProcessor_1.default.STORE_SIZE_KEY);
            if (!_storeSize) {
                _storeSize = 0;
            }
            if (correlationId) {
                _this._cid = correlationId;
            }
            return _this;
        }
        OdbBeacon.prototype.beacon = function () {
            if (false) {
                var json = _getUploadData();
                if (json != null && json.length > 0) {
                    var headers = {};
                    headers["Content-Type"] = "application/json";
                    this.sendBeacon(json, headers, LOGGING_REQUEST_TIMEOUT);
                }
            }
            else if (!window["disableBeaconLogToConsole"]) {
                try {
                    console.log("Beacon: Uploaded to COSMOS (To disable logging to the console set \"window.disableBeaconLogToConsole = true\" in the debug window)");
                }
                catch (error) {
                    // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
                    // debugging or stepping through the code polluting the UI with unhandled errors.
                }
            }
            // Set session storage size to zero instead of clearing
            _storeSize = 0;
            _store.setValue(LogProcessor_1.default.STORE_SIZE_KEY, _storeSize);
        };
        OdbBeacon.prototype._createBeaconRequest = function (events) {
            _SetCorrelationId(this._correlationId);
            // Converts to SP logging format
            for (var x = 0; x < events.length; x++) {
                var event = events[x];
                LogProcessor_1.default.processAndLogEvent({
                    event: event,
                    logFunc: function (streamName, dictProperties) {
                        _WriteLog(streamName, dictProperties);
                    },
                    eventNamePrefix: _eventNamePrefix,
                    handlers: _handlers
                });
            }
            this.beacon();
        };
        OdbBeacon.prototype._onNewEvent = function (event) {
            // BeaconCache puts every new event to the session storage so that Sharepoint can upload it for us
            // if user navigates away before Beacon event. So we do nothing here.
        };
        Object.defineProperty(OdbBeacon.prototype, "_correlationId", {
            get: function () {
                // Avoid reading from the global variable if correlationId has been passed in.
                // The _spPageContextInfo may not always exist.
                if (this._cid) {
                    return this._cid;
                }
                var spPageContextInfo = window['_spPageContextInfo'];
                if (spPageContextInfo) {
                    return spPageContextInfo.CorrelationId;
                }
                return _emptyCorrelationId;
            },
            enumerable: true,
            configurable: true
        });
        return OdbBeacon;
    }(BeaconBase_1.default));
    function addToLoggingManager(eventNamePrefix, handlers, correlationId, flushTimeout) {
        if (!_instance) {
            var cacheEnabled = false;
            if (BeaconCache_1.default.instance) {
                eventNamePrefix = BeaconCache_1.default.eventNamePrefix;
                handlers = BeaconCache_1.default.handlers;
                cacheEnabled = true;
            }
            if (!eventNamePrefix || !handlers) {
                throw new Error("You have to pass in eventNamePrefix and IBeaconHandlers object if no BeaconCache present.");
            }
            _instance = new OdbBeacon(eventNamePrefix, handlers, cacheEnabled, correlationId, flushTimeout);
            // read any events Sharepoint (or BeaconCache) put into session storage but haven't uploaded
            for (var i = 0; i < _storeSize; i++) {
                var item = _store.getValue(i.toString());
                if (!item || !item['name'] || !item['props']) {
                    continue;
                }
                _WriteLog(item['name'], item['props']);
            }
        }
        else {
            throw new Error("The beacon has already been added to the logging manager with event name prefix " + _eventNamePrefix + ".");
        }
    }
    Beacon.addToLoggingManager = addToLoggingManager;
    function _initialize() {
        if (_isInitialized) {
            return;
        }
        _wsaData = new WSAData();
        _dictStreams = new Array(0);
        _dictDatapoints = new Array(0);
        _createStream(SLAPI_STREAM_ID, 1);
        _isInitialized = true;
    }
    function _createStream(streamId, width) {
        if (!Boolean(_dictStreams[streamId])) {
            var wsaStream = new WSAStream(streamId, width);
            var idxStream = _numStreams;
            _wsaData.wsaStreams[idxStream] = wsaStream;
            _numStreams++;
            _numStreamBytes += SLAPI_SIZE_STREAM_ENTRY;
            _dictStreams[streamId] = idxStream;
        }
    }
    function _addToStream(streamId, dictValues) {
        try {
            var wsaStreamRow = new WSAStreamRow(dictValues);
            if (_isMaxSizeReachedCheck()) {
                return;
            }
            _isDataAvailableForUpload = true;
            _setDatapoint(SLAPI_DATAID_BSQM_MAXSTREAMROWSSTREAMID, streamId);
            var wsaStream = _wsaData.wsaStreams[_dictStreams[streamId]];
            if (Boolean(wsaStream)) {
                if (_streamRowCount < SLAPI_MAX_ROWS_IN_STREAM) {
                    wsaStream.Rows[_streamRowCount++] = wsaStreamRow;
                    _numStreamBytes += _getTotalBytesForRow(wsaStreamRow);
                    _setDatapoint(SLAPI_DATAID_BSQM_MAXSTREAMROWS, _streamRowCount); // update row count datapoint
                }
                else {
                    throw ("Beacon: MAX_ROWS_IN_STREAM exceeded for stream ID " + String(streamId));
                }
            }
        }
        catch (e) {
            ErrorHelper_1.default.log(e);
        }
    }
    function _getTotalBytesForRow(row) {
        var numTotalBytes = SLAPI_SIZE_DWORD;
        for (var i = 0; i < row.Vals.length; i++) {
            var value = String(row.Vals[i]);
            numTotalBytes += value.length * 2; // A JavaScript char is 16 bit 2 byte
        }
        numTotalBytes += (row.Vals.length - 1) * 6; // plus the commas and quotes when serialized
        return numTotalBytes;
    }
    function _setDatapoint(datapointId, datapointValue) {
        if (datapointId < 1 || datapointId > SLAPI_MAX_SQM_DATAID) {
            return;
        }
        if (datapointValue < 0 || datapointValue > SLAPI_MAX_INT32) {
            return;
        }
        var savedDatapoint = null;
        var idxDP = _dictDatapoints[datapointId];
        if (Boolean(idxDP)) {
            savedDatapoint = _wsaData.wsaDatapoints[idxDP];
        }
        if (savedDatapoint == null) {
            var datapoint = new WSADatapoint(datapointId, datapointValue);
            var idxDatapoint = _numDatapoints;
            _wsaData.wsaDatapoints[idxDatapoint] = datapoint;
            _dictDatapoints[datapointId] = idxDatapoint;
            _numDatapoints++;
        }
        else {
            savedDatapoint.Val = datapointValue;
        }
    }
    function _uploadData() {
        if (_wsaData == null) {
            return "";
        }
        try {
            if (_isDataAvailableForUpload) {
                // Add final datapoints
                if (Boolean(_isContinuation)) {
                    _setDatapoint(SLAPI_DATAID_SESSION_TYPE, SLAPI_DATAKEY_SESSION_CONTINUATION);
                }
                else {
                    _setDatapoint(SLAPI_DATAID_SESSION_TYPE, SLAPI_DATAKEY_SESSION_NORMAL);
                    _isContinuation = true;
                }
                _wsaData.EndTime = _getTicks64();
                var jsonString = null;
                try {
                    jsonString = JSON.stringify(_wsaData);
                }
                catch (e) {
                    ErrorHelper_1.default.log(e);
                }
                // Initialize the session data for continuation session
                _initContinuationSession();
                return jsonString;
            }
        }
        catch (e) {
            ErrorHelper_1.default.log(e);
            return "";
        }
    }
    function _initContinuationSession() {
        _dictStreams = new Array(0);
        _dictDatapoints = new Array(0);
        _numDatapoints = 0;
        _numStreams = 0;
        _streamRowCount = 0;
        _numStreamBytes = 0;
        _numDatapoints = 0;
        var sessID = _wsaData.CorrelationId;
        _wsaData = new WSAData();
        _wsaData.CorrelationId = sessID;
        _createStream(SLAPI_STREAM_ID, 1);
        _isDataAvailableForUpload = false;
    }
    function _isMaxSizeReachedCheck() {
        var size = _numDatapoints * SLAPI_SIZE_DATAPOINT_ENTRY + _numStreamBytes;
        if (size >= SLAPI_MAX_DATA_SIZE) {
            _instance.beacon();
            size = _numDatapoints * SLAPI_SIZE_DATAPOINT_ENTRY + _numStreamBytes;
            return size >= SLAPI_MAX_DATA_SIZE;
        }
        return false;
    }
    function _SetCorrelationId(correlationId) {
        _initialize();
        if (Boolean(_wsaData)) {
            if (correlationId !== null && correlationId !== undefined) {
                _wsaData.CorrelationId = correlationId;
            }
            else {
                _wsaData.CorrelationId = _emptyCorrelationId;
            }
        }
    }
    function _WriteLog(eventName, dictProperties) {
        _initialize();
        if ((!Boolean(eventName)) || (!Boolean(dictProperties))) {
            return;
        }
        if (false) {
            var values = new Array(SLAPI_IDX_PROPERTY_START + 1);
            values[SLAPI_IDX_VERSION] = SLAPI_JSON_VERSION;
            values[SLAPI_IDX_EVENTNAME] = eventName;
            var index = SLAPI_IDX_PROPERTY_START;
            for (var key in dictProperties) {
                var propVal = dictProperties[key];
                if (propVal !== undefined && propVal !== null) {
                    if (propVal instanceof Date) {
                        propVal = propVal.getTime();
                    }
                    values[index++] = key;
                    values[index++] = propVal;
                }
            }
            _addToStream(SLAPI_STREAM_ID, values);
        }
        else if (!window["disableBeaconLogToConsole"]) {
            try {
                console.log("Beacon: Logged to " + eventName + " with properties: " + JSON.stringify(dictProperties));
            }
            catch (error) {
                // Ignore errors here. This code path, console.log, is only called during debug and it can throw while
                // debugging or stepping through the code polluting the UI with unhandled errors.
            }
        }
    }
    function _getUploadData() {
        _initialize();
        return _uploadData();
    }
    function _getTicks32() {
        var timeNow = new Date();
        var ticks64 = timeNow.getTime();
        if (_startTicks === 0) {
            _startTicks = ticks64;
        }
        return ((1 + ticks64 - _startTicks) & 0x7FFFFFFF);
    }
    function _getTicks64() {
        var timeNow = new Date();
        var ticks64 = timeNow.getTime();
        ticks64 = ticks64 + SLAPI_MS_BTN_EPOCHS; // Epoch change from 1/1/1070 to 1/1/1601
        ticks64 = ticks64 * 10000; // 1ms to 100ns resolution
        return ticks64;
    }
})(Beacon || (Beacon = {}));
exports.default = Beacon;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Manager_1 = __webpack_require__(57);
var EventBatchCache_1 = __webpack_require__(155);
var XHR_1 = __webpack_require__(86);
var Beacon_event_1 = __webpack_require__(38);
var BeaconBase = /** @class */ (function () {
    function BeaconBase(endPointUrl, batchSize, flushTimeouts, useSlidingWindow, maxCriticalFlushInterval, totalRetries, resetTotalRetriesAfter, ignorePreviousEvents) {
        var _this = this;
        this._lastSendBeacon = 0;
        this._endPointUrl = endPointUrl;
        this._maxCriticalFlushInterval = maxCriticalFlushInterval;
        this._totalRetries = totalRetries === undefined ? BeaconBase.DEFAULT_TOTAL_RETRIES : totalRetries;
        this._totalRetriesStartValue = this._totalRetries;
        this._resetTotalRetriesAfter = resetTotalRetriesAfter === undefined ? BeaconBase.DEFAULT_RESET_TOTAL_RETRIES_AFTER : resetTotalRetriesAfter;
        this._ignorePreviousEvents = ignorePreviousEvents === undefined ? false : ignorePreviousEvents;
        this._eventBatchCache = new EventBatchCache_1.default(batchSize, flushTimeouts, function (event) {
            if (_this._onNewEvent) {
                _this._onNewEvent(event);
            }
        }, function (events) {
            // Create the beacon request
            _this._createBeaconRequest(events);
        }, useSlidingWindow);
        this.init();
    }
    BeaconBase.prototype.sendBeacon = function (json, headers, requestTimeoutInMS) {
        this._sendBeacon(json, headers, requestTimeoutInMS, 0);
    };
    BeaconBase.prototype._sendBeacon = function (json, headers, requestTimeoutInMS, retryCount) {
        var _this = this;
        if (retryCount === 0) {
            this._lastSendBeacon = Manager_1.Manager.getTime();
        }
        var xhr = new XHR_1.default({
            url: this._endPointUrl,
            json: json,
            headers: headers,
            requestTimeoutInMS: requestTimeoutInMS
        });
        var beaconEvent = new Beacon_event_1.Beacon({
            retryCount: retryCount,
            totalRetries: this._totalRetries
        });
        xhr.start(function (xhr, status) {
            beaconEvent.end({ status: status + '', success: true });
            if (++_this._successfulLogRequests >= _this._resetTotalRetriesAfter) {
                _this._successfulLogRequests = _this._resetTotalRetriesAfter;
                _this._totalRetries = _this._totalRetriesStartValue;
            }
        }, function (xhr, status, timeout) {
            _this._successfulLogRequests = 0;
            beaconEvent.end({ status: status + '', success: false });
            // Retry if we timed out since we failed
            if (status === -2 /* timeout */ && _this._totalRetries > 0) {
                _this._totalRetries--;
                _this._sendBeacon(json, headers, requestTimeoutInMS, retryCount + 1);
            }
        });
    };
    BeaconBase.prototype.init = function () {
        var _this = this;
        var bufferedEvents = Manager_1.Manager.addLogHandler(function (event) {
            _this.addEvent(event);
        });
        if (!this._ignorePreviousEvents) {
            for (var x = 0; x < bufferedEvents.length; x++) {
                this.addEvent(bufferedEvents[x]);
            }
        }
    };
    BeaconBase.prototype.addEvent = function (event) {
        if (event.enabled) {
            this._eventBatchCache.addEvent(event);
            if (event.critical &&
                (!this._lastSendBeacon ||
                    Manager_1.Manager.getTime() - this._lastSendBeacon > this._maxCriticalFlushInterval)) {
                this._eventBatchCache.flush();
            }
        }
    };
    BeaconBase.DEFAULT_TOTAL_RETRIES = 3;
    BeaconBase.DEFAULT_RESET_TOTAL_RETRIES_AFTER = 3;
    return BeaconBase;
}());
exports.default = BeaconBase;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Beacon_event_1 = __webpack_require__(38);
var ErrorHelper_1 = __webpack_require__(21);
var EventBatchCache = /** @class */ (function () {
    function EventBatchCache(maxSize, maxFlushTimes, newEventHandler, flushHandler, useSlidingWindow) {
        this._events = [];
        this._flushCount = 0;
        this._maxSize = maxSize;
        this._newEventHandler = newEventHandler;
        this._flushHandler = flushHandler;
        this._maxFlushTimes = maxFlushTimes;
        this._useSlidingWindow = useSlidingWindow;
    }
    EventBatchCache.prototype.addEvent = function (event) {
        this._events.push(event);
        if (this._newEventHandler) {
            try {
                this._newEventHandler(event);
            }
            catch (e) {
                ErrorHelper_1.default.log(e);
            }
        }
        // Dont create a timer for events that are of type beacon
        if (Beacon_event_1.Beacon.isTypeOf(event)) {
            return;
        }
        if (this._events.length >= this._maxSize) {
            this.flush();
        }
        else {
            this._setFlushTimeout(false);
        }
    };
    EventBatchCache.prototype.flush = function () {
        this._setFlushTimeout(true);
    };
    EventBatchCache.prototype._handleFlush = function () {
        this._clearFlushTimeout();
        if (this._events.length) {
            this._flushHandler(this._events);
            // Reset the events array
            this._events = [];
        }
    };
    EventBatchCache.prototype._clearFlushTimeout = function () {
        if (this._flushTimeoutId) {
            /* tslint:disable-next-line:ban-native-functions */
            window.clearTimeout(this._flushTimeoutId);
            this._flushTimeoutId = null;
        }
        if (this._immediateflushTimeoutId) {
            /* tslint:disable-next-line:ban-native-functions */
            window.clearTimeout(this._immediateflushTimeoutId);
            this._immediateflushTimeoutId = null;
        }
    };
    EventBatchCache.prototype._setFlushTimeout = function (immediate) {
        var _this = this;
        // if another immediate flush is already queued, disregard
        if (!!this._immediateflushTimeoutId) {
            return;
        }
        if (this._useSlidingWindow) {
            this._clearFlushTimeout();
            if (immediate) {
                /* tslint:disable-next-line:ban-native-functions */
                this._immediateflushTimeoutId = window.setTimeout(function () {
                    _this._handleFlush();
                }, 0);
            }
            else {
                /* tslint:disable-next-line:ban-native-functions */
                this._flushTimeoutId = window.setTimeout(function () {
                    _this._handleFlush();
                }, this._getFlushTime());
            }
        }
        else {
            if (immediate) {
                if (!this._immediateflushTimeoutId) {
                    /* tslint:disable-next-line:ban-native-functions */
                    this._immediateflushTimeoutId = window.setTimeout(function () {
                        _this._handleFlush();
                    }, 0);
                }
            }
            else if (!this._flushTimeoutId) {
                /* tslint:disable-next-line:ban-native-functions */
                this._flushTimeoutId = window.setTimeout(function () {
                    _this._handleFlush();
                }, this._getFlushTime());
            }
        }
    };
    EventBatchCache.prototype._getFlushTime = function () {
        if (this._flushCount < this._maxFlushTimes.length) {
            var flushCount = this._flushCount;
            this._flushCount++;
            return this._maxFlushTimes[flushCount];
        }
        else {
            return this._maxFlushTimes[this._maxFlushTimes.length - 1];
        }
    };
    return EventBatchCache;
}());
exports.default = EventBatchCache;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.PLT = SingleEventBase_1.createSingleEvent({
    eventName: 'PLT,',
    shortEventName: 'PLT',
    samplingFeature: { ODB: true, ODC: 'PLTLoggingSampling', Fallback: false }
}, {
    name: {
        isKey: true,
        type: 1 /* String */
    },
    w3cResponseEnd: 2 /* Number */,
    prefetchStart: 2 /* Number */,
    deferredListDataRender: 2 /* Number */,
    appStart: 2 /* Number */,
    preRender: 2 /* Number */,
    dataFetch: 2 /* Number */,
    dataFetchServerTime: 2 /* Number */,
    postRender: 2 /* Number */,
    render: 2 /* Number */,
    plt: 2 /* Number */,
    pltWithUnload: 2 /* Number */,
    httpRequests: 2 /* Number */,
    appCacheHit: 3 /* Boolean */
});
exports.default = exports.PLT;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.UnhandledError = SingleEventBase_1.createSingleEvent({
    eventName: 'UnhandledError,',
    shortEventName: 'UnhandledError',
    critical: true,
    requiresParent: false
}, {
    message: 1 /* String */,
    stack: 1 /* String */,
    builtStack: 1 /* String */,
    line: 2 /* Number */,
    col: 2 /* Number */,
    url: 1 /* String */
});
exports.default = exports.UnhandledError;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.RequireJSError = SingleEventBase_1.createSingleEvent({
    eventName: 'RequireJSError,',
    shortEventName: 'RequireJSError',
    critical: true,
    requiresParent: false
}, {
    message: 1 /* String */,
    requireModules: 5 /* Array */,
    requireType: 1 /* String */,
    stack: 1 /* String */
});
exports.default = exports.RequireJSError;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(37), exports);
var CaughtError_event_1 = __webpack_require__(37);
exports.default = CaughtError_event_1.CaughtError;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(53), exports);
var QosError_event_1 = __webpack_require__(53);
exports.default = QosError_event_1.QosError;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
tslib_1.__exportStar(__webpack_require__(54), exports);
var Verbose_event_1 = __webpack_require__(54);
exports.default = Verbose_event_1.Verbose;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
exports.PageInit = SingleEventBase_1.createSingleEvent({
    eventName: 'PageInit,',
    shortEventName: 'PageInit',
    requiresParent: false
}, {
    screenWidth: 2 /* Number */,
    screenHeight: 2 /* Number */,
    availableScreenWidth: 2 /* Number */,
    availableScreenHeight: 2 /* Number */,
    renderWidth: 2 /* Number */,
    renderHeight: 2 /* Number */,
    browserWidth: 2 /* Number */,
    browserHeight: 2 /* Number */,
    devicePixelRatio: 2 /* Number */,
    referrer: 1 /* String */
});
exports.default = exports.PageInit;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var DebugPriorityLevel;
(function (DebugPriorityLevel) {
    DebugPriorityLevel[DebugPriorityLevel["Low"] = 0] = "Low";
    DebugPriorityLevel[DebugPriorityLevel["Normal"] = 1] = "Normal";
})(DebugPriorityLevel || (DebugPriorityLevel = {}));
exports.default = DebugPriorityLevel;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// OneDrive:IgnoreCodeCoverage
var RUMOneLogger_1 = __webpack_require__(44);
exports.default = RUMOneLogger_1.ControlPerformanceData;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CorrelationVector_1 = __webpack_require__(76);
exports.default = CorrelationVector_1.CorrelationVector;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * This file exports members of ODSP-utilities that are not directly used by telemetry. There is a second,
 *  "telemetry" odsp-utilities package in odsp-utilities-telemetry.ts
 *
 * IMPORTANT: When editing this file, make sure you make the corresponding edit to OdspUtilitiesWorkaroundLoader.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable:max-line-length */
// Case 1: export multiple functions from the file.
var StringHelper = __webpack_require__(65);
exports.StringHelper = StringHelper;
var SPAlternativeUrls = __webpack_require__(167);
exports.SPAlternativeUrls = SPAlternativeUrls;
// Case 2: export a named class from the file.
var ABExperiment_1 = __webpack_require__(128);
exports.ABExperiment = ABExperiment_1.ABExperiment;
exports.ABExpHash = ABExperiment_1.ABExpHash;
exports.TargetType = ABExperiment_1.TargetType;
var Killswitch_1 = __webpack_require__(117);
exports.Killswitch = Killswitch_1.Killswitch;
var SuiteNavTheming_1 = __webpack_require__(171);
exports.loadFallbackShellThemableCss = SuiteNavTheming_1.loadFallbackShellThemableCss;
var FeaturesBasic_1 = __webpack_require__(58);
exports.isSPFeatureEnabled = FeaturesBasic_1.isSPFeatureEnabled;
// Case 3: export a class as default from the file.
var Component_1 = __webpack_require__(172);
exports.Component = Component_1.default;
var EventGroup_1 = __webpack_require__(129);
exports.EventGroup = EventGroup_1.default;
var FabricTheming_1 = __webpack_require__(95);
exports.FabricTheming = FabricTheming_1.default;
var Features_1 = __webpack_require__(93);
exports.Features = Features_1.default;
var FeatureOverrides_1 = __webpack_require__(70);
exports.FeatureOverrides = FeatureOverrides_1.default;
var HtmlEncoding_1 = __webpack_require__(175);
exports.HtmlEncoding = HtmlEncoding_1.default;
var Locale_1 = __webpack_require__(176);
exports.Locale = Locale_1.default;
var PlatformDetection_1 = __webpack_require__(56);
exports.PlatformDetection = PlatformDetection_1.default;
var Promise_1 = __webpack_require__(27);
exports.Promise = Promise_1.default;
var RgbaColor_1 = __webpack_require__(25);
exports.RgbaColor = RgbaColor_1.default;
var SiteHeaderLogoAcronym_1 = __webpack_require__(177);
exports.SiteHeaderLogoAcronym = SiteHeaderLogoAcronym_1.default;
var ThemeCache_1 = __webpack_require__(97);
exports.ThemeCache = ThemeCache_1.default;
var ThemeProvider_1 = __webpack_require__(178);
exports.ThemeProvider = ThemeProvider_1.default;
var Uri_1 = __webpack_require__(68);
exports.Uri = Uri_1.default;
var UriEncoding_1 = __webpack_require__(45);
exports.UriEncoding = UriEncoding_1.default;
var WebTheme_1 = __webpack_require__(179);
exports.WebTheme = WebTheme_1.default;
var ItemType_1 = __webpack_require__(98);
exports.ItemType = ItemType_1.default;
var FileTypeIconMap_1 = __webpack_require__(180);
exports.FileTypeIconMap = FileTypeIconMap_1.default;
var SharingType_1 = __webpack_require__(181);
exports.SharingType = SharingType_1.default;
var Signal_1 = __webpack_require__(66);
exports.Signal = Signal_1.default;
var Scope_1 = __webpack_require__(47);
exports.Scope = Scope_1.default;
var AriaLoggerCore_1 = __webpack_require__(85);
exports.AriaLoggerCore = AriaLoggerCore_1.default;



/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Uri_1 = __webpack_require__(68);
var Qos_event_1 = __webpack_require__(31);
/**
 * This enum defines sizes of the user photos.
 * Small is 48x48 px
 * Medium is 96x96 px
 * Large is as uploaded by the user
 *
 * @alpha
 */
var UserPhotoSize;
(function (UserPhotoSize) {
    /**
     * Small image is 48x48 px.
     */
    UserPhotoSize[UserPhotoSize["Small"] = 1] = "Small";
    /**
     * Medium image is 96x96 px.
     */
    UserPhotoSize[UserPhotoSize["Medium"] = 2] = "Medium";
    /**
     * Large image dimensions are as uploaded by the user.
     */
    UserPhotoSize[UserPhotoSize["Large"] = 3] = "Large";
})(UserPhotoSize = exports.UserPhotoSize || (exports.UserPhotoSize = {}));
var EXPIRATION_TOKEN = '_eat_';
var EXPIRATION_TOKEN_SEPARATOR = '_';
// @internalremarks: Note - 'UserPhotoAspx' is defined by a constant UserPhotoKey specified in
// @internalremarks: depot/devmainoverride/sporel/sts/stsom/SitePages/SitePageAlternativeUrlMapBuilder.cs
var USER_PHOTO_KEY = 'UserPhotoAspx';
var DEFAULT_USER_PHOTO_BASE_URL = '/_layouts/15/userphoto.aspx';
var USER_PHOTO_SIZE_PARAM = 'size';
var USER_PHOTO_ACCOUNT_NAME_PARAM = 'accountname';
var _urlTable = {};
var QOS_TRYGETALTERNATIVEURLFAILURE = 'TryGetAlternativeUrlFailure';
/**
 * If an alternative URL is available, then this returns the URL that should be used
 * for rendering the image.  Otherwise, undefined is returned.
 */
function tryGetAlternativeUrl(primaryUrl) {
    try {
        var alternativeUrl = _urlTable && _urlTable[primaryUrl];
        if (!alternativeUrl) {
            return undefined;
        }
        // Check for expired items.
        // Private CDN item will have a query string parameter _eat_=xxxx_yyyyyyyyyy, where xxxx is an expiration
        // time in Epoch format (number of seconds since 1970/1/1).
        // The real URL example is
        // https://privatecdn.sharepointonline.com/msft.spoppe.com/sites/wex/SiteAssets/SitePages/SamplePage/image.jpg
        //   ?_eat_=1480392900_16330f287fe138cea33c424221c6fa1d79e6cdeb470bc0000894645994ba1a14
        //   &_oat_=1480392900_f312136e0ffd87c26165973f042a98dfd40130d4981d6d3fd71643c7e4fdb485
        //   &width=300
        // If the parameter is available in the alternative Url,
        // check whether this is at least 30 seconds out in the future, and return the alternative
        // URL only if still valid. Return undefined otherwise, falling back to the original non-optimized behavior
        // note that the URLs provided by the server always have at least 15 minutes of the valid time, so it is
        // unlikely expired situation will appear too often.
        var uri = new Uri_1.default(alternativeUrl);
        var authToken = uri.getQueryParameter(EXPIRATION_TOKEN);
        if (authToken) {
            var split = authToken.split(EXPIRATION_TOKEN_SEPARATOR);
            var expirationTime = undefined;
            if (split.length === 2) {
                expirationTime = Number(split[0]);
            }
            if (!expirationTime) {
                // hightly unexpected, but logging nevertheless
                var qosEvent = new Qos_event_1.Qos({ name: QOS_TRYGETALTERNATIVEURLFAILURE });
                qosEvent.end({
                    resultType: Qos_event_1.ResultTypeEnum.Failure,
                    resultCode: 'EatParamUnexpectedFormat',
                    extraData: {
                        eatParam: authToken
                    }
                });
                return alternativeUrl;
            }
            // Shift expiration time by 30 seconds to ensure the browser has ample time to fetch the resource
            // before it actually does expire.
            expirationTime -= 30;
            // getTime() returns Epoch time in milliseconds.
            if (Date.now() / 1000 > expirationTime) {
                delete _urlTable[primaryUrl];
                return undefined;
            }
        }
        return alternativeUrl;
    }
    catch (ex) {
        var qosEvent = new Qos_event_1.Qos({ name: QOS_TRYGETALTERNATIVEURLFAILURE });
        qosEvent.end({
            resultType: Qos_event_1.ResultTypeEnum.Failure,
            resultCode: 'Unexpected',
            extraData: {
                error: ex
            }
        });
    }
    return undefined;
}
exports.tryGetAlternativeUrl = tryGetAlternativeUrl;
/**
 * Updates the map by adding the specified entries, overwriting any previous entries
 * with the same key names.
 */
function updateMap(alternativeUrlTable) {
    if (!alternativeUrlTable) {
        return;
    }
    for (var key in alternativeUrlTable) {
        _urlTable[key] = alternativeUrlTable[key];
    }
}
exports.updateMap = updateMap;
/**
 * For diagnostic purposes, this returns the current map.
 * The key is the primaryUrl, and the value is the alternativeUrl.
 */
function getUrlTable() {
    return _urlTable;
}
exports.getUrlTable = getUrlTable;
/**
 * UserPhoto mapping is auto added into the Alternative URL map when private CDN is enabled
 * and tenant admin configured origin * /userphoto.aspx
 * If CDN is not enabled, the default _layouts/15/userphoto.aspx will be used.
 * @param size Parameter may have value S,L,M. If none or other is provided, S will be used by default.
 */
function getUserPhotoUrl(accountName, size) {
    var userPhotoBaseUrl = tryGetAlternativeUrl(USER_PHOTO_KEY) || DEFAULT_USER_PHOTO_BASE_URL;
    var sizeLetter;
    switch (size) {
        case 2 /* Medium */:
            sizeLetter = 'M';
            break;
        case 3 /* Large */:
            sizeLetter = 'L';
            break;
        default:
            // Default to small if size is not provided. Server will assume small either way, but having the
            // parameter explicitly will reduce variability in CDN, and will increase probability of the cache hit.
            sizeLetter = 'S';
    }
    var userPhotoUri = new Uri_1.default(userPhotoBaseUrl);
    userPhotoUri.setQueryParameter(USER_PHOTO_SIZE_PARAM, sizeLetter);
    // empty accountName will resolve to the default doughboy picture
    userPhotoUri.setQueryParameter(USER_PHOTO_ACCOUNT_NAME_PARAM, accountName || '');
    return userPhotoUri.toString();
}
exports.getUserPhotoUrl = getUserPhotoUrl;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var SingleEventBase_1 = __webpack_require__(20);
var ExperimentTypeEnum_1 = __webpack_require__(92);
exports.Experiment = SingleEventBase_1.createSingleEvent({
    eventName: 'Experiment,',
    shortEventName: 'Experiment'
}, {
    name: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    isInRamp: {
        isPrefixingDisabled: true,
        type: 3 /* Boolean */
    },
    experiment: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    variant: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    },
    assignmentType: {
        isPrefixingDisabled: true,
        type: 6 /* Enum */,
        typeRef: ExperimentTypeEnum_1.ExperimentTypeEnum
    },
    assignmentId: {
        isPrefixingDisabled: true,
        type: 1 /* String */
    }
});
exports.default = exports.Experiment;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

(function(){
  var _global = this;

  /**
   * JS Implementation of MurmurHash2
   *
   * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
   * @see http://github.com/garycourt/murmurhash-js
   * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
   * @see http://sites.google.com/site/murmurhash/
   *
   * @param {string} str ASCII only
   * @param {number} seed Positive integer only
   * @return {number} 32-bit positive integer hash
   */
  function MurmurHashV2(str, seed) {
    var
      l = str.length,
      h = seed ^ l,
      i = 0,
      k;

    while (l >= 4) {
      k =
        ((str.charCodeAt(i) & 0xff)) |
        ((str.charCodeAt(++i) & 0xff) << 8) |
        ((str.charCodeAt(++i) & 0xff) << 16) |
        ((str.charCodeAt(++i) & 0xff) << 24);

      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));
      k ^= k >>> 24;
      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));

    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;

      l -= 4;
      ++i;
    }

    switch (l) {
    case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
    case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
    case 1: h ^= (str.charCodeAt(i) & 0xff);
            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));
    }

    h ^= h >>> 13;
    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));
    h ^= h >>> 15;

    return h >>> 0;
  };

  /**
   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)
   *
   * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
   * @see http://github.com/garycourt/murmurhash-js
   * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
   * @see http://sites.google.com/site/murmurhash/
   *
   * @param {string} key ASCII only
   * @param {number} seed Positive integer only
   * @return {number} 32-bit positive integer hash
   */
  function MurmurHashV3(key, seed) {
    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;

    remainder = key.length & 3; // key.length % 4
    bytes = key.length - remainder;
    h1 = seed;
    c1 = 0xcc9e2d51;
    c2 = 0x1b873593;
    i = 0;

    while (i < bytes) {
        k1 =
          ((key.charCodeAt(i) & 0xff)) |
          ((key.charCodeAt(++i) & 0xff) << 8) |
          ((key.charCodeAt(++i) & 0xff) << 16) |
          ((key.charCodeAt(++i) & 0xff) << 24);
      ++i;

      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;
      k1 = (k1 << 15) | (k1 >>> 17);
      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;

      h1 ^= k1;
          h1 = (h1 << 13) | (h1 >>> 19);
      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;
      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));
    }

    k1 = 0;

    switch (remainder) {
      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;
      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;
      case 1: k1 ^= (key.charCodeAt(i) & 0xff);

      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;
      k1 = (k1 << 15) | (k1 >>> 17);
      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;
      h1 ^= k1;
    }

    h1 ^= key.length;

    h1 ^= h1 >>> 16;
    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;
    h1 ^= h1 >>> 13;
    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;
    h1 ^= h1 >>> 16;

    return h1 >>> 0;
  }

  var murmur = MurmurHashV3;
  murmur.v2 = MurmurHashV2;
  murmur.v3 = MurmurHashV3;

  if (true) {
    module.exports = murmur;
  } else {
    var _previousRoot = _global.murmur;
    murmur.noConflict = function() {
      _global.murmur = _previousRoot;
      return murmur;
    }
    _global.murmur = murmur;
  }
}());


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var GuidModule = __webpack_require__(77);
var Guid = GuidModule;
exports.default = Guid;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var load_themed_styles_1 = __webpack_require__(3);
function loadFallbackShellThemableCss() {
    var strCss = ".o365cs-base .o365cs-nav-contextMenu {" +
        "    background-color: '[theme:white, default:#ffffff]';" + // BackgroundOverlay
        "}\n" +
        ".o365cs-base-visibility" +
        "{" +
        "  visibility: visible;" +
        "}\n" +
        ".o365cs-base .ms-fcl-tdr," +
        ".o365cs-base .ms-fcl-tdr-h:hover," +
        ".o365cs-base .ms-fcl-tdr-f:focus" +
        "{" +
        "    color: '[theme:themeDarker, default:#104a7d]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tdr," +
        ".o365cs-base .ms-bgc-tdr-h:hover," +
        ".o365cs-base .ms-bgc-tdr-f:focus" +
        "{" +
        "    background-color: '[theme:themeDarker, default:#104a7d]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tdr," +
        ".o365cs-base .ms-bcl-tdr-h:hover," +
        ".o365cs-base .ms-bcl-tdr-f:focus" +
        "{" +
        "    border-color: '[theme:themeDarker, default:#104a7d]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-td," +
        ".o365cs-base .ms-fcl-td-h:hover," +
        ".o365cs-base .ms-fcl-td-f:focus" +
        "{" +
        "    color: '[theme:themeDark, default:#0d62aa]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-td," +
        ".o365cs-base .ms-bgc-td-h:hover," +
        ".o365cs-base .ms-bgc-td-f:focus" +
        "{" +
        "    background-color: '[theme:themeDark, default:#0d62aa]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-td," +
        ".o365cs-base .ms-bcl-td-h:hover," +
        ".o365cs-base .ms-bcl-td-f:focus" +
        "{" +
        "    border-color: '[theme:themeDark, default:#0d62aa]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-tda," +
        ".o365cs-base .ms-fcl-tda-h:hover," +
        ".o365cs-base .ms-fcl-tda-f:focus" +
        "{" +
        "    color: '[theme:themeDarkAlt, default:#106ebe]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tda," +
        ".o365cs-base .ms-bgc-tda-h:hover," +
        ".o365cs-base .ms-bgc-tda-f:focus" +
        "{" +
        "    background-color: '[theme:themeDarkAlt, default:#106ebe]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tda," +
        ".o365cs-base .ms-bcl-tda-h:hover," +
        ".o365cs-base .ms-bcl-tda-f:focus" +
        "{" +
        "    border-color: '[theme:themeDarkAlt, default:#106ebe]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-tp," +
        ".o365cs-base .ms-fcl-tp-h:hover," +
        ".o365cs-base .ms-fcl-tp-f:focus" +
        "{" +
        "    color: '[theme:themePrimary, default:#0078d7]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tp," +
        ".o365cs-base .ms-bgc-tp-h:hover," +
        ".o365cs-base .ms-bgc-tp-f:focus," +
        ".o365cs-base.ms-bgc-tp" +
        "{" +
        "    background-color: '[theme:themePrimary, default:#0078d7]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tp," +
        ".o365cs-base .ms-bcl-tp-h:hover," +
        ".o365cs-base .ms-bcl-tp-f:focus" +
        "{" +
        "    border-color: '[theme:themePrimary, default:#0078d7]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-ts," +
        ".o365cs-base .ms-fcl-ts-h:hover," +
        ".o365cs-base .ms-fcl-ts-f:focus" +
        "{" +
        "    color: '[theme:themeSecondary, default:#2b88d8]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-ts," +
        ".o365cs-base .ms-bgc-ts-h:hover," +
        ".o365cs-base .ms-bgc-ts-f:focus" +
        "{" +
        "    background-color: '[theme:themeSecondary, default:#2b88d8]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-ts," +
        ".o365cs-base .ms-bcl-ts-h:hover," +
        ".o365cs-base .ms-bcl-ts-f:focus" +
        "{" +
        "    border-color: '[theme:themeSecondary, default:#2b88d8]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-tt," +
        ".o365cs-base .ms-fcl-tt-h:hover," +
        ".o365cs-base .ms-fcl-tt-f:focus" +
        "{" +
        "    color: '[theme:themeTertiary, default:#71afe5]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tt," +
        ".o365cs-base .ms-bgc-tt-h:hover," +
        ".o365cs-base .ms-bgc-tt-f:focus" +
        "{" +
        "    background-color: '[theme:themeTertiary, default:#71afe5]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tt," +
        ".o365cs-base .ms-bcl-tt-h:hover," +
        ".o365cs-base .ms-bcl-tt-f:focus" +
        "{" +
        "    border-color: '[theme:themeTertiary, default:#71afe5]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-tl," +
        ".o365cs-base .ms-fcl-tl-h:hover," +
        ".o365cs-base .ms-fcl-tl-f:focus" +
        "{" +
        "    color: '[theme:themeLight, default:#c7e0f4]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tl," +
        ".o365cs-base .ms-bgc-tl-h:hover," +
        ".o365cs-base .ms-bgc-tl-f:focus" +
        "{" +
        "    background-color: '[theme:themeLight, default:#c7e0f4]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tl," +
        ".o365cs-base .ms-bcl-tl-h:hover," +
        ".o365cs-base .ms-bcl-tl-f:focus" +
        "{" +
        "    border-color: '[theme:themeLight, default:#c7e0f4]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-tlr," +
        ".o365cs-base .ms-fcl-tlr-h:hover," +
        ".o365cs-base .ms-fcl-tlr-f:focus" +
        "{" +
        "    color: '[theme:themeLighter, default:#deecf9]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tlr," +
        ".o365cs-base .ms-bgc-tlr-h:hover," +
        ".o365cs-base .ms-bgc-tlr-f:focus" +
        "{" +
        "    background-color: '[theme:themeLighter, default:#deecf9]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tlr," +
        ".o365cs-base .ms-bcl-tlr-h:hover," +
        ".o365cs-base .ms-bcl-tlr-f:focus" +
        "{" +
        "    border-color: '[theme:themeLighter, default:#deecf9]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-tlra," +
        ".o365cs-base .ms-fcl-tlra-h:hover," +
        ".o365cs-base .ms-fcl-tlra-f:focus" +
        "{" +
        "    color: '[theme:themeLighterAlt, default:#eff6fc]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-tlra," +
        ".o365cs-base .ms-bgc-tlra-h:hover," +
        ".o365cs-base .ms-bgc-tlra-f:focus" +
        "{" +
        "    background-color: '[theme:themeLighterAlt, default:#eff6fc]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-tlra," +
        ".o365cs-base .ms-bcl-tlra-h:hover," +
        ".o365cs-base .ms-bcl-tlra-f:focus" +
        "{" +
        "    border-color: '[theme:themeLighterAlt, default:#eff6fc]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-w," +
        ".o365cs-base .ms-fcl-w-h:hover," +
        ".o365cs-base .ms-fcl-w-f:focus" +
        "{" +
        "    color: '[theme:white, default:#ffffff]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-w," +
        ".o365cs-base .ms-bgc-w-h:hover," +
        ".o365cs-base .ms-bgc-w-f:focus," +
        ".o365cs-base.ms-bgc-w" +
        "{" +
        "    background-color: '[theme:white, default:#ffffff]';" + // backgroundOverlay
        "}\n" +
        ".o365cs-base .ms-bcl-w," +
        ".o365cs-base .ms-bcl-w-h:hover," +
        ".o365cs-base .ms-bcl-w-f:focus" +
        "{" +
        "    border-color: '[theme:white, default:#ffffff]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-b," +
        ".o365cs-base .ms-fcl-b-h:hover," +
        ".o365cs-base .ms-fcl-b-f:focus" +
        "{" +
        "    color: '[theme:black, default:#000000]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-b.o365cs-nav-closeButton" + // Special case for button to close app launcher, since app launcher is not themed
        "{" +
        "    color: #000000;" +
        "}\n" +
        ".o365cs-base .ms-bgc-b," +
        ".o365cs-base .ms-bgc-b-h:hover," +
        ".o365cs-base .ms-bgc-b-f:focus," +
        ".o365cs-base.ms-bgc-b" +
        "{" +
        "    background-color: '[theme:black, default:#000000]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-b," +
        ".o365cs-base .ms-bcl-b-h:hover," +
        ".o365cs-base .ms-bcl-b-f:focus" +
        "{" +
        "    border-color: '[theme:black, default:#000000]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nd," +
        ".o365cs-base .ms-fcl-nd-h:hover," +
        ".o365cs-base .ms-fcl-nd-f:focus" +
        "{" +
        "    color: '[theme:neutralDark, default:#212121]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nd," +
        ".o365cs-base .ms-bgc-nd-h:hover," +
        ".o365cs-base .ms-bgc-nd-f:focus" +
        "{" +
        "    background-color: '[theme:neutralDark, default:#212121]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nd," +
        ".o365cs-base .ms-bcl-nd-h:hover," +
        ".o365cs-base .ms-bcl-nd-f:focus" +
        "{" +
        "    border-color: '[theme:neutralDark, default:#212121]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-np," +
        ".o365cs-base .ms-fcl-np-h:hover," +
        ".o365cs-base .ms-fcl-np-f:focus" +
        "{" +
        "    color: '[theme:neutralPrimary, default:#333333]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-np," +
        ".o365cs-base .ms-bgc-np-h:hover," +
        ".o365cs-base .ms-bgc-np-f:focus" +
        "{" +
        "    background-color: '[theme:neutralPrimary, default:#333333]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-np," +
        ".o365cs-base .ms-bcl-np-h:hover," +
        ".o365cs-base .ms-bcl-np-f:focus" +
        "{" +
        "    border-color: '[theme:neutralPrimary, default:#333333]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-ns," +
        ".o365cs-base .ms-fcl-ns-h:hover," +
        ".o365cs-base .ms-fcl-ns-f:focus" +
        "{" +
        "    color: '[theme:neutralSecondary, default:#666666]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-ns.o365cs-nav-moduleLabel" + // Special case for the module label in the unthemed app launcher
        "{" +
        "    color: #666666;" +
        "}\n" +
        ".o365cs-base .ms-bgc-ns," +
        ".o365cs-base .ms-bgc-ns-h:hover," +
        ".o365cs-base .ms-bgc-ns-f:focus" +
        "{" +
        "    background-color: '[theme:neutralSecondary, default:#666666]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-ns," +
        ".o365cs-base .ms-bcl-ns-h:hover," +
        ".o365cs-base .ms-bcl-ns-f:focus" +
        "{" +
        "    border-color: '[theme:neutralSecondary, default:#666666]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nsa," +
        ".o365cs-base .ms-fcl-nsa-h:hover," +
        ".o365cs-base .ms-fcl-nsa-f:focus" +
        "{" +
        "    color: '[theme:neutralSecondaryAlt, default:#767676]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nsa," +
        ".o365cs-base .ms-bgc-nsa-h:hover," +
        ".o365cs-base .ms-bgc-nsa-f:focus" +
        "{" +
        "    background-color: '[theme:neutralSecondaryAlt, default:#767676]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nsa," +
        ".o365cs-base .ms-bcl-nsa-h:hover," +
        ".o365cs-base .ms-bcl-nsa-f:focus" +
        "{" +
        "    border-color: '[theme:neutralSecondaryAlt, default:#767676]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nt," +
        ".o365cs-base .ms-fcl-nt-h:hover," +
        ".o365cs-base .ms-fcl-nt-f:focus" +
        "{" +
        "    color: '[theme:neutralTertiary, default:#a6a6a6]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nt," +
        ".o365cs-base .ms-bgc-nt-h:hover," +
        ".o365cs-base .ms-bgc-nt-f:focus" +
        "{" +
        "    background-color: '[theme:neutralTertiary, default:#a6a6a6]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nt," +
        ".o365cs-base .ms-bcl-nt-h:hover," +
        ".o365cs-base .ms-bcl-nt-f:focus" +
        "{" +
        "    border-color: '[theme:neutralTertiary, default:#a6a6a6]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nta," +
        ".o365cs-base .ms-fcl-nta-h:hover," +
        ".o365cs-base .ms-fcl-nta-f:focus" +
        "{" +
        "    color: '[theme:neutralTertiaryAlt, default:#c8c8c8]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nta," +
        ".o365cs-base .ms-bgc-nta-h:hover," +
        ".o365cs-base .ms-bgc-nta-f:focus" +
        "{" +
        "    background-color: '[theme:neutralTertiaryAlt, default:#c8c8c8]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nta," +
        ".o365cs-base .ms-bcl-nta-h:hover," +
        ".o365cs-base .ms-bcl-nta-f:focus" +
        "{" +
        "    border-color: '[theme:neutralTertiaryAlt, default:#c8c8c8]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nl," +
        ".o365cs-base .ms-fcl-nl-h:hover," +
        ".o365cs-base .ms-fcl-nl-f:focus" +
        "{" +
        "    color: '[theme:neutralLight, default:#eaeaea]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nl," +
        ".o365cs-base .ms-bgc-nl-h:hover," +
        ".o365cs-base .ms-bgc-nl-f:focus" +
        "{" +
        "    background-color: '[theme:neutralLight, default:#eaeaea]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nl," +
        ".o365cs-base .ms-bcl-nl-h:hover," +
        ".o365cs-base .ms-bcl-nl-f:focus" +
        "{" +
        "    border-color: '[theme:neutralLight, default:#eaeaea]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nlr," +
        ".o365cs-base .ms-fcl-nlr-h:hover," +
        ".o365cs-base .ms-fcl-nlr-f:focus" +
        "{" +
        "    color: '[theme:neutralLighter, default:#f4f4f4]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nlr," +
        ".o365cs-base .ms-bgc-nlr-h:hover," +
        ".o365cs-base .ms-bgc-nlr-f:focus," +
        ".o365cs-base.ms-bgc-nlr" +
        "{" +
        "    background-color: '[theme:neutralLighter, default:#f4f4f4]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nlr," +
        ".o365cs-base .ms-bcl-nlr-h:hover," +
        ".o365cs-base .ms-bcl-nlr-f:focus" +
        "{" +
        "    border-color: '[theme:neutralLighter, default:#f4f4f4]';" +
        "}\n" +
        ".o365cs-base .ms-fcl-nlra," +
        ".o365cs-base .ms-fcl-nlra-h:hover," +
        ".o365cs-base .ms-fcl-nlra-f:focus" +
        "{" +
        "    color: '[theme:neutralLighterAlt, default:#f8f8f8]';" +
        "}\n" +
        ".o365cs-base .ms-bgc-nlra," +
        ".o365cs-base .ms-bgc-nlra-h:hover," +
        ".o365cs-base .ms-bgc-nlra-f:focus," +
        ".o365cs-base.ms-bgc-nlra" +
        "{" +
        "    background-color: '[theme:neutralLighterAlt, default:#f8f8f8]';" +
        "}\n" +
        ".o365cs-base .ms-bcl-nlra," +
        ".o365cs-base .ms-bcl-nlra-h:hover," +
        ".o365cs-base .ms-bcl-nlra-f:focus" +
        "{" +
        "    border-color: '[theme:neutralLighterAlt, default:#f8f8f8]';" +
        "}\n" +
        ".o365cs-base .o365cs-topnavLinkBackground-2" +
        "{" +
        "    background-color: transparent;" +
        "}\n" +
        ".o365cs-base .o365cs-topnavText," +
        ".o365cs-base .o365cs-topnavText:hover" +
        "{" +
        "    color: '[theme:suiteBarText, default:#ffffff]';" + // $SuiteBarText
        "}\n" +
        ".o365cs-base .o365cs-appLauncherBackground" +
        "{" +
        "    background-color: '[theme:themeDarker, default:#104a7d]';" +
        "}\n" +
        ".o365cs-nav-header16 .o365cs-navMenuButton" +
        "{" +
        "    color: '[theme:white, default:#ffffff]';" + // Should this be hardcoded to #ffffff?
        "}\n" +
        ".o365cs-base .o365cs-navMenuButton" +
        "{" +
        "    color: '[theme:suiteBarText, default:#ffffff]';" + // $SuiteBarText
        "}\n" +
        ".o365cs-base.o365cs-topnavBGImage" +
        "{" +
        "    background-position: center top;" +
        "    background-repeat: repeat-x;" +
        "    background-image: none;" + // $ThemeTopnavBackgroundImage
        "}\n" +
        ".o365cs-base.o365cs-topnavBGColor-2" +
        "{" +
        "    background-color: '[theme:suiteBarBackground, default:#000000]';" + // $ThemeTopnavBackgroundColor
        "}\n";
    load_themed_styles_1.loadStyles(strCss);
}
exports.loadFallbackShellThemableCss = loadFallbackShellThemableCss;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Scope_1 = __webpack_require__(47);
var Resources_1 = __webpack_require__(173);
/**
 * Base class for lifetime-managed, scoped components.
 *
 * Many web components ultimately need to set up subscriptions to events,
 * manage HTML elements, wait on asychronous activities, and clean up
 * loaded state. The `Component` base class provides a way to create a hierarchy
 * of objects with lifetime management and automatic resource scoping.
 *
 * `Component` combines the benefits of `ResourceScope` and `Scope` into a single
 *  package for convenience.
 *
 * If a component-like class needs the benefits of lifetime management but cannot
 * extend `Component`, consider wrapping a `Scope` and a `ResourceScope` in order
 * to create child components.
 *
 * @export
 * @class Component
 * @implements {IDisposable}
 *
 * @example
 *  export interface ISearchServiceParams extends IComponentParams {
 *      searchMode: SearchMode;
 *  }
 *
 *  export interface ISearchDependencies extends IComponentDependencies {
 *      context: IContext
 *      DataRequestor?: typeof DataRequestor;
 *  }
 *
 *  export default class SearchService extends Component {
 *      public static readonly dependencies: IResourceDependencies<ISearchDependencies> = {
 *          ...Component.dependencies,
 *          context: contextKey
 *      }
 *
 *      private _dataRequestor: DataRequestor;
 *      private _context: IContext;
 *      private _searchMode: SearchMode;
 *
 *      constructor(params: ISearchServiceParams, dependencies: ISearchServiceDependencies) {
 *          super(params, dependencies);
 *
 *          const {
 *              searchMode
 *          } = params;
 *
 *          const {
 *              context
 *              DataRequestor: dataRequestorType // This parameter is only used in unit tests
 *          } = dependencies;
 *
 *          this._searchMode = searchMode;
 *
 *          this._context = context;
 *
 *          this._dataRequestor = new (this.child(dataRequestorType))();
 *      }
 *
 *      public search(options: ISearchOptions): Promise<ISearchResult> {
 *          return this._dataRequestor.getData(...).then((data: ISearchResponse) => {
 *              return this._processResponse(data);
 *          });
 *      }
 *  }
 */
var Component = /** @class */ (function () {
    /**
     * Creates an instance of Component.
     * In general, derived classes should invoke `super(params, dependencies)`, supplying both
     * `params` and `dependencies` to the `Component` class.
     * When creating a new instance of a derived component, use either
     * `new (resources.injected(MyComponent))()`
     * when outside a `Component` or
     * `new (this.child(MyComponent))()`
     * when inside a `Component`. This will ensure that resources are properly passed and lifetimes
     * are properly managed.
     *
     * @param {IComponentParams} [params={}] Optional params to control behaviors of this class.
     * In general, classes which extend components
     * @param {IComponentDependencies} [dependencies={}] Optional dependencies to override types consumed by this class.
     * `dependencies` is intended for use during unit testing, to override types consumed outside of resourcing.
     * Most dependency injection should be done using `ResourceScope`.
     */
    function Component(params, dependencies) {
        if (params === void 0) { params = {}; }
        if (dependencies === void 0) { dependencies = {}; }
        var _a = this.resources, resources = _a === void 0 ? (dependencies.resources ?
            // If the resource scope comes via dependencies, then it might not be unique to this component instance.
            // To be safe, create a new child resource scope for resource exposures.
            new Resources_1.ResourceScope(dependencies.resources) :
            params.resources) : _a;
        this.resources = resources;
        this._Component_scope = new Scope_1.default();
    }
    Object.defineProperty(Component.prototype, "scope", {
        /**
         * Gets the lifetime scope manager for this component.
         * In general, use `new (this.child(Type))()` to create child components
         * with proper lifetime management.
         * However, `this.scope` can be used to attach arbitrary disposable objects
         * to bind their lifetimes to the current component instance.
         *
         * @protected
         * @type {Scope}
         */
        get: function () {
            return this._Component_scope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "isDisposed", {
        /**
         * Determines whether or not this component has been disposed.
         *
         * @readonly
         * @protected
         * @type {boolean}
         */
        get: function () {
            return this.scope.isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    Component.prototype.dispose = function () {
        this._Component_scope.dispose();
    };
    /**
     * Produces a constructor for a type which injects instances
     * with this component's current resources and binds them
     * to this component's lifetime. New code should prefer `this.child`.
     *
     * @protected
     * @template T
     * @param {T} type
     * @returns {T}
     */
    Component.prototype.managed = function (type) {
        if (this.resources) {
            type = this.resources.injected(type);
        }
        return this.scope.attached(type);
    };
    Component.prototype.child = function (keyOrType) {
        var type;
        if (keyOrType instanceof Resources_1.ResourceKey) {
            type = this.resources.consume(keyOrType);
        }
        else if (this.resources) {
            type = this.resources.injected(keyOrType, {
                injectChildResourceScope: true
            });
        }
        else {
            type = keyOrType;
        }
        return this.scope.attached(type);
    };
    Component.dependencies = {
        resources: Resources_1.resourceScopeKey
    };
    return Component;
}());
exports.Component = Component;
exports.default = Component;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(0);
var ResourceScope_1 = __webpack_require__(94);
var Disposable_1 = __webpack_require__(59);
/**
 * An implementation of IResourceLoader that constructs a {ResolvedResourceFactory} from the type that the load function resolves to.
 */
var ResolvedResourceLoader = /** @class */ (function () {
    function ResolvedResourceLoader(load, dependencies) {
        this._load = load;
        this._dependencies = dependencies;
    }
    ResolvedResourceLoader.prototype.load = function () {
        var _this = this;
        var promise = this._load().then(function (type) {
            return new ResolvedResourceFactory(type, _this._dependencies);
        });
        this.load = function () { return promise; };
        return promise;
    };
    return ResolvedResourceLoader;
}());
exports.ResolvedResourceLoader = ResolvedResourceLoader;
/**
 * An implementation of IResourceFactory that instantiates the passed type, resolving any dependencies from resources.
 */
var ResolvedResourceFactory = /** @class */ (function () {
    function ResolvedResourceFactory(type, dependencies) {
        this._type = type;
        this.dependencies = tslib_1.__assign({}, (type.dependencies || {}), (dependencies || {}));
    }
    ResolvedResourceFactory.prototype.create = function (dependencies) {
        var instance = new this._type({}, dependencies);
        return {
            instance: instance,
            disposable: instance
        };
    };
    return ResolvedResourceFactory;
}());
exports.ResolvedResourceFactory = ResolvedResourceFactory;
/**
 * An implementation of IResourceFactory that provides a constructor for the passed type with dependencies resolved from resources.
 */
var ResolvedResourceTypeFactory = /** @class */ (function () {
    function ResolvedResourceTypeFactory(type, dependencies) {
        this._type = type;
        this.dependencies = tslib_1.__assign({}, (type.dependencies || {}), (dependencies || {}));
    }
    ResolvedResourceTypeFactory.prototype.create = function (dependencies) {
        return {
            instance: ResourceScope_1.getResolvedConstructor(this._type, dependencies)
        };
    };
    return ResolvedResourceTypeFactory;
}());
exports.ResolvedResourceTypeFactory = ResolvedResourceTypeFactory;
/**
 * An implementation of IResourceFactory for classes that have no dependencies and take no parameters.
 */
var SimpleResourceFactory = /** @class */ (function () {
    function SimpleResourceFactory(type) {
        this._type = type;
        this.dependencies = {};
    }
    SimpleResourceFactory.prototype.create = function () {
        var instance = new this._type();
        return {
            instance: instance,
            disposable: Disposable_1.isDisposable(instance) && instance
        };
    };
    return SimpleResourceFactory;
}());
exports.SimpleResourceFactory = SimpleResourceFactory;
var AliasResourceLoader = /** @class */ (function () {
    function AliasResourceLoader(load) {
        this._load = load;
    }
    AliasResourceLoader.prototype.load = function () {
        var promise = this._load().then(function (dependency) {
            return new AliasResourceFactory(dependency);
        });
        this.load = function () { return promise; };
        return promise;
    };
    return AliasResourceLoader;
}());
exports.AliasResourceLoader = AliasResourceLoader;
/**
 * An implementation of IResourceFactory which wraps an existing resource key.
 */
var AliasResourceFactory = /** @class */ (function () {
    function AliasResourceFactory(dependency) {
        this.dependencies = {
            value: dependency.lazy
        };
    }
    AliasResourceFactory.prototype.create = function (dependencies) {
        return {
            instance: dependencies.value()
        };
    };
    return AliasResourceFactory;
}());
exports.AliasResourceFactory = AliasResourceFactory;
function createDefaultResourceKey(syncRequire, type, dependencies) {
    return createResolvedResourceKey(syncRequire('module').id, type, dependencies);
}
exports.createDefaultResourceKey = createDefaultResourceKey;
function createResolvedResourceKey(name, type, dependencies) {
    return new ResourceScope_1.ResourceKey({
        name: name,
        factory: new ResolvedResourceFactory(type, dependencies)
    });
}
exports.createResolvedResourceKey = createResolvedResourceKey;
function createDefaultTypeResourceKey(syncRequire, type, dependencies) {
    return createResolvedTypeResourceKey(syncRequire('module').id, type, dependencies);
}
exports.createDefaultTypeResourceKey = createDefaultTypeResourceKey;
function createResolvedTypeResourceKey(name, type, dependencies) {
    return new ResourceScope_1.ResourceKey({
        name: name,
        factory: new ResolvedResourceTypeFactory(type, dependencies)
    });
}
exports.createResolvedTypeResourceKey = createResolvedTypeResourceKey;
tslib_1.__exportStar(__webpack_require__(94), exports);


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HslColor_1 = __webpack_require__(96);
var RgbaColor_1 = __webpack_require__(25);
// Various constants used for generated shades of a color.
var WhiteShadeTable = [0.95, 0.85, 0.75, 0.65, 0.50];
var BlackTintTable = [0.50, 0.65, 0.75, 0.85, 0.95];
var ColorTintTable = [0.20, 0.40, 0.60];
var ColorShadeTable = [0.75, 0.50];
var LumTintTable = [0.10, 0.25, 0.50, 0.75, 0.90];
var LumShadeTable = [0.90, 0.75, 0.50, 0.25, 0.10];
var c_LuminanceLow = 0.2;
var c_LuminanceHigh = 0.8;
var rgbaMax = RgbaColor_1.default.maxComponent;
var rgbaWhite = RgbaColor_1.default.fromRgba(rgbaMax, rgbaMax, rgbaMax);
var rgbaBlack = RgbaColor_1.default.fromRgba(0, 0, 0);
/** Shades of a given color, from Lightest to Darkest. */
var Shades;
(function (Shades) {
    Shades[Shades["Unshaded"] = 0] = "Unshaded";
    Shades[Shades["Lightest"] = 1] = "Lightest";
    Shades[Shades["Lighter"] = 2] = "Lighter";
    Shades[Shades["Medium"] = 3] = "Medium";
    Shades[Shades["Darker"] = 4] = "Darker";
    Shades[Shades["Darkest"] = 5] = "Darkest";
})(Shades = exports.Shades || (exports.Shades = {}));
/**
 * Returns true if the argument is a valid Shades value
 * @param {Shades} shade The Shades value to validate.
 */
function _isValidShade(shade) {
    'use strict';
    return (shade >= Shades.Unshaded) && (shade <= Shades.Darkest);
}
/**
 * Given an RgbaColor and a shade specification, generates the requested shade of the color.
 * @param {RgbaColor} color The base color whose shades are to be computed
 * @param {Shades} shade The shade of the base color to compute.
 */
function getShade(color, shade) {
    'use strict';
    if (!color) {
        return null;
    }
    if (shade === Shades.Unshaded || !_isValidShade(shade)) {
        return RgbaColor_1.default.fromRgba(color.R, color.G, color.B, color.A);
    }
    var hsl = HslColor_1.default.fromRgba(color);
    var lum = hsl.lum;
    var tableIndex = shade - 1;
    if (RgbaColor_1.default.equals(color, rgbaWhite)) {
        hsl.darken(WhiteShadeTable[tableIndex]);
    }
    else if (RgbaColor_1.default.equals(color, rgbaBlack)) {
        hsl.lighten(BlackTintTable[tableIndex]);
    }
    else if (lum < c_LuminanceLow) {
        hsl.lighten(LumTintTable[tableIndex]);
    }
    else if (lum > c_LuminanceHigh) {
        hsl.darken(LumShadeTable[tableIndex]);
    }
    else {
        if (tableIndex < ColorTintTable.length) {
            hsl.lighten(ColorTintTable[tableIndex]);
        }
        else {
            hsl.darken(ColorShadeTable[tableIndex - ColorTintTable.length]);
        }
    }
    color = hsl.toRgbaColor();
    return color;
}
exports.getShade = getShade;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// encode <>&'"
var ENCODE_HTML_TEXT_REGEX = /[<>&'"\\]/g;
var CODES = {
    '<': '&lt;',
    '>': '&gt;',
    '&': '&amp;',
    '"': '&quot;',
    '\'': '&#39;',
    '\\': '&#92;'
};
function replacer(match) {
    return CODES[match];
}
var HtmlEncoding = /** @class */ (function () {
    function HtmlEncoding() {
    }
    /**
     * Encodes a string for use in HTML text. Not recommended for attribute values
     * or anything that might be used in a URL.
     */
    HtmlEncoding.encodeText = function (inputString) {
        if (!inputString) {
            return "";
        }
        return inputString.replace(ENCODE_HTML_TEXT_REGEX, replacer);
    };
    return HtmlEncoding;
}());
exports.default = HtmlEncoding;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var Locale = /** @class */ (function () {
    function Locale() {
    }
    /**
     * Sets the locale to be used by the app.
     * @param {string} language - The language used to render the app.
     */
    Locale.invalidate = function (language) {
        Locale.isRightToLeft = (window.document && document.documentElement.getAttribute('dir') === 'rtl');
        Locale.safeLeft = Locale.isRightToLeft ? 'right' : 'left';
        Locale.safeRight = Locale.isRightToLeft ? 'left' : 'right';
        /** Robert Chen has the detailed explanation here : The most magic thing here is that OneDrive page and teamsite page has exactly the same line of code with regard to html tag Lang attribute.
         * <SharePoint:SPHtmlTag lang="<%$Resources:wss,language_value%>" dir="<%$Resources:wss,multipages_direction_dir_value%>" ID="SPHtmlTag" runat="server">
         * And in teamsite doclib, this lang gets executed to the current user locale. And that is actually already a magic------What happens here is the in order to get the doclib page in ContentDB, we had a standard MondoSproc call which gets the page and the SPWeb. In constructing the web, SP *  * code has smart logic to set Thread.CurrentThread.CurrentUICulture to match the MUI language! And with that magic, ="<%$Resources:wss,language_value%> actually gets sets properly to the user language, not the pre-defined web language.
         * For OneDrive.aspx which lives inside _layouts folder, the order of code execution changes. We must have executed this line of ASPX code first ="<%$Resources:wss,language_value%> before SPWeb was opened and did the magic to set Thread.CurrentThread.CurrentUICulture.
         * So the Thread.CurrentThread.CurrentUICulture affecting ="<%$Resources:wss,language_value%> with SPWeb magic end up not working in Onedrive.aspx! And there’s really nothing that we can do about it unless we rewrite the page!
         * So the conclusion is that the lang attribute is by design (of implementation) different from the regular team site pages which live inside content db.
         */
        language = language || window["_spPageContextInfo"] && window["_spPageContextInfo"].currentUICultureName;
        // fallback of xml:lang for IE9
        Locale.language = language || (window.document &&
            (document.documentElement.getAttribute('lang') ||
                document.documentElement.getAttribute('xml:lang'))) ||
            'en-us';
    };
    return Locale;
}());
Locale.invalidate();
exports.default = Locale;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This datasource makes a call to the Acronyms and Colors service and returns an IAcronymColor object.
 */
var SiteHeaderLogoAcronym = /** @class */ (function () {
    /**
     * @constructor
     */
    function SiteHeaderLogoAcronym(pageContext) {
        this._pageContext = pageContext;
    }
    /**
     * Given a site name, return an URL to a REST endpoint where the site logo acronym and color information can be retrieved from.
     * The REST endpoint is through the GetAcronymsAndColors API.
     * Note: API takes in additional optional arguments like lcid, which as of this writing this method doesn't support.
     *       Please extend as appropriate.
     *
     * @param {string} siteName Name of the site.
     * @returns { string} the REST endpoint relative URL.
     */
    SiteHeaderLogoAcronym.prototype.getAcronymRESTUrl = function (siteName) {
        return this._pageContext.webServerRelativeUrl + ("/_api/sphome/GetAcronymsAndColors?labels=[{Text:" + encodeURIComponent('"' + siteName + '"') + "}]");
    };
    SiteHeaderLogoAcronym.prototype.getAcronymColor = function (responseText) {
        //parse the responseText
        var rtnObj = { acronym: undefined, color: undefined };
        try {
            var response = JSON.parse(responseText);
            var responseResult = response.d.GetAcronymsAndColors.results[0];
            rtnObj.acronym = responseResult.Acronym;
            rtnObj.color = responseResult.Color;
        }
        catch (e) {
            // try xml parsing
            var parser = this._parseFn();
            var elements = void 0;
            var xmlDoc = parser(responseText);
            if (elements = xmlDoc.getElementsByTagName("element")) {
                var element = elements[0];
                for (var i = 0; i < element.childNodes.length; i++) {
                    switch (element.childNodes[i].nodeName) {
                        case 'Acronym':
                            rtnObj.acronym = element.childNodes[i].nodeValue;
                            break;
                        case 'Color':
                            rtnObj.color = element.childNodes[i].nodeValue;
                            break;
                    }
                }
            }
        }
        return rtnObj;
    };
    /**
     * Returns an XML parser.
     */
    SiteHeaderLogoAcronym.prototype._parseFn = function () {
        var parseXml;
        if (DOMParser) {
            parseXml = function (xmlStr) {
                return (new DOMParser()).parseFromString(xmlStr, "text/xml");
            };
        }
        else if (ActiveXObject &&
            new ActiveXObject("Microsoft.XMLDOM")) {
            parseXml = function (xmlStr) {
                var xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
                xmlDoc.async = "false";
                xmlDoc.loadXML(xmlStr);
                return xmlDoc;
            };
        }
        else {
            throw new Error("No XML parser found");
        }
        return parseXml;
    };
    return SiteHeaderLogoAcronym;
}());
exports.default = SiteHeaderLogoAcronym;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var RgbaColor_1 = __webpack_require__(25);
var ThemeCache_1 = __webpack_require__(97);
var Promise_1 = __webpack_require__(27);
var Engagement_event_1 = __webpack_require__(34);
var Qos_event_1 = __webpack_require__(31);
/**
 * Provides theme data, either from the local cache or from the server.
 */
var ThemeProvider = /** @class */ (function () {
    /**
     * Constructs a ThemeProvider which acts like the provided loadData function but with caching.
     * @param {() => Promise<IThemeData>} loadData Used to load data on a cache miss.
     */
    function ThemeProvider(loadData) {
        this._loadData = loadData;
    }
    ThemeProvider.getBackgroundUrl = function (data) {
        if (data) {
            return ThemeProvider._makeCssUrl(data.backgroundImageUri);
        }
        else {
            return 'none';
        }
    };
    /**
     * Given a URL, returns a string value which can be safely used as a
     * background-image value in a CSS rule. If the url is falsey, this
     * returns "none" to specify no background-image.
     * @param {string} url The URL of a background image.
     */
    ThemeProvider._makeCssUrl = function (url) {
        var cssUrlValue = "none";
        if (url) {
            cssUrlValue = 'url("' +
                ThemeProvider._escapeQuotesAndParentheses(url) +
                '")';
        }
        return cssUrlValue;
    };
    /**
     * Escapes single- and double-quotes along with parentheses so that the
     * resulting string is safe to use in a CSS background-image: url()
     * @param {string} str The string to escape.
     */
    ThemeProvider._escapeQuotesAndParentheses = function (str) {
        var replacements = { "'": "%27", '"': "%22", "(": "%28", ")": "%29" };
        var result = null;
        if (str != null) {
            result = str.replace(/(['"\(\)])/gm, function (match, capture) {
                return replacements[capture];
            });
        }
        return result;
    };
    /**
     * Loads the theme data and returns a map from theme tokens to replacement values.
     * Suitable for use with loadTheme in load-themed-styles.
     * @param {string} cacheToken Cache token used to validate cached data.
     * @param {boolean} forceUpdate Whether to force fresh data to be loaded and cached.
     */
    ThemeProvider.prototype.loadThemeTokenMap = function (cacheToken, forceUpdate) {
        return this.loadThemeData(cacheToken, forceUpdate).then(function (themeData) {
            var themeValues;
            if (themeData && themeData.palette) {
                themeValues = {};
                var palette = themeData.palette;
                for (var colorSlot in palette) {
                    var rgbaValue = palette[colorSlot];
                    themeValues[colorSlot] = rgbaValue ? RgbaColor_1.default.toHtmlString(rgbaValue) : null;
                }
                themeValues["backgroundImageUri"] =
                    ThemeProvider._makeCssUrl(themeData.backgroundImageUri);
            }
            return themeValues;
        }, function (error) { return null; }); // on error, return null
    };
    /**
     * Loads the theme data from the cache or via the a loadData method.
     * @param {string} cacheToken Cache token used to validate cached data.
     * @param {boolean} forceUpdate Whether to force fresh data to be loaded and cached.
     */
    ThemeProvider.prototype.loadThemeData = function (cacheToken, forceUpdate) {
        if (!forceUpdate && this._dataPromise) {
            return this._dataPromise;
        }
        var _this = this;
        var failureResultCode = null;
        var failureResultType = Qos_event_1.ResultTypeEnum.Failure;
        this._dataPromise = Qos_event_1.Qos.instrumentPromise(
        /*startSchema*/ { name: "ThemeProvider.LoadData" }, 
        /*createPromise*/ function () { return new Promise_1.default(function loadDataOnExecute(complete, error) {
            var previousData = null;
            if (!forceUpdate) {
                // Checks if we have valid cached data before returning it.
                previousData = ThemeCache_1.default.getCachedTheme(cacheToken);
            }
            // If we have previous data and an update is not forced, use that data.
            if (previousData) {
                Engagement_event_1.Engagement.logData({ name: "ThemeProvider.DataFromCache" });
                complete(previousData);
            }
            else {
                if (forceUpdate) {
                    Engagement_event_1.Engagement.logData({ name: "ThemeProvider.ForceUpdateData" });
                }
                Engagement_event_1.Engagement.logData({ name: "ThemeProvider.DataFromServer" });
                // Get updated data. Might result in a server call.
                _this._loadData(forceUpdate).done(function onComplete(themeData) {
                    if (themeData) {
                        if (themeData.cacheToken) {
                            ThemeCache_1.default.updateThemeCache(themeData, cacheToken);
                            complete(themeData);
                        }
                        else {
                            //TODO what happens if error() is undefined?
                            failureResultCode = "NoCacheToken";
                            if (error) {
                                error("Theme data with no CacheToken returned");
                            }
                        }
                    }
                    else {
                        failureResultCode = "NoData";
                        if (error) {
                            error("No model returned");
                        }
                    }
                }, function onError(err) {
                    if (Promise_1.default.isCanceled(error)) {
                        failureResultCode = "Canceled";
                        failureResultType = Qos_event_1.ResultTypeEnum.ExpectedFailure;
                    }
                    else {
                        failureResultCode = "ServerLoadFailure";
                    }
                    if (error) {
                        error(err);
                    }
                });
            }
        }); }, 
        /*getCompleteSchema*/ null, 
        /*getErrorSchema*/ function getErrorSchema(error) {
            if (Promise_1.default.isCanceled(error)) {
                failureResultType = Qos_event_1.ResultTypeEnum.ExpectedFailure;
                failureResultCode = "Canceled";
            }
            return {
                resultType: failureResultType,
                resultCode: failureResultCode || "Other",
                error: error
            };
        });
        return this._dataPromise;
    };
    return ThemeProvider;
}());
exports.default = ThemeProvider;


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// OneDrive:IgnoreCodeCoverage
Object.defineProperty(exports, "__esModule", { value: true });
var FabricTheming_1 = __webpack_require__(95);
var RgbaColor_1 = __webpack_require__(25);
var UriEncoding_1 = __webpack_require__(45);
/**
 * Utility methods which can be used to load the theme of a SharePoint site.
 */
var WebTheme = /** @class */ (function () {
    function WebTheme() {
    }
    /**
     * Constructs the URL of a REST endpoint which will return the web theme.
     * @param {IWebContextInfo} webContextInfo Context information about the web.
     * @param {string} cultureName Current UI culture.
     * @param {string} themeOverride URL to a temporary override theme (e.g. preview).
     */
    WebTheme.makeWebThemeRestUrl = function (webServerRelativeUrl, cultureName, themeOverride) {
        "use strict";
        var webUrl = webServerRelativeUrl;
        if (webUrl && webUrl[webUrl.length - 1] === '/') {
            // Trim trailing slash.
            webUrl = webUrl.substring(0, webUrl.length - 1);
        }
        webUrl = UriEncoding_1.default.escapeUrlForCallback(webUrl);
        var webThemeRestEndpoint = UriEncoding_1.default.escapeUrlForCallback(webUrl) +
            '/_api/SP.Web.GetContextWebThemeData?noImages=true&lcid=' +
            UriEncoding_1.default.encodeURIComponent(cultureName);
        if (themeOverride) {
            webThemeRestEndpoint += "&ThemeOverride=" + UriEncoding_1.default.encodeURIComponent(themeOverride);
        }
        return webThemeRestEndpoint;
    };
    /**
     * Constructs the URL of a REST endpoint which will return the web theme.
     * @param {IWebContextInfo} webContextInfo Context information about the web.
     */
    WebTheme.processWebThemeRestResponse = function (responseText) {
        // This could throw if the handler returns an HTML error page or invalis JSON.
        // DataSource will count that as an error and call the error callback.
        "use strict";
        var response = JSON.parse(responseText);
        var rawThemeData;
        if (response && response.d && response.d.GetContextWebThemeData) {
            rawThemeData = JSON.parse(response.d.GetContextWebThemeData);
        }
        var themeData = WebTheme.processRawThemeData(rawThemeData);
        return themeData;
    };
    /**
     * Converts an IThemeDataRaw into an IThemeData.
     * @param {IThemeDataRaw} themeData Raw theme data to process.
     */
    WebTheme.processRawThemeData = function (themeData) {
        "use strict";
        if (themeData) {
            var coerceToColor = WebTheme.coerceToColor;
            var setColorIfMissing = WebTheme.SetColorIfMissing;
            var colors = {};
            var inputColors = themeData.Palette ? themeData.Palette.Colors : {};
            colors = WebTheme.convertColorsToRgba(inputColors);
            var fabricColors = FabricTheming_1.default.generateFabricColors(colors['ContentAccent1'], themeData.IsInverted);
            var pageBG = coerceToColor(colors['PageBackground']) || null;
            var bgOverlay = coerceToColor(colors['BackgroundOverlay']) || null;
            var alpha40 = Math.round(0.4 * RgbaColor_1.default.maxComponent);
            for (var colorKey in fabricColors) {
                setColorIfMissing(colors, colorKey, fabricColors[colorKey]);
            }
            setColorIfMissing(colors, 'white', pageBG);
            // RgbaColor.fromRgba and RgbaColor.clone both return new objects.
            // This is important for avoiding duplicate filtering logic in the caching layer.
            setColorIfMissing(colors, 'primaryBackground', RgbaColor_1.default.clone(pageBG));
            setColorIfMissing(colors, 'primaryText', fabricColors['primaryText'] || coerceToColor('#333'));
            setColorIfMissing(colors, 'whiteTranslucent40', pageBG && RgbaColor_1.default.fromRgba(pageBG.R, pageBG.G, pageBG.B, alpha40));
            setColorIfMissing(colors, 'backgroundOverlay', bgOverlay);
            setColorIfMissing(colors, 'suiteBarBackground', coerceToColor(colors['SuiteBarBackground']) || null);
            setColorIfMissing(colors, 'suiteBarText', coerceToColor(colors['SuiteBarText']) || null);
            setColorIfMissing(colors, 'suiteBarDisabledText', coerceToColor(colors['SuiteBarDisabledText']) || null);
            setColorIfMissing(colors, 'topBarBackground', coerceToColor(colors['TopBarBackground']) || null);
            setColorIfMissing(colors, 'topBarText', coerceToColor(colors['TopBarText']) || null);
            setColorIfMissing(colors, 'topBarHoverText', coerceToColor(colors['TopBarHoverText']) || null);
            setColorIfMissing(colors, 'dialogBorder', coerceToColor(colors['DialogBorder']) || null);
            return {
                backgroundImageUri: themeData.BackgroundImageUri,
                cacheToken: themeData.ThemeCacheToken,
                isDefault: themeData.IsDefault,
                isInverted: themeData.IsInverted,
                palette: colors,
                version: themeData.Version
            };
        }
        return {
            backgroundImageUri: "",
            cacheToken: "",
            isDefault: true,
            isInverted: false,
            palette: {},
            version: ""
        };
    };
    WebTheme.convertColorsToRgba = function (colors) {
        var convertedColors = {};
        for (var colorKey in colors) {
            if (colors.hasOwnProperty(colorKey)) {
                var colorValue = WebTheme.coerceToColor(colors[colorKey]);
                // TODO: console.warn if colorValue is undefined?
                if (colorValue) {
                    convertedColors[colorKey] = colorValue;
                }
            }
        }
        return convertedColors;
    };
    /**
     * Coerces an HTML color string or a color object in raw web theme data into an RgbaColor.
     * @param {any} toColor Object to be converted into an RgbaColor.
     */
    WebTheme.coerceToColor = function (toColor) {
        "use strict";
        var resultColor;
        // Use duck typing to extract a color
        if (!toColor) {
            resultColor = null;
        }
        else if (typeof toColor === "string" || toColor instanceof String) {
            resultColor = RgbaColor_1.default.fromHtmlColor(String(toColor));
        }
        else if ("DefaultColor" in toColor) {
            resultColor = WebTheme.coerceToColor(toColor["DefaultColor"]);
        }
        else if ("R" in toColor && "G" in toColor && "B" in toColor) {
            resultColor = RgbaColor_1.default.fromRgba(toColor.R, toColor.G, toColor.B, toColor.A);
        }
        return resultColor;
    };
    WebTheme.SetColorIfMissing = function (palette, slot, color) {
        if (!(palette[slot])) {
            palette[slot] = color;
        }
    };
    return WebTheme;
}());
exports.default = WebTheme;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ItemType_1 = __webpack_require__(98);
/**
 * Enumeration of icon file names, and what extensions they map to.
 * Please keep items alphabetical. Items without extensions may require specific logic in the code to map.
 * Track icon accuracy status here: https://msft-my.spoppe.com/personal/caperez_microsoft_com/Documents/Missing%20List.xlsx?web=1
 */
var FileTypeIconMap = {
    'accdb': { extensions: ['accdb', 'mdb'] },
    'archive': { type: ItemType_1.default.Unknown, extensions: ['7z', 'ace', 'arc', 'arj', 'dmg', 'gz', 'iso', 'lzh', 'pkg', 'rar', 'sit', 'tgz', 'tar', 'z'] },
    'audio': { type: ItemType_1.default.Unknown, extensions: ['aif', 'aiff', 'aac', 'amr', 'au', 'awb', 'dct', 'dss', 'dvf', 'flac', 'gsm', 'm4a', 'm4p', 'mid', 'mmf', 'mp3', 'ogg', 'oga', 'ra', 'rm', 'wav', 'wma', 'wv'] },
    'code': { extensions: ['abap', 'ada', 'adp', 'ahk', 'as', 'as3', 'asc', 'ascx', 'asm', 'asp', 'awk', 'bash', 'bash_login', 'bash_logout', 'bash_profile', 'bashrc', 'bat', 'bib', 'bsh', 'build', 'builder', 'c', 'c++', 'capfile', 'cc', 'cfc', 'cfm', 'cfml', 'cl', 'clj', 'cls', 'cmake', 'cmd', 'coffee', 'config', 'cpp', 'cpt', 'cpy', 'cs', 'cshtml', 'cson', 'csproj', 'css', 'ctp', 'cxx', 'd', 'ddl', 'di', 'disco', 'dml', 'dtd', 'dtml', 'el', 'emakefile', 'erb', 'erl', 'f', 'f90', 'f95', 'fs', 'fsi', 'fsscript', 'fsx', 'gemfile', 'gemspec', 'gitconfig', 'go', 'groovy', 'gvy', 'Hcp', 'h', 'h++', 'haml', 'handlebars', 'hbs', 'hh', 'hpp', 'hrl', 'hs', 'htc', 'hxx', 'idl', 'iim', 'inc', 'inf', 'ini', 'inl', 'ipp', 'irbrc', 'jade', 'jav', 'java', 'js', 'json', 'jsp', 'jsx', 'l', 'less', 'lhs', 'lisp', 'log', 'lst', 'ltx', 'lua', 'm', 'mak', 'make', 'manifest', 'master', 'md', 'markdn', 'markdown', 'mdown', 'mkdn', 'ml', 'mli', 'mll', 'mly', 'mm', 'mud', 'nfo', 'opml', 'osascript', 'p', 'pas', 'patch', 'php', 'php2', 'php3', 'php4', 'php5', 'phtml', 'pl', 'pm', 'pod', 'pp', 'profile', 'ps1', 'pss', 'pt', 'py', 'pyw', 'r', 'rake', 'rb', 'rbx', 'rc', 'rdf', 're', 'reg', 'rest', 'resw', 'resx', 'rhtml', 'rjs', 'rprofile', 'rpy', 'rss', 'rst', 'ruby', 'rxml', 's', 'sass', 'scala', 'scm', 'sconscript', 'sconstruct', 'script', 'scss', 'sgml', 'sh', 'sh', 'shtml', 'sml', 'svn-base', 'sql', 'sql', 'sty', 'tcl', 'tex', 'textile', 'tld', 'tli', 'tmpl', 'tpl', 'vb', 'vi', 'vim', 'vmg', 'webpart', 'wsp', 'wsdl', 'xhtml', 'xoml', 'xsd', 'xslt', 'yaml', 'yaws', 'yml', 'zsh'] },
    'css': {},
    'csv': { extensions: ['csv'] },
    'docset': { type: ItemType_1.default.Folder, iconType: 'svg' },
    'docx': { extensions: ['doc', 'docm', 'docx'] },
    'dotx': { extensions: ['dot', 'dotm', 'dotx'] },
    'email': { type: ItemType_1.default.Unknown, extensions: ['eml', 'msg', 'ost', 'pst'] },
    'exe': { type: ItemType_1.default.Unknown, extensions: ['application', 'appref-ms', 'apk', 'app', 'appx', 'exe', 'ipa', 'msi', 'xap'] },
    'folder': { type: ItemType_1.default.Folder, iconType: 'svg' },
    'font': { type: ItemType_1.default.Unknown, extensions: ['ttf', 'otf', 'woff'] },
    'genericfile': { type: ItemType_1.default.Unknown },
    'html': { extensions: ['htm', 'html', 'mht'] },
    'link': { type: ItemType_1.default.Unknown, extensions: ['lnk', 'link', 'url', 'website', 'webloc'] },
    'listitem': { type: ItemType_1.default.Unknown, extensions: ['listitem'] },
    'model': { extensions: ['3ds', '3mf', 'blend', 'cool', 'dae', 'df', 'dwfx', 'dwg', 'dxf', 'fbx', 'glb', 'gltf', 'holo', 'layout', 'max', 'off', 'ply', 'skp', 'stp', 'stl', 't', 'thl', 'x'] },
    'mpp': { extensions: ['mpp'] },
    'mpt': { extensions: ['mpt'] },
    'odp': { extensions: ['odp'] },
    'ods': { extensions: ['ods'] },
    'odt': { extensions: ['odt'] },
    'one': { type: ItemType_1.default.OneNote, extensions: ['one', 'onepkg'] },
    'onetoc': { type: ItemType_1.default.OneNote, extensions: ['ms-one-stub', 'onetoc', 'onetoc2'] },
    'pdf': { extensions: ['pdf'] },
    'photo': { type: ItemType_1.default.Media, extensions: ['arw', 'bmp', 'cr2', 'crw', 'dcr', 'dds', 'dib', 'dng', 'erf', 'gif', 'heic', 'heif', 'ico', 'jfi', 'jfif', 'jif', 'jpe', 'jpeg', 'jpg', 'kdc', 'mrw', 'nef', 'orf', 'pct', 'pict', 'png', 'pns', 'psd', 'raw', 'tga', 'tif', 'tiff', 'wdp'] },
    'potx': { extensions: ['pot', 'potm', 'potx'] },
    'ppsx': { extensions: ['pps', 'ppsm', 'ppsx'] },
    'pptx': { extensions: ['ppt', 'pptm', 'pptx'] },
    'pub': { extensions: ['pub'] },
    'spo': { extensions: ['aspx'] },
    'rtf': { extensions: ['epub', 'rtf', 'wri'] },
    'sharedfolder': { type: ItemType_1.default.Folder, iconType: 'svg' },
    'sysfile': { type: ItemType_1.default.Unknown, extensions: ['bak', 'bin', 'cab', 'cache', 'cat', 'cer', 'class', 'dat', 'db', 'dbg', 'dl_', 'dll', 'ithmb', 'jar', 'kb', 'kdc', 'ldt', 'lrprev', 'ppa', 'ppam', 'pdb', 'rom', 'thm', 'thmx', 'vsl', 'xla', 'xlam', 'xll'] },
    'txt': { extensions: ['dif', 'diff', 'readme', 'out', 'plist', 'properties', 'text', 'txt'] },
    'vector': { type: ItemType_1.default.Unknown, extensions: ['ai', 'dgn', 'pd', 'emf', 'eps', 'indd', 'indt', 'ps', 'svg', 'svgz', 'wmf', 'oxps', 'xps', 'xd', 'sketch'] },
    'video': { type: ItemType_1.default.Media, extensions: ['3g2', '3gp', '3gp2', '3gpp', 'asf', 'avi', 'dvr-ms', 'flv', 'm1v', 'm4v', 'mkv', 'mod', 'mov', 'mm4p', 'mp2', 'mp2v', 'mp4', ' mpa', 'mpe', 'mpeg', 'mpg', 'mpv', 'mpv2', 'mts', 'ogg', 'qt', 'swf', 'ts', 'vob', 'webm', 'wlmp', 'wm', 'wmv', 'wmx'] },
    'vsdx': { extensions: ['vsd', 'vsdm', 'vsdx', 'vdw'] },
    'vssx': { extensions: ['vss', 'vssm', 'vssx'] },
    'vstx': { extensions: ['vst', 'vstm', 'vstx'] },
    'xlsx': { extensions: ['xls', 'xlsb', 'xlsm', 'xlsx'] },
    'xltx': { extensions: ['xlt', 'xltm', 'xltx'] },
    'xml': { extensions: ['xaml', 'xml', 'xsl'] },
    'xsn': { extensions: ['xsn'] },
    'zip': { type: ItemType_1.default.Unknown, extensions: ['zip'] }
};
exports.default = FileTypeIconMap;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SharingType;
(function (SharingType) {
    SharingType[SharingType["Public"] = 0] = "Public";
    SharingType[SharingType["PublicUnlisted"] = 2] = "PublicUnlisted";
    SharingType[SharingType["Shared"] = 3] = "Shared";
    SharingType[SharingType["Private"] = 4] = "Private";
    SharingType[SharingType["Unknown"] = 5] = "Unknown";
})(SharingType || (SharingType = {}));
exports.default = SharingType;


/***/ }),
/* 182 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return Tooltip; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Tooltip_base__ = __webpack_require__(132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Tooltip_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Tooltip_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Tooltip_styles__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Tooltip_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Tooltip_styles__);



var Tooltip = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Tooltip_base__["TooltipBase"], __WEBPACK_IMPORTED_MODULE_2__Tooltip_styles__["getStyles"]);


/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipBase", function() { return TooltipBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Tooltip_types__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Tooltip_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Tooltip_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Callout__ = __webpack_require__(130);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Callout___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Callout__);





var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var TooltipBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](TooltipBase, _super);
    function TooltipBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onRenderContent = function (props) {
            return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("p", { className: _this._classNames.subText }, props.content));
        };
        return _this;
    }
    TooltipBase.prototype.render = function () {
        var _a = this.props, className = _a.className, calloutProps = _a.calloutProps, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, getStyles = _a.getStyles, id = _a.id, maxWidth = _a.maxWidth, _b = _a.onRenderContent, onRenderContent = _b === void 0 ? this._onRenderContent : _b, targetElement = _a.targetElement, theme = _a.theme;
        this._classNames = getClassNames(getStyles, {
            theme: theme,
            className: className || (calloutProps && calloutProps.className),
            delay: delay,
            maxWidth: maxWidth
        });
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Callout__["Callout"], __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({ target: targetElement, directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL }, calloutProps, Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"]), { className: this._classNames.root }),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.content, id: id, role: 'tooltip', onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, onRenderContent(this.props, this._onRenderContent))));
    };
    // Specify default props values
    TooltipBase.defaultProps = {
        directionalHint: 1 /* topCenter */,
        delay: __WEBPACK_IMPORTED_MODULE_3__Tooltip_types__["TooltipDelay"].medium,
        maxWidth: '364px',
        calloutProps: {
            isBeakVisible: true,
            beakWidth: 16,
            gapSpace: 0,
            setInitialFocus: true,
            doNotLayer: false
        }
    };
    TooltipBase = __WEBPACK_IMPORTED_MODULE_0_tslib__["__decorate"]([
        Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["customizable"])('Tooltip', ['theme'])
    ], TooltipBase);
    return TooltipBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipDelay", function() { return TooltipDelay; });
var TooltipDelay;
(function (TooltipDelay) {
    TooltipDelay[TooltipDelay["zero"] = 0] = "zero";
    TooltipDelay[TooltipDelay["medium"] = 1] = "medium";
    TooltipDelay[TooltipDelay["long"] = 2] = "long";
})(TooltipDelay || (TooltipDelay = {}));


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.styles.js
module.exports = __webpack_require__(186);

/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Tooltip_types__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Tooltip_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Tooltip_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Styling__);


var getStyles = function (props) {
    var className = props.className, delay = props.delay, maxWidth = props.maxWidth, theme = props.theme;
    var palette = theme.palette, fonts = theme.fonts;
    return {
        root: [
            'ms-Tooltip',
            __WEBPACK_IMPORTED_MODULE_1__Styling__["AnimationClassNames"].fadeIn200,
            {
                background: palette.white,
                padding: '8px',
                animationDelay: '300ms',
                maxWidth: maxWidth
            },
            delay === __WEBPACK_IMPORTED_MODULE_0__Tooltip_types__["TooltipDelay"].zero && [
                {
                    animationDelay: '0s'
                }
            ],
            delay === __WEBPACK_IMPORTED_MODULE_0__Tooltip_types__["TooltipDelay"].long && [
                {
                    animationDelay: '500ms'
                }
            ],
            className
        ],
        content: [
            'ms-Tooltip-content',
            fonts.small,
            palette.neutralPrimary,
            {
                wordWrap: 'break-word',
                overflowWrap: 'break-word'
            }
        ],
        subText: [
            'ms-Tooltip-subtext',
            {
                margin: 0
            }
        ]
    };
};


/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipOverflowMode", function() { return TooltipOverflowMode; });
var TooltipOverflowMode;
(function (TooltipOverflowMode) {
    /** Only show tooltip if parent DOM element is overflowing */
    TooltipOverflowMode[TooltipOverflowMode["Parent"] = 0] = "Parent";
    /** Only show tooltip if tooltip host's content is overflowing */
    TooltipOverflowMode[TooltipOverflowMode["Self"] = 1] = "Self";
})(TooltipOverflowMode || (TooltipOverflowMode = {}));


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.scss.js
module.exports = __webpack_require__(189);

/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "host", function() { return host; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles__);
/* tslint:disable */

Object(__WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles__["loadStyles"])([{ "rawString": ".host_a3f87333{display:inline}\n" }]);
var host = "host_a3f87333";


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(191);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".defaultIconClass_daca54c9{border:1px solid;border-color:\"[theme:themePrimary, default: #0078d4]\";height:35px;position:absolute;width:35px}.dropLocation_daca54c9{background-color:\"[theme:themePrimary, default: #0078d4]\";z-index:10}.dropLocation_daca54c9.horizontalLine_daca54c9{height:3px}.dropLocation_daca54c9.verticalLine_daca54c9{width:3px}.noselect_daca54c9{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.linePositionAbsolute_daca54c9{position:absolute}.linePositionAbsolute_daca54c9.horizontalLine_daca54c9{left:0;right:0}.linePositionAbsolute_daca54c9.verticalLine_daca54c9{top:0;bottom:0}.iconVisible_daca54c9{visibility:visible}.iconCollapsed_daca54c9{visibility:collapse}.iconAdditionalStyle_daca54c9{pointer-events:none;z-index:11}.cursorDragging_daca54c9 *{cursor:-webkit-grabbing!important;cursor:grabbing!important}.handleGrab_daca54c9{cursor:-webkit-grab!important;cursor:grab!important}.hideLine_daca54c9{display:none}", ""]);

// exports


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(193);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".emphasisPickerButton_e437066b{width:40px;height:40px}.emphasisPickerButton_e437066b i{font-size:20px}.emphasisPickerButton_e437066b.isActiveButton_e437066b,.emphasisPickerButton_e437066b:hover{border:4px solid #fff;outline:6px solid #a6a6a6}", ""]);

// exports


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(195);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".controlsInOneRow_445f31b1{display:-ms-flexbox;display:flex}.controlsInOneRow_445f31b1.spaceInBetween_445f31b1{-ms-flex-pack:justify;justify-content:space-between}", ""]);

// exports


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.DOMPurify = factory());
}(this, (function () { 'use strict';

var html = ['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr'];

// SVG
var svg = ['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern'];

var svgFilters = ['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence'];

var mathMl = ['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmuliscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mpspace', 'msqrt', 'mystyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover'];

var text = ['#text'];

var html$1 = ['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'crossorigin', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'integrity', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns'];

var svg$1 = ['accent-height', 'accumulate', 'additivive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan'];

var mathMl$1 = ['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns'];

var xml = ['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink'];

/* Add properties to a lookup table */
function addToSet(set, array) {
  var l = array.length;
  while (l--) {
    if (typeof array[l] === 'string') {
      array[l] = array[l].toLowerCase();
    }
    set[array[l]] = true;
  }
  return set;
}

/* Shallow clone an object */
function clone(object) {
  var newObject = {};
  var property = void 0;
  for (property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      newObject[property] = object[property];
    }
  }
  return newObject;
}

var MUSTACHE_EXPR = /\{\{[\s\S]*|[\s\S]*\}\}/gm; // Specify template detection regex for SAFE_FOR_TEMPLATES mode
var ERB_EXPR = /<%[\s\S]*|[\s\S]*%>/gm;
var DATA_ATTR = /^data-[\-\w.\u00B7-\uFFFF]/; // eslint-disable-line no-useless-escape
var ARIA_ATTR = /^aria-[\-\w]+$/; // eslint-disable-line no-useless-escape
var IS_ALLOWED_URI = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i; // eslint-disable-line no-useless-escape
var IS_SCRIPT_OR_DATA = /^(?:\w+script|data):/i;
var ATTR_WHITESPACE = /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205f\u3000]/g; // eslint-disable-line no-control-regex

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var getGlobal = function getGlobal() {
  return typeof window === 'undefined' ? null : window;
};

function createDOMPurify() {
  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();

  var DOMPurify = function DOMPurify(root) {
    return createDOMPurify(root);
  };

  /**
   * Version label, exposed for easier checks
   * if DOMPurify is up to date or not
   */
  DOMPurify.version = '1.0.7';

  /**
   * Array of elements that DOMPurify removed during sanitation.
   * Empty if nothing was removed.
   */
  DOMPurify.removed = [];

  if (!window || !window.document || window.document.nodeType !== 9) {
    // Not running in a browser, provide a factory function
    // so that you can pass your own Window
    DOMPurify.isSupported = false;

    return DOMPurify;
  }

  var originalDocument = window.document;
  var useDOMParser = false; // See comment below
  var removeTitle = false; // See comment below

  var document = window.document;
  var DocumentFragment = window.DocumentFragment,
      HTMLTemplateElement = window.HTMLTemplateElement,
      Node = window.Node,
      NodeFilter = window.NodeFilter,
      _window$NamedNodeMap = window.NamedNodeMap,
      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,
      Text = window.Text,
      Comment = window.Comment,
      DOMParser = window.DOMParser;

  // As per issue #47, the web-components registry is inherited by a
  // new document created via createHTMLDocument. As per the spec
  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
  // a new empty registry is used when creating a template contents owner
  // document, so we use that as our parent document to ensure nothing
  // is inherited.

  if (typeof HTMLTemplateElement === 'function') {
    var template = document.createElement('template');
    if (template.content && template.content.ownerDocument) {
      document = template.content.ownerDocument;
    }
  }

  var _document = document,
      implementation = _document.implementation,
      createNodeIterator = _document.createNodeIterator,
      getElementsByTagName = _document.getElementsByTagName,
      createDocumentFragment = _document.createDocumentFragment;
  var importNode = originalDocument.importNode;


  var hooks = {};

  /**
   * Expose whether this browser supports running the full DOMPurify.
   */
  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;

  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,
      ERB_EXPR$$1 = ERB_EXPR,
      DATA_ATTR$$1 = DATA_ATTR,
      ARIA_ATTR$$1 = ARIA_ATTR,
      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,
      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;
  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;
  /**
   * We consider the elements and attributes below to be safe. Ideally
   * don't add any new ones but feel free to remove unwanted ones.
   */

  /* allowed element names */

  var ALLOWED_TAGS = null;
  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));

  /* Allowed attribute names */
  var ALLOWED_ATTR = null;
  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));

  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */
  var FORBID_TAGS = null;

  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */
  var FORBID_ATTR = null;

  /* Decide if ARIA attributes are okay */
  var ALLOW_ARIA_ATTR = true;

  /* Decide if custom data attributes are okay */
  var ALLOW_DATA_ATTR = true;

  /* Decide if unknown protocols are okay */
  var ALLOW_UNKNOWN_PROTOCOLS = false;

  /* Output should be safe for jQuery's $() factory? */
  var SAFE_FOR_JQUERY = false;

  /* Output should be safe for common template engines.
   * This means, DOMPurify removes data attributes, mustaches and ERB
   */
  var SAFE_FOR_TEMPLATES = false;

  /* Decide if document with <html>... should be returned */
  var WHOLE_DOCUMENT = false;

  /* Track whether config is already set on this instance of DOMPurify. */
  var SET_CONFIG = false;

  /* Decide if all elements (e.g. style, script) must be children of
   * document.body. By default, browsers might move them to document.head */
  var FORCE_BODY = false;

  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html string.
   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
   */
  var RETURN_DOM = false;

  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html string */
  var RETURN_DOM_FRAGMENT = false;

  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM
   * `Node` is imported into the current `Document`. If this flag is not enabled the
   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by
   * DOMPurify. */
  var RETURN_DOM_IMPORT = false;

  /* Output should be free from DOM clobbering attacks? */
  var SANITIZE_DOM = true;

  /* Keep element content when removing element? */
  var KEEP_CONTENT = true;

  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead
   * of importing it into a new Document and returning a sanitized copy */
  var IN_PLACE = false;

  /* Allow usage of profiles like html, svg and mathMl */
  var USE_PROFILES = {};

  /* Tags to ignore content of when KEEP_CONTENT is true */
  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);

  /* Tags that are safe for data: URIs */
  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);

  /* Attributes safe for values like "javascript:" */
  var URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);

  /* Keep a reference to config to pass to hooks */
  var CONFIG = null;

  /* Ideally, do not touch anything below this line */
  /* ______________________________________________ */

  var formElement = document.createElement('form');

  /**
   * _parseConfig
   *
   * @param  {Object} cfg optional config literal
   */
  // eslint-disable-next-line complexity
  var _parseConfig = function _parseConfig(cfg) {
    /* Shield configuration object from tampering */
    if ((typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {
      cfg = {};
    }
    /* Set configuration parameters */
    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;
    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};
    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};
    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false
    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false
    RETURN_DOM = cfg.RETURN_DOM || false; // Default false
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false
    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false
    FORCE_BODY = cfg.FORCE_BODY || false; // Default false
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true
    IN_PLACE = cfg.IN_PLACE || false; // Default false

    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;

    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }

    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }

    /* Parse profile info */
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html);
        addToSet(ALLOWED_ATTR, html$1);
      }
      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg);
        addToSet(ALLOWED_ATTR, svg$1);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg$1);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl);
        addToSet(ALLOWED_ATTR, mathMl$1);
        addToSet(ALLOWED_ATTR, xml);
      }
    }

    /* Merge configuration parameters */
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }
      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);
    }
    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }
      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);
    }
    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);
    }

    /* Add #text in case KEEP_CONTENT is set to true */
    if (KEEP_CONTENT) {
      ALLOWED_TAGS['#text'] = true;
    }

    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */
    if (WHOLE_DOCUMENT) {
      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);
    }

    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286 */
    if (ALLOWED_TAGS.table) {
      addToSet(ALLOWED_TAGS, ['tbody']);
    }

    // Prevent further manipulation of configuration.
    // Not available in IE8, Safari 5, etc.
    if (Object && 'freeze' in Object) {
      Object.freeze(cfg);
    }

    CONFIG = cfg;
  };

  /**
   * _forceRemove
   *
   * @param  {Node} node a DOM node
   */
  var _forceRemove = function _forceRemove(node) {
    DOMPurify.removed.push({ element: node });
    try {
      node.parentNode.removeChild(node);
    } catch (err) {
      node.outerHTML = '';
    }
  };

  /**
   * _removeAttribute
   *
   * @param  {String} name an Attribute name
   * @param  {Node} node a DOM node
   */
  var _removeAttribute = function _removeAttribute(name, node) {
    try {
      DOMPurify.removed.push({
        attribute: node.getAttributeNode(name),
        from: node
      });
    } catch (err) {
      DOMPurify.removed.push({
        attribute: null,
        from: node
      });
    }
    node.removeAttribute(name);
  };

  /**
   * _initDocument
   *
   * @param  {String} dirty a string of dirty markup
   * @return {Document} a DOM, filled with the dirty markup
   */
  var _initDocument = function _initDocument(dirty) {
    /* Create a HTML document */
    var doc = void 0;

    if (FORCE_BODY) {
      dirty = '<remove></remove>' + dirty;
    }

    /* Use DOMParser to workaround Firefox bug (see comment below) */
    if (useDOMParser) {
      try {
        doc = new DOMParser().parseFromString(dirty, 'text/html');
      } catch (err) {}
    }

    /* Remove title to fix an mXSS bug in older MS Edge */
    if (removeTitle) {
      addToSet(FORBID_TAGS, ['title']);
    }

    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in
    Safari (see comment below) */
    if (!doc || !doc.documentElement) {
      doc = implementation.createHTMLDocument('');
      var _doc = doc,
          body = _doc.body;

      body.parentNode.removeChild(body.parentNode.firstElementChild);
      body.outerHTML = dirty;
    }

    /* Work on whole document or just its body */
    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
  };

  // Firefox uses a different parser for innerHTML rather than
  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)
  // which means that you *must* use DOMParser, otherwise the output may
  // not be safe if used in a document.write context later.
  //
  // So we feature detect the Firefox bug and use the DOMParser if necessary.
  //
  // MS Edge, in older versions, is affected by an mXSS behavior. The second
  // check tests for the behavior and fixes it if necessary.
  if (DOMPurify.isSupported) {
    (function () {
      try {
        var doc = _initDocument('<svg><p><style><img src="</style><img src=x onerror=alert(1)//">');
        if (doc.querySelector('svg img')) {
          useDOMParser = true;
        }
      } catch (err) {}
    })();
    (function () {
      try {
        var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');
        if (doc.querySelector('title').textContent.match(/<\/title/)) {
          removeTitle = true;
        }
      } catch (err) {}
    })();
  }

  /**
   * _createIterator
   *
   * @param  {Document} root document/fragment to create iterator for
   * @return {Iterator} iterator instance
   */
  var _createIterator = function _createIterator(root) {
    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {
      return NodeFilter.FILTER_ACCEPT;
    }, false);
  };

  /**
   * _isClobbered
   *
   * @param  {Node} elm element to check for clobbering attacks
   * @return {Boolean} true if clobbered, false if safe
   */
  var _isClobbered = function _isClobbered(elm) {
    if (elm instanceof Text || elm instanceof Comment) {
      return false;
    }
    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {
      return true;
    }
    return false;
  };

  /**
   * _isNode
   *
   * @param  {Node} obj object to check whether it's a DOM node
   * @return {Boolean} true is object is a DOM node
   */
  var _isNode = function _isNode(obj) {
    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';
  };

  /**
   * _executeHook
   * Execute user configurable hooks
   *
   * @param  {String} entryPoint  Name of the hook's entry point
   * @param  {Node} currentNode node to work on with the hook
   * @param  {Object} data additional hook parameters
   */
  var _executeHook = function _executeHook(entryPoint, currentNode, data) {
    if (!hooks[entryPoint]) {
      return;
    }

    hooks[entryPoint].forEach(function (hook) {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    });
  };

  /**
   * _sanitizeElements
   *
   * @protect nodeName
   * @protect textContent
   * @protect removeChild
   *
   * @param   {Node} currentNode to check for permission to exist
   * @return  {Boolean} true if node was killed, false if left alive
   */
  var _sanitizeElements = function _sanitizeElements(currentNode) {
    var content = void 0;

    /* Execute a hook if present */
    _executeHook('beforeSanitizeElements', currentNode, null);

    /* Check if element is clobbered or can clobber */
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Now let's check the element's type and name */
    var tagName = currentNode.nodeName.toLowerCase();

    /* Execute a hook if present */
    _executeHook('uponSanitizeElement', currentNode, {
      tagName: tagName,
      allowedTags: ALLOWED_TAGS
    });

    /* Remove element if anything forbids its presence */
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      /* Keep content except for black-listed elements */
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {
        try {
          currentNode.insertAdjacentHTML('AfterEnd', currentNode.innerHTML);
        } catch (err) {}
      }
      _forceRemove(currentNode);
      return true;
    }

    /* Convert markup to cover jQuery behavior */
    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {
      DOMPurify.removed.push({ element: currentNode.cloneNode() });
      if (currentNode.innerHTML) {
        currentNode.innerHTML = currentNode.innerHTML.replace(/</g, '&lt;');
      } else {
        currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');
      }
    }

    /* Sanitize element content to be template-safe */
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
      /* Get the element's text content */
      content = currentNode.textContent;
      content = content.replace(MUSTACHE_EXPR$$1, ' ');
      content = content.replace(ERB_EXPR$$1, ' ');
      if (currentNode.textContent !== content) {
        DOMPurify.removed.push({ element: currentNode.cloneNode() });
        currentNode.textContent = content;
      }
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeElements', currentNode, null);

    return false;
  };

  /**
   * _isValidAttribute
   *
   * @param  {string} lcTag Lowercase tag name of containing element.
   * @param  {string} lcName Lowercase attribute name.
   * @param  {string} value Attribute value.
   * @return {Boolean} Returns true if `value` is valid, otherwise false.
   */
  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {
    /* Make sure attribute cannot clobber */
    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {
      return false;
    }

    /* Sanitize attribute content to be template-safe */
    if (SAFE_FOR_TEMPLATES) {
      value = value.replace(MUSTACHE_EXPR$$1, ' ');
      value = value.replace(ERB_EXPR$$1, ' ');
    }

    /* Allow valid data-* attributes: At least one character after "-"
        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
        We don't need to check the value; it's always URI safe. */
    if (ALLOW_DATA_ATTR && DATA_ATTR$$1.test(lcName)) {
      // This attribute is safe
    } else if (ALLOW_ARIA_ATTR && ARIA_ATTR$$1.test(lcName)) {
      // This attribute is safe
      /* Otherwise, check the name is permitted */
    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
      return false;

      /* Check value is safe. First, is attr inert? If so, is safe */
    } else if (URI_SAFE_ATTRIBUTES[lcName]) {
      // This attribute is safe
      /* Check no script, data or unknown possibly unsafe URI
        unless we know URI values are safe for that attribute */
    } else if (IS_ALLOWED_URI$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {
      // This attribute is safe
      /* Keep image data URIs alive if src/xlink:href is allowed */
    } else if ((lcName === 'src' || lcName === 'xlink:href') && value.indexOf('data:') === 0 && DATA_URI_TAGS[lcTag]) {
      // This attribute is safe
      /* Allow unknown protocols: This provides support for links that
        are handled by protocol handlers which may be unknown ahead of
        time, e.g. fb:, spotify: */
    } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {
      // This attribute is safe
      /* Check for binary attributes */
      // eslint-disable-next-line no-negated-condition
    } else if (!value) {
      // Binary attributes are safe at this point
      /* Anything else, presume unsafe, do not add it back */
    } else {
      return false;
    }
    return true;
  };

  /**
   * _sanitizeAttributes
   *
   * @protect attributes
   * @protect nodeName
   * @protect removeAttribute
   * @protect setAttribute
   *
   * @param  {Node} node to sanitize
   */
  // eslint-disable-next-line complexity
  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
    var attr = void 0;
    var value = void 0;
    var lcName = void 0;
    var idAttr = void 0;
    var l = void 0;
    /* Execute a hook if present */
    _executeHook('beforeSanitizeAttributes', currentNode, null);

    var attributes = currentNode.attributes;

    /* Check if we have attributes; if not we might have a text node */

    if (!attributes) {
      return;
    }

    var hookEvent = {
      attrName: '',
      attrValue: '',
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR
    };
    l = attributes.length;

    /* Go backwards over all attributes; safely remove bad ones */
    while (l--) {
      attr = attributes[l];
      var _attr = attr,
          name = _attr.name;

      value = attr.value.trim();
      lcName = name.toLowerCase();

      /* Execute a hook if present */
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
      value = hookEvent.attrValue;

      /* Remove attribute */
      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to
      // remove a "name" attribute from an <img> tag that has an "id"
      // attribute at the time.
      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {
        idAttr = attributes.id;
        attributes = Array.prototype.slice.apply(attributes);
        _removeAttribute('id', currentNode);
        _removeAttribute(name, currentNode);
        if (attributes.indexOf(idAttr) > l) {
          currentNode.setAttribute('id', idAttr.value);
        }
      } else if (
      // This works around a bug in Safari, where input[type=file]
      // cannot be dynamically set after type has been removed
      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {
        continue;
      } else {
        // This avoids a crash in Safari v9.0 with double-ids.
        // The trick is to first set the id to be empty and then to
        // remove the attribute
        if (name === 'id') {
          currentNode.setAttribute(name, '');
        }
        _removeAttribute(name, currentNode);
      }

      /* Did the hooks approve of the attribute? */
      if (!hookEvent.keepAttr) {
        continue;
      }

      /* Is `value` valid for this attribute? */
      var lcTag = currentNode.nodeName.toLowerCase();
      if (!_isValidAttribute(lcTag, lcName, value)) {
        continue;
      }

      /* Handle invalid data-* attribute set by try-catching it */
      try {
        currentNode.setAttribute(name, value);
        DOMPurify.removed.pop();
      } catch (err) {}
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeAttributes', currentNode, null);
  };

  /**
   * _sanitizeShadowDOM
   *
   * @param  {DocumentFragment} fragment to iterate over recursively
   */
  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {
    var shadowNode = void 0;
    var shadowIterator = _createIterator(fragment);

    /* Execute a hook if present */
    _executeHook('beforeSanitizeShadowDOM', fragment, null);

    while (shadowNode = shadowIterator.nextNode()) {
      /* Execute a hook if present */
      _executeHook('uponSanitizeShadowNode', shadowNode, null);

      /* Sanitize tags and elements */
      if (_sanitizeElements(shadowNode)) {
        continue;
      }

      /* Deep shadow DOM detected */
      if (shadowNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(shadowNode.content);
      }

      /* Check attributes, sanitize if necessary */
      _sanitizeAttributes(shadowNode);
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeShadowDOM', fragment, null);
  };

  /**
   * Sanitize
   * Public method providing core sanitation functionality
   *
   * @param {String|Node} dirty string or DOM node
   * @param {Object} configuration object
   */
  // eslint-disable-next-line complexity
  DOMPurify.sanitize = function (dirty, cfg) {
    var body = void 0;
    var importedNode = void 0;
    var currentNode = void 0;
    var oldNode = void 0;
    var returnNode = void 0;
    /* Make sure we have a string to sanitize.
      DO NOT return early, as this will return the wrong type if
      the user has requested a DOM object rather than a string */
    if (!dirty) {
      dirty = '<!-->';
    }

    /* Stringify, in case dirty is an object */
    if (typeof dirty !== 'string' && !_isNode(dirty)) {
      // eslint-disable-next-line no-negated-condition
      if (typeof dirty.toString !== 'function') {
        throw new TypeError('toString is not a function');
      } else {
        dirty = dirty.toString();
        if (typeof dirty !== 'string') {
          throw new TypeError('dirty is not a string, aborting');
        }
      }
    }

    /* Check we can run. Otherwise fall back or ignore */
    if (!DOMPurify.isSupported) {
      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {
        if (typeof dirty === 'string') {
          return window.toStaticHTML(dirty);
        }
        if (_isNode(dirty)) {
          return window.toStaticHTML(dirty.outerHTML);
        }
      }
      return dirty;
    }

    /* Assign config vars */
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }

    /* Clean up removed elements */
    DOMPurify.removed = [];

    if (IN_PLACE) {
      /* No special handling necessary for in-place sanitization */
    } else if (dirty instanceof Node) {
      /* If dirty is a DOM element, append to an empty document to avoid
         elements being stripped by the parser */
      body = _initDocument('<!-->');
      importedNode = body.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {
        /* Node is already a body, use as is */
        body = importedNode;
      } else {
        body.appendChild(importedNode);
      }
    } else {
      /* Exit directly if we have nothing to do */
      if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {
        return dirty;
      }

      /* Initialize the document to work on */
      body = _initDocument(dirty);

      /* Check we have a DOM node from the data */
      if (!body) {
        return RETURN_DOM ? null : '';
      }
    }

    /* Remove first element node (ours) if FORCE_BODY is set */
    if (body && FORCE_BODY) {
      _forceRemove(body.firstChild);
    }

    /* Get node iterator */
    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);

    /* Now start iterating over the created document */
    while (currentNode = nodeIterator.nextNode()) {
      /* Fix IE's strange behavior with manipulated textNodes #89 */
      if (currentNode.nodeType === 3 && currentNode === oldNode) {
        continue;
      }

      /* Sanitize tags and elements */
      if (_sanitizeElements(currentNode)) {
        continue;
      }

      /* Shadow DOM detected, sanitize it */
      if (currentNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(currentNode.content);
      }

      /* Check attributes, sanitize if necessary */
      _sanitizeAttributes(currentNode);

      oldNode = currentNode;
    }

    /* If we sanitized `dirty` in-place, return it. */
    if (IN_PLACE) {
      return dirty;
    }

    /* Return sanitized string or DOM */
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body.ownerDocument);

        while (body.firstChild) {
          returnNode.appendChild(body.firstChild);
        }
      } else {
        returnNode = body;
      }

      if (RETURN_DOM_IMPORT) {
        /* AdoptNode() is not used because internal state is not reset
               (e.g. the past names map of a HTMLFormElement), this is safe
               in theory but we would rather not risk another attack vector.
               The state that is cloned by importNode() is explicitly defined
               by the specs. */
        returnNode = importNode.call(originalDocument, returnNode, true);
      }

      return returnNode;
    }

    return WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
  };

  /**
   * Public method to set the configuration once
   * setConfig
   *
   * @param {Object} cfg configuration object
   */
  DOMPurify.setConfig = function (cfg) {
    _parseConfig(cfg);
    SET_CONFIG = true;
  };

  /**
   * Public method to remove the configuration
   * clearConfig
   *
   */
  DOMPurify.clearConfig = function () {
    CONFIG = null;
    SET_CONFIG = false;
  };

  /**
   * Public method to check if an attribute value is valid.
   * Uses last set config, if any. Otherwise, uses config defaults.
   * isValidAttribute
   *
   * @param  {string} tag Tag name of containing element.
   * @param  {string} attr Attribute name.
   * @param  {string} value Attribute value.
   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
   */
  DOMPurify.isValidAttribute = function (tag, attr, value) {
    /* Initialize shared config vars if necessary. */
    if (!CONFIG) {
      _parseConfig({});
    }
    var lcTag = tag.toLowerCase();
    var lcName = attr.toLowerCase();
    return _isValidAttribute(lcTag, lcName, value);
  };

  /**
   * AddHook
   * Public method to add DOMPurify hooks
   *
   * @param {String} entryPoint entry point for the hook to add
   * @param {Function} hookFunction function to execute
   */
  DOMPurify.addHook = function (entryPoint, hookFunction) {
    if (typeof hookFunction !== 'function') {
      return;
    }
    hooks[entryPoint] = hooks[entryPoint] || [];
    hooks[entryPoint].push(hookFunction);
  };

  /**
   * RemoveHook
   * Public method to remove a DOMPurify hook at a given entryPoint
   * (pops it from the stack of hooks if more are present)
   *
   * @param {String} entryPoint entry point for the hook to remove
   */
  DOMPurify.removeHook = function (entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint].pop();
    }
  };

  /**
   * RemoveHooks
   * Public method to remove all DOMPurify hooks at a given entryPoint
   *
   * @param  {String} entryPoint entry point for the hooks to remove
   */
  DOMPurify.removeHooks = function (entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint] = [];
    }
  };

  /**
   * RemoveAllHooks
   * Public method to remove all DOMPurify hooks
   *
   */
  DOMPurify.removeAllHooks = function () {
    hooks = {};
  };

  return DOMPurify;
}

var purify = createDOMPurify();

return purify;

})));


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(198);


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(199);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".cke .cke_top{display:none}.cke_editable{overflow:hidden}[dir=ltr] .cke_editable{text-align:left}[dir=rtl] .cke_editable{text-align:right}.cke_editable .canvasRteResponsiveTable{overflow-x:auto;margin-bottom:0;clear:both}.cke_editable .canvasRteResponsiveTable .simpleTableStyleNeutral{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important;border-collapse:collapse;background-color:transparent;color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .canvasRteResponsiveTable .simpleTableStyleNeutral td,.cke_editable .canvasRteResponsiveTable .simpleTableStyleNeutral th,.cke_editable .canvasRteResponsiveTable .simpleTableStyleNeutral tr{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleNeutral tr:first-child{border-bottom-width:3px!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleNeutral td,.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleNeutral th,.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleNeutral tr{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral tr:first-child{background-color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral tr:first-child td,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral tr:first-child td p,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral tr:first-child th,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral tr:first-child th p{color:\"[theme:white, default: #ffffff]\"}.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral td,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral th,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleNeutral tr{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr:first-child{background-color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr:first-child td,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr:first-child td p,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr:first-child th,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr:first-child th p{color:\"[theme:white, default: #ffffff]\"}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr:nth-child(2n){background-color:#dadada}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral td,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral th,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleNeutral tr{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:first-child{background-color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:first-child td,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:first-child td p,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:first-child th,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:first-child th p{color:\"[theme:white, default: #ffffff]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:nth-child(2n){background-color:#dadada}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr:not(:first-child) td:first-child{background-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral td,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral th,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleNeutral tr{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}.cke_editable .canvasRteResponsiveTable .simpleTableStyleTheme{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important;border-collapse:collapse;background-color:transparent;color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .canvasRteResponsiveTable .simpleTableStyleTheme td,.cke_editable .canvasRteResponsiveTable .simpleTableStyleTheme th,.cke_editable .canvasRteResponsiveTable .simpleTableStyleTheme tr{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleTheme tr:first-child{border-bottom-width:3px!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleTheme td,.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleTheme th,.cke_editable .canvasRteResponsiveTable .borderHeaderTableStyleTheme tr{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme tr:first-child{background-color:\"[theme:themePrimary, default:#0078d4]\"}.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme tr:first-child td,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme tr:first-child td p,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme tr:first-child th,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme tr:first-child th p{color:\"[theme:white, default: #ffffff]\"}.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme td,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme th,.cke_editable .canvasRteResponsiveTable .filledHeaderTableStyleTheme tr{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr:first-child{background-color:\"[theme:themePrimary, default:#0078d4]\"}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr:first-child td,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr:first-child td p,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr:first-child th,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr:first-child th p{color:\"[theme:white, default: #ffffff]\"}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr:nth-child(2n){background-color:\"[theme:themeLight, default:#c7e0f4]\"}.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme td,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme th,.cke_editable .canvasRteResponsiveTable .bandedRowTableStyleTheme tr{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:first-child{background-color:\"[theme:themePrimary, default:#0078d4]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:first-child td,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:first-child td p,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:first-child th,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:first-child th p{color:\"[theme:white, default: #ffffff]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:nth-child(2n){background-color:\"[theme:themeLight, default:#c7e0f4]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr:not(:first-child) td:first-child{background-color:\"[theme:themeTertiary, default:#71afe5]\"}.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme td,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme th,.cke_editable .canvasRteResponsiveTable .bandedRowColumnTableStyleTheme tr{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_editable .tableWrapper{display:block;margin:0}.cke_editable .tableCenterAlign{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.cke_editable .tableLeftAlign{display:-ms-flexbox;display:flex;float:left}[dir=rtl] .cke_editable .tableLeftAlign{float:right}.cke_editable .tableRightAlign{display:-ms-flexbox;display:flex;float:right}[dir=rtl] .cke_editable .tableRightAlign{float:left}.cke_editable.rte--read .borderHeaderTableStyleNeutral tr:hover,.cke_editable.rte--read .filledHeaderTableStyleNeutral tr:hover,.cke_editable.rte--read .simpleTableStyleNeutral tr:hover,.cke_editable.rte--read tr:hover{background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .filledHeaderTableStyleNeutral tr:hover:first-child td,.cke_editable.rte--read .filledHeaderTableStyleNeutral tr:hover:first-child td p{color:\"[theme:neutralPrimary, default: #333333]\";background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .bandedRowTableStyleNeutral tr:hover,.cke_editable.rte--read .filledHeaderTableStyleNeutral tr:not(:first-child):hover td:first-child{background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .bandedRowTableStyleNeutral tr:hover:first-child td,.cke_editable.rte--read .bandedRowTableStyleNeutral tr:hover:first-child td p{color:\"[theme:neutralPrimary, default: #333333]\";background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .bandedRowColumnTableStyleNeutral tr:hover,.cke_editable.rte--read .bandedRowTableStyleNeutral tr:not(:first-child):hover td:first-child{background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .bandedRowColumnTableStyleNeutral tr:hover:first-child td,.cke_editable.rte--read .bandedRowColumnTableStyleNeutral tr:hover:first-child td p{color:\"[theme:neutralPrimary, default: #333333]\";background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .bandedRowColumnTableStyleNeutral tr:not(:first-child):hover td:first-child{background-color:\"[theme:neutralLight, default: #eaeaea]\"}.cke_editable.rte--read .borderHeaderTableStyleTheme tr:hover,.cke_editable.rte--read .filledHeaderTableStyleTheme tr:hover,.cke_editable.rte--read .simpleTableStyleTheme tr:hover{background-color:\"[theme:themeLighter, default:#deecf9]\"}.cke_editable.rte--read .filledHeaderTableStyleTheme tr:hover:first-child td,.cke_editable.rte--read .filledHeaderTableStyleTheme tr:hover:first-child td p{color:\"[theme:neutralPrimary, default: #333333]\";background-color:\"[theme:themeLighter, default:#deecf9]\"}.cke_editable.rte--read .bandedRowTableStyleTheme tr:hover,.cke_editable.rte--read .filledHeaderTableStyleTheme tr:not(:first-child):hover td:first-child{background-color:\"[theme:themeLighter, default:#deecf9]\"}.cke_editable.rte--read .bandedRowTableStyleTheme tr:hover:first-child td,.cke_editable.rte--read .bandedRowTableStyleTheme tr:hover:first-child td p{color:\"[theme:neutralPrimary, default: #333333]\";background-color:\"[theme:themeLighter, default:#deecf9]\"}.cke_editable.rte--read .bandedRowColumnTableStyleTheme tr:hover,.cke_editable.rte--read .bandedRowTableStyleTheme tr:not(:first-child):hover td:first-child{background-color:\"[theme:themeLighter, default:#deecf9]\"}.cke_editable.rte--read .bandedRowColumnTableStyleTheme tr:hover:first-child td,.cke_editable.rte--read .bandedRowColumnTableStyleTheme tr:hover:first-child td p{color:\"[theme:neutralPrimary, default: #333333]\";background-color:\"[theme:themeLighter, default:#deecf9]\"}.cke_editable.rte--read .bandedRowColumnTableStyleTheme tr:not(:first-child):hover td:first-child{background-color:\"[theme:themeLighter, default:#deecf9]\"}div[data-cke-temp=\"1\"]{width:2px!important}div[data-cke-temp=\"1\"]:hover{background-color:\"[theme:themePrimary, default:#0078d4]\"!important;opacity:1!important;display:block!important}.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleTheme>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleTheme>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleTheme>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleTheme>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleTheme>tr>th{border:1px solid!important;border-color:\"[theme:themePrimary, default:#0078d4]\"!important}.cke_show_borders .canvasRteResponsiveTable table.cke_show_border,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowColumnTableStyleNeutral>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.bandedRowTableStyleNeutral>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.borderHeaderTableStyleNeutral>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.filledHeaderTableStyleNeutral>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border.simpleTableStyleNeutral>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>tbody>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>tbody>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>tfoot>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>tfoot>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>thead>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>thead>tr>th,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>tr>td,.cke_show_borders .canvasRteResponsiveTable table.cke_show_border>tr>th{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important}[dir=ltr] .cke_editable ol,[dir=ltr] .cke_editable ul{padding-left:50px}[dir=rtl] .cke_editable ol,[dir=rtl] .cke_editable ul{padding-right:50px}[dir=ltr] .cke_editable li:before{margin-left:-19px}[dir=rtl] .cke_editable li:before{margin-right:-19px}[dir=ltr] .cke_editable li:before{margin-right:4px}[dir=rtl] .cke_editable li:before{margin-left:4px}[dir=ltr] .cke_editable li:before{text-align:right}[dir=rtl] .cke_editable li:before{text-align:left}.cke_editable ol{counter-reset:item}.cke_editable ol>li{counter-increment:item}.cke_editable ol ol>li{display:block}.cke_editable ol ol>li:before{content:counter(item,lower-alpha) \". \"}.cke_editable table,.cke_editable td,.cke_editable th,.cke_editable tr{border:1px solid!important;border-color:\"[theme:neutralPrimary, default: #333333]\"!important;border-collapse:collapse}.cke_editable table{margin-bottom:10px}.cke_editable td,.cke_editable td p,.cke_editable th,.cke_editable th p{font-size:15px;color:\"[theme:neutralPrimary, default: #333333]\";white-space:normal;font-weight:400;margin:0}.cke_editable th{font-weight:600;text-align:center}.cke_editable td,.cke_editable th{padding-top:8px;padding-bottom:8px;width:75px}[dir=ltr] .cke_editable td,[dir=ltr] .cke_editable th{padding-left:8px}[dir=rtl] .cke_editable td,[dir=rtl] .cke_editable th{padding-right:8px}[dir=ltr] .cke_editable td,[dir=ltr] .cke_editable th{padding-right:16px}[dir=ltr] [dir=rtl] .cke_editable td,[dir=ltr] [dir=rtl] .cke_editable th,[dir=rtl] .cke_editable td,[dir=rtl] .cke_editable th{padding-left:16px}[dir=rtl] [dir=rtl] .cke_editable td,[dir=rtl] [dir=rtl] .cke_editable th{padding-right:16px}[dir=ltr] [dir=rtl] .cke_editable td,[dir=ltr] [dir=rtl] .cke_editable th{padding-right:8px}[dir=rtl] [dir=rtl] .cke_editable td,[dir=rtl] [dir=rtl] .cke_editable th{padding-left:8px}.cke_editable td[valign=top]{padding-top:8px;padding-bottom:0}[dir=ltr] .cke_editable td[valign=top]{padding-left:8px}[dir=rtl] .cke_editable td[valign=top]{padding-right:8px}[dir=ltr] .cke_editable td[valign=top]{padding-right:16px}[dir=rtl] .cke_editable td[valign=top]{padding-left:16px}.cke_editable td[valign=bottom]{padding-top:0;padding-bottom:8px}[dir=ltr] .cke_editable td[valign=bottom]{padding-left:8px}[dir=rtl] .cke_editable td[valign=bottom]{padding-right:8px}[dir=ltr] .cke_editable td[valign=bottom]{padding-right:16px}[dir=rtl] .cke_editable td[valign=bottom]{padding-left:16px}.cke_editable td[align=center],.cke_editable td p[style*=\"text-align:center\"],.cke_editable td p[style*=\"text-align: center\"]{padding:8px 16px}.cke_editable td[align=left],.cke_editable td p[style*=\"text-align:left\"],.cke_editable td p[style*=\"text-align: left\"]{padding:8px 16px 8px 8px}.cke_editable td[align=right],.cke_editable td p[style*=\"text-align:right\"],.cke_editable td p[style*=\"text-align: right\"]{padding:8px 8px 8px 16px}.cke_editable tr td th:nth-last-child(n+20):first-child,.cke_editable tr td th:nth-last-child(n+20):first-child~*{padding:4px!important;font-size:10px!important}[dir=ltr] .cke_editable .ql-indent-1{padding-left:40px}[dir=rtl] .cke_editable .ql-indent-1{padding-right:40px}[dir=ltr] .cke_editable li.ql-indent-1{padding-left:59px}[dir=rtl] .cke_editable li.ql-indent-1{padding-right:59px}[dir=ltr] .cke_editable .ql-indent-2{padding-left:80px}[dir=rtl] .cke_editable .ql-indent-2{padding-right:80px}[dir=ltr] .cke_editable li.ql-indent-2{padding-left:99px}[dir=rtl] .cke_editable li.ql-indent-2{padding-right:99px}[dir=ltr] .cke_editable .ql-indent-3{padding-left:120px}[dir=rtl] .cke_editable .ql-indent-3{padding-right:120px}[dir=ltr] .cke_editable li.ql-indent-3{padding-left:139px}[dir=rtl] .cke_editable li.ql-indent-3{padding-right:139px}[dir=ltr] .cke_editable .ql-indent-4{padding-left:160px}[dir=rtl] .cke_editable .ql-indent-4{padding-right:160px}[dir=ltr] .cke_editable li.ql-indent-4{padding-left:179px}[dir=rtl] .cke_editable li.ql-indent-4{padding-right:179px}[dir=ltr] .cke_editable .ql-indent-5{padding-left:200px}[dir=rtl] .cke_editable .ql-indent-5{padding-right:200px}[dir=ltr] .cke_editable li.ql-indent-5{padding-left:219px}[dir=rtl] .cke_editable li.ql-indent-5{padding-right:219px}[dir=ltr] .cke_editable .ql-indent-6{padding-left:240px}[dir=rtl] .cke_editable .ql-indent-6{padding-right:240px}[dir=ltr] .cke_editable li.ql-indent-6{padding-left:259px}[dir=rtl] .cke_editable li.ql-indent-6{padding-right:259px}[dir=ltr] .cke_editable .ql-indent-7{padding-left:280px}[dir=rtl] .cke_editable .ql-indent-7{padding-right:280px}[dir=ltr] .cke_editable li.ql-indent-7{padding-left:299px}[dir=rtl] .cke_editable li.ql-indent-7{padding-right:299px}[dir=ltr] .cke_editable .ql-indent-8{padding-left:320px}[dir=rtl] .cke_editable .ql-indent-8{padding-right:320px}[dir=ltr] .cke_editable li.ql-indent-8{padding-left:339px}[dir=rtl] .cke_editable li.ql-indent-8{padding-right:339px}[dir=ltr] .cke_editable .ql-align-right{text-align:right}[dir=rtl] .cke_editable .ql-align-right{text-align:left}.cke_editable .ql-align-center{text-align:center}.cke_editable .fontColorRedDark{color:#a80000}.cke_editable .fontColorRed{color:#e81123}.cke_editable .fontColorYellow{color:#ffb900}.cke_editable .fontColorYellowLight{color:#fff100}.cke_editable .fontColorGreenLight{color:#bad80a}.cke_editable .fontColorGreen{color:#107c10}.cke_editable .fontColorBlueLight{color:#00bcf2}.cke_editable .fontColorBlue{color:#0078d4}.cke_editable .fontColorBlueDark{color:#002050}.cke_editable .fontColorPurple{color:#5c2d91}.cke_editable .fontColorNeutralDark{color:\"[theme:neutralDark, default: #212121]\"}.cke_editable .fontColorNeutralPrimary{color:\"[theme:neutralPrimary, default: #333333]\"}.cke_editable .fontColorNeutralPrimaryAlt{color:#3c3c3c}.cke_editable .fontColorNeutralSecondary{color:\"[theme:neutralSecondary, default: #666666]\"}.cke_editable .fontColorNeutralTertiary{color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.cke_editable .fontColorThemeDarker{color:\"[theme:themeDarker, default:#004578]\"}.cke_editable .fontColorThemeDark{color:\"[theme:themeDark, default:#005a9e]\"}.cke_editable .fontColorThemeDarkAlt{color:\"[theme:themeDarkAlt, default:#106ebe]\"}.cke_editable .fontColorThemePrimary{color:\"[theme:themePrimary, default:#0078d4]\"}.cke_editable .fontColorThemeSecondary{color:\"[theme:themeSecondary, default:#2b88d8]\"}.cke_editable .fontSizeSmall{font-size:12px}.cke_editable .fontSizeMedium{font-size:14px}.cke_editable .fontSizeMediumPlus{font-size:15px}.cke_editable .fontSizeLarge{font-size:17px}.cke_editable .fontSizeXLarge{font-size:21px}.cke_editable .fontSizeXLargePlus{font-size:24px}.cke_editable .fontSizeXxLarge{font-size:28px}.cke_editable .fontSizeXxxLarge{font-size:32px}.cke_editable .fontSizeXxLargePlus{font-size:36px}.cke_editable .fontSizeSuper{font-size:42px}.cke_editable .fontSizeMedium,.cke_editable .fontSizeMediumPlus,.cke_editable .fontSizeSmall,.cke_editable .fontSizeSuper,.cke_editable .fontSizeXxLargePlus,.cke_editable .fontSizeXxxLarge{line-height:1.3}.cke_editable .highlightColorYellow{background-color:#ff0}.cke_editable .highlightColorGreen{background-color:#0f0}.cke_editable .highlightColorAqua{background-color:#0ff}.cke_editable .highlightColorMagenta{background-color:#f0f}.cke_editable .highlightColorBlue{background-color:#00f}.cke_editable .highlightColorRed{background-color:red}.cke_editable .highlightColorDarkBlue{background-color:navy}.cke_editable .highlightColorTeal{background-color:teal}.cke_editable .highlightColorDarkGreen{background-color:green}.cke_editable .highlightColorPurple{background-color:purple}.cke_editable .highlightColorMaroon{background-color:maroon}.cke_editable .highlightColorGold{background-color:olive}.cke_editable .highlightColorDarkGrey{background-color:grey}.cke_editable .highlightColorGrey{background-color:silver}.cke_editable .highlightColorBlack{background-color:#000}@media only screen and (max-width:640px){.cke_editable table,.cke_editable td,.cke_editable th{padding:8px!important;white-space:normal}.cke_editable table{max-width:600px!important}.cke_editable td p,.cke_editable td p span,.cke_editable th p,.cke_editable th p span{font-size:12px!important}}", ""]);

// exports


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(201);


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(202);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".ToolbarButton{background-color:\"[theme:neutralPrimary, default: #333333]\";border:1px solid transparent;height:34px;overflow:hidden;padding:0 8px;position:relative;text-align:center;top:0;transition:all .3s;transition-property:background-color,color;min-width:34px;color:\"[theme:neutralLighterAlt, default: #f8f8f8]\";font-weight:400;font-size:14px}.ToolbarButton .ms-Icon{font-size:16px;line-height:1.2}.ToolbarButton:hover{background-color:\"[theme:neutralSecondaryAlt, default: #767676]\";cursor:pointer}.ToolbarButton.ToolbarButton--active{background-color:\"[theme:themeSecondary, default:#2b88d8]\"}.ToolbarButton.ToolbarButton--active+.ToolbarButton--divider:after,.ToolbarButton.ToolbarButton--active.ToolbarButton--divider:after{border:\"[theme:themeSecondary, default:#2b88d8]\"}.ToolbarButton:active{background-color:\"[theme:themeDarkAlt, default:#106ebe]\"}.ToolbarButton.ToolbarButton--disabled,.ToolbarButton.ToolbarButton--disabled:hover{background-color:\"[theme:neutralPrimary, default: #333333]\";color:\"[theme:neutralSecondary, default: #666666]\"}.ToolbarButton.ToolbarButton--disabled .ms-Icon,.ToolbarButton.ToolbarButton--disabled:hover .ms-Icon{color:\"[theme:neutralSecondary, default: #666666]\"}.ToolbarButton:focus{border:1px solid;outline:0}.ToolbarButton.ToolbarButton--divider:after{content:\"\";position:absolute;height:20px;top:6px}[dir=ltr] .ToolbarButton.ToolbarButton--divider:after{left:0}[dir=rtl] .ToolbarButton.ToolbarButton--divider:after{right:0}[dir=ltr] .ToolbarButton.ToolbarButton--divider:after{border-left:1px solid}[dir=rtl] .ToolbarButton.ToolbarButton--divider:after{border-right:1px solid}.ToolbarButtonTooltip{display:inline}.ToolbarButton--h2{font-size:21px;font-weight:100}.ToolbarButton--blockquote{font-style:italic}", ""]);

// exports


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(204);


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(205);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".ToolbarSubmenu{width:44px;position:relative}.ToolbarSubmenu .ToolbarButton{width:44px}[dir=ltr] .ToolbarSubmenu-displayButton{padding-right:20px}[dir=rtl] .ToolbarSubmenu-displayButton{padding-left:20px}.ToolbarSubmenu-caret{color:\"[theme:neutralLighterAlt, default: #f8f8f8]\";font-size:8px;pointer-events:none;position:absolute;top:50%;transform:translateY(-50%);z-index:1}[dir=ltr] .ToolbarSubmenu-caret{right:4px}[dir=rtl] .ToolbarSubmenu-caret{left:4px}.ToolbarSubmenu-menuItems{display:none;position:absolute;top:34px}[dir=ltr] .ToolbarSubmenu-menuItems .ToolbarButton{padding-right:20px}[dir=rtl] .ToolbarSubmenu-menuItems .ToolbarButton{padding-left:20px}.ToolbarSubmenu--wide{width:160px!important}.ToolbarSubmenu--wide .ToolbarButton{width:100%}[dir=ltr] .ToolbarSubmenu--wide .ToolbarButton{text-align:left}[dir=rtl] .ToolbarSubmenu--wide .ToolbarButton{text-align:right}.ToolbarSubmenu.is-open .ToolbarSubmenu-menuItems{display:block}", ""]);

// exports


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(207);


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(208);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".rteFlyout-visible{position:absolute;z-index:2;box-shadow:0 0 5px 0 #c8c8c8;top:-45px;font-weight:400}@media (max-width:720px){.rteFlyout-visible .rteFlyout-button{padding:10px;font-size:11px}}.rteFlyout-visible .rteFlyout-button:hover{background:#0078d4}.rteFlyout-visible .rteFlyout-button .ms-Icon{padding:13px;color:#767676;font-size:14px!important}.rteFlyout-visible .rteFlyout-button:hover .ms-Icon{color:#fff}.rteFlyout-visible .rteFlyout-button img{vertical-align:middle;display:inline-block}.rteFlyout-visible .stack-panel-class{background:\"[theme:neutralPrimary, default: #333333]\"}.rteFlyout-button{background-color:transparent;border-width:0;padding:0;cursor:pointer!important}.stack-panel-class{white-space:nowrap}.SPRteFormattingBar{animation-name:ms-fadeIn,ms-slideUpIn10;animation-duration:167ms;animation-timing-function:cubic-bezier(.1,.25,.75,.9);animation-fill-mode:both;display:-ms-inline-flexbox;display:inline-flex;background-color:\"[theme:neutralPrimary, default: #333333]\";transition:all 367ms cubic-bezier(.1,.9,.2,1);min-width:418px;max-width:none}@media (prefers-reduced-motion:reduce){.SPRteFormattingBar{animation:none}}[dir=ltr] .SPRteFormattingBar .ToolbarButton,[dir=ltr] .SPRteFormattingBar .ToolbarSubmenu{float:left}[dir=rtl] .SPRteFormattingBar .ToolbarButton,[dir=rtl] .SPRteFormattingBar .ToolbarSubmenu{float:right}.SPRteFormattingBar.faded{display:none}.SPRteFormattingBar-divider{height:16px;margin-top:8px;width:0;border-right:1px solid}[dir=ltr] .SPRteFormattingBar-divider{float:left}[dir=rtl] .SPRteFormattingBar-divider{float:right}.msIcon_h2_temp:after{content:\"H2\";font-size:16px;font-style:normal;font-weight:600}.button_quote_temp .ms-Icon{font-size:28px!important;font-weight:100;line-height:1.7!important}.formattingBarFocusZone{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:stretch;align-items:stretch;width:100%}.button_linkRemove_temp .ms-Icon:after{content:\"x\";font-family:Arial}[dir=ltr] .button_linkRemove_temp .ms-Icon:after{margin-left:-5px}[dir=rtl] .button_linkRemove_temp .ms-Icon:after{margin-right:-5px}[dir=ltr] .button_linkRemove_temp .ms-Icon:after{margin-right:5px}[dir=rtl] .button_linkRemove_temp .ms-Icon:after{margin-left:5px}", ""]);

// exports


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(210);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".screenReaderOnly_024ab190{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(212);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".LinkDialogContainer_61dc19be{min-width:360px!important;max-width:none!important}", ""]);

// exports


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(214);


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(215);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".cke_editable{cursor:text;margin:0;padding:0 2px;min-height:68px;margin-bottom:-16px}.rte--edit a{pointer-events:none}.rte--read .canvasRteResponsiveTableSelected{border:1px solid;border-color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.cke_editable:focus{outline:0}.cke_editable blockquote,.cke_editable div,.cke_editable h2,.cke_editable h3,.cke_editable h4,.cke_editable ol,.cke_editable p,.cke_editable ul{-webkit-font-smoothing:antialiased;color:\"[theme:neutralPrimary, default: #333333]\";line-height:1.3;margin:0 0 16px;word-wrap:break-word}.cke_editable div,.cke_editable p{font-size:15px;font-weight:400}.cke_editable h2,.cke_editable h3,.cke_editable h4{font-weight:100!important}.cke_editable h2{font-size:24px}.cke_editable h3{font-size:21px}.cke_editable h4{font-size:17px;font-weight:300}.cke_editable ol,.cke_editable ul{font-size:15px;font-weight:400;padding:0;margin-left:0!important}.cke_editable ol li,.cke_editable ul li{margin-bottom:8px}.cke_editable ol{list-style-type:decimal}.cke_editable ul{list-style-type:disc}.cke_editable blockquote,.cke_editable div.quote-true{border-bottom:1px solid;border-top:1px solid;border-bottom-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-top-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-left:none;border-right:none;font-weight:100;font-size:24px;font-style:italic;margin:28px 0;padding:32px;text-align:center;color:\"[theme:neutralSecondaryAlt, default: #767676]\";font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.cke_editable blockquote p{font-size:24px;margin:0}.cke_editable a{text-decoration:underline;color:\"[theme:themePrimary, default:#0078d4]\"}.cke_editable i{font-style:italic}.cke_editable u{text-decoration:underline}@media screen and (min-width:480px){.cke_editable h2{font-size:28px}.cke_editable h3{font-size:24px}.cke_editable h4{font-size:21px}.cke_editable blockquote,.cke_editable div.quote-true{font-size:24px}}@media screen and (min-width:1024px){.cke_editable h2{font-size:28px}.cke_editable h3{font-size:24px}.cke_editable h4{font-size:21px}.cke_editable div,.cke_editable ol,.cke_editable p,.cke_editable ul{font-size:17px;font-weight:300;line-height:1.3}.cke_editable td,.cke_editable td p,.cke_editable th,.cke_editable th p{font-size:15px;font-weight:400}}", ""]);

// exports


/***/ }),
/* 216 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_216__;

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/////    /////    /////    /////
/////    /////    /////    /////
/////    /////    /////    /////
/////    /////    /////    /////
/////             /////    /////
/////             /////    /////
/////    /////    /////    /////
/////    /////    /////    /////
         /////    /////
         /////    /////
/////    /////    /////    /////
/////    /////    /////    /////
/////    /////    /////    /////
/////    /////    /////    /////

/**
 * ScrollReveal
 * ------------
 * Version : 3.3.6
 * Website : scrollrevealjs.org
 * Repo    : github.com/jlmakes/scrollreveal.js
 * Author  : Julian Lloyd (@jlmakes)
 */

;(function () {
  'use strict'

  var sr
  var _requestAnimationFrame

  function ScrollReveal (config) {
    // Support instantiation without the `new` keyword.
    if (typeof this === 'undefined' || Object.getPrototypeOf(this) !== ScrollReveal.prototype) {
      return new ScrollReveal(config)
    }

    sr = this // Save reference to instance.
    sr.version = '3.3.6'
    sr.tools = new Tools() // *required utilities

    if (sr.isSupported()) {
      sr.tools.extend(sr.defaults, config || {})

      sr.defaults.container = _resolveContainer(sr.defaults)

      sr.store = {
        elements: {},
        containers: []
      }

      sr.sequences = {}
      sr.history = []
      sr.uid = 0
      sr.initialized = false
    } else if (typeof console !== 'undefined' && console !== null) {
      // Note: IE9 only supports console if devtools are open.
      console.log('ScrollReveal is not supported in this browser.')
    }

    return sr
  }

  /**
   * Configuration
   * -------------
   * This object signature can be passed directly to the ScrollReveal constructor,
   * or as the second argument of the `reveal()` method.
   */

  ScrollReveal.prototype.defaults = {
    // 'bottom', 'left', 'top', 'right'
    origin: 'bottom',

    // Can be any valid CSS distance, e.g. '5rem', '10%', '20vw', etc.
    distance: '20px',

    // Time in milliseconds.
    duration: 500,
    delay: 0,

    // Starting angles in degrees, will transition from these values to 0 in all axes.
    rotate: { x: 0, y: 0, z: 0 },

    // Starting opacity value, before transitioning to the computed opacity.
    opacity: 0,

    // Starting scale value, will transition from this value to 1
    scale: 0.9,

    // Accepts any valid CSS easing, e.g. 'ease', 'ease-in-out', 'linear', etc.
    easing: 'cubic-bezier(0.6, 0.2, 0.1, 1)',

    // `<html>` is the default reveal container. You can pass either:
    // DOM Node, e.g. document.querySelector('.fooContainer')
    // Selector, e.g. '.fooContainer'
    container: window.document.documentElement,

    // true/false to control reveal animations on mobile.
    mobile: true,

    // true:  reveals occur every time elements become visible
    // false: reveals occur once as elements become visible
    reset: false,

    // 'always' — delay for all reveal animations
    // 'once'   — delay only the first time reveals occur
    // 'onload' - delay only for animations triggered by first load
    useDelay: 'always',

    // Change when an element is considered in the viewport. The default value
    // of 0.20 means 20% of an element must be visible for its reveal to occur.
    viewFactor: 0.2,

    // Pixel values that alter the container boundaries.
    // e.g. Set `{ top: 48 }`, if you have a 48px tall fixed toolbar.
    // --
    // Visual Aid: https://scrollrevealjs.org/assets/viewoffset.png
    viewOffset: { top: 0, right: 0, bottom: 0, left: 0 },

    // Callbacks that fire for each triggered element reveal, and reset.
    beforeReveal: function (domEl) {},
    beforeReset: function (domEl) {},

    // Callbacks that fire for each completed element reveal, and reset.
    afterReveal: function (domEl) {},
    afterReset: function (domEl) {}
  }

  /**
   * Check if client supports CSS Transform and CSS Transition.
   * @return {boolean}
   */
  ScrollReveal.prototype.isSupported = function () {
    var style = document.documentElement.style
    return 'WebkitTransition' in style && 'WebkitTransform' in style ||
      'transition' in style && 'transform' in style
  }

  /**
   * Creates a reveal set, a group of elements that will animate when they
   * become visible. If [interval] is provided, a new sequence is created
   * that will ensure elements reveal in the order they appear in the DOM.
   *
   * @param {Node|NodeList|string} [target]   The node, node list or selector to use for animation.
   * @param {Object}               [config]   Override the defaults for this reveal set.
   * @param {number}               [interval] Time between sequenced element animations (milliseconds).
   * @param {boolean}              [sync]     Used internally when updating reveals for async content.
   *
   * @return {Object} The current ScrollReveal instance.
   */
  ScrollReveal.prototype.reveal = function (target, config, interval, sync) {
    var container
    var elements
    var elem
    var elemId
    var sequence
    var sequenceId

    // No custom configuration was passed, but a sequence interval instead.
    // let’s shuffle things around to make sure everything works.
    if (config !== undefined && typeof config === 'number') {
      interval = config
      config = {}
    } else if (config === undefined || config === null) {
      config = {}
    }

    container = _resolveContainer(config)
    elements = _getRevealElements(target, container)

    if (!elements.length) {
      console.log('ScrollReveal: reveal on "' + target + '" failed, no elements found.')
      return sr
    }

    // Prepare a new sequence if an interval is passed.
    if (interval && typeof interval === 'number') {
      sequenceId = _nextUid()

      sequence = sr.sequences[sequenceId] = {
        id: sequenceId,
        interval: interval,
        elemIds: [],
        active: false
      }
    }

    // Begin main loop to configure ScrollReveal elements.
    for (var i = 0; i < elements.length; i++) {
      // Check if the element has already been configured and grab it from the store.
      elemId = elements[i].getAttribute('data-sr-id')
      if (elemId) {
        elem = sr.store.elements[elemId]
      } else {
        // Otherwise, let’s do some basic setup.
        elem = {
          id: _nextUid(),
          domEl: elements[i],
          seen: false,
          revealing: false
        }
        elem.domEl.setAttribute('data-sr-id', elem.id)
      }

      // Sequence only setup
      if (sequence) {
        elem.sequence = {
          id: sequence.id,
          index: sequence.elemIds.length
        }

        sequence.elemIds.push(elem.id)
      }

      // New or existing element, it’s time to update its configuration, styles,
      // and send the updates to our store.
      _configure(elem, config, container)
      _style(elem)
      _updateStore(elem)

      // We need to make sure elements are set to visibility: visible, even when
      // on mobile and `config.mobile === false`, or if unsupported.
      if (sr.tools.isMobile() && !elem.config.mobile || !sr.isSupported()) {
        elem.domEl.setAttribute('style', elem.styles.inline)
        elem.disabled = true
      } else if (!elem.revealing) {
        // Otherwise, proceed normally.
        elem.domEl.setAttribute('style',
          elem.styles.inline +
          elem.styles.transform.initial
        )
      }
    }

    // Each `reveal()` is recorded so that when calling `sync()` while working
    // with asynchronously loaded content, it can re-trace your steps but with
    // all your new elements now in the DOM.

    // Since `reveal()` is called internally by `sync()`, we don’t want to
    // record or intiialize each reveal during syncing.
    if (!sync && sr.isSupported()) {
      _record(target, config, interval)

      // We push initialization to the event queue using setTimeout, so that we can
      // give ScrollReveal room to process all reveal calls before putting things into motion.
      // --
      // Philip Roberts - What the heck is the event loop anyway? (JSConf EU 2014)
      // https://www.youtube.com/watch?v=8aGhZQkoFbQ
      if (sr.initTimeout) {
        window.clearTimeout(sr.initTimeout)
      }
      sr.initTimeout = window.setTimeout(_init, 0)
    }

    return sr
  }

  /**
   * Re-runs `reveal()` for each record stored in history, effectively capturing
   * any content loaded asynchronously that matches existing reveal set targets.
   * @return {Object} The current ScrollReveal instance.
   */
  ScrollReveal.prototype.sync = function () {
    if (sr.history.length && sr.isSupported()) {
      for (var i = 0; i < sr.history.length; i++) {
        var record = sr.history[i]
        sr.reveal(record.target, record.config, record.interval, true)
      }
      _init()
    } else {
      console.log('ScrollReveal: sync failed, no reveals found.')
    }
    return sr
  }

  /**
   * Private Methods
   * ---------------
   */

  function _resolveContainer (config) {
    if (config && config.container) {
      if (typeof config.container === 'string') {
        return window.document.documentElement.querySelector(config.container)
      } else if (sr.tools.isNode(config.container)) {
        return config.container
      } else {
        console.log('ScrollReveal: invalid container "' + config.container + '" provided.')
        console.log('ScrollReveal: falling back to default container.')
      }
    }
    return sr.defaults.container
  }

  /**
   * check to see if a node or node list was passed in as the target,
   * otherwise query the container using target as a selector.
   *
   * @param {Node|NodeList|string} [target]    client input for reveal target.
   * @param {Node}                 [container] parent element for selector queries.
   *
   * @return {array} elements to be revealed.
   */
  function _getRevealElements (target, container) {
    if (typeof target === 'string') {
      return Array.prototype.slice.call(container.querySelectorAll(target))
    } else if (sr.tools.isNode(target)) {
      return [target]
    } else if (sr.tools.isNodeList(target)) {
      return Array.prototype.slice.call(target)
    }
    return []
  }

  /**
   * A consistent way of creating unique IDs.
   * @returns {number}
   */
  function _nextUid () {
    return ++sr.uid
  }

  function _configure (elem, config, container) {
    // If a container was passed as a part of the config object,
    // let’s overwrite it with the resolved container passed in.
    if (config.container) config.container = container
    // If the element hasn’t already been configured, let’s use a clone of the
    // defaults extended by the configuration passed as the second argument.
    if (!elem.config) {
      elem.config = sr.tools.extendClone(sr.defaults, config)
    } else {
      // Otherwise, let’s use a clone of the existing element configuration extended
      // by the configuration passed as the second argument.
      elem.config = sr.tools.extendClone(elem.config, config)
    }

    // Infer CSS Transform axis from origin string.
    if (elem.config.origin === 'top' || elem.config.origin === 'bottom') {
      elem.config.axis = 'Y'
    } else {
      elem.config.axis = 'X'
    }
  }

  function _style (elem) {
    var computed = window.getComputedStyle(elem.domEl)

    if (!elem.styles) {
      elem.styles = {
        transition: {},
        transform: {},
        computed: {}
      }

      // Capture any existing inline styles, and add our visibility override.
      // --
      // See section 4.2. in the Documentation:
      // https://github.com/jlmakes/scrollreveal.js#42-improve-user-experience
      elem.styles.inline = elem.domEl.getAttribute('style') || ''
      elem.styles.inline += '; visibility: visible; '

      // grab the elements existing opacity.
      elem.styles.computed.opacity = computed.opacity

      // grab the elements existing transitions.
      if (!computed.transition || computed.transition === 'all 0s ease 0s') {
        elem.styles.computed.transition = ''
      } else {
        elem.styles.computed.transition = computed.transition + ', '
      }
    }

    // Create transition styles
    elem.styles.transition.instant = _generateTransition(elem, 0)
    elem.styles.transition.delayed = _generateTransition(elem, elem.config.delay)

    // Generate transform styles, first with the webkit prefix.
    elem.styles.transform.initial = ' -webkit-transform:'
    elem.styles.transform.target = ' -webkit-transform:'
    _generateTransform(elem)

    // And again without any prefix.
    elem.styles.transform.initial += 'transform:'
    elem.styles.transform.target += 'transform:'
    _generateTransform(elem)
  }

  function _generateTransition (elem, delay) {
    var config = elem.config

    return '-webkit-transition: ' + elem.styles.computed.transition +
      '-webkit-transform ' + config.duration / 1000 + 's ' +
      config.easing + ' ' +
      delay / 1000 + 's, opacity ' +
      config.duration / 1000 + 's ' +
      config.easing + ' ' +
      delay / 1000 + 's; ' +

      'transition: ' + elem.styles.computed.transition +
      'transform ' + config.duration / 1000 + 's ' +
      config.easing + ' ' +
      delay / 1000 + 's, opacity ' +
      config.duration / 1000 + 's ' +
      config.easing + ' ' +
      delay / 1000 + 's; '
  }

  function _generateTransform (elem) {
    var config = elem.config
    var cssDistance
    var transform = elem.styles.transform

    // Let’s make sure our our pixel distances are negative for top and left.
    // e.g. origin = 'top' and distance = '25px' starts at `top: -25px` in CSS.
    if (config.origin === 'top' || config.origin === 'left') {
      cssDistance = /^-/.test(config.distance)
        ? config.distance.substr(1)
        : '-' + config.distance
    } else {
      cssDistance = config.distance
    }

    if (parseInt(config.distance)) {
      transform.initial += ' translate' + config.axis + '(' + cssDistance + ')'
      transform.target += ' translate' + config.axis + '(0)'
    }
    if (config.scale) {
      transform.initial += ' scale(' + config.scale + ')'
      transform.target += ' scale(1)'
    }
    if (config.rotate.x) {
      transform.initial += ' rotateX(' + config.rotate.x + 'deg)'
      transform.target += ' rotateX(0)'
    }
    if (config.rotate.y) {
      transform.initial += ' rotateY(' + config.rotate.y + 'deg)'
      transform.target += ' rotateY(0)'
    }
    if (config.rotate.z) {
      transform.initial += ' rotateZ(' + config.rotate.z + 'deg)'
      transform.target += ' rotateZ(0)'
    }
    transform.initial += '; opacity: ' + config.opacity + ';'
    transform.target += '; opacity: ' + elem.styles.computed.opacity + ';'
  }

  function _updateStore (elem) {
    var container = elem.config.container

    // If this element’s container isn’t already in the store, let’s add it.
    if (container && sr.store.containers.indexOf(container) === -1) {
      sr.store.containers.push(elem.config.container)
    }

    // Update the element stored with our new element.
    sr.store.elements[elem.id] = elem
  }

  function _record (target, config, interval) {
    // Save the `reveal()` arguments that triggered this `_record()` call, so we
    // can re-trace our steps when calling the `sync()` method.
    var record = {
      target: target,
      config: config,
      interval: interval
    }
    sr.history.push(record)
  }

  function _init () {
    if (sr.isSupported()) {
      // Initial animate call triggers valid reveal animations on first load.
      // Subsequent animate calls are made inside the event handler.
      _animate()

      // Then we loop through all container nodes in the store and bind event
      // listeners to each.
      for (var i = 0; i < sr.store.containers.length; i++) {
        sr.store.containers[i].addEventListener('scroll', _handler)
        sr.store.containers[i].addEventListener('resize', _handler)
      }

      // Let’s also do a one-time binding of window event listeners.
      if (!sr.initialized) {
        window.addEventListener('scroll', _handler)
        window.addEventListener('resize', _handler)
        sr.initialized = true
      }
    }
    return sr
  }

  function _handler () {
    _requestAnimationFrame(_animate)
  }

  function _setActiveSequences () {
    var active
    var elem
    var elemId
    var sequence

    // Loop through all sequences
    sr.tools.forOwn(sr.sequences, function (sequenceId) {
      sequence = sr.sequences[sequenceId]
      active = false

      // For each sequenced elemenet, let’s check visibility and if
      // any are visible, set it’s sequence to active.
      for (var i = 0; i < sequence.elemIds.length; i++) {
        elemId = sequence.elemIds[i]
        elem = sr.store.elements[elemId]
        if (_isElemVisible(elem) && !active) {
          active = true
        }
      }

      sequence.active = active
    })
  }

  function _animate () {
    var delayed
    var elem

    _setActiveSequences()

    // Loop through all elements in the store
    sr.tools.forOwn(sr.store.elements, function (elemId) {
      elem = sr.store.elements[elemId]
      delayed = _shouldUseDelay(elem)

      // Let’s see if we should revealand if so,
      // trigger the `beforeReveal` callback and
      // determine whether or not to use delay.
      if (_shouldReveal(elem)) {
        elem.config.beforeReveal(elem.domEl)
        if (delayed) {
          elem.domEl.setAttribute('style',
            elem.styles.inline +
            elem.styles.transform.target +
            elem.styles.transition.delayed
          )
        } else {
          elem.domEl.setAttribute('style',
            elem.styles.inline +
            elem.styles.transform.target +
            elem.styles.transition.instant
          )
        }

        // Let’s queue the `afterReveal` callback
        // and mark the element as seen and revealing.
        _queueCallback('reveal', elem, delayed)
        elem.revealing = true
        elem.seen = true

        if (elem.sequence) {
          _queueNextInSequence(elem, delayed)
        }
      } else if (_shouldReset(elem)) {
        //Otherwise reset our element and
        // trigger the `beforeReset` callback.
        elem.config.beforeReset(elem.domEl)
        elem.domEl.setAttribute('style',
          elem.styles.inline +
          elem.styles.transform.initial +
          elem.styles.transition.instant
        )
        // And queue the `afterReset` callback.
        _queueCallback('reset', elem)
        elem.revealing = false
      }
    })
  }

  function _queueNextInSequence (elem, delayed) {
    var elapsed = 0
    var delay = 0
    var sequence = sr.sequences[elem.sequence.id]

    // We’re processing a sequenced element, so let's block other elements in this sequence.
    sequence.blocked = true

    // Since we’re triggering animations a part of a sequence after animations on first load,
    // we need to check for that condition and explicitly add the delay to our timer.
    if (delayed && elem.config.useDelay === 'onload') {
      delay = elem.config.delay
    }

    // If a sequence timer is already running, capture the elapsed time and clear it.
    if (elem.sequence.timer) {
      elapsed = Math.abs(elem.sequence.timer.started - new Date())
      window.clearTimeout(elem.sequence.timer)
    }

    // Start a new timer.
    elem.sequence.timer = { started: new Date() }
    elem.sequence.timer.clock = window.setTimeout(function () {
      // Sequence interval has passed, so unblock the sequence and re-run the handler.
      sequence.blocked = false
      elem.sequence.timer = null
      _handler()
    }, Math.abs(sequence.interval) + delay - elapsed)
  }

  function _queueCallback (type, elem, delayed) {
    var elapsed = 0
    var duration = 0
    var callback = 'after'

    // Check which callback we’re working with.
    switch (type) {
      case 'reveal':
        duration = elem.config.duration
        if (delayed) {
          duration += elem.config.delay
        }
        callback += 'Reveal'
        break

      case 'reset':
        duration = elem.config.duration
        callback += 'Reset'
        break
    }

    // If a timer is already running, capture the elapsed time and clear it.
    if (elem.timer) {
      elapsed = Math.abs(elem.timer.started - new Date())
      window.clearTimeout(elem.timer.clock)
    }

    // Start a new timer.
    elem.timer = { started: new Date() }
    elem.timer.clock = window.setTimeout(function () {
      // The timer completed, so let’s fire the callback and null the timer.
      elem.config[callback](elem.domEl)
      elem.timer = null
    }, duration - elapsed)
  }

  function _shouldReveal (elem) {
    if (elem.sequence) {
      var sequence = sr.sequences[elem.sequence.id]
      return sequence.active &&
        !sequence.blocked &&
        !elem.revealing &&
        !elem.disabled
    }
    return _isElemVisible(elem) &&
      !elem.revealing &&
      !elem.disabled
  }

  function _shouldUseDelay (elem) {
    var config = elem.config.useDelay
    return config === 'always' ||
      (config === 'onload' && !sr.initialized) ||
      (config === 'once' && !elem.seen)
  }

  function _shouldReset (elem) {
    if (elem.sequence) {
      var sequence = sr.sequences[elem.sequence.id]
      return !sequence.active &&
        elem.config.reset &&
        elem.revealing &&
        !elem.disabled
    }
    return !_isElemVisible(elem) &&
      elem.config.reset &&
      elem.revealing &&
      !elem.disabled
  }

  function _getContainer (container) {
    return {
      width: container.clientWidth,
      height: container.clientHeight
    }
  }

  function _getScrolled (container) {
    // Return the container scroll values, plus the its offset.
    if (container && container !== window.document.documentElement) {
      var offset = _getOffset(container)
      return {
        x: container.scrollLeft + offset.left,
        y: container.scrollTop + offset.top
      }
    } else {
      // Otherwise, default to the window object’s scroll values.
      return {
        x: window.pageXOffset,
        y: window.pageYOffset
      }
    }
  }

  function _getOffset (domEl) {
    var offsetTop = 0
    var offsetLeft = 0

      // Grab the element’s dimensions.
    var offsetHeight = domEl.offsetHeight
    var offsetWidth = domEl.offsetWidth

    // Now calculate the distance between the element and its parent, then
    // again for the parent to its parent, and again etc... until we have the
    // total distance of the element to the document’s top and left origin.
    do {
      if (!isNaN(domEl.offsetTop)) {
        offsetTop += domEl.offsetTop
      }
      if (!isNaN(domEl.offsetLeft)) {
        offsetLeft += domEl.offsetLeft
      }
      domEl = domEl.offsetParent
    } while (domEl)

    return {
      top: offsetTop,
      left: offsetLeft,
      height: offsetHeight,
      width: offsetWidth
    }
  }

  function _isElemVisible (elem) {
    var offset = _getOffset(elem.domEl)
    var container = _getContainer(elem.config.container)
    var scrolled = _getScrolled(elem.config.container)
    var vF = elem.config.viewFactor

      // Define the element geometry.
    var elemHeight = offset.height
    var elemWidth = offset.width
    var elemTop = offset.top
    var elemLeft = offset.left
    var elemBottom = elemTop + elemHeight
    var elemRight = elemLeft + elemWidth

    return confirmBounds() || isPositionFixed()

    function confirmBounds () {
      // Define the element’s functional boundaries using its view factor.
      var top = elemTop + elemHeight * vF
      var left = elemLeft + elemWidth * vF
      var bottom = elemBottom - elemHeight * vF
      var right = elemRight - elemWidth * vF

      // Define the container functional boundaries using its view offset.
      var viewTop = scrolled.y + elem.config.viewOffset.top
      var viewLeft = scrolled.x + elem.config.viewOffset.left
      var viewBottom = scrolled.y - elem.config.viewOffset.bottom + container.height
      var viewRight = scrolled.x - elem.config.viewOffset.right + container.width

      return top < viewBottom &&
        bottom > viewTop &&
        left < viewRight &&
        right > viewLeft
    }

    function isPositionFixed () {
      return (window.getComputedStyle(elem.domEl).position === 'fixed')
    }
  }

  /**
   * Utilities
   * ---------
   */

  function Tools () {}

  Tools.prototype.isObject = function (object) {
    return object !== null && typeof object === 'object' && object.constructor === Object
  }

  Tools.prototype.isNode = function (object) {
    return typeof window.Node === 'object'
      ? object instanceof window.Node
      : object && typeof object === 'object' &&
        typeof object.nodeType === 'number' &&
        typeof object.nodeName === 'string'
  }

  Tools.prototype.isNodeList = function (object) {
    var prototypeToString = Object.prototype.toString.call(object)
    var regex = /^\[object (HTMLCollection|NodeList|Object)\]$/

    return typeof window.NodeList === 'object'
      ? object instanceof window.NodeList
      : object && typeof object === 'object' &&
        regex.test(prototypeToString) &&
        typeof object.length === 'number' &&
        (object.length === 0 || this.isNode(object[0]))
  }

  Tools.prototype.forOwn = function (object, callback) {
    if (!this.isObject(object)) {
      throw new TypeError('Expected "object", but received "' + typeof object + '".')
    } else {
      for (var property in object) {
        if (object.hasOwnProperty(property)) {
          callback(property)
        }
      }
    }
  }

  Tools.prototype.extend = function (target, source) {
    this.forOwn(source, function (property) {
      if (this.isObject(source[property])) {
        if (!target[property] || !this.isObject(target[property])) {
          target[property] = {}
        }
        this.extend(target[property], source[property])
      } else {
        target[property] = source[property]
      }
    }.bind(this))
    return target
  }

  Tools.prototype.extendClone = function (target, source) {
    return this.extend(this.extend({}, target), source)
  }

  Tools.prototype.isMobile = function () {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
  }

  /**
   * Polyfills
   * --------
   */

  _requestAnimationFrame = window.requestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.mozRequestAnimationFrame ||
    function (callback) {
      window.setTimeout(callback, 1000 / 60)
    }

  /**
   * Module Wrapper
   * --------------
   */
  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
      return ScrollReveal
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = ScrollReveal
  } else {
    window.ScrollReveal = ScrollReveal
  }
})();


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(219);


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(220);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasToolboxHint{background:0 0;border:none;cursor:pointer;height:23px;opacity:0;overflow:visible;outline:0;padding:0;position:relative;transition:all .3s ease;color:\"[theme:neutralTertiary, default: #a6a6a6]\";z-index:1}.CanvasToolboxHint:not(.AlignedHint){width:100%}.CanvasToolboxHint:first-of-type .CanvasToolboxHint-plusButtonWrapper.pushDownHint .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonZone{top:12px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{border-radius:50%;opacity:0;padding:0;position:relative;text-align:center;z-index:1;transition:all .3s ease}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonZone{font-size:14px;height:23px;line-height:23px;width:23px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{font-size:14px;height:23px;line-height:23px;top:0;width:23px}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{left:calc(50% - 11.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{right:calc(50% - 11.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton .ms-Icon{position:relative}.CanvasToolboxHint:after,.CanvasToolboxHint:before{border-top-width:1px;border-top-style:dashed;content:\"\";height:1px;position:absolute;top:12px;width:100%;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint:after,[dir=ltr] .CanvasToolboxHint:before{left:0}[dir=rtl] .CanvasToolboxHint:after,[dir=rtl] .CanvasToolboxHint:before{right:0}.CanvasToolboxHint.ZoneHint{margin-top:-11.5px;top:-9px}[dir=ltr] .CanvasToolboxHint.ZoneHint:not(.AlignedHint){left:-11.5px}[dir=rtl] .CanvasToolboxHint.ZoneHint:not(.AlignedHint){right:-11.5px}.CanvasToolboxHint.ZoneHint:after,.CanvasToolboxHint.ZoneHint:before{top:27px}[dir=ltr] .CanvasToolboxHint.ZoneHint:after,[dir=ltr] .CanvasToolboxHint.ZoneHint:before{left:12px}[dir=rtl] .CanvasToolboxHint.ZoneHint:after,[dir=rtl] .CanvasToolboxHint.ZoneHint:before{right:12px}.CanvasToolboxHint.ZoneHint:before{margin-top:-17.5px;border:0}.CanvasToolboxHint.ZoneHint:after{margin-top:-15.5px}.CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{top:-26px}[dir=ltr] .CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{left:-11.5px}[dir=rtl] .CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{right:-11.5px}.CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{box-shadow:0 0 2px 4px \"[theme:neutralLighter, default: #f4f4f4]\";background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";color:\"[theme:white, default: #ffffff]\"}.CanvasToolboxHint.ZoneHint:focus:after,.CanvasToolboxHint.ZoneHint:hover:after{border-top-color:\"[theme:themePrimary, default:#0078d4]\"}.CanvasToolboxHint.ZoneHint:focus .CanvasToolboxHint-plusButton,.CanvasToolboxHint.ZoneHint:hover .CanvasToolboxHint-plusButton{background-color:\"[theme:themePrimary, default:#0078d4]\"}.CanvasToolboxHint.ZoneHint.zone-selected:after{border-top-width:1px;border-top-style:solid;border-top-color:\"[theme:themePrimary, default:#0078d4]\"}.CanvasToolboxHint.ZoneHint.zone-selected .CanvasToolboxHint-plusButton{background-color:\"[theme:themePrimary, default:#0078d4]\";opacity:1}.CanvasToolboxHint.SectionHint .CanvasToolboxHint-plusButton{opacity:1}.CanvasToolboxHint.SectionHint:after{border-top-width:1px;border-top-style:solid;top:12px}.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1) .CanvasToolboxHint-plusButton,.CanvasSection:hover button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.CanvasToolboxHint.is-visible,.CanvasToolboxHint.zone-active .CanvasToolboxHint-plusButton,.CanvasToolboxHint:focus,.CanvasToolboxHint:focus .CanvasToolboxHint-plusButton,.CanvasToolboxHint:hover,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButton,.CanvasZone--selected button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.EmptyCanvasHint button.CanvasToolboxHint:first-of-type{opacity:1}@media screen and (-ms-high-contrast:active){.CanvasToolboxHint{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxHint{color:#37006e}}", ""]);

// exports


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(222);


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(223);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasToolboxHint{background:0 0;border:none;cursor:pointer;height:23px;opacity:0;overflow:visible;outline:0;padding:0;position:relative;transition:all .3s ease;color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint:not(.AlignedHint){width:100%}.CanvasToolboxHint:first-of-type .CanvasToolboxHint-plusButtonWrapper.pushDownHint .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonZone{top:12px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{max-width:1200px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal{background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-radius:50%;color:\"[theme:white, default: #ffffff]\";font-size:15px;height:23px;line-height:23px;opacity:0;padding:0;position:relative;text-align:center;top:0;width:23px;z-index:1;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal{left:calc(50% - 11.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal{right:calc(50% - 11.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal .CanvasToolboxHint-plusButtonOriginal .ms-Icon{position:relative}.CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{top:-26px}[dir=ltr] .CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{left:-11.5px}[dir=rtl] .CanvasToolboxHint.ZoneHint .CanvasToolboxHint-plusButtonWrapper{right:-11.5px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-radius:50%;box-shadow:0 0 4px 0 rgba(0,0,0,.5);color:\"[theme:white, default: #ffffff]\";opacity:0;padding:0;position:relative;text-align:center;z-index:1;transition:all .3s ease}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonZone{font-size:14px;height:23px;line-height:23px;width:23px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{font-size:14px;height:23px;line-height:23px;top:0;width:23px}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{left:calc(50% - 11.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton.CanvasToolboxHint-plusButtonSection{right:calc(50% - 11.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton .ms-Icon{position:relative}.CanvasToolboxHint:after,.CanvasToolboxHint:before{border-top:1px dashed;content:\"\";height:1px;position:absolute;top:12px;width:100%;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint:after,[dir=ltr] .CanvasToolboxHint:before{left:0}[dir=rtl] .CanvasToolboxHint:after,[dir=rtl] .CanvasToolboxHint:before{right:0}.CanvasToolboxHint.ZoneHint{margin-top:-11.5px;top:-9px}[dir=ltr] .CanvasToolboxHint.ZoneHint:not(.AlignedHint){left:-11.5px}[dir=rtl] .CanvasToolboxHint.ZoneHint:not(.AlignedHint){right:-11.5px}.CanvasToolboxHint.ZoneHint:after,.CanvasToolboxHint.ZoneHint:before{top:27px}[dir=ltr] .CanvasToolboxHint.ZoneHint:after,[dir=ltr] .CanvasToolboxHint.ZoneHint:before{left:12px}[dir=rtl] .CanvasToolboxHint.ZoneHint:after,[dir=rtl] .CanvasToolboxHint.ZoneHint:before{right:12px}.CanvasToolboxHint.ZoneHint:before{margin-top:-17.5px;border:0}.CanvasToolboxHint.ZoneHint:after{margin-top:-15.5px}.CanvasToolboxHint.SectionHint:after{top:12px}.CanvasToolboxHint.is-visible,.CanvasToolboxHint.zone-active .CanvasToolboxHint-plusButton{opacity:1}.CanvasToolboxHint.zone-selected:after{border-top:1px solid;border-top-color:\"[theme:themePrimary, default:#0078d4]\"}.CanvasToolboxHint.zone-selected .CanvasToolboxHint-plusButton,.CanvasToolboxHint.zone-selected .CanvasToolboxHint-plusButtonOriginal{background-color:\"[theme:themePrimary, default:#0078d4]\";opacity:1}.CanvasToolboxHint.zone-focused:after{border-top:1px solid;border-top-color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint:focus,.CanvasToolboxHint:hover{opacity:1}.CanvasToolboxHint:focus .CanvasToolboxHint-plusButton,.CanvasToolboxHint:focus .CanvasToolboxHint-plusButtonOriginal,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButton,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButtonOriginal{background-color:\"[theme:themePrimary, default:#0078d4]\";opacity:1}.CanvasToolboxHint:focus:after,.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d4]\"}.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1) .CanvasToolboxHint-plusButton,.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1) .CanvasToolboxHint-plusButtonOriginal,.CanvasSection button.CanvasToolboxHint .CanvasToolboxHint-plusButton,.CanvasSection button.CanvasToolboxHint .CanvasToolboxHint-plusButtonOriginal{opacity:1}.CanvasSection button.CanvasToolboxHint:after{border-top:1px solid}.CanvasSection button.CanvasToolboxHint:focus:after,.CanvasSection button.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d4]\"}.CanvasSection:hover button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.CanvasZone--selected button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.EmptyCanvasHint button.CanvasToolboxHint:first-of-type{opacity:1}@media screen and (-ms-high-contrast:active){.CanvasToolboxHint{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxHint{color:#37006e}}", ""]);

// exports


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(225);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasZone:not(.CanvasZone--fullWidth) .ControlZone{padding:8px}.ControlZone .ControlZone-target{bottom:0;cursor:pointer;left:0;right:0;position:absolute;top:0}.ControlZone .ControlZone-target:focus{outline:0}.ControlZone .ControlZone-target.ControlZone-target--hidden{z-index:-1}.ControlZone:after{border:1px solid;color:\"[theme:neutralTertiary, default: #a6a6a6]\";bottom:0;content:\"\";left:0;right:0;pointer-events:none;position:absolute;top:0;transition:all .3s ease}.ControlZone .CanvasControlToolbar,.ControlZone:after{opacity:0;transition:all .3s ease}.ControlZone.ControlZone--edit{outline:0;position:relative}.ControlZone.ControlZone--edit.ControlZone--selected .CanvasControlToolbar,.ControlZone.ControlZone--edit.ControlZone--selected:after,.ControlZone.ControlZone--edit:focus .CanvasControlToolbar,.ControlZone.ControlZone--edit:focus:after,.ControlZone.ControlZone--edit:hover .CanvasControlToolbar,.ControlZone.ControlZone--edit:hover:after{opacity:1}.ControlZone.ControlZone--selected:after{border:1px solid;color:\"[theme:themePrimary, default:#0078d4]\"}.ControlZone.ControlZone--selected+button.CanvasToolboxHint{opacity:1}.ControlZone .ControlZone-screenReaderOnly{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}", ""]);

// exports


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(227);


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(228);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasControlToolbar{position:absolute;top:0;width:32px;z-index:1}[dir=ltr] .CanvasControlToolbar{left:-40px}[dir=rtl] .CanvasControlToolbar{right:-40px}[dir=ltr] .CanvasControlToolbar{padding-right:10px}[dir=rtl] .CanvasControlToolbar{padding-left:10px}", ""]);

// exports


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(230);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasSection-col{position:relative;min-height:1px;padding-left:8px;padding-right:8px;box-sizing:border-box}[dir=ltr] .CanvasSection-col{float:left}.CanvasSection-col .ms-Grid{padding:0}[dir=rtl] .CanvasSection-col{float:right}.CanvasSection-sm12{width:100%}@media (min-width:1024px){.CanvasSection-xl12{width:100%}}@media (min-width:1024px){.CanvasSection-xl11{width:91.66666666666666%}}@media (min-width:1024px){.CanvasSection-xl10{width:83.33333333333334%}}@media (min-width:1024px){.CanvasSection-xl9{width:75%}}@media (min-width:1024px){.CanvasSection-xl8{width:66.66666666666666%}}@media (min-width:1024px){.CanvasSection-xl7{width:58.333333333333336%}}@media (min-width:1024px){.CanvasSection-xl6{width:50%}}@media (min-width:1024px){.CanvasSection-xl5{width:41.66666666666667%}}@media (min-width:1024px){.CanvasSection-xl4{width:33.33333333333333%}}@media (min-width:1024px){.CanvasSection-xl3{width:25%}}@media (min-width:1024px){.CanvasSection-xl2{width:16.666666666666664%}}@media (min-width:1024px){.CanvasSection-xl1{width:8.333333333333332%}}@media screen and (min-width:1024px){.CanvasSection--edit{min-width:312px}.CanvasSection--edit:nth-child(n+2):before{content:\"\";position:absolute;height:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\"}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{border-left:1px dashed}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{border-right:1px dashed}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{left:-1px}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{right:-1px}.CanvasSection--reflow{min-width:auto;width:100%}.CanvasSection--reflow:nth-child(n+2):before{content:\"\";left:0;right:0;width:100%;height:auto;border-bottom:1px dashed;border-left:none}}@media screen and (max-width:1023px){.CanvasSection--edit:nth-child(n+2):before{content:\"\";position:absolute;left:0;right:0;width:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-bottom:1px dashed}}@media screen and (min-width:641px){.CanvasSection--read .ControlZone{margin-top:24px}.CanvasSection--read .ControlZone:last-of-type{margin-bottom:24px}}", ""]);

// exports


/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: C:/agent/1/_work/5/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.8.1/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(1);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(13);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "@ms/sp-telemetry"
var sp_telemetry_ = __webpack_require__(7);
var sp_telemetry__default = /*#__PURE__*/__webpack_require__.n(sp_telemetry_);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(2);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxLoading/index.js + 3 modules
var toolboxLoading = __webpack_require__(138);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxAnimation/index.js + 2 modules
var toolboxAnimation = __webpack_require__(43);

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxSearch/index.js + 1 modules
var toolboxSearch = __webpack_require__(122);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxNone/ToolboxNone.js


function ToolboxNone(props) {
    toolboxSearch["a" /* ToolboxSearch */].setQuery(props.controller, '');
    return (external__react_["createElement"]("div", { className: props.className }));
}

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxNone/ToolboxNoneAnimationLayer.js


var ToolboxNoneAnimationLayer = Object(toolboxAnimation["a" /* animation */])(ToolboxNone, 0 );

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxNone/index.js


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolbox/ToolboxOpenLayer.js







undefined/*! require.include @microsoft/office-ui-fabric-react-bundle */;
undefined/*! require.include @microsoft/sp-core-library */;
undefined/*! require.include @microsoft/sp-lodash-subset */;
undefined/*! require.include @ms/odsp-utilities-bundle */;
undefined/*! require.include @ms/sp-a11y */;
undefined/*! require.include @ms/sp-telemetry */;
var TOOLBOX_FOCUS_IDENTIFIER = 'ToolboxFocus';
var ToolboxOpenLayer_ToolboxOpenLayer = (function (_super) {
    tslib_es6["__extends"](ToolboxOpenLayer, _super);
    function ToolboxOpenLayer(props) {
        var _this = _super.call(this, props) || this;
        _this._toolboxInitialized = false;
        _this.state = {
            open: false,
            toolbox: undefined
        };
        _this._controller = {
            openToolbox: _this.openToolbox,
            closeToolbox: _this.closeToolbox
        };
        props.instanceRef({
            openToolbox: _this.openToolbox,
            closeToolbox: _this.closeToolbox
        });
        return _this;
    }
    ToolboxOpenLayer.prototype.render = function () {
        if (!this.state.open) {
            return (external__react_["createElement"](ToolboxNoneAnimationLayer, { className: '', controller: this._controller }));
        }
        else if (!this.state.toolbox) {
            return (external__react_["createElement"](toolboxLoading["a" /* ToolboxLoading */], { className: '', controller: this._controller, horizontalPosition: this.state.open.horizontalPosition, verticalPosition: this.state.open.verticalPosition, scrollableParent: this.props.scrollableParent, canvasElement: this.props.canvasElement }));
        }
        else {
            return (external__react_["createElement"](this.state.toolbox, tslib_es6["__assign"]({}, this.props, { controller: this._controller, position: this.state.open.position, verticalPosition: this.state.open.verticalPosition, horizontalPosition: this.state.open.horizontalPosition })));
        }
    };
    ToolboxOpenLayer.prototype.openToolbox = function (position, verticalPosition, horizontalPosition) {
        this.props.a11yManager.saveActiveElementAs(TOOLBOX_FOCUS_IDENTIFIER);
        this.setState({
            open: {
                position: position,
                verticalPosition: verticalPosition,
                horizontalPosition: horizontalPosition
            }
        });
        if (!this._toolboxInitialized) {
            this._toolboxInitialized = true;
            this._loadToolbox();
        }
        sp_telemetry_["_EngagementLogger"].logEvent('Toolbox.Open');
    };
    ToolboxOpenLayer.prototype.closeToolbox = function (isKeyboard) {
        var _this = this;
        if (isKeyboard === void 0) { isKeyboard = false; }
        this.setState(function (state) {
            if (state.open) {
                if (_this.props.onCloseToolbox) {
                    _this.props.onCloseToolbox();
                }
                sp_telemetry_["_EngagementLogger"].logEventWithLogEntry(new sp_diagnostics_["_LogEntry"]('Toolbox', 'Close', sp_diagnostics_["_LogType"].Event, {
                    isFromKeyboard: isKeyboard.toString()
                }));
                return {
                    open: false
                };
            }
            else {
                return {
                    open: state.open
                };
            }
        }, function () {
            if (isKeyboard) {
                _this.props.a11yManager.restoreFocus(TOOLBOX_FOCUS_IDENTIFIER);
                _this.props.a11yManager.forgetSavedActiveElement(TOOLBOX_FOCUS_IDENTIFIER);
            }
        });
    };
    ToolboxOpenLayer.prototype._loadToolbox = function () {
        var _this = this;
        var monitor = new sp_telemetry_["_QosMonitor"]('ToolboxLoad');
        __webpack_require__.e/* require.ensure */(1).then((function (require) {
            var toolbox = __webpack_require__(506).ToolboxItemsLayer;
            setTimeout(function () { return _this.setState({ toolbox: toolbox }); });
            monitor.writeSuccess();
        }).bind(null, __webpack_require__)).catch(function (error) { return monitor.writeUnexpectedFailure('Failure', error); });
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ToolboxOpenLayer.prototype, "openToolbox", null);
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ToolboxOpenLayer.prototype, "closeToolbox", null);
    return ToolboxOpenLayer;
}(external__react_["PureComponent"]));


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolbox/index.js


// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxItem/ToolboxItemBase.js + 1 modules
var ToolboxItemBase = __webpack_require__(124);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxItem/ToolboxItemFullBleed.module.scss.js
__webpack_require__(242);
var styles = {
    item: 'item_b56e0ef6',
    icon: 'icon_b56e0ef6',
    title: 'title_b56e0ef6',
};
/* harmony default export */ var ToolboxItemFullBleed_module_scss = (styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxItem/ToolboxItemFullBleed.js




function ToolboxItemFullBleed(props) {
    return (external__react_["createElement"](ToolboxItemBase["a" /* ToolboxItemBase */], tslib_es6["__assign"]({}, props, { titleLineCount: 2, itemClassName: ToolboxItemFullBleed_module_scss.item, iconClassName: ToolboxItemFullBleed_module_scss.icon, titleClassName: ToolboxItemFullBleed_module_scss.title })));
}

// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxModel/index.js + 2 modules
var toolboxModel = __webpack_require__(123);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxFullBleed/ToolboxFullBleed.module.scss.js
__webpack_require__(244);
var ToolboxFullBleed_module_scss_styles = {
    toolboxFullBleed: 'toolboxFullBleed_22bfc7c7',
    header: 'header_22bfc7c7',
};
/* harmony default export */ var ToolboxFullBleed_module_scss = (ToolboxFullBleed_module_scss_styles);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxFullBleed/ToolboxFullBleedStrings.resx.js
var key = '_6tOZemhV08aF1IgNDNeiwQ';
var allStrings = ( false) ?
    require("../resx-strings/en-us.json") :
    __webpack_require__(16);
var strings = allStrings[key];
/* harmony default export */ var ToolboxFullBleedStrings_resx = (strings);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxFullBleed/ToolboxFullBleed.js







var ToolboxFullBleed_ToolboxFullBleed = (function (_super) {
    tslib_es6["__extends"](ToolboxFullBleed, _super);
    function ToolboxFullBleed(props) {
        var _this = _super.call(this, props) || this;
        _this.state = _this._getState(props.toolboxItems);
        return _this;
    }
    ToolboxFullBleed.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.toolboxItems !== this.props.toolboxItems) {
            this.setState(this._getState(nextProps.toolboxItems));
        }
    };
    ToolboxFullBleed.prototype.render = function () {
        var _this = this;
        var fullBleedToolboxItems = this.state.items
            .map(function (item) { return (external__react_["createElement"](ToolboxItemFullBleed, { key: item.id, item: item, onClick: _this._handleClickItem })); });
        return (external__react_["createElement"]("section", { className: ToolboxFullBleed_module_scss.toolboxFullBleed, "aria-label": ToolboxFullBleedStrings_resx.ToolboxGroupNameFullWidth, role: 'group' },
            external__react_["createElement"]("header", { className: ToolboxFullBleed_module_scss.header }, ToolboxFullBleedStrings_resx.ToolboxGroupNameFullWidth),
            external__react_["createElement"](office_ui_fabric_react_bundle_["FocusZone"], { direction: office_ui_fabric_react_bundle_["FocusZoneDirection"].horizontal, isCircularNavigation: true }, fullBleedToolboxItems)));
    };
    ToolboxFullBleed.prototype._getState = function (itemShims) {
        var itemMaps = itemShims.map(toolboxModel["b" /* mapToolboxItem */]);
        return {
            items: itemMaps.map(function (map) { return map.item; }),
            mapToolboxItemIdToCanvasControl: new Map(itemMaps.map(function (map) { return [map.id, map.control]; }))
        };
    };
    ToolboxFullBleed.prototype._handleClickItem = function (toolboxItemId) {
        var control = this.state.mapToolboxItemIdToCanvasControl.get(toolboxItemId);
        if (!control) {
            return;
        }
        this.props.clickItem(tslib_es6["__assign"]({}, control, { position: this.props.controlPosition }));
    };
    tslib_es6["__decorate"]([
        office_ui_fabric_react_bundle_["autobind"]
    ], ToolboxFullBleed.prototype, "_handleClickItem", null);
    return ToolboxFullBleed;
}(external__react_["PureComponent"]));


// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/toolboxFullBleed/index.js


// EXTERNAL MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/legacy/lessText/index.js + 3 modules
var lessText = __webpack_require__(112);

// CONCATENATED MODULE: C:/agent/1/_work/5/s/libraries/sp-canvas-toolbox/lib/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Toolbox", function() { return ToolboxOpenLayer_ToolboxOpenLayer; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ToolboxFullBleed", function() { return ToolboxFullBleed_ToolboxFullBleed; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "LessText", function() { return lessText["a" /* LessText */]; });





/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(233);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, "@keyframes fromNoneToSmallUpIn_456b5213{0%{height:30px}to{height:330px}}@keyframes fromNoneToSmallDownInLTR_456b5213{0%{height:30px;transform:translate(-50%,300px)}to{height:330px;transform:translate(-50%)}}@keyframes fromNoneToSmallDownInRTL_456b5213{0%{height:30px;transform:translate(50%,300px)}to{height:330px;transform:translate(50%)}}@keyframes fromSmallToLarge_456b5213{0%{transform:scale(.2)}to{transform:scale(1)}}@keyframes fromLargeToSmall_456b5213{0%{width:1024px;height:712px}to{width:292px;height:330px}}.fromNoneToSmall_456b5213.upIn_456b5213{animation:fromNoneToSmallUpIn_456b5213 .3s}[dir=ltr] .fromNoneToSmall_456b5213.downIn_456b5213{animation:fromNoneToSmallDownInLTR_456b5213 .3s}[dir=rtl] .fromNoneToSmall_456b5213.downIn_456b5213{animation:fromNoneToSmallDownInRTL_456b5213 .3s}.fromSmallToLarge_456b5213{animation:fromSmallToLarge_456b5213 .3s;overflow:hidden}.fromLargeToSmall_456b5213{animation:fromLargeToSmall_456b5213 .3s}", ""]);

// exports


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(235);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".container_44ffdc86{position:absolute;top:0;width:100%;max-width:1284px}[dir=ltr] .container_44ffdc86{left:0}[dir=rtl] .container_44ffdc86{right:0}.callout_44ffdc86{background:\"[theme:white, default: #ffffff]\";border:1px solid #d6d6d6;box-shadow:0 0 8px 0 rgba(0,0,0,.2);box-sizing:border-box;height:330px;margin-top:26px;position:absolute;width:292px;z-index:10;margin-left:0;margin-right:0}[dir=ltr] .callout_44ffdc86{left:0}[dir=rtl] .callout_44ffdc86{right:0}[dir=ltr] .callout_44ffdc86{transform:translateX(-50%)}[dir=rtl] .callout_44ffdc86{transform:translateX(50%)}.callout_44ffdc86 .ms-Spinner-container{margin-top:151px}[dir=ltr] .callout_44ffdc86 .ms-Spinner-container{margin-left:132px}[dir=rtl] .callout_44ffdc86 .ms-Spinner-container{margin-right:132px}", ""]);

// exports


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(237);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".spinner_3ecc4404{margin:0;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}", ""]);

// exports


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(239);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".lessText_9664581f{word-wrap:break-word!important}", ""]);

// exports


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(241);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".item_a6027ca2{margin:0;padding:0;border:1px solid transparent;background-clip:padding-box}.item_a6027ca2:focus,.item_a6027ca2:hover{background-color:\"[theme:themeLighter, default: #deecf9]\"}.item_a6027ca2:focus *,.item_a6027ca2:hover *{color:\"[theme:themeDarkAlt, default: #106ebe]\"}@media screen and (-ms-high-contrast:active){.item_a6027ca2:focus,.item_a6027ca2:hover{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.item_a6027ca2:focus,.item_a6027ca2:hover{color:#37006e}}.flexBox_a6027ca2{width:100%;height:100%;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.icon_a6027ca2{color:\"[theme:neutralPrimary, default: #333333]\"}.icon_a6027ca2 .ms-Image{width:100%;height:100%}.title_a6027ca2{max-width:100%;color:\"[theme:neutralSecondary, default: #666666]\";font-weight:400;line-height:17px}", ""]);

// exports


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(243);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".item_b56e0ef6{width:120px;height:88px}.icon_b56e0ef6{font-size:28px;line-height:48px}.title_b56e0ef6{font-size:13px}", ""]);

// exports


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(245);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".toolboxFullBleed_22bfc7c7{text-align:center;margin:100px auto;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.header_22bfc7c7{color:\"[theme:neutralSecondary, default: #666666]\";font-weight:600;letter-spacing:1px;line-height:32px;padding:0 12px}", ""]);

// exports


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(247);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".dragIconContainer_d2e458a7{position:absolute;top:0;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;text-align:center;font-size:32px;color:\"[theme:neutralLighterAlt, default: #f8f8f8]\"}.dragIconContainer_d2e458a7 .dragIcon_d2e458a7{width:50px;height:50px;background-color:\"[theme:themePrimary, default:#0078d4]\";display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.dragIconContainer_d2e458a7 .dragIcon_d2e458a7 .ms-Icon{font-size:32px;padding:9px}.dragIconContainer_d2e458a7 .dragText_d2e458a7{height:22px;padding:4px;max-width:200px;font-size:15px!important;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;background-color:rgba(0,0,0,.5);color:#fff;font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.dragIconContainer_d2e458a7 .singleColumn_d2e458a7:before{content:\"\\F1D3\"}.dragIconContainer_d2e458a7 .doubleColumn_d2e458a7:before{content:\"\\F1D4\"}.dragIconContainer_d2e458a7 .tripleColumn_d2e458a7:before{content:\"\\F1D5\"}.dragIconContainer_d2e458a7 .columnLeftTwoThirds_d2e458a7:before{content:\"\\F1D6\"}.dragIconContainer_d2e458a7 .columnRightTwoThirds_d2e458a7:before{content:\"\\F1D7\"}.disabledArea_d2e458a7{position:relative}.disabledArea_d2e458a7:before{background-color:\"[theme:neutralSecondary, default: #666666]\";content:\"\";display:block;position:absolute;height:100%;width:100%;z-index:100;opacity:.6}", ""]);

// exports


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(249);


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(250);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasZoneContainer.CanvasZoneContainer--hintUpdate{position:relative;margin-top:-18px}.CanvasZoneContainer.CanvasZoneContainer--read{margin-top:0}.CanvasZone{max-width:1284px;padding:0 12px;margin:0;margin-top:-18px}.CanvasZone.CanvasZone--read{margin-top:0}.CanvasZone:focus{outline:0}.CanvasZone.CanvasZone--centerAlign{margin:auto}.CanvasZone.CanvasZone--selected .CanvasSection--edit:before{color:\"[theme:themePrimary, default:#0078d4]\";border-bottom:1px solid}[dir=ltr] .CanvasZone.CanvasZone--selected .CanvasSection--edit:before{border-left:1px solid}[dir=rtl] .CanvasZone.CanvasZone--selected .CanvasSection--edit:before{border-right:1px solid}.CanvasZone.CanvasZone--selected .CanvasZoneToolbar .CanvasControlToolbar-item{color:\"[theme:themePrimary, default:#0078d4]\"}.CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-bottom:1px dashed}[dir=ltr] .CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{border-left:1px dashed}[dir=rtl] .CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{border-right:1px dashed}.CanvasZone.CanvasZone--controlSelected+button.CanvasToolboxHint{opacity:1}.CanvasZone.CanvasZone--fullWidth{max-width:100%;padding:0;margin:-18px 0 -1px}.CanvasZone.CanvasZone--fullWidth .CanvasSection{padding-left:0;padding-right:0}.CanvasZone.CanvasZone--fullWidth.CanvasZone--fullWidth--read{margin-top:0}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:40px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:40px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:24px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:24px}.CanvasZone.CanvasZone--fullWidth .centerAlign{margin:auto}.CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{border:1px solid \"[theme:neutralLight, default: #eaeaea]\";top:8px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{left:8px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{right:8px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{padding-right:2px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{padding-left:2px}.CanvasZone .CanvasZoneToolbar{margin-top:12px;position:absolute;width:32px}[dir=ltr] .CanvasZone .CanvasZoneToolbar:not(.AlignedToolbar){left:-32px}[dir=rtl] .CanvasZone .CanvasZoneToolbar:not(.AlignedToolbar){right:-32px}.CanvasZone .CanvasZoneToolbar.FixedToolbar{margin-top:0;position:fixed;left:auto;right:auto}.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item{background-color:transparent;color:\"[theme:neutralTertiary, default: #a6a6a6]\";height:32px;min-width:32px;width:32px}.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item:focus,.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item:hover{background-color:\"[theme:themePrimary, default:#0078d4]\";color:\"[theme:white, default: #ffffff]\";cursor:pointer}.CanvasZone.CanvasZone--fullWidth--read .ControlZone{margin-top:0;margin-bottom:0}@media screen and (min-width:1024px){.CanvasZone--edit{display:-ms-flexbox;display:flex}.CanvasZone--edit.CanvasZone--empty{height:320px}.CanvasZone--edit.CanvasZone--fullWidth{max-width:100%;padding:0;min-height:320px}.CanvasZone.CanvasZone--alignment{display:-ms-flexbox;display:flex}.CanvasZone.CanvasZone--reflow{display:block}}@media screen and (min-width:641px){.CanvasZone{padding:0 24px}[dir=ltr] .CanvasZone.CanvasZone--edit{padding-left:40px}[dir=rtl] .CanvasZone.CanvasZone--edit{padding-right:40px}[dir=ltr] .CanvasZone.CanvasZone--edit{padding-right:24px}[dir=rtl] .CanvasZone.CanvasZone--edit{padding-left:24px}.CanvasZone.CanvasZone--edit.CanvasZone--fullWidth{max-width:100%;padding:0;min-height:320px}}.row{margin:0 -8px;box-sizing:border-box}.row:after,.row:before{display:table;content:\"\";line-height:0}.row:after{clear:both}.CanvasZone--noMargin{margin:0}", ""]);

// exports


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(252);


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(253);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasToolboxItemsGroup{clear:both}.CanvasToolboxItemsGroup-header{background-color:\"[theme:neutralLighter, default: #f4f4f4]\";color:\"[theme:neutralPrimary, default: #333333]\";font-weight:600;height:32px;letter-spacing:1px;line-height:32px;padding:0 12px}[dir=ltr] .CanvasToolboxItemsGroup-header{text-align:left}[dir=rtl] .CanvasToolboxItemsGroup-header{text-align:right}", ""]);

// exports


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(255);


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(256);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasToolboxItem{background-color:transparent;border:1px solid transparent;height:88px;overflow:hidden;padding:0;width:33.333%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}[dir=ltr] .CanvasToolboxItem{float:left}[dir=rtl] .CanvasToolboxItem{float:right}.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{background-color:\"[theme:themeLighter, default:#deecf9]\";cursor:pointer}.CanvasToolboxItem:focus .CanvasToolboxItem-icon,.CanvasToolboxItem:focus .CanvasToolboxItem-title,.CanvasToolboxItem:hover .CanvasToolboxItem-icon,.CanvasToolboxItem:hover .CanvasToolboxItem-title{color:\"[theme:themeDarkAlt, default:#106ebe]\"}.CanvasToolboxItem-icon{color:\"[theme:neutralPrimary, default: #333333]\";display:block;font-size:28px;line-height:48px}.CanvasToolboxItem-title{color:\"[theme:neutralSecondary, default: #666666]\";display:block;font-weight:400;font-size:13px;padding:0 8px;text-align:center;line-height:17px;max-width:88px}@media screen and (-ms-high-contrast:active){.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{color:#37006e}}", ""]);

// exports


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(258);


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(259);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasToolboxContainer{position:absolute;top:0;width:100%;max-width:1284px}[dir=ltr] .CanvasToolboxContainer{left:0}[dir=rtl] .CanvasToolboxContainer{right:0}.CanvasToolbox{background:\"[theme:white, default: #ffffff]\";border:1px solid #d6d6d6;box-shadow:0 0 8px 0 rgba(0,0,0,.2);box-sizing:border-box;max-height:330px;margin-top:26px;overflow-y:auto;position:absolute;width:292px;z-index:10;margin-left:0;margin-right:0}[dir=ltr] .CanvasToolbox{left:0}[dir=rtl] .CanvasToolbox{right:0}.CanvasToolbox .CanvasToolbox-Error{background-color:#fde7e9;font-weight:600;font-size:12px;letter-spacing:1px;padding:0 12px}.CanvasToolbox-noResults{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;font-size:13px;-ms-flex-pack:center;justify-content:center;padding:13px}", ""]);

// exports


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(261);


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(262);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasVerticalSection{height:100%}[dir=ltr] .CanvasVerticalSection{padding-left:32px}[dir=rtl] .CanvasVerticalSection{padding-right:32px}.CanvasVerticalSection .CanvasZoneContainer{height:100%}.CanvasVerticalSection .CanvasZoneContainer.CanvasZoneContainer--hintUpdate{position:relative;margin-top:0}.CanvasVerticalSection .CanvasZone{position:relative;height:100%}.CanvasVerticalSection .CanvasZone .CanvasZoneToolbar{margin-top:0}.CanvasVerticalSection>div{height:100%}@media screen and (min-width:641px){[dir=ltr] .CanvasVerticalSection .CanvasZone{padding-left:0}[dir=rtl] .CanvasVerticalSection .CanvasZone{padding-right:0}}@media screen and (min-width:1280px){[dir=ltr] .CanvasVerticalSection{padding-left:0}[dir=rtl] .CanvasVerticalSection{padding-right:0}}", ""]);

// exports


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(264);


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(265);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".grid{box-sizing:border-box;padding:0 8px}.grid:after,.grid:before{display:table;content:\"\";line-height:0}.grid:after{clear:both}.CanvasComponentWrapper{display:block;max-width:1648px;margin:0 auto}.CanvasComponentMain{width:100%}.CanvasVerticalSectionContainer{width:100%;min-width:312px;min-height:100%}.CanvasVerticalSectionContainer.isEdit{margin-top:2px}@media screen and (min-width:1280px){.CanvasComponentWrapper{display:-ms-flexbox;display:flex}.CanvasComponentWrapper.CanvasComponentWrapper--reflow{display:block}.CanvasComponentMain{width:75%}.CanvasComponentMain.CanvasComponentMain--reflow{width:100%}.CanvasVerticalSectionContainer{width:25%}.CanvasVerticalSectionContainer.CanvasVerticalSectionContainer--reflow{width:100%}}", ""]);

// exports


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(267);


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(268);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".CanvasComponent{position:relative}.CanvasSectionBarBg{position:absolute;top:0;height:100%;width:32px;background-color:\"[theme:neutralLighter, default: #f4f4f4]\"}[dir=ltr] .CanvasSectionBarBg{left:0}[dir=rtl] .CanvasSectionBarBg{right:0}[dir=ltr] .CanvasSectionBarBg.WithVerticalSection{box-shadow:inset -4px 0 8px -6px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}[dir=rtl] .CanvasSectionBarBg.WithVerticalSection{box-shadow:inset 4px 0 8px -6px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}.Canvas{position:relative;padding:0}.Canvas>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding:0 12px}.Canvas>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal.centerAlign{margin:auto}.Canvas--edit.Original{padding-bottom:80px}[dir=ltr] .Canvas--edit.Canvas--withLayout{margin-left:32px}[dir=rtl] .Canvas--edit.Canvas--withLayout{margin-right:32px}[dir=ltr] .Canvas--edit.Canvas--withLayout.Original{box-shadow:-4px 0 8px -5px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}[dir=rtl] .Canvas--edit.Canvas--withLayout.Original{box-shadow:4px 0 8px -5px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}[dir=ltr] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:40px}[dir=rtl] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:40px}[dir=ltr] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-right:24px}[dir=rtl] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapperOriginal{padding-left:24px}.Canvas-screenReaderOnly{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(270);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, "[id^=spPropertyPaneContainer].showPane_60798c51{width:340px}[id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_60798c51{position:absolute;top:50px;bottom:0;z-index:999}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_60798c51{right:-340px}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_60798c51{left:-340px}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].showPane_60798c51{right:0}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].showPane_60798c51{left:0}[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_60798c51{right:340px}[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_60798c51{left:340px}[dir=ltr] [id^=workbenchPageContent].shrinkContent_60798c51{right:340px}[dir=rtl] [id^=workbenchPageContent].shrinkContent_60798c51{left:340px}[dir=ltr] [id^=workbenchCommandBar].shrinkContent_60798c51{padding-right:340px}[dir=rtl] [id^=workbenchCommandBar].shrinkContent_60798c51{padding-left:340px}", ""]);

// exports


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(272);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".belowHeader_4b2a34d3,.canvasHost_4b2a34d3,.content_4b2a34d3{position:absolute;left:0;top:0;right:0;bottom:0}.belowHeader_4b2a34d3,.content_4b2a34d3{overflow:hidden}.content_4b2a34d3{transition:margin-right .6s ease;-webkit-transition:margin-right .6s ease;padding:10px 30px;overflow-y:auto}.hasHeader_4b2a34d3 .belowHeader_4b2a34d3{top:50px}.hasCommandBar_4b2a34d3 .content_4b2a34d3{top:40px}.canvasHost_4b2a34d3 .NavPane_4b2a34d3{width:220px;right:auto}", ""]);

// exports


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(274);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".clickStop_e0b2a17f{border-width:0;border-left-width:2px;border-right-width:2px;border-style:solid;height:30px;line-height:30px;position:absolute}.clickStop_e0b2a17f:hover{background-color:#c8c8c8;cursor:pointer}.clickStopSelected_e0b2a17f{background-color:#c8c8c8}.navBarItem_e0b2a17f{border-color:#fff;float:left;margin-right:18px;font-size:14px;padding:0;box-sizing:border-box;display:block}", ""]);

// exports


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(276);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".clickStopNavBar_310706ca{border:0 solid #c8c8c8;background-color:#f4f4f4;color:#333;height:30px;border-top-width:1px;box-sizing:content-box;font-size:14px;font-weight:400;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:1px solid transparent}.navBarItems_310706ca{display:block;list-style:none;margin:0 7px 0 0;padding:0}.mobilePreviewDeviceTitle_310706ca{width:200px;margin:auto;text-align:center;padding:4px;position:relative}", ""]);

// exports


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(278);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".mobilePreviewNavBar_72d6885f{color:#333;background-color:#f4f4f4;height:50px;font-size:14px;font-weight:400;box-sizing:border-box;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:1px solid transparent}.navBarItems_72d6885f{margin:0 -8px;box-sizing:border-box;display:block;list-style:none;margin:0 7px 0 0;padding:0}.navBarItems_72d6885f:after,.navBarItems_72d6885f:before{display:table;content:\"\";line-height:0}.navBarItems_72d6885f:after{clear:both}.navBarItemSm_72d6885f{width:50%}@media (min-width:480px){.navBarItemSm_72d6885f{width:50%}}@media (min-width:640px){.navBarItemSm_72d6885f{width:25%}}@media (min-width:640px){.navBarItemMd_72d6885f{width:50%}}.navBarItem_72d6885f,.navBarItemMd_72d6885f,.navBarItemSm_72d6885f{min-height:1px;padding-left:8px;padding-right:8px;margin-right:0;float:left;font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative}[dir=ltr] .navBarItem_72d6885f,[dir=ltr] .navBarItemMd_72d6885f,[dir=ltr] .navBarItemSm_72d6885f{float:left}[dir=rtl] .navBarItem_72d6885f,[dir=rtl] .navBarItemMd_72d6885f,[dir=rtl] .navBarItemSm_72d6885f{float:right}.navBarItem_72d6885f .ms-Grid_72d6885f,.navBarItemMd_72d6885f .ms-Grid_72d6885f,.navBarItemSm_72d6885f .ms-Grid_72d6885f{padding:0}.navBarItemRight_72d6885f{float:right;margin:0}.mobilePreviewTitle_72d6885f{line-height:50px;margin-left:15px;font-size:xx-large}.mobilePreviewXIcon_72d6885f{color:#a6a6a6;border-color:#c8c8c8;font-size:30px;border-left-width:1px;margin:auto;margin-left:30px;line-height:50px}.mobilePreviewXIcon_72d6885f:hover{cursor:pointer;color:#767676}.col_72d6885f{position:relative;min-height:1px;padding-left:8px;padding-right:8px;box-sizing:border-box;width:50%}[dir=ltr] .col_72d6885f{float:left}[dir=rtl] .col_72d6885f{float:right}.col_72d6885f .ms-Grid_72d6885f{padding:0}@media (min-width:480px){.col_72d6885f{width:50%}}@media (min-width:640px){.col_72d6885f{width:25%}}", ""]);

// exports


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(280);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".mobilePreviewURLbar_88cc42d7{height:100%;padding:5px;width:100%}.mobilePreviewTextfield_88cc42d7{position:absolute;left:0;width:calc(100% - 135px)}.mobilePreviewURLbutton_88cc42d7{position:absolute;right:0;margin:6px;background-color:#c8c8c8;border:1px solid #c8c8c8;border-radius:2px;top:4px}.mobilePreviewURLbutton_88cc42d7:hover{background-color:#a6a6a6}.mobilePreviewURLbutton_88cc42d7:active,.mobilePreviewURLbutton_88cc42d7:focus{background-color:#c8c8c8;border:1px solid #a6a6a6}", ""]);

// exports


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(282);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".mobilePreviewDeviceIcon_c7e819cb{color:#a6a6a6;margin:auto;padding:auto;font-size:40px;line-height:50px}.mobilePreviewDeviceIcon_c7e819cb:hover{cursor:pointer;color:#767676}.navBarItemRight_c7e819cb{font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative;float:right;margin:0}", ""]);

// exports


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(284);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".mobilePreviewDevice_4799eba0{border-color:#767676;border-radius:15px;border-style:solid;position:relative;margin:auto;margin-top:70px}.mobilePreviewPortrait_4799eba0{border-width:60px 16px}.mobilePreviewLandscape_4799eba0{border-width:16px 60px}.mobilePreviewTablet_4799eba0{border-width:40px}.mobilePreviewIframe_4799eba0{background-color:#fff;width:100%;height:100%;position:absolute;border:none}", ""]);

// exports


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(286);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".xField_38bf9b5c{left:15px}.yField_38bf9b5c{left:140px}.mobilePreviewTextfieldXY_38bf9b5c{margin:10px;position:absolute;top:15px;width:114px}.mobilePreviewTextfieldXY_38bf9b5c .xyTextfields_38bf9b5c{border-color:#c8c8c8;color:#666;position:absolute;min-width:20px;width:50px;right:0;height:28px;box-sizing:border-box;margin:0;box-shadow:none;border:1px solid;font-size:12px;padding:6px 10px 8px;outline:0}.mobilePreviewTextfieldXY_38bf9b5c .xyLabels_38bf9b5c{color:#c8c8c8;position:absolute;font-size:20px;left:0;padding:0;font-weight:400;margin:0;box-shadow:none;box-sizing:border-box;display:block}", ""]);

// exports


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(288);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".mobilePreviewRotateIcon_b15be5d5{color:#eaeaea;position:absolute;right:30px;top:15px;font-size:50px;margin:5px;cursor:pointer;font-weight:100}", ""]);

// exports


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(290);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".mobilePreviewContainer_e24a3989{padding:0 8px;position:fixed;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.87);z-index:2147483647;box-sizing:border-box;padding:0;font-family:Segoe UI Semilight WestEuropean,Segoe UI Semilight,Segoe UI,Tahoma,Arial,sans-serif}.mobilePreviewContainer_e24a3989:after,.mobilePreviewContainer_e24a3989:before{display:table;content:\"\";line-height:0}.mobilePreviewContainer_e24a3989:after{clear:both}.mobilePreviewDeviceContainer_e24a3989{position:relative;height:calc(100% - 71px);-ms-flex-align:center;align-items:center;overflow:auto;display:-ms-flexbox;display:flex}", ""]);

// exports


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/Pivot.js
module.exports = __webpack_require__(292);

/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pivot", function() { return Pivot; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Pivot_base__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Pivot_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Pivot_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Pivot_styles__ = __webpack_require__(299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Pivot_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Pivot_styles__);



/**
 * The Pivot control and related tabs pattern are used for navigating frequently accessed,
 * distinct content categories. Pivots allow for navigation between two or more content
 * views and relies on text headers to articulate the different sections of content.
 */
var Pivot = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Pivot_base__["PivotBase"], __WEBPACK_IMPORTED_MODULE_2__Pivot_styles__["getStyles"]);


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/Pivot.base.js
module.exports = __webpack_require__(294);

/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PivotBase", function() { return PivotBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Button__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Button__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__FocusZone__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__FocusZone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__FocusZone__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__PivotItem__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__PivotItem___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__PivotItem__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Pivot_types__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Pivot_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__Pivot_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icon__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__Icon__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Pivot_scss__ = __webpack_require__(297);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Pivot_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__Pivot_scss__);










var styles = __WEBPACK_IMPORTED_MODULE_8__Pivot_scss__;
var PivotItemType = (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_5__PivotItem__["PivotItem"], null)).type;
var PivotBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["__extends"](PivotBase, _super);
    function PivotBase(props) {
        var _this = _super.call(this, props) || this;
        _this.focusZone = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["createRef"])();
        _this._renderPivotLink = function (link) {
            var itemKey = link.itemKey, headerButtonProps = link.headerButtonProps;
            var tabId = _this._keyToTabIds[itemKey];
            var onRenderItemLink = link.onRenderItemLink;
            var linkContent;
            if (onRenderItemLink) {
                linkContent = onRenderItemLink(link, _this._renderLinkContent);
            }
            else {
                linkContent = _this._renderLinkContent(link);
            }
            return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Button__["CommandButton"], __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({}, headerButtonProps, { id: tabId, key: itemKey, className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-Pivot-link', styles.link, (_a = {},
                    _a['is-selected ' + styles.linkIsSelected] = _this.state.selectedKey === itemKey,
                    _a)), onClick: _this._onLinkClick.bind(_this, itemKey), onKeyPress: _this._onKeyPress.bind(_this, itemKey), ariaLabel: link.ariaLabel, role: 'tab', "aria-selected": _this.state.selectedKey === itemKey, name: link.headerText, keytipProps: link.keytipProps }), linkContent));
            var _a;
        };
        _this._renderLinkContent = function (link) {
            var itemCount = link.itemCount, itemIcon = link.itemIcon, headerText = link.headerText;
            return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-Pivot-link-content') },
                itemIcon !== undefined && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-Pivot-icon', styles.icon) },
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_7__Icon__["Icon"], { iconName: itemIcon }))),
                headerText !== undefined && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-Pivot-text', styles.text) },
                    " ",
                    link.headerText),
                itemCount !== undefined && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-Pivot-count', styles.count) },
                    " (",
                    itemCount,
                    ")")));
        };
        _this._pivotId = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('Pivot');
        var links = _this._getPivotLinks(_this.props);
        var selectedKey;
        if (props.initialSelectedKey) {
            selectedKey = props.initialSelectedKey;
        }
        else if (props.initialSelectedIndex) {
            selectedKey = links[props.initialSelectedIndex].itemKey;
        }
        else if (props.selectedKey) {
            selectedKey = props.selectedKey;
        }
        else if (links.length) {
            selectedKey = links[0].itemKey;
        }
        _this.state = {
            links: links,
            selectedKey: selectedKey,
            selectedTabId: _this._keyToTabIds[selectedKey],
        };
        _this._renderPivotLink = _this._renderPivotLink.bind(_this);
        return _this;
    }
    PivotBase.prototype.componentWillReceiveProps = function (nextProps) {
        var _this = this;
        var links = this._getPivotLinks(nextProps);
        this.setState(function (prevState, props) {
            var selectedKey;
            if (_this._isKeyValid(nextProps.selectedKey)) {
                selectedKey = nextProps.selectedKey;
            }
            else if (_this._isKeyValid(prevState.selectedKey)) {
                selectedKey = prevState.selectedKey;
            }
            else if (links.length) {
                selectedKey = links[0].itemKey;
            }
            return {
                links: links,
                selectedKey: selectedKey,
                selectedTabId: _this._keyToTabIds[selectedKey],
            };
        });
    };
    /**
     * Sets focus to the first pivot tab.
     */
    PivotBase.prototype.focus = function () {
        if (this.focusZone.current) {
            this.focusZone.current.focus();
        }
    };
    PivotBase.prototype.render = function () {
        var divProps = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"]);
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"]({}, divProps),
            this._renderPivotLinks(),
            this._renderPivotItem()));
    };
    /**
     * Renders the set of links to route between pivots
     */
    PivotBase.prototype._renderPivotLinks = function () {
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__FocusZone__["FocusZone"], { componentRef: this.focusZone, direction: __WEBPACK_IMPORTED_MODULE_4__FocusZone__["FocusZoneDirection"].horizontal },
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("ul", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])('ms-Pivot', styles.root, (_a = {}, _a['ms-Pivot--large ' + styles.rootIsLarge] = this.props.linkSize === __WEBPACK_IMPORTED_MODULE_6__Pivot_types__["PivotLinkSize"].large, _a), (_b = {}, _b['ms-Pivot--tabs ' + styles.rootIsTabs] = this.props.linkFormat === __WEBPACK_IMPORTED_MODULE_6__Pivot_types__["PivotLinkFormat"].tabs, _b)), role: 'tablist' }, this.state.links.map(this._renderPivotLink))));
        var _a, _b;
    };
    /**
     * Renders the current Pivot Item
     */
    PivotBase.prototype._renderPivotItem = function () {
        if (this.props.headersOnly) {
            return null;
        }
        var itemKey = this.state.selectedKey;
        var index = this._keyToIndexMapping[itemKey];
        var selectedTabId = this.state.selectedTabId;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { role: 'tabpanel', "aria-labelledby": selectedTabId }, __WEBPACK_IMPORTED_MODULE_1_react__["Children"].toArray(this.props.children)[index]));
    };
    /**
     * Gets the set of PivotLinks as arrary of IPivotItemProps
     * The set of Links is determined by child components of type PivotItem
     */
    PivotBase.prototype._getPivotLinks = function (props) {
        var _this = this;
        var links = [];
        this._keyToIndexMapping = {};
        this._keyToTabIds = {};
        __WEBPACK_IMPORTED_MODULE_1_react__["Children"].map(props.children, function (child, index) {
            if (typeof child === 'object' && child.type === PivotItemType) {
                var pivotItem = child;
                var itemKey = pivotItem.props.itemKey || index.toString();
                links.push({
                    headerText: pivotItem.props.headerText || pivotItem.props.linkText,
                    headerButtonProps: pivotItem.props.headerButtonProps,
                    ariaLabel: pivotItem.props.ariaLabel,
                    itemKey: itemKey,
                    itemCount: pivotItem.props.itemCount,
                    itemIcon: pivotItem.props.itemIcon,
                    onRenderItemLink: pivotItem.props.onRenderItemLink,
                    keytipProps: pivotItem.props.keytipProps
                });
                _this._keyToIndexMapping[itemKey] = index;
                _this._keyToTabIds[itemKey] = _this._getTabId(itemKey, index);
            }
        });
        return links;
    };
    /**
     * Generates the Id for the tab button.
     */
    PivotBase.prototype._getTabId = function (itemKey, index) {
        if (this.props.getTabId) {
            return this.props.getTabId(itemKey, index);
        }
        return this._pivotId + ("-Tab" + index);
    };
    /**
     * whether the key exists in the pivot items.
     */
    PivotBase.prototype._isKeyValid = function (itemKey) {
        return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;
    };
    /**
     * Handles the onClick event on PivotLinks
     */
    PivotBase.prototype._onLinkClick = function (itemKey, ev) {
        ev.preventDefault();
        this._updateSelectedItem(itemKey, ev);
    };
    /**
     * Handle the onKeyPress eventon the PivotLinks
     */
    PivotBase.prototype._onKeyPress = function (itemKey, ev) {
        ev.preventDefault();
        if (ev.which === 13 /* enter */) {
            this._updateSelectedItem(itemKey);
        }
    };
    /**
     * Updates the state with the new selected index
     */
    PivotBase.prototype._updateSelectedItem = function (itemKey, ev) {
        this.setState({
            selectedKey: itemKey,
            selectedTabId: this._keyToTabIds[itemKey]
        });
        if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {
            var index = this._keyToIndexMapping[itemKey];
            // React.Element<any> cannot directly convert to PivotItem.
            var item = __WEBPACK_IMPORTED_MODULE_1_react__["Children"].toArray(this.props.children)[index];
            if (typeof item === 'object' && item.type === __WEBPACK_IMPORTED_MODULE_5__PivotItem__["PivotItem"]) {
                this.props.onLinkClick(item, ev);
            }
        }
    };
    return PivotBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/PivotItem.js
module.exports = __webpack_require__(113);

/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PivotLinkFormat", function() { return PivotLinkFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PivotLinkSize", function() { return PivotLinkSize; });
var PivotLinkFormat;
(function (PivotLinkFormat) {
    /**
     * Display Pivot Links as links
     */
    PivotLinkFormat[PivotLinkFormat["links"] = 0] = "links";
    /**
     * Display Pivot Links as Tabs
     */
    PivotLinkFormat[PivotLinkFormat["tabs"] = 1] = "tabs";
})(PivotLinkFormat || (PivotLinkFormat = {}));
var PivotLinkSize;
(function (PivotLinkSize) {
    /**
     * Display Link using normal font size
     */
    PivotLinkSize[PivotLinkSize["normal"] = 0] = "normal";
    /**
     * Display links using large font size
     */
    PivotLinkSize[PivotLinkSize["large"] = 1] = "large";
})(PivotLinkSize || (PivotLinkSize = {}));


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/Pivot.scss.js
module.exports = __webpack_require__(298);

/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "root", function() { return root; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "links", function() { return links; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "link", function() { return link; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return count; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "icon", function() { return icon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkIsSelected", function() { return linkIsSelected; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkIsDisabled", function() { return linkIsDisabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkIsOverflow", function() { return linkIsOverflow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipsis", function() { return ellipsis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rootIsLarge", function() { return rootIsLarge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rootIsTabs", function() { return rootIsTabs; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles__);
/* tslint:disable */

Object(__WEBPACK_IMPORTED_MODULE_0__microsoft_load_themed_styles__["loadStyles"])([{ "rawString": ".root_d746aa1d{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:none;box-shadow:none;margin:0;padding:0;font-size:14px;font-weight:400;position:relative;color:" }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": ";white-space:nowrap}.links_d746aa1d{font-size:0;height:40px;list-style-type:none;padding:0;white-space:nowrap}.root_d746aa1d .link_d746aa1d{color:" }, { "theme": "neutralPrimary", "defaultValue": "#333333" }, { "rawString": ";display:inline-block;font-size:14px;font-weight:400;line-height:40px;padding:0 8px;text-align:center;position:relative;background-color:transparent;border:0}[dir='ltr'] .root_d746aa1d .link_d746aa1d{margin-right:8px}[dir='rtl'] .root_d746aa1d .link_d746aa1d{margin-left:8px}.root_d746aa1d .link_d746aa1d:hover{cursor:pointer}.root_d746aa1d .link_d746aa1d:hover::before{-webkit-box-sizing:border-box;box-sizing:border-box;border-bottom:2px solid transparent}.root_d746aa1d .link_d746aa1d:focus{outline:none}.root_d746aa1d .link_d746aa1d::before{background-color:transparent;bottom:0;content:'';height:2px;left:8px;position:absolute;right:8px;-webkit-transition:background-color .267s cubic-bezier(0.1, 0.25, 0.75, 0.9);transition:background-color .267s cubic-bezier(0.1, 0.25, 0.75, 0.9)}.root_d746aa1d .link_d746aa1d::after{color:transparent;content:attr(title);display:block;font-weight:bold;height:1px;overflow:hidden;visibility:hidden}.root_d746aa1d .link_d746aa1d .text_d746aa1d,.root_d746aa1d .link_d746aa1d .count_d746aa1d{display:inline-block;vertical-align:top}html[dir='ltr'] .root_d746aa1d .link_d746aa1d .icon_d746aa1d+.text_d746aa1d{margin-left:4px}html[dir='rtl'] .root_d746aa1d .link_d746aa1d .icon_d746aa1d+.text_d746aa1d{margin-right:4px}html[dir='ltr'] .root_d746aa1d .link_d746aa1d .count_d746aa1d{margin-left:4px}html[dir='rtl'] .root_d746aa1d .link_d746aa1d .count_d746aa1d{margin-right:4px}.root_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d{font-weight:600}@media screen and (-ms-high-contrast: active){.root_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d{color:Highlight}}.root_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d::before{-webkit-box-sizing:border-box;box-sizing:border-box;border-bottom:2px solid " }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": "}@media screen and (-ms-high-contrast: active){.root_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d::before{border-bottom-color:Highlight}}.root_d746aa1d .link_d746aa1d.linkIsDisabled_d746aa1d{color:" }, { "theme": "neutralTertiary", "defaultValue": "#a6a6a6" }, { "rawString": "}.ms-Fabric--isFocusVisible .link_d746aa1d:focus{outline:1px solid " }, { "theme": "neutralSecondaryAlt", "defaultValue": "#767676" }, { "rawString": "}.link_d746aa1d.linkIsOverflow_d746aa1d{color:" }, { "theme": "neutralSecondary", "defaultValue": "#666666" }, { "rawString": "}.link_d746aa1d.linkIsOverflow_d746aa1d.linkIsSelected_d746aa1d{color:" }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": "}.link_d746aa1d.linkIsOverflow_d746aa1d:hover:not(.linkIsSelected_d746aa1d),.link_d746aa1d.linkIsOverflow_d746aa1d:focus:not(.linkIsSelected_d746aa1d){color:" }, { "theme": "neutralDark", "defaultValue": "#212121" }, { "rawString": "}.link_d746aa1d.linkIsOverflow_d746aa1d:active{color:" }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": "}.ellipsis_d746aa1d{font-size:15px;position:relative;top:0}.root_d746aa1d.rootIsLarge_d746aa1d .link_d746aa1d{font-size:17px}.root_d746aa1d.rootIsLarge_d746aa1d .link_d746aa1d.linkIsOverflow_d746aa1d::after{font-size:17px}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d{height:40px;line-height:40px;background-color:" }, { "theme": "neutralLighter", "defaultValue": "#f4f4f4" }, { "rawString": ";padding:0 10px;vertical-align:top}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d::-moz-focus-inner{border:0}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d{outline:transparent}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d{position:relative}.ms-Fabric--isFocusVisible .root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d:focus:after{content:'';position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none;border:1px solid " }, { "theme": "focusBorder", "defaultValue": "#000000" }, { "rawString": "}[dir='ltr'] .root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d{margin-right:0px}[dir='rtl'] .root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d{margin-left:0px}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d:hover:not(.linkIsSelected_d746aa1d):not(.linkIsOverflow_d746aa1d),.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d:focus:not(.linkIsSelected_d746aa1d):not(.linkIsOverflow_d746aa1d){color:" }, { "theme": "black", "defaultValue": "#000000" }, { "rawString": ";z-index:1}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d:active{color:" }, { "theme": "white", "defaultValue": "#ffffff" }, { "rawString": ";background-color:" }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": "}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d{background-color:" }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": ";color:" }, { "theme": "white", "defaultValue": "#ffffff" }, { "rawString": ";font-weight:300}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d::before{background-color:transparent;-webkit-transition:none;transition:none;position:absolute;top:0;left:0;right:0;bottom:0;content:'';height:auto}@media screen and (-ms-high-contrast: active){.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d{color:HighlightText;background:Highlight;-ms-high-contrast-adjust:none}}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsOverflow_d746aa1d:hover:not(.linkIsSelected_d746aa1d),.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsOverflow_d746aa1d:focus:not(.linkIsSelected_d746aa1d){background-color:" }, { "theme": "white", "defaultValue": "#ffffff" }, { "rawString": "}.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsOverflow_d746aa1d:active{background-color:" }, { "theme": "themePrimary", "defaultValue": "#0078d4" }, { "rawString": "}.ms-Fabric--isFocusVisible .root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d:focus:before{height:auto;background:transparent;-webkit-transition:none;transition:none}@media screen and (-ms-high-contrast: active){.root_d746aa1d.rootIsTabs_d746aa1d .link_d746aa1d.linkIsSelected_d746aa1d{font-weight:600}}\n" }]);
var root = "root_d746aa1d";
var links = "links_d746aa1d";
var link = "link_d746aa1d";
var text = "text_d746aa1d";
var count = "count_d746aa1d";
var icon = "icon_d746aa1d";
var linkIsSelected = "linkIsSelected_d746aa1d";
var linkIsDisabled = "linkIsDisabled_d746aa1d";
var linkIsOverflow = "linkIsOverflow_d746aa1d";
var ellipsis = "ellipsis_d746aa1d";
var rootIsLarge = "rootIsLarge_d746aa1d";
var rootIsTabs = "rootIsTabs_d746aa1d";


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/Pivot.styles.js
module.exports = __webpack_require__(300);

/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);

var getStyles = function (props) {
    var className = props.className, theme = props.theme;
    var palette = theme.palette;
    return ({
        root: [
            'ms-Pivot',
            __WEBPACK_IMPORTED_MODULE_0__Styling__["normalize"],
            {
                fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
                fontWeight: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontWeights"].regular,
                position: 'relative',
                color: palette.themePrimary,
                whiteSpace: 'nowrap',
            },
            className
        ],
        links: [
            'ms-Pivot-links',
            {}
        ],
        link: [
            'ms-Pivot-link',
            {}
        ],
        text: [
            'ms-Pivot-text',
            {}
        ],
        count: [
            'ms-Pivot-count',
            {}
        ],
        icon: [
            'ms-Pivot-icon',
            {}
        ],
        ellipsis: [
            'ms-Pivot-ellipsis',
            {}
        ],
    });
};


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Pivot/PivotItem.js
module.exports = __webpack_require__(113);

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(303);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".serializedWebPartItem_1892135d{margin:20px 0}", ""]);

// exports


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(305);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".container_a2e64628{min-width:90vw!important}.content_a2e64628{height:70vh}.pivotItem_a2e64628{overflow-y:scroll;height:66vh}.learnMoreLink_a2e64628{position:absolute;margin-top:20px!important;z-index:1}.serializedTextArea_a2e64628{font-family:monospace}", ""]);

// exports


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(307);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".workbench_f801a7e9{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:#333;font-family:\"Segoe UI Web (West European)\",Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;font-size:14px;position:absolute;top:0;right:0;bottom:0;left:0;overflow-x:hidden}.workbench_f801a7e9 button,.workbench_f801a7e9 input,.workbench_f801a7e9 textarea{font-family:inherit}.header_f801a7e9{background:#000;height:50px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.headerMenu_f801a7e9{background-color:#0075c7;font-size:30px;height:50px;left:0;text-align:center;width:50px}.headerMenu_f801a7e9,.headerTitle_f801a7e9{color:#fff;line-height:50px;position:absolute;top:0}.headerTitle_f801a7e9{font-size:21px;font-weight:100;left:66px}.headerTitle_f801a7e9 em{border-right:1px solid #666;font-style:normal;margin-right:12px;padding-right:20px}.headerPerson_f801a7e9{background-color:#a6a6a6;border-left:5px solid #b6cfd8;color:#fff;font-size:48px;height:50px;line-height:50px;position:absolute;right:0;text-align:center;width:50px}.pageContent_f801a7e9{border:1px solid #e5e5e5;border-bottom:0;bottom:0;margin:0 auto;max-width:924px;position:absolute;top:106px}[dir=ltr] .pageContent_f801a7e9{transition:right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:right 367ms cubic-bezier(.1,.9,.2,1)}[dir=rtl] .pageContent_f801a7e9{transition:left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:left 367ms cubic-bezier(.1,.9,.2,1)}[dir=ltr] .pageContent_f801a7e9{left:16px}[dir=ltr] .pageContent_f801a7e9,[dir=rtl] .pageContent_f801a7e9{right:16px}[dir=rtl] .pageContent_f801a7e9{left:16px}[dir=ltr] .commandBar_f801a7e9{transition:padding-right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-right 367ms cubic-bezier(.1,.9,.2,1)}[dir=rtl] .commandBar_f801a7e9{transition:padding-left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-left 367ms cubic-bezier(.1,.9,.2,1)}[dir=ltr] .commandBar_f801a7e9{padding-right:0}[dir=rtl] .commandBar_f801a7e9{padding-left:0}", ""]);

// exports


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(309);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(4)(false);
// imports


// module
exports.push([module.i, ".SPPageChromeNoFlexbox-app{top:0!important;height:100%!important}", ""]);

// exports


/***/ }),
/* 310 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_310__;

/***/ })
/******/ ])});;
//# sourceMappingURL=sp-webpart-workbench.js.map