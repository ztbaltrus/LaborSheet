import { ServiceKey } from '@microsoft/sp-core-library';
import { fetchProviderServiceKey } from './FetchProvider';
import { predefinedConfigurations } from './HttpClientConfiguration';
import HttpClientResponse from './HttpClientResponse';
import HttpClientHelper from './HttpClientHelper';
var HttpClient = (function () {
    function HttpClient(serviceScope) {
        var _this = this;
        this._serviceScope = serviceScope;
        serviceScope.whenFinished(function () {
            _this._fetchProvider = serviceScope.consume(fetchProviderServiceKey);
        });
    }
    HttpClient.prototype.fetch = function (url, configuration, options) {
        return HttpClientHelper.fetchCore(configuration, new Request(url, options), this._serviceScope, this._fetchProvider, HttpClient._className).then(function (response) {
            return new HttpClientResponse(response);
        });
    };
    HttpClient.prototype.get = function (url, configuration, options) {
        return this.fetch(url, configuration, HttpClientHelper.overrideHttpMethod(options, 'GET'));
    };
    HttpClient.prototype.post = function (url, configuration, options) {
        return this.fetch(url, configuration, HttpClientHelper.overrideHttpMethod(options, 'POST'));
    };
    HttpClient.configurations = predefinedConfigurations;
    HttpClient.serviceKey = ServiceKey.create('sp-http:HttpClient', HttpClient);
    HttpClient._className = 'HttpClient';
    return HttpClient;
}());
export default HttpClient;
