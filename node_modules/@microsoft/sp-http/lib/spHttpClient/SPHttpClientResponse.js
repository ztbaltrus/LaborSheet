import * as tslib_1 from "tslib";
import { Guid } from '@microsoft/sp-core-library';
import HttpClientResponse from '../httpClient/HttpClientResponse';
var SPHttpClientResponse = (function (_super) {
    tslib_1.__extends(SPHttpClientResponse, _super);
    function SPHttpClientResponse(response) {
        return _super.call(this, response) || this;
    }
    SPHttpClientResponse.prototype.clone = function () {
        return new SPHttpClientResponse(this.nativeResponse.clone());
    };
    Object.defineProperty(SPHttpClientResponse.prototype, "correlationId", {
        get: function () {
            if (!this._correlationId) {
                this._correlationId = Guid.tryParse(this.headers.get("SPRequestGuid" ));
            }
            return this._correlationId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientResponse.prototype, "statusMessage", {
        get: function () {
            var correlationId = this.headers.get('sprequestguid') || '';
            var spVersion = this.headers.get('microsoftsharepointteamservices') || '';
            return "[HTTP]:" + this.status + " - " + this.statusText + " [CorrelationId]:" + correlationId + " [Version]:" + spVersion;
        },
        enumerable: true,
        configurable: true
    });
    return SPHttpClientResponse;
}(HttpClientResponse));
export default SPHttpClientResponse;
