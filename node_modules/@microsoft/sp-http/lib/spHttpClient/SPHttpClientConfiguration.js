import * as tslib_1 from "tslib";
import SPHttpClientCommonConfiguration from './SPHttpClientCommonConfiguration';
import ODataVersion from './ODataVersion';
import HttpClient from '../httpClient/HttpClient';
var SPHttpClientConfiguration = (function (_super) {
    tslib_1.__extends(SPHttpClientConfiguration, _super);
    function SPHttpClientConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientConfiguration(this.flags, sourceFlags);
    };
    Object.defineProperty(SPHttpClientConfiguration.prototype, "defaultSameOriginCredentials", {
        get: function () {
            return this.flags.defaultSameOriginCredentials;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientConfiguration.prototype, "defaultODataVersion", {
        get: function () {
            return this.flags.defaultODataVersion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientConfiguration.prototype, "requestDigest", {
        get: function () {
            return this.flags.requestDigest;
        },
        enumerable: true,
        configurable: true
    });
    SPHttpClientConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
        this.flags.defaultSameOriginCredentials = false;
        this.flags.defaultODataVersion = ODataVersion.v3;
        this.flags.requestDigest = false;
    };
    return SPHttpClientConfiguration;
}(SPHttpClientCommonConfiguration));
export default SPHttpClientConfiguration;
export var predefinedConfigurations = {
    v1: new SPHttpClientConfiguration(HttpClient.configurations.v1, {
        jsonRequest: true,
        jsonResponse: true,
        defaultSameOriginCredentials: true,
        defaultODataVersion: ODataVersion.v4,
        requestDigest: true
    })
};
