var BatchedRequest = (function () {
    function BatchedRequest(request) {
        var _this = this;
        this.response = undefined;
        this.request = request;
        this.promise = new Promise(
        function (resolve, reject) {
            _this._resolveCallback = resolve;
            _this._rejectCallback = reject;
        });
    }
    BatchedRequest.prototype.resolvePromise = function (response) {
        if (!this._resolveCallback) {
            throw new Error('The promise was already settled');
        }
        this.response = response;
        this._resolveCallback(response);
        this._resolveCallback = undefined;
        this._rejectCallback = undefined;
    };
    BatchedRequest.prototype.rejectPromiseIfNotResolved = function (error) {
        if (this.response) {
            return;
        }
        if (!this._rejectCallback) {
            throw new Error('The promise was already settled');
        }
        this._rejectCallback(error);
        this._resolveCallback = undefined;
        this._rejectCallback = undefined;
    };
    return BatchedRequest;
}());
export default BatchedRequest;
