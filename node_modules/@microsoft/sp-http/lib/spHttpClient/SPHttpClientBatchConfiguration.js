import * as tslib_1 from "tslib";
import SPHttpClientCommonConfiguration from './SPHttpClientCommonConfiguration';
import HttpClient from '../httpClient/HttpClient';
var SPHttpClientBatchConfiguration = (function (_super) {
    tslib_1.__extends(SPHttpClientBatchConfiguration, _super);
    function SPHttpClientBatchConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientBatchConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientBatchConfiguration(this.flags, sourceFlags);
    };
    SPHttpClientBatchConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
    };
    return SPHttpClientBatchConfiguration;
}(SPHttpClientCommonConfiguration));
export default SPHttpClientBatchConfiguration;
export var predefinedConfigurations = {
    v1: new SPHttpClientBatchConfiguration(HttpClient.configurations.v1, {
        jsonRequest: true,
        jsonResponse: true
    })
};
