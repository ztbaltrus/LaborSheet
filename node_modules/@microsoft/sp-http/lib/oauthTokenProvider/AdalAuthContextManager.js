import AdalAuthContext from './AdalAuthContext';
import { UrlUtilities } from '@microsoft/sp-core-library';
var AdalAuthContextManager = (function () {
    function AdalAuthContextManager() {
        this._loadAdalJsModulePromise = undefined;
        this._authContextDictionary = new Map();
    }
    AdalAuthContextManager.convertTokenParametersToConfig = function (tokenProviderParameters) {
        return {
            clientId: tokenProviderParameters.servicePrincipalId,
            redirectUri: tokenProviderParameters.redirectUri,
            instance: UrlUtilities.removeEndSlash(tokenProviderParameters.aadInstanceUrl) + '/',
            tenant: tokenProviderParameters.aadTenantId,
            navigateToLoginRequestUrl: false
        };
    };
    AdalAuthContextManager.prototype.getAuthContext = function (tokenProviderConfiguration) {
        var _this = this;
        if (!this._loadAdalJsModulePromise) {
            this._loadAdalJsModulePromise = this._loadAdalJs();
        }
        return this._loadAdalJsModulePromise.then(function (adalModule) {
            if (!_this._authContextDictionary.has(tokenProviderConfiguration.servicePrincipalId)) {
                var authContext = new AdalAuthContext(adalModule.inject(AdalAuthContextManager.convertTokenParametersToConfig(tokenProviderConfiguration)), tokenProviderConfiguration.aadUserId);
                _this._authContextDictionary.set(tokenProviderConfiguration.servicePrincipalId, authContext);
            }
            return Promise.resolve(_this._authContextDictionary.get(tokenProviderConfiguration.servicePrincipalId));
        });
    };
    AdalAuthContextManager.prototype._loadAdalJs = function () {
        return import( 'adal-angular');
    };
    return AdalAuthContextManager;
}());
export default AdalAuthContextManager;
