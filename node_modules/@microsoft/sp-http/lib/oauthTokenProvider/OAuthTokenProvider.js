import { OAuthUtility } from '@ms/sp-client-shared';
import OAuthUtilityContext from './OAuthUtilityContext';
import { ServiceKey, Validate } from '@microsoft/sp-core-library';
var OAuthTokenProvider = (function () {
    function OAuthTokenProvider(serviceScope) {
        this._tokenUtility = new OAuthUtility(new OAuthUtilityContext(serviceScope));
    }
    OAuthTokenProvider.prototype.getOAuthToken = function (resource, webUrl) {
        Validate.isNotNullOrUndefined(resource, 'resource');
        Validate.isNonemptyString(resource, 'resource');
        return this._tokenUtility.getOAuthToken(resource, webUrl);
    };
    OAuthTokenProvider.prototype.clearCachedToken = function (resource) {
        Validate.isNotNullOrUndefined(resource, 'resource');
        Validate.isNonemptyString(resource, 'resource');
        this._tokenUtility.clearCachedToken(resource);
    };
    OAuthTokenProvider.serviceKey = ServiceKey.create('sp-client-shared:OAuthTokenProvider', OAuthTokenProvider);
    return OAuthTokenProvider;
}());
export default OAuthTokenProvider;
