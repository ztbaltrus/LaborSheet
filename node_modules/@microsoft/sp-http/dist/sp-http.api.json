{
  "kind": "package",
  "name": "@microsoft/sp-http",
  "summary": [
    {
      "kind": "text",
      "text": "Base communication layer for the SharePoint Framework"
    }
  ],
  "remarks": [
    {
      "kind": "text",
      "text": "This package defines the base communication layer for the SharePoint Framework. For REST calls, it handles authentication, logging, diagnostics, and batching. It also simplifies requests by adding default headers that follow the recommended best practices."
    }
  ],
  "exports": {
    "AadHttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "AadHttpClient is used to perform REST calls against an Azure AD Application."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "For communicating with SharePoint, use the "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "SPHttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "SPHttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": " class instead. For communicating with Microsoft Graph, use the "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "MSGraphClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "MSGraphClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": " class."
        }
      ],
      "isBeta": false,
      "isSealed": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope, resourceEndpoint: string, options?: IAadHttpClientOptions);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [
                {
                  "kind": "text",
                  "text": "The service scope is needed to retrieve some of the class's internal components."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            },
            "resourceEndpoint": {
              "name": "resourceEndpoint",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "Configuration options for the request to get an access token."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "IAadHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "AadHttpClient"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "AadHttpClient",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "configurations": {
          "kind": "property",
          "signature": "static readonly configurations: IAadHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "IAadHttpClientConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The standard predefined AadHttpClientConfiguration objects for use with the AadHttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fetch": {
          "kind": "method",
          "signature": "fetch(url: string, configuration: AadHttpClientConfiguration, options: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise that will return the result."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "The endpoint URL that fetch will be called on."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "Determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "AadHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "Additional options that affect the request."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Performs a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Although the AadHttpClient subclass adds additional enhancements, the parameters and semantics for HttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "get": {
          "kind": "method",
          "signature": "get(url: string, configuration: AadHttpClientConfiguration, options?: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise that will return the result."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "The endpoint URL that fetch will be called on."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "Determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "AadHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "Additional options that affect the request."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "post": {
          "kind": "method",
          "signature": "post(url: string, configuration: AadHttpClientConfiguration, options: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise that will return the result."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "The endpoint URL that fetch will be called on."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "Determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "AadHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "Additional options that affect the request."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "AadHttpClientConfiguration": {
      "kind": "class",
      "extends": "HttpClientConfiguration",
      "implements": "IAadHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Configuration for HttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The HttpClientConfiguration object provides a set of switches for enabling/disabling various features of the HttpClient class. Normally these switches are set (e.g. when calling HttpClient.fetch()) by providing one of the predefined defaults from HttpClientConfigurations, however switches can also be changed via the HttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: IAadHttpClientConfiguration, overrideFlags?: IAadHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IAadHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IAadHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of HttpClientConfiguration with the specified flags. The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ],
          "remarks": []
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: IAadHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IAadHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "overrideWith": {
          "kind": "method",
          "signature": "overrideWith(sourceFlags: IAadHttpClientConfiguration): AadHttpClientConfiguration;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "AadHttpClientConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IAadHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        }
      }
    },
    "AadHttpClientFactory": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Returns a preinitialized version of the AadHttpClient for a given resource url. For more information: "
        },
        {
          "kind": "web-link",
          "elements": [
            {
              "kind": "text",
              "text": "https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient"
            }
          ],
          "targetUrl": "https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient"
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the AadHttpClientFactory class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "getClient": {
          "kind": "method",
          "signature": "getClient(resourceEndpoint: string): Promise<AadHttpClient>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<AadHttpClient>",
            "description": []
          },
          "parameters": {
            "resourceEndpoint": {
              "name": "resourceEndpoint",
              "description": [
                {
                  "kind": "text",
                  "text": "The target AAD application's resource endpoint."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns an instance of the AadHttpClient that communicates with the current tenant's configurable Service Principal."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "AadTokenProvider": {
      "kind": "class",
      "extends": "",
      "implements": "IAadTokenProvider",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This class allows a developer to obtain OAuth2 tokens from Azure AD."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "OAuth2 tokens are used to authenticate the user from the SharePoint page to other services such as PowerBI, Sway, Exchange, Yammer, etc."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the AadTokenProvider class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": false,
      "isSealed": true,
      "members": {
        "getToken": {
          "kind": "method",
          "signature": "getToken(resourceEndpoint: string): Promise<string>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<string>",
            "description": [
              {
                "kind": "text",
                "text": "A promise that will be fullfiled with the token or that will reject with an error message"
              }
            ]
          },
          "parameters": {
            "resourceEndpoint": {
              "name": "resourceEndpoint",
              "description": [
                {
                  "kind": "text",
                  "text": "the resource for which the token should be obtained An example of a resourceEndpoint would be https://graph.microsoft.com"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Fetches the AAD OAuth2 token for a resource if the user that's currently logged in has access to that resource."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The OAuth2 token should not be cached by the caller since it is already cached by the method itself."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "tokenAcquisitionEvent": {
          "kind": "property",
          "signature": "readonly tokenAcquisitionEvent: SPEvent<TokenAcquisitionEventArgs>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPEvent<TokenAcquisitionEventArgs>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Notifies the developer when Token Acquisition requires user action."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": true
        }
      }
    },
    "AadTokenProviderFactory": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Returns a preinitialized version of the AadTokenProviderFactory."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "getTokenProvider": {
          "kind": "method",
          "signature": "getTokenProvider(): Promise<AadTokenProvider>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<AadTokenProvider>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns an instance of the AadTokenProvider that communicates with the current tenant's configurable Service Principal."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "DigestCache": {
      "kind": "class",
      "extends": "",
      "implements": "IDigestCache",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "IDigestCache is an internal service used by SPHttpClient to maintain a cache of request digests for each SPWeb URL. A request digest is a security token that the SharePoint server requires for for any REST write operation, specified via the \"X-RequestDigest\" HTTP header. It is obtained by calling the \"/_api/contextinfo\" REST endpoint, and expires after a server configurable amount of time."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "For more information, see the MSDN article "
        },
        {
          "kind": "web-link",
          "elements": [
            {
              "kind": "text",
              "text": "\"Complete basic operations using SharePoint 2013 REST endpoints\""
            }
          ],
          "targetUrl": "https://msdn.microsoft.com/en-us/library/office/jj164022.aspx"
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "DigestCache"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "DigestCache",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "addDigestToCache": {
          "kind": "method",
          "signature": "addDigestToCache(webUrl: string, digestValue: string, expirationTimestamp: number): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "webUrl": {
              "name": "webUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the SPWeb that the API call will be issued to. This may be a server-relative or absolute URL."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "digestValue": {
              "name": "digestValue",
              "description": [
                {
                  "kind": "text",
                  "text": "The digest value, which is an opaque that must be generated by the SharePoint server. The syntax will look something like this: \"0x0B85...2EAC,29 Jan 2016 01:23:45 -0000\""
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "expirationTimestamp": {
              "name": "expirationTimestamp",
              "description": [
                {
                  "kind": "text",
                  "text": "A future point in time, as measured by performance.now(), after which the digest value will no longer be valid. NOTE: The expirationTime is a DOMHighResTimeStamp value whose units are fractional milliseconds; for example, to specify an expiration \"5 seconds from right now\", use performance.now()+5000."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "number"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Inserts a specific request digest value into the cache. Normally this is unnecessary because the framework will automatically issue a REST request to fetch the digest when necessary; however, in advanced scenarios addDigestToCache() can be used to avoid the overhead of the REST call."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "clearAllDigests": {
          "kind": "method",
          "signature": "clearAllDigests(): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Clears all values from the cache."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "clearDigest": {
          "kind": "method",
          "signature": "clearDigest(webUrl: string): boolean;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "boolean",
            "description": [
              {
                "kind": "text",
                "text": "Returns true if a cache entry was found and deleted; false otherwise."
              }
            ]
          },
          "parameters": {
            "webUrl": {
              "name": "webUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the SPWeb whose digest should be cleared. This may be a server-relative or absolute URL."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Clears the cached digest for the specified SPWeb URL. This operation is useful e.g. if an error indicates that a digest was invalidated prior to its expiration time."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "fetchDigest": {
          "kind": "method",
          "signature": "fetchDigest(webUrl: string): Promise<string>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<string>",
            "description": [
              {
                "kind": "text",
                "text": "A promise that is fulfilled with the digest value."
              }
            ]
          },
          "parameters": {
            "webUrl": {
              "name": "webUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the SPWeb that the API call will be issued to. This may be a server-relative or absolute URL."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns a digest string for the specified SPWeb URL. If the cache already contains a usable value, the promise is fulfilled immediately. Otherwise, the promise will be pending and resolve after an HTTP request obtains the digest, which will be added to the cache."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "serviceKey": {
          "kind": "property",
          "signature": "static readonly serviceKey: ServiceKey<IDigestCache>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "ServiceKey<IDigestCache>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The service key for IDigestCache."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "GraphHttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [
        {
          "kind": "text",
          "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
        }
      ],
      "summary": [
        {
          "kind": "text",
          "text": "GraphHttpClient is used to perform REST calls against Microsoft Graph. It adds default headers and collects telemetry that helps the service to monitor the performance of an application. https://developer.microsoft.com/en-us/graph/"
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "For communicating with SharePoint, use the "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "SPHttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "SPHttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": " class instead. For communicating with other internet services, use the "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "HttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "HttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": " class instead."
        }
      ],
      "isBeta": true,
      "isSealed": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "GraphHttpClient"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "GraphHttpClient",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "configurations": {
          "kind": "property",
          "signature": "static readonly configurations: IGraphHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "IGraphHttpClientConfigurations",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "The standard predefined GraphHttpClientConfiguration objects for use with the GraphHttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fetch": {
          "kind": "method",
          "signature": "fetch(url: string, configuration: GraphHttpClientConfiguration, options: IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<GraphHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "The url string should be relative to the graph server. Good: 'v1.0/me/events' Bad: '/v1.0/me/events', 'https://graph.microsoft.com/v1.0/me/events'"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of GraphHttpClient; normally this should be the latest version number from GraphHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IGraphHttpClientOptions"
            }
          },
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Perform a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Generally, the parameters and semantics for HttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The GraphHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead): - Default \"Accept\" and \"Content-Type\" headers are added if not explicitly specified."
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "get": {
          "kind": "method",
          "signature": "get(url: string, configuration: GraphHttpClientConfiguration, options?: IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<GraphHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of GraphHttpClient; normally this should be the latest version number from GraphHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "IGraphHttpClientOptions"
            }
          },
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "post": {
          "kind": "method",
          "signature": "post(url: string, configuration: GraphHttpClientConfiguration, options: IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<GraphHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of GraphHttpClient; normally this should be the latest version number from GraphHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IGraphHttpClientOptions"
            }
          },
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "serviceKey": {
          "kind": "property",
          "signature": "static readonly serviceKey: ServiceKey<GraphHttpClient>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "ServiceKey<GraphHttpClient>",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superseded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "The service key for GraphHttpClient."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "GraphHttpClientConfiguration": {
      "kind": "class",
      "extends": "HttpClientConfiguration",
      "implements": "IGraphHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [
        {
          "kind": "text",
          "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
        }
      ],
      "summary": [
        {
          "kind": "text",
          "text": "Configuration for "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "GraphHttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "GraphHttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": "."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The GraphHttpClientConfiguration object provides a set of switches for enabling/disabling various features of the GraphHttpClient class. Normally these switches are set (e.g. when calling GraphHttpClient.fetch()) by providing one of the predefined defaults from GraphHttpClientConfigurations, however switches can also be changed via the GraphHttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: IGraphHttpClientConfiguration, overrideFlags?: IGraphHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IGraphHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IGraphHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of GraphHttpClientCommonConfiguration with the specified flags."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ]
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: IGraphHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IGraphHttpClientConfiguration",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
            }
          ],
          "summary": [],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "GraphHttpClientResponse": {
      "kind": "class",
      "extends": "HttpClientResponse",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [
        {
          "kind": "text",
          "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
        }
      ],
      "summary": [
        {
          "kind": "text",
          "text": "The Response subclass returned by methods such as GraphHttpClient.fetch()."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This is a placeholder. In the future, additional GraphHttpClient-specific functionality may be added to this class."
        }
      ],
      "isBeta": true,
      "isSealed": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(response: Response);",
          "parameters": {
            "response": {
              "name": "response",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Response"
            }
          },
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "GraphHttpClientResponse"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "GraphHttpClientResponse",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "clone": {
          "kind": "method",
          "signature": "clone(): GraphHttpClientResponse;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphHttpClientResponse",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
            }
          ],
          "summary": [],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        },
        "correlationId": {
          "kind": "property",
          "signature": "readonly correlationId: Guid | undefined;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "Guid | undefined",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "Returns the Graph API correlation ID."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "GraphRequest": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Typings for the GraphRequest Object For more information: "
        },
        {
          "kind": "web-link",
          "elements": [
            {
              "kind": "text",
              "text": "https://github.com/microsoftgraph/msgraph-sdk-javascript"
            }
          ],
          "targetUrl": "https://github.com/microsoftgraph/msgraph-sdk-javascript"
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(config: Options, path: string);",
          "parameters": {
            "config": {
              "name": "config",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Options"
            },
            "path": {
              "name": "path",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "GraphRequest"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "GraphRequest",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "_headers": {
          "kind": "property",
          "signature": "_headers:",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\n        [key: string]: string | number;\n    }",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "_responseType": {
          "kind": "property",
          "signature": "_responseType: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buildFullUrl": {
          "kind": "method",
          "signature": "buildFullUrl(): string;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "config": {
          "kind": "property",
          "signature": "config: Options;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "Options",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "count": {
          "kind": "method",
          "signature": "count(count: boolean): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "count": {
              "name": "count",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "boolean"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "create": {
          "kind": "method",
          "signature": "create(content: any, callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "content": {
              "name": "content",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "any"
            },
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "del": {
          "kind": "method",
          "signature": "del(callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "delete": {
          "kind": "method",
          "signature": "delete(callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "expand": {
          "kind": "method",
          "signature": "expand(properties: string | string[]): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "properties": {
              "name": "properties",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string | string[]"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "filter": {
          "kind": "method",
          "signature": "filter(filterStr: string): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "filterStr": {
              "name": "filterStr",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "get": {
          "kind": "method",
          "signature": "get(callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "getStream": {
          "kind": "method",
          "signature": "getStream(callback: GraphRequestCallback): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "header": {
          "kind": "method",
          "signature": "header(headerKey: string, headerValue: string): this;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "this",
            "description": []
          },
          "parameters": {
            "headerKey": {
              "name": "headerKey",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "headerValue": {
              "name": "headerValue",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "headers": {
          "kind": "method",
          "signature": "headers(headers: {\n        [key: string]: string | number;\n    }): this;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "this",
            "description": []
          },
          "parameters": {
            "headers": {
              "name": "headers",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "{\n        [key: string]: string | number;\n    }"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "orderby": {
          "kind": "method",
          "signature": "orderby(properties: string | string[]): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "properties": {
              "name": "properties",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string | string[]"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "parsePath": {
          "kind": "method",
          "signature": "parsePath(rawPath: string): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "rawPath": {
              "name": "rawPath",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "patch": {
          "kind": "method",
          "signature": "patch(content: any, callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "content": {
              "name": "content",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "any"
            },
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "post": {
          "kind": "method",
          "signature": "post(content: any, callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "content": {
              "name": "content",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "any"
            },
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "put": {
          "kind": "method",
          "signature": "put(content: any, callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "content": {
              "name": "content",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "any"
            },
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "putStream": {
          "kind": "method",
          "signature": "putStream(stream: any, callback: GraphRequestCallback): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "stream": {
              "name": "stream",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "any"
            },
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "query": {
          "kind": "method",
          "signature": "query(queryDictionaryOrString: string | {\n        [key: string]: string | number;\n    }): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "queryDictionaryOrString": {
              "name": "queryDictionaryOrString",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string | {\n        [key: string]: string | number;\n    }"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "responseType": {
          "kind": "method",
          "signature": "responseType(responseType: string): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "responseType": {
              "name": "responseType",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "select": {
          "kind": "method",
          "signature": "select(properties: string | string[]): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "properties": {
              "name": "properties",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string | string[]"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "skip": {
          "kind": "method",
          "signature": "skip(n: number): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "n": {
              "name": "n",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "number"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "skipToken": {
          "kind": "method",
          "signature": "skipToken(token: string): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "token": {
              "name": "token",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "top": {
          "kind": "method",
          "signature": "top(n: number): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "n": {
              "name": "n",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "number"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "update": {
          "kind": "method",
          "signature": "update(content: any, callback?: GraphRequestCallback): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {
            "content": {
              "name": "content",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "any"
            },
            "callback": {
              "name": "callback",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "GraphRequestCallback"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "urlComponents": {
          "kind": "property",
          "signature": "urlComponents: URLComponents;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "URLComponents",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "version": {
          "kind": "method",
          "signature": "version(v: string): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "v": {
              "name": "v",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "HttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "HttpClient implements a basic set of features for performing REST operations against a generic service."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "For communicating with SharePoint, use the "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "SPHttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "SPHttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": " class instead."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "HttpClient"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "HttpClient",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "configurations": {
          "kind": "property",
          "signature": "static readonly configurations: IHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "IHttpClientConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The standard predefined HttpClientConfiguration objects for use with the HttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fetch": {
          "kind": "method",
          "signature": "fetch(url: string, configuration: HttpClientConfiguration, options: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "HttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Performs a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Although the SPHttpClient subclass adds additional enhancements, the parameters and semantics for HttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "get": {
          "kind": "method",
          "signature": "get(url: string, configuration: HttpClientConfiguration, options?: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "HttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "post": {
          "kind": "method",
          "signature": "post(url: string, configuration: HttpClientConfiguration, options: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "HttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "serviceKey": {
          "kind": "property",
          "signature": "static readonly serviceKey: ServiceKey<HttpClient>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "ServiceKey<HttpClient>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The service key for HttpClient."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "HttpClientConfiguration": {
      "kind": "class",
      "extends": "",
      "implements": "IHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Configuration for HttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The HttpClientConfiguration object provides a set of switches for enabling/disabling various features of the HttpClient class. Normally these switches are set (e.g. when calling HttpClient.fetch()) by providing one of the predefined defaults from HttpClientConfigurations, however switches can also be changed via the HttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: IHttpClientConfiguration, overrideFlags?: IHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of HttpClientConfiguration with the specified flags. The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ],
          "remarks": []
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: IHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Child classes should override this method to initialize the flags object."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": true,
          "isOverride": false
        },
        "overrideWith": {
          "kind": "method",
          "signature": "overrideWith(sourceFlags: IHttpClientConfiguration): HttpClientConfiguration;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "HttpClientConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Child classes should override this method to construct the child class type, rather than the base class type."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": true,
          "isOverride": false
        }
      }
    },
    "HttpClientResponse": {
      "kind": "class",
      "extends": "",
      "implements": "Response",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "The Response subclass returned by methods such as HttpClient.fetch()."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the HttpClientResponse class."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "This is a placeholder. In the future, additional HttpClient-specific functionality may be added to this class."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "arrayBuffer": {
          "kind": "method",
          "signature": "arrayBuffer(): Promise<ArrayBuffer>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<ArrayBuffer>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Body.arrayBuffer"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "blob": {
          "kind": "method",
          "signature": "blob(): Promise<Blob>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<Blob>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Body.blob"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "bodyUsed": {
          "kind": "property",
          "signature": "readonly bodyUsed: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Body.bodyUsed"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "clone": {
          "kind": "method",
          "signature": "clone(): HttpClientResponse;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "HttpClientResponse",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": true,
          "isOverride": false
        },
        "formData": {
          "kind": "method",
          "signature": "formData(): Promise<FormData>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<FormData>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Body.formData"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "headers": {
          "kind": "property",
          "signature": "readonly headers: Headers;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "Headers",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Response.headers"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "json": {
          "kind": "method",
          "signature": "json(): Promise<any>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Body.json"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "nativeResponse": {
          "kind": "property",
          "signature": "protected nativeResponse: Response;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "Response",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "ok": {
          "kind": "property",
          "signature": "readonly ok: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Response.ok"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "status": {
          "kind": "property",
          "signature": "readonly status: number;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "number",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Response.status"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "statusText": {
          "kind": "property",
          "signature": "readonly statusText: string;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Response.statusText"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "text": {
          "kind": "method",
          "signature": "text(): Promise<string>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<string>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Body.text"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "type": {
          "kind": "property",
          "signature": "readonly type: ResponseType;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ResponseType",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Response.type"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "url": {
          "kind": "property",
          "signature": "readonly url: string;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "See documentation for whatwg-fetch:Response.url"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IAadHttpClientConfiguration": {
      "kind": "interface",
      "extends": "IHttpClientConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Flags interface for HttpClientConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false
    },
    "IAadHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Standard configurations for AadHttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface provides standard predefined AadHttpClientConfiguration objects for use with the AadHttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "readonly v1: AadHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "AadHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This configuration turns off every feature switch for AadHttpClient. The fetch() behavior will be essentially identical to the WHATWG standard API that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IAadHttpClientOptions": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Interface for overriding the default behavior of AadHttpClient."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "configuration": {
          "kind": "property",
          "signature": "configuration?: IAadTokenProviderConfiguration;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IAadTokenProviderConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "tokenProvider": {
          "kind": "property",
          "signature": "tokenProvider?: IAadTokenProvider;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IAadTokenProvider",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IDigestCache": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "IDigestCache is an internal service used by SPHttpClient to maintain a cache of request digests for each SPWeb URL. A request digest is a security token that the SharePoint server requires for for any REST write operation, specified via the \"X-RequestDigest\" HTTP header. It is obtained by calling the \"/_api/contextinfo\" REST endpoint, and expires after a server configurable amount of time."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "For more information, see the MSDN article "
        },
        {
          "kind": "web-link",
          "elements": [
            {
              "kind": "text",
              "text": "\"Complete basic operations using SharePoint 2013 REST endpoints\""
            }
          ],
          "targetUrl": "https://msdn.microsoft.com/en-us/library/office/jj164022.aspx"
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "addDigestToCache": {
          "kind": "method",
          "signature": "addDigestToCache(webUrl: string, digestValue: string, expirationTimestamp: number): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "webUrl": {
              "name": "webUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the SPWeb that the API call will be issued to. This may be a server-relative or absolute URL."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "digestValue": {
              "name": "digestValue",
              "description": [
                {
                  "kind": "text",
                  "text": "The digest value, which is an opaque that must be generated by the SharePoint server. The syntax will look something like this: \"0x0B85...2EAC,29 Jan 2016 01:23:45 -0000\""
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "expirationTimestamp": {
              "name": "expirationTimestamp",
              "description": [
                {
                  "kind": "text",
                  "text": "A future point in time, as measured by performance.now(), after which the digest value will no longer be valid. NOTE: The expirationTime is a DOMHighResTimeStamp value whose units are fractional milliseconds; for example, to specify an expiration \"5 seconds from right now\", use performance.now()+5000."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "number"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Inserts a specific request digest value into the cache. Normally this is unnecessary because the framework will automatically issue a REST request to fetch the digest when necessary; however, in advanced scenarios addDigestToCache() can be used to avoid the overhead of the REST call."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "clearAllDigests": {
          "kind": "method",
          "signature": "clearAllDigests(): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Clears all values from the cache."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "clearDigest": {
          "kind": "method",
          "signature": "clearDigest(webUrl: string): boolean;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "boolean",
            "description": [
              {
                "kind": "text",
                "text": "Returns true if a cache entry was found and deleted; false otherwise."
              }
            ]
          },
          "parameters": {
            "webUrl": {
              "name": "webUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the SPWeb whose digest should be cleared. This may be a server-relative or absolute URL."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Clears the cached digest for the specified SPWeb URL. This operation is useful e.g. if an error indicates that a digest was invalidated prior to its expiration time."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "fetchDigest": {
          "kind": "method",
          "signature": "fetchDigest(webUrl: string): Promise<string>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<string>",
            "description": [
              {
                "kind": "text",
                "text": "A promise that is fulfilled with the digest value."
              }
            ]
          },
          "parameters": {
            "webUrl": {
              "name": "webUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL of the SPWeb that the API call will be issued to. This may be a server-relative or absolute URL."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns a digest string for the specified SPWeb URL. If the cache already contains a usable value, the promise is fulfilled immediately. Otherwise, the promise will be pending and resolve after an HTTP request obtains the digest, which will be added to the cache."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "IGraphHttpClientConfiguration": {
      "kind": "interface",
      "extends": "IHttpClientConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [
        {
          "kind": "text",
          "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
        }
      ],
      "summary": [
        {
          "kind": "text",
          "text": "Flags interface for GraphHttpClientCommonConfiguration"
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false
    },
    "IGraphHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [
        {
          "kind": "text",
          "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
        }
      ],
      "summary": [
        {
          "kind": "text",
          "text": "Standard configurations for GraphHttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface provides standard predefined GraphHttpClientConfiguration objects for use with the GraphHttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "readonly v1: GraphHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "GraphHttpClientConfiguration",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "The GraphHttpClient class has been superceded by the MSGraphClient class."
            }
          ],
          "summary": [
            {
              "kind": "text",
              "text": "This configuration turns off every feature switch for HttpClient. The fetch() behavior will be essentially identical to the WHATWG standard API that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IGraphHttpClientOptions": {
      "kind": "interface",
      "extends": "IHttpClientOptions",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Options for HttpClient"
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface defines the options for the GraphHttpClient operations such as get(), post(), fetch(), etc. It is based on the WHATWG API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "isBeta": true,
      "isSealed": false
    },
    "IHttpClientConfiguration": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Flags interface for HttpClientConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false
    },
    "IHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Standard configurations for HttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface provides standard predefined HttpClientConfiguration objects for use with the HttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "readonly v1: HttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "HttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This configuration turns off every feature switch for HttpClient. The fetch() behavior will be essentially identical to the WHATWG standard API that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IHttpClientOptions": {
      "kind": "interface",
      "extends": "RequestInit",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Options for HttpClient"
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface defines the options for the HttpClient operations such as get(), post(), fetch(), etc. It is based on the whatwg API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "isBeta": false,
      "isSealed": false
    },
    "ISPHttpClientBatchConfiguration": {
      "kind": "interface",
      "extends": "ISPHttpClientCommonConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Flags interface for SPHttpClientBatchConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false
    },
    "ISPHttpClientBatchConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Standard configurations for SPHttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface provides standard predefined SPHttpClientBatchConfiguration objects for use with the SPHttpClientBatch class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "readonly v1: SPHttpClientBatchConfiguration;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPHttpClientBatchConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Version 1 enables these switches: consoleLogging = true; jsonRequest = true; jsonResponse = true"
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISPHttpClientBatchCreationOptions": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This interface is passed to the SPHttpClientBatch constructor. It specifies options that affect the entire batch."
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "webUrl": {
          "kind": "property",
          "signature": "webUrl?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "SPHttpClientBatch will need to perform its POST to an endpoint such as \"http://example.com/sites/sample/_api/$batch\". Typically the SPWeb URL (\"https://example.com/sites/sample\" in this example) can be guessed by looking for a reserved URL segment such as \"_api\" in the first URL passed to fetch(), but if not, the webUrl can be explicitly specified using this option."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISPHttpClientBatchOptions": {
      "kind": "interface",
      "extends": "IHttpClientOptions",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This interface defines the options for an individual REST request that is part of an SPHttpClientBatch. It is based on the WHATWG API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "remarks": [],
      "isBeta": true,
      "isSealed": false
    },
    "ISPHttpClientCommonConfiguration": {
      "kind": "interface",
      "extends": "IHttpClientConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Flags interface for SPHttpClientCommonConfiguration"
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "jsonRequest": {
          "kind": "property",
          "signature": "jsonRequest?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the \"Content-Type\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the \"Content-Type\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\")."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 3.0, the value is 'application/json;odata=verbose;charset=utf-8'."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 4.0, the value is 'application/json;charset=utf-8'."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "jsonResponse": {
          "kind": "property",
          "signature": "jsonResponse?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the \"Accept\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the \"Accept\" header was not explicitly added for the request, then SPHttpClient will add it."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 3.0, the value is 'application/json'."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 4.0, the value is 'application/json;odata.metadata=minimal'."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISPHttpClientConfiguration": {
      "kind": "interface",
      "extends": "ISPHttpClientCommonConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Flags interface for SPHttpClientConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "defaultODataVersion": {
          "kind": "property",
          "signature": "defaultODataVersion?: ODataVersion;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the \"OData-Version\" header."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is specified (i.e. not undefined): If the \"OData-Version\" header was not explicitly added for the request, then SPHttpClient will add the header to specify the version indicated by defaultODataVersion."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "NOTE: Without an 'OData-Version' header, the SharePoint server currently defaults to Version 3.0 in most cases. The recommended version is 4.0."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "defaultSameOriginCredentials": {
          "kind": "property",
          "signature": "defaultSameOriginCredentials?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the RequestInit.credentials."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If RequestInit.credentials is not explicitly specified for the request, then SPHttpClient will assign it to be \"same-origin\". Without this switch, different web browsers may apply different defaults."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For more information, see the spec: https://fetch.spec.whatwg.org/#cors-protocol-and-credentials"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "requestDigest": {
          "kind": "property",
          "signature": "requestDigest?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically provide an \"X-RequestDigest\" header for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the \"X-RequestDigest\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\"). The request digest is managed by the DigestCache service. In the case of a cache miss, an additional network request may be performed."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISPHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Standard configurations for SPHttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This interface provides standard predefined SPHttpClientConfiguration objects for use with the SPHttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "readonly v1: SPHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Version 1 enables these switches:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "consoleLogging = true; jsonRequest = true; jsonResponse = true; defaultSameOriginCredentials = true; defaultODataVersion = ODataVersion.v4; requestDigest = true"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISPHttpClientOptions": {
      "kind": "interface",
      "extends": "IHttpClientOptions",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This interface defines the options for the SPHttpClient operations such as get(), post(), fetch(), etc. It is based on the WHATWG API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "webUrl": {
          "kind": "property",
          "signature": "webUrl?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Configure the SPWeb URL for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "For a write operation, SPHttpClient will automatically add the \"X-RequestDigest\" header, which may need to be fetched using a seperate request such as \"https://example.com/sites/sample/_api/contextinfo\". Typically the SPWeb URL (\"https://example.com/sites/sample\" in this example) can be guessed by looking for a reserved URL segment such as \"_api\" in the original REST query, however certain REST endpoints do not contain a reserved URL segment; in this case, the webUrl can be explicitly specified using this option."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "MSGraphClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "MSGraphClient is used to perform REST calls against Microsoft Graph."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the MSGraphClient class."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "The Microsoft Graph JavaScript client library is a lightweight wrapper around the Microsoft Graph API. This class allows developers to start making REST calls to MSGraph without needing to initialize the the MSGraph client library. If a custom configuration is desired, the MSGraphClient api function needs to be provided with that custom configuration for every request."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "For more information: "
        },
        {
          "kind": "web-link",
          "elements": [
            {
              "kind": "text",
              "text": "https://github.com/microsoftgraph/msgraph-sdk-javascript"
            }
          ],
          "targetUrl": "https://github.com/microsoftgraph/msgraph-sdk-javascript"
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "api": {
          "kind": "method",
          "signature": "api(path: string, config?: Options): GraphRequest;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphRequest",
            "description": []
          },
          "parameters": {
            "path": {
              "name": "path",
              "description": [
                {
                  "kind": "text",
                  "text": "The path for the request to MSGraph."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "config": {
              "name": "config",
              "description": [
                {
                  "kind": "text",
                  "text": "Sets the configuration for this request."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "Options"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "All calls to Microsoft Graph are chained together starting with the api function."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Path supports the following formats: * me * /me * https://graph.microsoft.com/v1.0/me * https://graph.microsoft.com/beta/me * me/events?$filter=startswith(subject, 'ship')"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The authProvider and baseUrl option should not be used, as they have already been provided by the framework. See the official documentation here: https://github.com/microsoftgraph/msgraph-sdk-javascript"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "MSGraphClientFactory": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Returns a preinitialized version of the MSGraphClient. For more information: "
        },
        {
          "kind": "web-link",
          "elements": [
            {
              "kind": "text",
              "text": "https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-msgraph"
            }
          ],
          "targetUrl": "https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-msgraph"
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the MSGraphClientFactory class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "getClient": {
          "kind": "method",
          "signature": "getClient(): Promise<MSGraphClient>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<MSGraphClient>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns an instance of the MSGraphClient that communicates with the current tenant's configurable Service Principal."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "ODataVersion": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Represents supported version of the \"OData-Version\" header, which is part of the Open Data Protocol standard."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "toString": {
          "kind": "method",
          "signature": "toString(): string;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns the \"OData-Version\" value, for example \"4.0\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "tryParseFromHeaders": {
          "kind": "method",
          "signature": "static tryParseFromHeaders(headers: Headers): ODataVersion | undefined;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": true,
          "returnValue": {
            "type": "ODataVersion | undefined",
            "description": []
          },
          "parameters": {
            "headers": {
              "name": "headers",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Headers"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Attempt to parse the \"OData-Version\" header."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "If the \"OData-Version\" header is present, this returns the corresponding ODataVersion constant. An error is thrown if the version number is not supported. If the header is missing, then undefined is returned."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "v3": {
          "kind": "property",
          "signature": "static v3: ODataVersion;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents version 3.0 for the \"OData-Version\" header"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "v4": {
          "kind": "property",
          "signature": "static v4: ODataVersion;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Represents version 4.0 for the \"OData-Version\" header"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "SPHttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "SPHttpClient is used to perform REST calls against SharePoint. It adds default headers, manages the digest needed for writes, and collects telemetry that helps the service to monitor the performance of an application."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "For communicating with other internet services, use the "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "HttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "HttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": " class."
        }
      ],
      "isBeta": false,
      "isSealed": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "SPHttpClient"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "SPHttpClient",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "beginBatch": {
          "kind": "method",
          "signature": "beginBatch(batchCreationOptions?: ISPHttpClientBatchCreationOptions): SPHttpClientBatch;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientBatch",
            "description": [
              {
                "kind": "text",
                "text": "An "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "SPHttpClientBatch"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "SPHttpClientBatch",
                  "memberName": ""
                }
              },
              {
                "kind": "text",
                "text": " object used to manage the batch operation."
              }
            ]
          },
          "parameters": {
            "batchCreationOptions": {
              "name": "batchCreationOptions",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientBatchCreationOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Begins an ODATA batch, which allows multiple REST queries to be bundled into a single web request."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "configurations": {
          "kind": "property",
          "signature": "static readonly configurations: ISPHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "ISPHttpClientConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The standard predefined SPHttpClientConfiguration objects for use with the SPHttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fetch": {
          "kind": "method",
          "signature": "fetch(url: string, configuration: SPHttpClientConfiguration, options: ISPHttpClientOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Perform a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Generally, the parameters and semantics for SPHttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "The SPHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead):"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- Default \"Accept\" and \"Content-Type\" headers are added if not explicitly specified."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- For write operations, an \"X-RequestDigest\" header is automatically added"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "- The request digest token is automatically fetched and stored in a cache, with support for preloading"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For a write operation, SPHttpClient will automatically add the \"X-RequestDigest\" header, which may need to be obtained by issuing a seperate request such as \"https://example.com/sites/sample/_api/contextinfo\". Typically the appropriate SPWeb URL can be guessed by looking for a reserved URL segment such as \"_api\" in the original URL passed to fetch(); if not, use ISPHttpClientOptions.webUrl to specify it explicitly."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "get": {
          "kind": "method",
          "signature": "get(url: string, configuration: SPHttpClientConfiguration, options?: ISPHttpClientOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "getWebUrlFromRequestUrl": {
          "kind": "method",
          "signature": "static getWebUrlFromRequestUrl(requestUrl: string): string;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": true,
          "returnValue": {
            "type": "string",
            "description": [
              {
                "kind": "text",
                "text": "the inferred SPWeb URL"
              }
            ]
          },
          "parameters": {
            "requestUrl": {
              "name": "requestUrl",
              "description": [
                {
                  "kind": "text",
                  "text": "The URL for a SharePoint REST service"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Use a heuristic to infer the base URL for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Attempts to infer the SPWeb URL associated with the provided REST URL, by looking for common SharePoint path components such as \"_api\", \"_layouts\", or \"_vit_bin\". This is necessary for operations such as the X-RequestDigest and ODATA batching, which require POSTing to a separate REST endpoint in order to complete a request."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For example, if the requestUrl is \"/sites/site/web/_api/service\", the returned URL would be \"/sites/site/web\". Or if the requestUrl is \"http://example.com/_layouts/service\", the returned URL would be \"http://example.com\"."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the URL cannot be determined, an exception is thrown."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "post": {
          "kind": "method",
          "signature": "post(url: string, configuration: SPHttpClientConfiguration, options: ISPHttpClientOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "serviceKey": {
          "kind": "property",
          "signature": "static readonly serviceKey: ServiceKey<SPHttpClient>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "ServiceKey<SPHttpClient>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The service key for SPHttpClient."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "SPHttpClientBatch": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "The SPHttpClientBatch class accumulates a number of REST service calls and transmits them as a single ODATA batch. This protocol is documented here: http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "The usage is to call SPHttpClientBatch.fetch() to queue each individual request, and then call SPHttpClientBatch.execute() to execute the batch operation. The execute() method returns a promise that resolves when the real REST call has completed. Each call to fetch() also returns a promise that will resolve with an SPHttpClientResponse object for that particular request."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the SPHttpClientBatch class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "configurations": {
          "kind": "property",
          "signature": "static readonly configurations: ISPHttpClientBatchConfigurations;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": true,
          "type": "ISPHttpClientBatchConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The standard predefined SPHttpClientBatchConfigurations objects for use with the SPHttpClientBatch class."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "execute": {
          "kind": "method",
          "signature": "execute(): Promise<SPHttpClientBatch>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientBatch>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Executes the batched queries that were queued using SPHttpClientBatch.fetch()."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "fetch": {
          "kind": "method",
          "signature": "fetch(url: string, configuration: SPHttpClientBatchConfiguration, options?: ISPHttpClientBatchOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of this request; normally this should be the latest version number from SPHttpClientBatchConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientBatchConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientBatchOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Queues a new request, and returns a promise that can be used to access the server response (after execute() has completed)."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The parameters for this function are basically the same as the WHATWG API standard documented here:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "web-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "https://fetch.spec.whatwg.org/"
                }
              ],
              "targetUrl": "https://fetch.spec.whatwg.org/"
            },
            {
              "kind": "text",
              "text": "However, be aware that certain REST headers are ignored or not allowed inside a batch. See the ODATA documentation for details."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "When execute() is called, it will POST to a URL such as \"http://example.com/sites/sample/_api/$batch\". Typically SPHttpClientBatch can successfully guess the appropriate SPWeb URL by looking for a reserved URL segment such as \"_api\" in the first URL passed to fetch(). If not, use ISPHttpClientBatchCreationOptions.webUrl to specify it explicitly."
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "get": {
          "kind": "method",
          "signature": "get(url: string, configuration: SPHttpClientBatchConfiguration, options?: ISPHttpClientBatchOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of this request; normally this should be the latest version number from SPHttpClientBatchConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientBatchConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientBatchOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to 'GET'."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "post": {
          "kind": "method",
          "signature": "post(url: string, configuration: SPHttpClientBatchConfiguration, options: ISPHttpClientBatchOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "text",
                "text": "A promise with behavior similar to WHATWG fetch(). This promise will resolve normally (with "
              },
              {
                "kind": "api-link",
                "elements": [
                  {
                    "kind": "text",
                    "text": "HttpClientResponse.ok"
                  }
                ],
                "target": {
                  "scopeName": "@microsoft",
                  "packageName": "sp-http",
                  "exportName": "HttpClientResponse",
                  "memberName": "ok"
                }
              },
              {
                "kind": "text",
                "text": " being false) for error status codes such as HTTP 404 or 500. The promise will only reject for network failures or other errors that prevent communication with the server."
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "text",
                  "text": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "text",
                  "text": "determines the default behavior of this request; normally this should be the latest version number from SPHttpClientBatchConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientBatchConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "text",
                  "text": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientBatchOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Calls fetch(), but sets the method to 'POST'."
            }
          ],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "SPHttpClientBatchConfiguration": {
      "kind": "class",
      "extends": "SPHttpClientCommonConfiguration",
      "implements": "ISPHttpClientBatchConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Configuration for SPHttpClientBatch."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The SPHttpClientBatchConfiguration object provides a set of switches for enabling/disabling various features of the SPHttpClientBatch class. Normally these switches are set (e.g. when calling SPHttpClientBatch.fetch()) by providing one of the predefined defaults from SPHttpClientBatchConfigurations, however switches can also be changed via the SPHttpClientBatchConfiguration.overrideWith() method."
        }
      ],
      "isBeta": true,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: ISPHttpClientBatchConfiguration, overrideFlags?: ISPHttpClientBatchConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientBatchConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientBatchConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of SPHttpClientBatchConfiguration with the specified flags. The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ],
          "remarks": []
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: ISPHttpClientBatchConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISPHttpClientBatchConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        },
        "overrideWith": {
          "kind": "method",
          "signature": "overrideWith(sourceFlags: ISPHttpClientBatchConfiguration): SPHttpClientBatchConfiguration;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientBatchConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientBatchConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        }
      }
    },
    "SPHttpClientCommonConfiguration": {
      "kind": "class",
      "extends": "HttpClientConfiguration",
      "implements": "ISPHttpClientCommonConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Common base class for SPHttpClientConfiguration and SPHttpClientBatchConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: ISPHttpClientCommonConfiguration, overrideFlags?: ISPHttpClientCommonConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientCommonConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientCommonConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of SPHttpClientCommonConfiguration with the specified flags."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ]
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: ISPHttpClientCommonConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISPHttpClientCommonConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        },
        "jsonRequest": {
          "kind": "property",
          "signature": "readonly jsonRequest: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the \"Content-Type\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the \"Content-Type\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\")."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 3.0, the value is 'application/json;odata=verbose;charset=utf-8'."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 4.0, the value is 'application/json;charset=utf-8'."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "jsonResponse": {
          "kind": "property",
          "signature": "readonly jsonResponse: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the \"Accept\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the \"Accept\" header was not explicitly added for the request, then SPHttpClient will add it."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 3.0, the value is 'application/json'."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For OData 4.0, the value is 'application/json;odata.metadata=minimal'."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "overrideWith": {
          "kind": "method",
          "signature": "overrideWith(sourceFlags: ISPHttpClientCommonConfiguration): SPHttpClientCommonConfiguration;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientCommonConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientCommonConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        }
      }
    },
    "SPHttpClientConfiguration": {
      "kind": "class",
      "extends": "SPHttpClientCommonConfiguration",
      "implements": "ISPHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Configuration for "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "SPHttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "SPHttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": "."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The SPHttpClientConfiguration object provides a set of switches for enabling/disabling various features of the SPHttpClient class. Normally these switches are set (e.g. when calling SPHttpClient.fetch()) by providing one of the predefined defaults from SPHttpClientConfigurations, however switches can also be changed via the SPHttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: ISPHttpClientConfiguration, overrideFlags?: ISPHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of SPHttpClientConfiguration with the specified flags. The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ],
          "remarks": []
        },
        "defaultODataVersion": {
          "kind": "property",
          "signature": "readonly defaultODataVersion: ODataVersion;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the \"OData-Version\" header."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is specified (i.e. not undefined): If the \"OData-Version\" header was not explicitly added for the request, then SPHttpClient will add the header to specify the version indicated by defaultODataVersion."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "NOTE: Without an 'OData-Version' header, the SharePoint server currently defaults to Version 3.0 in most cases. The recommended version is 4.0."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "defaultSameOriginCredentials": {
          "kind": "property",
          "signature": "readonly defaultSameOriginCredentials: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically configure the RequestInit.credentials."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If RequestInit.credentials is not explicitly specified for the request, then SPHttpClient will assign it to be \"same-origin\". Without this switch, different web browsers may apply different defaults."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "For more information, see the spec: https://fetch.spec.whatwg.org/#cors-protocol-and-credentials"
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: ISPHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISPHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        },
        "overrideWith": {
          "kind": "method",
          "signature": "overrideWith(sourceFlags: ISPHttpClientConfiguration): SPHttpClientConfiguration;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        },
        "requestDigest": {
          "kind": "property",
          "signature": "readonly requestDigest: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Automatically provide an \"X-RequestDigest\" header for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "When this switch is true:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "If the \"X-RequestDigest\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\"). The request digest is managed by the DigestCache service. In the case of a cache miss, an additional network request may be performed."
            }
          ],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "SPHttpClientResponse": {
      "kind": "class",
      "extends": "HttpClientResponse",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "The Response subclass returned by methods such as SPHttpClient.fetch()."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "This is a placeholder. In the future, additional SPHttpClient-specific functionality may be added to this class."
        }
      ],
      "isBeta": false,
      "isSealed": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(response: Response);",
          "parameters": {
            "response": {
              "name": "response",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Response"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "SPHttpClientResponse"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "SPHttpClientResponse",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "clone": {
          "kind": "method",
          "signature": "clone(): SPHttpClientResponse;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientResponse",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": true
        },
        "correlationId": {
          "kind": "property",
          "signature": "readonly correlationId: Guid | undefined;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "Guid | undefined",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns the SharePoint correlation ID."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The correlation ID is a Guid that can be used to associate log events that are part of the same overall operation, but may originate from different services or components. SharePoint REST operations return the server's correlation ID as the \"sprequestguid\" header."
            }
          ],
          "isBeta": true,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "SPHttpHeader": {
      "kind": "enum",
      "values": {
        "SPRequestGuid": {
          "kind": "enum value",
          "value": "\"SPRequestGuid\"",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "SharePoint uses the 'SPRequestGuid' header to return the server's correlation ID for a request."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Example value: \"9417279e-40e1-0000-2465-306ba786bfd7\""
            }
          ],
          "remarks": [],
          "isBeta": true
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Standard HTTP headers used with "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "SPHttpClient"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-http",
            "exportName": "SPHttpClient",
            "memberName": ""
          }
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [],
      "isBeta": true
    },
    "TokenAcquisitionEventArgs": {
      "kind": "class",
      "extends": "SPEventArgs",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Arguments for a token acquisition failure event."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(message: string, redirectUrl?: string);",
          "parameters": {
            "message": {
              "name": "message",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "redirectUrl": {
              "name": "redirectUrl",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "TokenAcquisitionEventArgs"
                }
              ],
              "target": {
                "scopeName": "@microsoft",
                "packageName": "sp-http",
                "exportName": "TokenAcquisitionEventArgs",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "message": {
          "kind": "property",
          "signature": "message: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The message returned from ADAL fails to retrieve a token from Azure AD."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "redirectUrl": {
          "kind": "property",
          "signature": "redirectUrl?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The url of the page for the end user to perform Multi Factor Authentication"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    }
  }
}
