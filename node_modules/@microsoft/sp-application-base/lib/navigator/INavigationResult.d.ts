import { _IPreloadedData } from '@microsoft/sp-loader';
import BaseApplication from '../BaseApplication';
/**
 * Operation that gets executed from a navigation request.
 * This is used by SPFx applications to understand what are their next operations after navigating to a different page.
 *
 * @internal
 */
export declare enum NavigationOperation {
    /**
     * This operation updates the SPFx context but doesn't act on the application.
     * This includes extensions lifecycle operations, changing the PageContext object, etc.
     */
    UpdateContext = 0,
    /**
     * This operation loads a new SPFx application.
     * This implies that the previous application will be disposed.
     */
    LoadApplication = 1,
    /**
     * This operation happens when the URL doesn't map to a SPFx application or the preloaded data is in a corrupted
     * state.
     * The current application is responsible for handling this case.
     * This can mean open the URL in a different tab/window, going to error.aspx, or displaying an error in the console.
     */
    Unsupported = 2,
}
/**
 * Result of a navigation operation.
 *
 * @internal
 */
export interface INavigationResult {
    /**
     * Preloaded data of the new context.
     */
    preloadedData: _IPreloadedData;
    /**
     * Operation that is being performed as part of the navigation.
     * Unsupported when the destination doesn't map to a SPFx application.
     */
    operation: NavigationOperation;
}
/**
 * Optional property bag provided to the Navigator
 *
 * @internal
 */
export interface INavigationProperties {
    /**
     * Determines whether caching is enabled
     */
    enableCaching: boolean;
}
export interface IExtendedNavigationResult<TApplication extends BaseApplication> extends INavigationResult {
    application: TApplication;
}
