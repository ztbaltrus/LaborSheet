import * as tslib_1 from "tslib";
import { BaseComponentContext } from '@microsoft/sp-component-base';
var BaseApplicationContext = (function (_super) {
    tslib_1.__extends(BaseApplicationContext, _super);
    function BaseApplicationContext(parameters) {
        var _this = _super.call(this, parameters) || this;
        _this._disposed = false;
        _this._preloadedData = parameters.navigator.preloadedData;
        _this._navigator = parameters.navigator;
        _this._chrome = parameters.chrome;
        _this._loadType = parameters.loadType;
        return _this;
    }
    BaseApplicationContext.prototype.dispose = function () {
        if (this._disposed) {
            return;
        }
        if (this._navigator) {
            this._navigator = undefined;
        }
        if (this._chrome) {
            this._chrome.dispose();
        }
        _super.prototype.dispose.call(this);
        this._disposed = true;
    };
    BaseApplicationContext.prototype.initializeSuiteNavManager = function (suiteNavManager) {
        this._suiteNavManager = suiteNavManager;
    };
    Object.defineProperty(BaseApplicationContext.prototype, "preloadedData", {
        get: function () { return this._preloadedData; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplicationContext.prototype, "navigator", {
        get: function () { return this._navigator; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplicationContext.prototype, "chrome", {
        get: function () { return this._chrome; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplicationContext.prototype, "loadType", {
        get: function () { return this._loadType; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplicationContext.prototype, "suiteNavManager", {
        get: function () {
            return this._suiteNavManager;
        },
        enumerable: true,
        configurable: true
    });
    return BaseApplicationContext;
}(BaseComponentContext));
export default BaseApplicationContext;
