import * as tslib_1 from "tslib";
import * as lodash from '@microsoft/sp-lodash-subset';
import { virtual } from '@microsoft/decorators';
import { Promise as ODSPPromise } from '@ms/odsp-utilities-bundle';
import { FabricTheming, RgbaColor } from '@ms/odsp-utilities-bundle';
import { ThemeProvider, WebTheme, Uri } from '@ms/odsp-utilities-bundle';
import { _SPKillSwitch, Guid } from '@microsoft/sp-core-library';
import { _QosMonitor } from '@microsoft/sp-diagnostics';
import { SPHttpClient } from '@microsoft/sp-http';
import { SPComponentLoader } from '@microsoft/sp-loader';
import { PageContext } from '@microsoft/sp-page-context';
import { loadTheme } from '@uifabric/styling/lib/styles/theme';
var SPThemeProvider = (function () {
    function SPThemeProvider(serviceScope) {
        var _this = this;
        serviceScope.whenFinished(function () {
            _this._pageContext = serviceScope.consume(PageContext.serviceKey);
            _this._httpClient = serviceScope.consume(SPHttpClient.serviceKey);
            _this._themeProvider = _this._getThemeProvider();
            try {
                var contextUri = new Uri(window.location.href);
                _this._themeOverride = contextUri.getQueryParameter('ThemeOverride');
            }
            catch (ignoredUrlException) {
            }
        });
    }
    SPThemeProvider._deleteNullThemeColor = function (palette) {
        for (var color in palette) {
            if (palette.hasOwnProperty(color) && !palette[color]) {
                delete palette[color];
            }
        }
    };
    SPThemeProvider._createDefaultTheme = function () {
        var themeData = {
            backgroundImageUri: undefined,
            cacheToken: undefined,
            isDefault: undefined,
            isInverted: false,
            palette: undefined,
            version: '1.0'
        };
        return themeData;
    };
    SPThemeProvider.prototype.loadThemedStyles = function () {
        var _this = this;
        if (!this._loadThemedStylesPromiseMap) {
            this._loadThemedStylesPromiseMap = new Map();
        }
        var cacheToken = this._getCacheToken();
        var loadThemeStylesODSPPromise = this._loadThemedStylesPromiseMap.get(cacheToken);
        if (!loadThemeStylesODSPPromise) {
            loadThemeStylesODSPPromise = this._themeProvider.loadThemeTokenMap(cacheToken)
                .then(function (palette) {
                SPThemeProvider._deleteNullThemeColor(palette);
                if (_this._dontOptimizeLoadTheme() ||
                    SPThemeProvider._currentPalette ?
                    !lodash.isEqual(SPThemeProvider._currentPalette, palette) :
                    !lodash.isEmpty(palette)) {
                    if (!_SPKillSwitch.isActivated(Guid.parse('c8609cda-9af7-43fb-88f1-7a3d48d42729'), '5/15/2018', 'Load on demand OfficeUiFabricReact instead of using the styling package')) {
                        SPComponentLoader.loadComponentById('02a01e42-69ab-403d-8a16-acd128661f8e').then(function (module) {
                            module.loadTheme({ palette: palette });
                        });
                    }
                    else {
                        loadTheme({ palette: palette });
                    }
                }
                SPThemeProvider._currentPalette = palette;
                return palette;
            });
            this._loadThemedStylesPromiseMap.set(cacheToken, loadThemeStylesODSPPromise);
        }
        return loadThemeStylesODSPPromise;
    };
    SPThemeProvider.prototype.loadData = function () {
        var _this = this;
        var tagName = 'SPThemeProvider.loadData';
        var qosMonitor = new _QosMonitor(tagName);
        if (this._pageContext.legacyPageContext.themedCssFolderUrl) {
            var webUrl = !_SPKillSwitch.isActivated(Guid.parse('{c7f783f9-70f9-47fa-b475-b3f21f78f645}'), '8/05/2017', 'Theme should come from context web rather than root')
                ? this._pageContext.web.serverRelativeUrl
                : this._pageContext.site.serverRelativeUrl;
            var getThemeDataUrl_1 = WebTheme.makeWebThemeRestUrl(webUrl, this._pageContext.cultureInfo.currentUICultureName, this._themeOverride);
            return new ODSPPromise(function (resolve, reject) {
                _this._httpClient.get(getThemeDataUrl_1, SPHttpClient.configurations.v1)
                    .then(function (response) {
                    if (response.status === 200) {
                        return response.json()
                            .then(function (json) {
                            var themeDataRaw = JSON.parse(json.value);
                            if (themeDataRaw) {
                                var themeData = WebTheme.processRawThemeData(themeDataRaw);
                                themeData.cacheToken = _this._pageContext.legacyPageContext.themedCssFolderUrl;
                                qosMonitor.writeSuccess();
                                resolve(themeData);
                            }
                            else {
                                qosMonitor.writeUnexpectedFailure();
                                resolve(undefined);
                            }
                        });
                    }
                    else {
                        qosMonitor.writeUnexpectedFailure(tagName, new Error(response.statusText));
                        resolve(undefined);
                    }
                });
            });
        }
        else if (this._pageContext.legacyPageContext.groupColor) {
            var htmlThemeColor = this._pageContext.legacyPageContext.groupColor;
            var rgbaThemeColor = RgbaColor.fromHtmlColor(htmlThemeColor);
            if (rgbaThemeColor) {
                var fabTheme = {
                    backgroundImageUri: undefined,
                    cacheToken: this._getCacheToken(),
                    isDefault: false,
                    isInverted: false,
                    palette: FabricTheming.generateFabricColors(rgbaThemeColor),
                    version: '1'
                };
                return ODSPPromise.wrap(fabTheme);
            }
            else {
                return ODSPPromise.wrap();
            }
        }
        else {
            qosMonitor.writeSuccess();
            return ODSPPromise.wrap(SPThemeProvider._createDefaultTheme());
        }
    };
    SPThemeProvider.prototype._getThemeProvider = function () {
        return new ThemeProvider(this.loadData.bind(this));
    };
    SPThemeProvider.prototype._getCacheToken = function () {
        var webTemplate = String(this._pageContext.web.templateName);
        var groupColor = webTemplate === "1"  ||
            webTemplate === "64"  ? this._pageContext.legacyPageContext.groupColor : undefined;
        var groupColorToken = groupColor && (groupColor + ';web#' + webTemplate);
        return this._themeOverride || this._pageContext.legacyPageContext.themedCssFolderUrl || groupColorToken;
    };
    SPThemeProvider.prototype._dontOptimizeLoadTheme = function () {
        return _SPKillSwitch.isActivated(Guid.parse('{433B8077-ACC7-42F1-A11F-F6C38EC90607}'), '7/31/2017', 'Do not optimize loadTheme for empty color palette');
    };
    SPThemeProvider._currentPalette = undefined;
    tslib_1.__decorate([
        virtual
    ], SPThemeProvider.prototype, "_getThemeProvider", null);
    return SPThemeProvider;
}());
export default SPThemeProvider;
