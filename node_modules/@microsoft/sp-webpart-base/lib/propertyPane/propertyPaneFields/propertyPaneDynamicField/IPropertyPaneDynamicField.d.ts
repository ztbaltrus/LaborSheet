import { IPropertyPaneField } from '../propertyPaneField/IPropertyPaneField';
import { DynamicDataProvider, DynamicProperty } from '@microsoft/sp-component-base';
import { IDynamicDataWidgetEntry } from '../../propertyPaneDynamicData/dynamicDataWidget/IDynamicDataWidget';
/**
 * PropertyPaneDynamicField props.
 * @alpha
 */
export interface IPropertyPaneDynamicFieldProps {
    /**
     * User-friendly, localized label to identify the property.
     */
    label: string;
    /**
     * Callback for the dynamic property.
     * Defaults to render() method of the component.
     *
     * @remarks
     * This callback is invoked when the data change is notified for the
     * associated dynamic reference of the property.
     */
    callback?: () => void;
}
/**
 * @internal
 */
export interface IPropertyPaneDynamicFieldComponentBaseProps {
    /**
     * A unique key of the property pane group field, in which the widget is rendered.
     */
    parentKey: string;
    /**
     * Dynamic field object.
     */
    groupField: IPropertyPaneField<IPropertyPaneDynamicFieldProps>;
    /**
     * Data provider of the component.
     */
    dataProvider: DynamicDataProvider;
    /**
     * Callback when the dynamic data changes are applied for the field on the widget.
     */
    onApplyClick: (targetProperty: string, dynamicProperty: DynamicProperty<{}>) => void;
}
/**
 * @internal
 */
export interface IPropertyPaneDynamicFieldComponentProps extends IPropertyPaneDynamicFieldComponentBaseProps {
    /**
     * Entry associated with the dynamic Field
     */
    entry: IDynamicDataWidgetEntry;
}
