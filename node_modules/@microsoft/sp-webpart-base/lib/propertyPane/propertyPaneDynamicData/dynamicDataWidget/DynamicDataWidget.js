import * as tslib_1 from "tslib";
import { autobind } from '@microsoft/office-ui-fabric-react-bundle';
import { Text } from '@microsoft/sp-core-library';
import { Dropdown } from 'office-ui-fabric-react/lib/components/Dropdown/Dropdown';
import * as React from 'react';
import Strings from '../../loc/Strings.resx';
import Styles from './DynamicDataWidget.module.scss';
import DynamicDataWidgetEntry from './DynamicDataWidgetEntry';
var DynamicDataWidget = (function (_super) {
    tslib_1.__extends(DynamicDataWidget, _super);
    function DynamicDataWidget(props) {
        var _this = _super.call(this, props) || this;
        _this._selectedSourceText = '';
        _this._constructState();
        return _this;
    }
    DynamicDataWidget.prototype.componentWillReceiveProps = function () {
        this.setState({
            selectedSourceId: this._getSelectedSourceId()
        });
    };
    DynamicDataWidget.prototype.render = function () {
        var selectedSourceId = this.state.selectedSourceId;
        this._refreshAvailableSources();
        return (React.createElement("div", { className: Styles.dynamicDataWidget },
            React.createElement("div", { key: this.props.parentKey + '-dynamicDataWidget', className: Styles.sourceContainer },
                React.createElement(Dropdown, { label: Text.format(Strings.DynamicDataSourcesDropdownLabel, this.props.label), onChanged: this._onSourceChange, options: this._getDataSourcesDropdownOptions(selectedSourceId), selectedKey: selectedSourceId })),
            selectedSourceId && this._getEntryWidgets()));
    };
    DynamicDataWidget.prototype._refreshAvailableSources = function () {
        this._sources = this.props.dynamicDataProvider.getAvailableSources();
    };
    DynamicDataWidget.prototype._onSourceChange = function (option) {
        this.setState({
            selectedSourceId: option.key,
            selectedSourceText: option.text
        });
    };
    DynamicDataWidget.prototype._getEntryWidgets = function () {
        var _this = this;
        var _a = this.state, selectedSourceId = _a.selectedSourceId, selectedSourceText = _a.selectedSourceText;
        var entryWidgets = [];
        var entryCountr = 0;
        var currentKey = this.props.parentKey + 'dynamicdataWidgetEntry-';
        if (this.props.entries.length > 1) {
            entryWidgets.push(React.createElement("div", { className: Styles.sourceEntrySeparator }));
        }
        this.props.entries.forEach(function (entry) {
            currentKey += entry.targetProperty + entryCountr++;
            entryWidgets.push(React.createElement("div", { key: currentKey },
                React.createElement(DynamicDataWidgetEntry, tslib_1.__assign({}, entry, { parentKey: currentKey, showBorders: (_this.props.entries.length > 1), selectedSourceId: selectedSourceId, selectedSourceText: selectedSourceText || _this._selectedSourceText, dynamicDataProvider: _this.props.dynamicDataProvider, onApplyClick: _this.props.onApplyClick }))));
        });
        return entryWidgets;
    };
    DynamicDataWidget.prototype._getDataSourcesDropdownOptions = function (selectedSourceId) {
        var _this = this;
        var options = [];
        this._sources.forEach(function (source) {
            options.push({ key: source.id, text: source.metadata.title });
            if (source.id === selectedSourceId) {
                _this._selectedSourceText = source.metadata.title;
            }
        });
        return options;
    };
    DynamicDataWidget.prototype._constructState = function () {
        this.state = {
            selectedSourceId: this._getSelectedSourceId()
        };
    };
    DynamicDataWidget.prototype._getSelectedSourceId = function () {
        var selectedSourceId = '';
        this.props.entries.forEach(function (entry) {
            if (!selectedSourceId && entry.value.reference) {
                selectedSourceId = entry.value._getSourceId();
            }
        });
        return selectedSourceId;
    };
    tslib_1.__decorate([
        autobind
    ], DynamicDataWidget.prototype, "_onSourceChange", null);
    return DynamicDataWidget;
}(React.Component));
export default DynamicDataWidget;
