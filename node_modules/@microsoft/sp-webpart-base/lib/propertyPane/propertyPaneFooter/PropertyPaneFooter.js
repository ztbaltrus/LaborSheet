import * as tslib_1 from "tslib";
import { sealed } from '@microsoft/decorators';
import { Text } from '@microsoft/sp-core-library';
import * as React from 'react';
import { css, PrimaryButton, getIconClassName } from '@microsoft/office-ui-fabric-react-bundle';
import strings from '../loc/Strings.resx';
import styles from './PropertyPaneFooter.module.scss';
import { PageDirection } from '../propertyPane/PropertyPane';
var PropertyPaneFooter = (function (_super) {
    tslib_1.__extends(PropertyPaneFooter, _super);
    function PropertyPaneFooter(props) {
        var _this = _super.call(this, props) || this;
        _this._renderCommandButtons = _this._renderCommandButtons.bind(_this);
        _this._pageNavigationButtons = _this._pageNavigationButtons.bind(_this);
        return _this;
    }
    PropertyPaneFooter.prototype.render = function () {
        return ((!this.props.isReactive || this.props.numberOfPages > 1) && (React.createElement("div", { className: styles.propertyPaneFooter },
            this._renderCommandButtons(),
            this._pageNavigationButtons()))); 
    };
    PropertyPaneFooter.prototype._renderCommandButtons = function () {
        return ((this.props.isReactive === false) && (React.createElement("div", { className: this.props.numberOfPages > 1 ? styles.propertyPaneCommandButtonsBox : undefined },
            React.createElement(PrimaryButton, { disabled: !this.props.isSaveButtonEnabled, onClick: this.props.onSaveClick, ariaDescription: strings.ApplyButtonAriaDescription }, strings.Save)))); 
    };
    PropertyPaneFooter.prototype._pageNavigationButtons = function () {
        var _this = this;
        return (this.props.numberOfPages > 1 && (React.createElement("div", { className: styles.propertyPanePageNav },
            React.createElement("button", { className: styles.propertyPaneBackNavLink, disabled: this.props.currentPage === 1, onClick: function () { _this.props.onFlipPage(PageDirection.back); } },
                React.createElement("i", { className: css(this._arrowKeyIcon(PageDirection.back), styles.propertyPaneBackArrow) }),
                strings.PropertyPaneBackPage),
            React.createElement("span", { role: 'status', className: css(styles.propertyPanePageOfPages) }, Text.format(strings.PropertyPanePageOfPages, this.props.currentPage, this.props.numberOfPages)),
            React.createElement("button", { className: styles.propertyPaneNextNavLink, disabled: this.props.currentPage === this.props.numberOfPages, onClick: function () { _this.props.onFlipPage(PageDirection.next); } },
                strings.PropertyPaneNextPage,
                React.createElement("i", { className: css(this._arrowKeyIcon(PageDirection.next), styles.propertyPaneNextArrow) }))))); 
    };
    PropertyPaneFooter.prototype._arrowKeyIcon = function (dir) {
        var rtl = document.dir === 'rtl';
        var chevronRightIcon = getIconClassName('ChevronRight');
        var chevronLeftIcon = getIconClassName('ChevronLeft');
        if (dir === PageDirection.back) {
            return rtl ? chevronRightIcon : chevronLeftIcon;
        }
        else {
            return rtl ? chevronLeftIcon : chevronRightIcon;
        }
    };
    PropertyPaneFooter = tslib_1.__decorate([
        sealed
    ], PropertyPaneFooter);
    return PropertyPaneFooter;
}(React.Component));
export default PropertyPaneFooter;
