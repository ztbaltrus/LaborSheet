import * as tslib_1 from "tslib";
import { sealed } from '@microsoft/decorators';
import { Text } from '@microsoft/sp-core-library';
import * as React from 'react';
import { Icon } from '@microsoft/office-ui-fabric-react-bundle';
import Strings from '../loc/Strings.resx';
import propertyPaneStyles from '../propertyPane/PropertyPane.module.scss';
import propertyPaneTitleBarStyles from './PropertyPaneTitleBar.module.scss';
var PropertyPaneTitleBar = (function (_super) {
    tslib_1.__extends(PropertyPaneTitleBar, _super);
    function PropertyPaneTitleBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropertyPaneTitleBar.prototype.render = function () {
        return (React.createElement("div", { className: propertyPaneTitleBarStyles.propertyPaneTitleBarBox },
            React.createElement("div", { className: propertyPaneTitleBarStyles.propertyPaneTitleBar },
                React.createElement("div", { className: propertyPaneTitleBarStyles.propertyPanePageTitle }, this.props.title),
                React.createElement("div", { className: propertyPaneStyles.propertyPaneScreenReaderOnly, id: 'propertyPaneTitleId' }, Text.format(Strings.PropertyPaneTitle, this.props.title)),
                React.createElement("button", { tabIndex: this.props.title ? 0 : -1, className: propertyPaneTitleBarStyles.propertyPaneClose, onClick: this.props.onClose, "aria-label": Strings.Close },
                    React.createElement(Icon, { iconName: 'Cancel' })))));
    };
    PropertyPaneTitleBar = tslib_1.__decorate([
        sealed
    ], PropertyPaneTitleBar);
    return PropertyPaneTitleBar;
}(React.Component));
export default PropertyPaneTitleBar;
