import { SPError } from '@microsoft/sp-core-library';
export declare enum SPWebPartErrorCode {
    ModuleUndefined = 0,
    ModuleNotLoaded = 1,
    IncorrectBoostrapModule = 2,
    MissingExpectedWebPartMemberError = 3,
    NonBaseWebPart = 4,
    ScriptLoadError = 5,
    ManifestNull = 6,
    ManifestInvalid = 7,
    BaseConstructError = 8,
    MustOverrideRender = 9,
    NotInitializedError = 10,
    PropertyBagNull = 11,
    OnAfterDeserializeReturnedNull = 12,
    OnInitReturnedNullPromise = 13,
    ReadOnlyProperty = 14,
    SerializationFailed = 15,
    FirstTimeRenderCalledMoreThanOnce = 16,
    RenderCompletedCallNotCalled = 17,
    InvalidSPLinkAttributeFormat = 18,
    InvalidSPLinkIndex = 19,
    GetDataReturnedNullPromise = 20,
    RenderPromiseUndefined = 21,
}
/**
 * Web part errors.
 *
 * @internal
 */
export declare class SPWebPartError extends SPError {
    /**
     * Error id to string map
     */
    private static _errorCodeToMessageMap;
    /**
     * Error id.
     */
    private _id;
    readonly id: number;
    /**
     * Returns 'SPWebPartErrorCode'.
     */
    readonly category: string;
    static create(errorCode: SPWebPartErrorCode, ...params: any[]): SPWebPartError;
    static createWithLogProperties(errorCode: SPWebPartErrorCode, logProperties: {
        [key: string]: any;
    }, ...params: any[]): SPWebPartError;
    /**
     * Constructor for the SPWebPartError class.
     *
     * @param errorCode - a numeric error code of type SPWebPartErrorCode.
     * @param logProperties - (optional) additional properties that can be used to troubleshoot rare to repro bugs.
     * @param params - Error message params.
     *
     */
    private constructor();
}
