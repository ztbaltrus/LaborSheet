import * as tslib_1 from "tslib";
import { sealed } from '@microsoft/decorators';
import { SPError, Text } from '@microsoft/sp-core-library';
import strings from '../loc/Strings.resx';
export var SPWebPartErrorCode;
(function (SPWebPartErrorCode) {
    SPWebPartErrorCode[SPWebPartErrorCode["ModuleUndefined"] = 0] = "ModuleUndefined";
    SPWebPartErrorCode[SPWebPartErrorCode["ModuleNotLoaded"] = 1] = "ModuleNotLoaded";
    SPWebPartErrorCode[SPWebPartErrorCode["IncorrectBoostrapModule"] = 2] = "IncorrectBoostrapModule";
    SPWebPartErrorCode[SPWebPartErrorCode["MissingExpectedWebPartMemberError"] = 3] = "MissingExpectedWebPartMemberError";
    SPWebPartErrorCode[SPWebPartErrorCode["NonBaseWebPart"] = 4] = "NonBaseWebPart";
    SPWebPartErrorCode[SPWebPartErrorCode["ScriptLoadError"] = 5] = "ScriptLoadError";
    SPWebPartErrorCode[SPWebPartErrorCode["ManifestNull"] = 6] = "ManifestNull";
    SPWebPartErrorCode[SPWebPartErrorCode["ManifestInvalid"] = 7] = "ManifestInvalid";
    SPWebPartErrorCode[SPWebPartErrorCode["BaseConstructError"] = 8] = "BaseConstructError";
    SPWebPartErrorCode[SPWebPartErrorCode["MustOverrideRender"] = 9] = "MustOverrideRender";
    SPWebPartErrorCode[SPWebPartErrorCode["NotInitializedError"] = 10] = "NotInitializedError";
    SPWebPartErrorCode[SPWebPartErrorCode["PropertyBagNull"] = 11] = "PropertyBagNull";
    SPWebPartErrorCode[SPWebPartErrorCode["OnAfterDeserializeReturnedNull"] = 12] = "OnAfterDeserializeReturnedNull";
    SPWebPartErrorCode[SPWebPartErrorCode["OnInitReturnedNullPromise"] = 13] = "OnInitReturnedNullPromise";
    SPWebPartErrorCode[SPWebPartErrorCode["ReadOnlyProperty"] = 14] = "ReadOnlyProperty";
    SPWebPartErrorCode[SPWebPartErrorCode["SerializationFailed"] = 15] = "SerializationFailed";
    SPWebPartErrorCode[SPWebPartErrorCode["FirstTimeRenderCalledMoreThanOnce"] = 16] = "FirstTimeRenderCalledMoreThanOnce";
    SPWebPartErrorCode[SPWebPartErrorCode["RenderCompletedCallNotCalled"] = 17] = "RenderCompletedCallNotCalled";
    SPWebPartErrorCode[SPWebPartErrorCode["InvalidSPLinkAttributeFormat"] = 18] = "InvalidSPLinkAttributeFormat";
    SPWebPartErrorCode[SPWebPartErrorCode["InvalidSPLinkIndex"] = 19] = "InvalidSPLinkIndex";
    SPWebPartErrorCode[SPWebPartErrorCode["GetDataReturnedNullPromise"] = 20] = "GetDataReturnedNullPromise";
    SPWebPartErrorCode[SPWebPartErrorCode["RenderPromiseUndefined"] = 21] = "RenderPromiseUndefined";
})(SPWebPartErrorCode = SPWebPartErrorCode || (SPWebPartErrorCode = {}));
var SPWebPartError = (function (_super) {
    tslib_1.__extends(SPWebPartError, _super);
    function SPWebPartError(errorCode, logProperties) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        var _this = _super.call(this, SPWebPartErrorCode[errorCode], Text.format(SPWebPartError_1._errorCodeToMessageMap.get(errorCode), params), logProperties) || this;
        _this.__proto__ = SPWebPartError_1.prototype; 
        _this._id = errorCode;
        return _this;
    }
    SPWebPartError_1 = SPWebPartError;
    Object.defineProperty(SPWebPartError.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPWebPartError.prototype, "category", {
        get: function () {
            return 'SPWebPartErrorCode';
        },
        enumerable: true,
        configurable: true
    });
    SPWebPartError.create = function (errorCode) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        return new SPWebPartError_1(errorCode, undefined, params);
    };
    SPWebPartError.createWithLogProperties = function (errorCode, logProperties) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        return new SPWebPartError_1(errorCode, logProperties, params);
    };
    SPWebPartError._errorCodeToMessageMap = new Map([
        [SPWebPartErrorCode.ModuleUndefined, strings.UndefinedModuleError],
        [SPWebPartErrorCode.ModuleNotLoaded, strings.ModuleNotLoadedError],
        [SPWebPartErrorCode.IncorrectBoostrapModule, strings.IncorrectBoostrapModuleError],
        [SPWebPartErrorCode.MissingExpectedWebPartMemberError, strings.MissingExpectedWebPartMemberError],
        [SPWebPartErrorCode.NonBaseWebPart, strings.NonBaseWebPartError],
        [SPWebPartErrorCode.ScriptLoadError, strings.ScriptLoadErrorTemplate],
        [SPWebPartErrorCode.ManifestNull, strings.ManifestNullError],
        [SPWebPartErrorCode.ManifestInvalid, strings.ManifestInvalidError],
        [SPWebPartErrorCode.BaseConstructError, strings.BaseConstructError],
        [SPWebPartErrorCode.MustOverrideRender, strings.MustOverrideRenderError],
        [SPWebPartErrorCode.NotInitializedError, strings.NotIntializedError],
        [SPWebPartErrorCode.PropertyBagNull, strings.PropertyBagNullError],
        [SPWebPartErrorCode.OnAfterDeserializeReturnedNull, strings.OnAfterDeserializeReturnedNull],
        [SPWebPartErrorCode.OnInitReturnedNullPromise, strings.OnInitReturnedNullPromise],
        [SPWebPartErrorCode.ReadOnlyProperty, strings.ReadOnlyPropertyError],
        [SPWebPartErrorCode.SerializationFailed, strings.SerializationFailedError],
        [SPWebPartErrorCode.FirstTimeRenderCalledMoreThanOnce, strings.FirstTimeRenderCalledMoreThanOnceError],
        [SPWebPartErrorCode.RenderCompletedCallNotCalled, strings.RenderCompletedCallNotCalledError],
        [SPWebPartErrorCode.InvalidSPLinkAttributeFormat, strings.InvalidSPLinkAttributeFormatError],
        [SPWebPartErrorCode.InvalidSPLinkIndex, strings.InvalidSPLinkIndexError],
        [SPWebPartErrorCode.RenderPromiseUndefined, strings.RenderPromiseUndefinedError]
    ] );
    SPWebPartError = SPWebPartError_1 = tslib_1.__decorate([
        sealed
    ], SPWebPartError);
    return SPWebPartError;
    var SPWebPartError_1;
}(SPError));
export { SPWebPartError };
