'use strict';
import * as tslib_1 from "tslib";
import { sealed } from '@microsoft/decorators';
var PropertyPaneAccessor = (function () {
    function PropertyPaneAccessor(openProperytPane, refresh, isRenderedByWebPart, isPropertyPaneOpen) {
        this._open = openProperytPane;
        this._refresh = refresh;
        this._isRenderedByWebPart = isRenderedByWebPart;
        this._isPropertyPaneOpen = isPropertyPaneOpen;
        this.open = this.open.bind(this);
        this.refresh = this.refresh.bind(this);
        this.isRenderedByWebPart = this.isRenderedByWebPart.bind(this);
    }
    PropertyPaneAccessor.prototype.open = function () {
        this._open();
    };
    PropertyPaneAccessor.prototype.refresh = function () {
        this._refresh();
    };
    PropertyPaneAccessor.prototype.isRenderedByWebPart = function () {
        return this._isRenderedByWebPart();
    };
    PropertyPaneAccessor.prototype.isPropertyPaneOpen = function () {
        return this._isPropertyPaneOpen();
    };
    PropertyPaneAccessor = tslib_1.__decorate([
        sealed
    ], PropertyPaneAccessor);
    return PropertyPaneAccessor;
}());
export default PropertyPaneAccessor;
