import * as tslib_1 from "tslib";
import * as React from 'react';
import { autobind } from '@microsoft/office-ui-fabric-react-bundle';
var DeferredComponent = (function (_super) {
    tslib_1.__extends(DeferredComponent, _super);
    function DeferredComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            component: _this.constructor._loadedComponent
        };
        return _this;
    }
    Object.defineProperty(DeferredComponent.prototype, "_shouldLoad", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    DeferredComponent.prototype.componentWillMount = function () {
        this._asyncSetState = this._setState;
        if (!this.state.component && this.constructor._loadedComponent) {
            this.setState({ component: this.constructor._loadedComponent });
        }
    };
    DeferredComponent.prototype.componentDidMount = function () {
        if (this.state.component) {
            return;
        }
        var duration = this.props.duration || 0;
        if (duration < 0) {
            return;
        }
        if (duration) {
            this._loadTimeoutId = setTimeout(this.load, this.props.duration);
        }
        else {
            this.load();
        }
    };
    DeferredComponent.prototype.componentWillUnmount = function () {
        this._asyncSetState = undefined;
    };
    DeferredComponent.prototype.componentWillReceiveProps = function (nextProps) {
        if (!this.constructor._loadPromise &&
            !this._loadTimeoutId) {
            var duration = nextProps.duration || 0;
            if (duration < 0) {
                return;
            }
            if (duration) {
                this._loadTimeoutId = setTimeout(this.load, this.props.duration);
            }
            else {
                this.load();
            }
        }
    };
    DeferredComponent.prototype.render = function () {
        if (!this.state.component) {
            return this._renderPlaceHolder();
        }
        return (React.createElement(this.state.component, tslib_1.__assign({}, (this.props.deferredProps || {})), this.props.children));
    };
    DeferredComponent.prototype.load = function () {
        if (!this.constructor._loadPromise) {
            if (this._shouldLoad) {
                this.constructor._loadPromise = this._internalLoad();
                this.constructor._loadPromise.then(this._handleComponentLoaded);
            }
            else {
                this.constructor._loadPromise = Promise.reject(new Error('_shouldLoad returns false'));
            }
        }
        else {
            this.constructor._loadPromise.then(this._handleComponentLoaded);
        }
        return this.constructor._loadPromise;
    };
    DeferredComponent.prototype._renderPlaceHolder = function () {
        return false;
    };
    DeferredComponent.prototype._handleComponentLoaded = function (component) {
        var onAfterLoad = this.props.onAfterLoad;
        this.constructor._loadedComponent = component;
        if (this._asyncSetState) {
            this._asyncSetState({ component: component });
        }
        if (onAfterLoad) {
            onAfterLoad.forEach(function (fn) { return fn(); });
        }
    };
    DeferredComponent.prototype._setState = function (state) {
        this.setState(state);
    };
    tslib_1.__decorate([
        autobind
    ], DeferredComponent.prototype, "load", null);
    tslib_1.__decorate([
        autobind
    ], DeferredComponent.prototype, "_handleComponentLoaded", null);
    tslib_1.__decorate([
        autobind
    ], DeferredComponent.prototype, "_setState", null);
    return DeferredComponent;
}(React.Component));
export default DeferredComponent;
