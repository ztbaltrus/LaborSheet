.Placeholder{display:-ms-flexbox;display:flex}.Placeholder .Placeholder-container{-ms-flex-align:center;-ms-grid-row-align:center;align-items:center;color:"[theme:neutralSecondary, default: #666666]";background-color:"[theme:neutralLighter, default: #f4f4f4]";width:100%;padding:80px 0}.Placeholder .Placeholder-container .Placeholder-head{color:"[theme:neutralPrimary, default: #333333]"}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-headContainer{height:100%;white-space:nowrap;text-align:center}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-icon{display:inline-block;vertical-align:middle;white-space:normal}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{display:inline-block;vertical-align:middle;white-space:normal}[dir=ltr] .Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{padding-left:20px}[dir=rtl] .Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{padding-right:20px}.Placeholder .Placeholder-container .Placeholder-description{width:65%;vertical-align:middle;margin:0 auto;text-align:center}.Placeholder .Placeholder-container .Placeholder-description .Placeholder-descriptionText{color:"[theme:neutralSecondary, default: #666666]";font-size:17px;display:inline-block;margin:24px 0;font-weight:100}.Placeholder-overlay{position:relative;height:100%;z-index:1}.Placeholder-overlay .Placeholder-spinnerContainer{position:relative;width:100%;margin:164px 0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
