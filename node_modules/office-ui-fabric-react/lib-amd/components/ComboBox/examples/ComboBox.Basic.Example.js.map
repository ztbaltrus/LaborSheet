{"version":3,"file":"ComboBox.Basic.Example.js","sourceRoot":"../src/","sources":["components/ComboBox/examples/ComboBox.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ComboBox,\r\n  IComboBoxOption,\r\n  VirtualizedComboBox\r\n} from 'office-ui-fabric-react/lib/ComboBox';\r\nimport './ComboBox.Basic.Example.scss';\r\nimport {\r\n  assign\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport { SelectableOptionMenuItemType } from 'office-ui-fabric-react/lib/utilities/selectableOption/SelectableOption.types';\r\nimport { IComboBox } from '../ComboBox.types';\r\nimport { PrimaryButton } from '../../../Button';\r\n\r\nconst INITIAL_OPTIONS =\r\n  [\r\n    { key: 'Header', text: 'Theme Fonts', itemType: SelectableOptionMenuItemType.Header },\r\n    { key: 'A', text: 'Arial Black', fontFamily: '\"Arial Black\", \"Arial Black_MSFontService\", sans-serif' },\r\n    { key: 'B', text: 'Time New Roman', fontFamily: '\"Times New Roman\", \"Times New Roman_MSFontService\", serif' },\r\n    { key: 'C', text: 'Comic Sans MS', fontFamily: '\"Comic Sans MS\", \"Comic Sans MS_MSFontService\", fantasy' },\r\n    { key: 'C1', text: 'Calibri', fontFamily: 'Calibri, Calibri_MSFontService, sans-serif' },\r\n    { key: 'divider_2', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n    { key: 'Header1', text: 'Other Options', itemType: SelectableOptionMenuItemType.Header },\r\n    { key: 'D', text: 'Option d' },\r\n    { key: 'E', text: 'Option e' },\r\n    { key: 'F', text: 'Option f' },\r\n    { key: 'G', text: 'Option g' },\r\n    { key: 'H', text: 'Option h' },\r\n    { key: 'I', text: 'Option i' },\r\n    { key: 'J', text: 'Option j' }\r\n  ];\r\n\r\nexport class ComboBoxBasicExample extends React.Component<{}, {\r\n  // For controled single select\r\n  options: IComboBoxOption[];\r\n  selectedOptionKey?: string | number;\r\n  value?: string;\r\n\r\n  // For controled multi select\r\n  optionsMulti: IComboBoxOption[];\r\n  selectedOptionKeys?: string[];\r\n  valueMulti?: string;\r\n}> {\r\n  private _testOptions =\r\n    [{ key: 'Header', text: 'Theme Fonts', itemType: SelectableOptionMenuItemType.Header },\r\n    { key: 'A', text: 'Arial Black' },\r\n    { key: 'B', text: 'Times New Roman' },\r\n    { key: 'C', text: 'Comic Sans MS' },\r\n    { key: 'divider_2', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n    { key: 'Header1', text: 'Other Options', itemType: SelectableOptionMenuItemType.Header },\r\n    { key: 'D', text: 'Option d' },\r\n    { key: 'E', text: 'Option e' },\r\n    { key: 'F', text: 'Option f' },\r\n    { key: 'G', text: 'Option g' },\r\n    { key: 'H', text: 'Option h' },\r\n    { key: 'I', text: 'Option i' },\r\n    { key: 'J', text: 'Option j', disabled: true },\r\n    ];\r\n\r\n  private _fontMapping: { [key: string]: string } = {\r\n    ['Arial Black']: '\"Arial Black\", \"Arial Black_MSFontService\", sans-serif',\r\n    ['Time New Roman']: '\"Times New Roman\", \"Times New Roman_MSFontService\", serif',\r\n    ['Comic Sans MS']: '\"Comic Sans MS\", \"Comic Sans MS_MSFontService\", fantasy',\r\n    ['Calibri']: 'Calibri, Calibri_MSFontService, sans-serif'\r\n  };\r\n\r\n  private scaleOptions: IComboBoxOption[] = [];\r\n  private _basicCombobox: IComboBox;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      optionsMulti: [],\r\n      selectedOptionKey: undefined,\r\n      value: 'Calibri',\r\n      valueMulti: 'Calibri'\r\n    };\r\n\r\n    for (let i = 0; i < 1000; i++) {\r\n      this.scaleOptions.push({\r\n        key: `${i}`,\r\n        text: `Option ${i}`\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { options, selectedOptionKey, value } = this.state;\r\n    const { optionsMulti } = this.state;\r\n\r\n    return (\r\n      <div className='ms-ComboBoxBasicExample'>\r\n\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: T, AutoComplete: T):'\r\n          id='Basicdrop1'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='on'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          componentRef={ this._basicComboBoxComponentRef }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n          onPendingValueChanged={ (option, pendingIndex, pendingValue) => console.log('Preview value was changed. Pending index: ' + pendingIndex + '. Pending value: ' + pendingValue) }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <PrimaryButton\r\n          text='Set focus'\r\n          onClick={ this._basicComboBoxOnClick }\r\n        />\r\n\r\n        <ComboBox\r\n          multiSelect\r\n          defaultSelectedKey={ ['C', 'E'] }\r\n          label='Basic uncontrolled multi select example (allowFreeform: T, AutoComplete: T):'\r\n          id='Basicdrop11'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='on'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: T, AutoComplete: F):'\r\n          id='Basicdrop2'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='off'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <ComboBox\r\n          selectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: F, AutoComplete: T):'\r\n          id='Basicdrop3'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ false }\r\n          autoComplete='on'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <VirtualizedComboBox\r\n          defaultSelectedKey='C'\r\n          label='Scaled example with 1000 items (allowFreeform: T, AutoComplete: T):'\r\n          id='Basicdrop1'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='on'\r\n          options={ this.scaleOptions }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n          onPendingValueChanged={ (option, pendingIndex, pendingValue) => console.log('Preview value was changed. Pending index: ' + pendingIndex + '. Pending value: ' + pendingValue) }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: F, AutoComplete: F):'\r\n          id='Basicdrop4'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ false }\r\n          autoComplete='off'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <ComboBox\r\n          label='Basic uncontrolled example:'\r\n          id='Basicdrop5'\r\n          ariaLabel='Basic ComboBox example'\r\n          errorMessage='Error! Here is some text!'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        <ComboBox\r\n          label='Disabled uncontrolled example with defaultSelectedKey:'\r\n          defaultSelectedKey='D'\r\n          options={\r\n            [\r\n              { key: 'A', text: 'Option a' },\r\n              { key: 'B', text: 'Option b' },\r\n              { key: 'C', text: 'Option c' },\r\n              { key: 'D', text: 'Option d' },\r\n              { key: 'E', text: 'Option e' },\r\n              { key: 'F', text: 'Option f' },\r\n              { key: 'G', text: 'Option g' },\r\n            ]\r\n          }\r\n          disabled={ true }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n\r\n        { value ?\r\n          <ComboBox\r\n            label='Basic controlled example:'\r\n            id='Basicdrop5'\r\n            ariaLabel='Basic ComboBox example'\r\n            allowFreeform={ true }\r\n            autoComplete='on'\r\n            options={ options }\r\n            onChanged={ this._onChanged }\r\n            onResolveOptions={ this._getOptions }\r\n            text={ value && value }\r\n            onRenderOption={ this._onRenderFontOption }\r\n            // tslint:disable:jsx-no-lambda\r\n            onFocus={ () => console.log('onFocus called') }\r\n            onBlur={ () => console.log('onBlur called') }\r\n            onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n          // tslint:enable:jsx-no-lambda\r\n          />\r\n          :\r\n          <ComboBox\r\n            selectedKey={ selectedOptionKey && selectedOptionKey }\r\n            label='Basic controlled example:'\r\n            id='Basicdrop5'\r\n            ariaLabel='Basic ComboBox example'\r\n            allowFreeform={ true }\r\n            autoComplete='on'\r\n            options={ options }\r\n            onChanged={ this._onChanged }\r\n            onResolveOptions={ this._getOptions }\r\n            onRenderOption={ this._onRenderFontOption }\r\n            // tslint:disable:jsx-no-lambda\r\n            onFocus={ () => console.log('onFocus called') }\r\n            onBlur={ () => console.log('onBlur called') }\r\n            onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n          // tslint:enable:jsx-no-lambda\r\n          />\r\n        }\r\n\r\n        <ComboBox\r\n          multiSelect\r\n          selectedKey={ this.state.selectedOptionKeys }\r\n          label='Basic controlled ComboBox multi-select example:'\r\n          id='Basicdrop5'\r\n          ariaLabel='Basic controlled ComboBox multi-select example'\r\n          allowFreeform={ true }\r\n          autoComplete='on'\r\n          options={ optionsMulti }\r\n          onChanged={ this._onChangedMulti }\r\n          onResolveOptions={ this._getOptionsMulti }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          // tslint:disable:jsx-no-lambda\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n          onMenuOpen={ () => console.log('ComboBox menu opened') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  // Render content of item\r\n  private _onRenderFontOption = (item: IComboBoxOption): JSX.Element => {\r\n\r\n    if (item.itemType === SelectableOptionMenuItemType.Header ||\r\n      item.itemType === SelectableOptionMenuItemType.Divider) {\r\n      return <span className={ 'ms-ComboBox-optionText' }>{ item.text }</span>;\r\n    }\r\n\r\n    let fontFamily = this._fontMapping[item.text];\r\n\r\n    if (fontFamily === null || fontFamily === undefined) {\r\n      let newFontFamily: string = item.text;\r\n      if (newFontFamily.indexOf(' ') > -1) {\r\n        newFontFamily = '\"' + newFontFamily + '\"';\r\n      }\r\n\r\n      // add a default fallback font\r\n      newFontFamily += ',\"Segoe UI\",Tahoma,Sans-Serif';\r\n\r\n      this._fontMapping = assign({}, this._fontMapping, { [fontFamily as string]: newFontFamily });\r\n      fontFamily = newFontFamily;\r\n    }\r\n\r\n    return <span className={ 'ms-ComboBox-optionText' } style={ { fontFamily: fontFamily && fontFamily } }>{ item.text }</span>;\r\n  }\r\n\r\n  private _getOptions = (currentOptions: IComboBoxOption[]): IComboBoxOption[] => {\r\n    if (this.state.options.length > 0) {\r\n      return this.state.options;\r\n    }\r\n\r\n    this.setState({\r\n      options: INITIAL_OPTIONS,\r\n      selectedOptionKey: 'C1',\r\n      value: undefined\r\n    });\r\n\r\n    return INITIAL_OPTIONS;\r\n  }\r\n\r\n  private _getOptionsMulti = (currentOptions: IComboBoxOption[]): IComboBoxOption[] => {\r\n\r\n    if (this.state.optionsMulti.length > 0) {\r\n      return this.state.optionsMulti;\r\n    }\r\n\r\n    this.setState({\r\n      optionsMulti: INITIAL_OPTIONS,\r\n      selectedOptionKeys: ['C1'],\r\n      valueMulti: undefined\r\n    });\r\n\r\n    return INITIAL_OPTIONS;\r\n  }\r\n\r\n  private _onChanged = (option: IComboBoxOption, index: number, value: string): void => {\r\n    console.log('_onChanged() is called: option = ' + JSON.stringify(option));\r\n    if (option !== undefined) {\r\n      this.setState({\r\n        selectedOptionKey: option.key,\r\n        value: undefined\r\n      });\r\n    } else if (index !== undefined && index >= 0 && index < this.state.options.length) {\r\n      this.setState({\r\n        selectedOptionKey: this.state.options[index].key,\r\n        value: undefined\r\n      });\r\n    } else if (value !== undefined) {\r\n      const newOption: IComboBoxOption = { key: value, text: value };\r\n\r\n      this.setState({\r\n        options: [...this.state.options, newOption],\r\n        selectedOptionKey: newOption.key,\r\n        value: undefined\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onChangedMulti = (option: IComboBoxOption, index: number, value: string) => {\r\n    console.log('_onChangedMulti() is called: option = ' + JSON.stringify(option));\r\n    if (option !== undefined) {\r\n      // User selected/de-selected an existing option\r\n      this.setState({\r\n        selectedOptionKeys: this._updateSelectedOptionKeys(this.state.selectedOptionKeys || [], option),\r\n        valueMulti: undefined\r\n      });\r\n    } else if (value !== undefined) {\r\n      // User typed a freeform option\r\n      const newOption: IComboBoxOption = { key: value, text: value };\r\n      const updatedSelectedKeys: string[] = this.state.selectedOptionKeys ? [...this.state.selectedOptionKeys, newOption.key as string] : [newOption.key as string];\r\n      this.setState({\r\n        optionsMulti: [...this.state.optionsMulti, newOption],\r\n        selectedOptionKeys: updatedSelectedKeys,\r\n        valueMulti: undefined\r\n      });\r\n    }\r\n  }\r\n\r\n  private _updateSelectedOptionKeys = (selectedKeys: string[], option: IComboBoxOption): string[] => {\r\n    if (selectedKeys && option) {\r\n      const index = selectedKeys.indexOf(option.key as string);\r\n      if (option.selected && index < 0) {\r\n        selectedKeys.push(option.key as string);\r\n      } else {\r\n        selectedKeys.splice(index, 1);\r\n      }\r\n    }\r\n    return selectedKeys;\r\n  }\r\n\r\n  private _basicComboBoxOnClick = (): void => {\r\n    this._basicCombobox.focus(true);\r\n  }\r\n\r\n  private _basicComboBoxComponentRef = (component: IComboBox): void => {\r\n    this._basicCombobox = component;\r\n  }\r\n}\r\n"]}