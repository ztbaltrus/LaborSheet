{"version":3,"file":"ComboBox.classNames.js","sourceRoot":"../src/","sources":["components/ComboBox/ComboBox.classNames.ts"],"names":[],"mappings":";;;IAwBa,QAAA,aAAa,GAAG,2BAAe,CAAC,UAC3C,MAAgC,EAChC,SAAiB,EACjB,MAAe,EACf,QAAiB,EACjB,QAAiB,EACjB,OAAgB,EAChB,aAAsB,EACtB,eAAwB;QAExB,OAAO;YACL,SAAS,EAAE,qBAAW,CACpB,uBAAuB,EACvB,SAAS,EACT,MAAM,CAAC,SAAS,CACjB;YACD,KAAK,EAAE,qBAAW,CAChB,MAAM,CAAC,KAAK,EACZ,QAAQ,IAAI,MAAM,CAAC,aAAa,CACjC;YACD,IAAI,EAAE,qBAAW,CACf,aAAa,EACb,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,IAAI,SAAS,EACxD,QAAQ,IAAI,aAAa,EACzB,MAAM,CAAC,IAAI,EACX,CAAC,aAAa,IAAI,MAAM,CAAC,oBAAoB,EAC7C,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,OAAO,IAAI,MAAM,CAAC,WAAW,EAC/E,CAAC,QAAQ,IAAI;gBACX,SAAS,EAAE;oBACT,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,WAAW;oBACxF,SAAS,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW;oBAClE,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW;iBAClE;aACF,EACD,QAAQ,IAAI;gBACV,aAAa,EAAE,MAAM,CAAC,YAAY;aACnC,CACF;YACD,KAAK,EAAE,qBAAW,CAChB,mBAAmB,EACnB,MAAM,CAAC,KAAK,EACZ,QAAQ,IAAI,MAAM,CAAC,aAAa,CACjC;YACD,YAAY,EAAE,qBAAW,CACvB,MAAM,CAAC,YAAY,CACpB;YACD,OAAO,EAAE,qBAAW,CAClB,qBAAqB,EACrB,MAAM,CAAC,OAAO,CACf;YACD,uBAAuB,EAAE,qBAAW,CAClC,qCAAqC,EACrC,MAAM,CAAC,uBAAuB,CAC/B;YACD,gBAAgB,EAAE,qBAAW,CAC3B,8BAA8B,EAC9B,MAAM,CAAC,gBAAgB,CACxB;YACD,MAAM,EAAE,qBAAW,CACjB,oBAAoB,EACpB,MAAM,CAAC,MAAM,CACd;YACD,OAAO,EAAE,qBAAW,CAClB,qBAAqB,EACrB,MAAM,CAAC,OAAO,CACf;SACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEU,QAAA,2BAA2B,GAAG,2BAAe,CAAC,UACzD,MAAsC;QAEtC,OAAO;YACL,UAAU,EAAE,qBAAW,CACrB,wBAAwB,EACxB,MAAM,CAAC,UAAU,CAClB;YACD,IAAI,EAAE,qBAAW,CACf,oBAAoB,EACpB,MAAM,CAAC,IAAI,EACX;gBACE,SAAS,EAAE;oBACT,QAAQ,EAAE,MAAM,CAAC,WAAW;oBAC5B,QAAQ,EAAE,MAAM,CAAC,WAAW;oBAC5B,SAAS,EAAE,MAAM,CAAC,WAAW;iBAC9B;aACF,CACF;SACF,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["import { IComboBoxStyles, IComboBoxOptionStyles } from './ComboBox.types';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport {\r\n  mergeStyles,\r\n} from '../../Styling';\r\n\r\nexport interface IComboBoxClassNames {\r\n  container: string;\r\n  label: string;\r\n  root: string;\r\n  input: string;\r\n  errorMessage: string;\r\n  callout: string;\r\n  optionsContainer: string;\r\n  header: string;\r\n  divider: string;\r\n  optionsContainerWrapper: string;\r\n}\r\n\r\nexport interface IComboBoxOptionClassNames {\r\n  optionText: string;\r\n  root: string;\r\n}\r\n\r\nexport const getClassNames = memoizeFunction((\r\n  styles: Partial<IComboBoxStyles>,\r\n  className: string,\r\n  isOpen: boolean,\r\n  disabled: boolean,\r\n  required: boolean,\r\n  focused: boolean,\r\n  allowFreeForm: boolean,\r\n  hasErrorMessage: boolean\r\n): IComboBoxClassNames => {\r\n  return {\r\n    container: mergeStyles(\r\n      'ms-ComboBox-container',\r\n      className,\r\n      styles.container,\r\n    ),\r\n    label: mergeStyles(\r\n      styles.label,\r\n      disabled && styles.labelDisabled\r\n    ),\r\n    root: mergeStyles(\r\n      'ms-ComboBox',\r\n      hasErrorMessage ? styles.rootError : isOpen && 'is-open',\r\n      required && 'is-required',\r\n      styles.root,\r\n      !allowFreeForm && styles.rootDisallowFreeForm,\r\n      hasErrorMessage ? styles.rootError : !disabled && focused && styles.rootFocused,\r\n      !disabled && {\r\n        selectors: {\r\n          ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\r\n          ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\r\n          ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused\r\n        }\r\n      },\r\n      disabled && [\r\n        'is-disabled', styles.rootDisabled\r\n      ],\r\n    ),\r\n    input: mergeStyles(\r\n      'ms-ComboBox-Input',\r\n      styles.input,\r\n      disabled && styles.inputDisabled\r\n    ),\r\n    errorMessage: mergeStyles(\r\n      styles.errorMessage\r\n    ),\r\n    callout: mergeStyles(\r\n      'ms-ComboBox-callout',\r\n      styles.callout\r\n    ),\r\n    optionsContainerWrapper: mergeStyles(\r\n      'ms-ComboBox-optionsContainerWrapper',\r\n      styles.optionsContainerWrapper\r\n    ),\r\n    optionsContainer: mergeStyles(\r\n      'ms-ComboBox-optionsContainer',\r\n      styles.optionsContainer\r\n    ),\r\n    header: mergeStyles(\r\n      'ms-ComboBox-header',\r\n      styles.header\r\n    ),\r\n    divider: mergeStyles(\r\n      'ms-ComboBox-divider',\r\n      styles.divider\r\n    ),\r\n  };\r\n});\r\n\r\nexport const getComboBoxOptionClassNames = memoizeFunction((\r\n  styles: Partial<IComboBoxOptionStyles>,\r\n): IComboBoxOptionClassNames => {\r\n  return {\r\n    optionText: mergeStyles(\r\n      'ms-ComboBox-optionText',\r\n      styles.optionText\r\n    ),\r\n    root: mergeStyles(\r\n      'ms-ComboBox-option',\r\n      styles.root,\r\n      {\r\n        selectors: {\r\n          ':hover': styles.rootHovered,\r\n          ':focus': styles.rootFocused,\r\n          ':active': styles.rootPressed\r\n        }\r\n      }\r\n    )\r\n  };\r\n});\r\n"]}