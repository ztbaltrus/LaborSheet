{"version":3,"file":"DatePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Basic.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,gBAAgB,GAAuB;QAC3C,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE;YACX,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN;QAED,IAAI,EAAE;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,WAAW;YACX,UAAU;YACV,QAAQ;YACR,UAAU;SACX;QAED,SAAS,EAAE;YACT,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ;QAED,SAAS,EAAE,aAAa;QACxB,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,kBAAkB;QACtC,iBAAiB,EAAE,qBAAqB;QACxC,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IAMF;QAA4C,kDAAiD;QAC3F,gCAAmB,KAAS;YAA5B,YACE,kBAAM,KAAK,CAAC,SAKb;YAsDO,wBAAkB,GAAG,UAAC,MAAuB;gBACnD,KAAI,CAAC,QAAQ,CAAC;oBACZ,cAAc,EAAG,sBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;iBAC/C,CAAC,CAAC;YACL,CAAC,CAAA;YA7DC,KAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,sBAAS,CAAC,MAAM;aACjC,CAAC;;QACJ,CAAC;QAEM,uCAAM,GAAb;YACU,IAAA,0CAAc,CAAgB;YAEtC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;gBACrC,oBAAC,uBAAU,IACT,cAAc,EAAG,cAAc,EAC/B,OAAO,EAAG,gBAAgB,EAC1B,WAAW,EAAC,kBAAkB;oBAC9B,+BAA+B;oBAC/B,kBAAkB,EAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAxC,CAAwC,GAEnE;gBACF,oBAAC,mBAAQ,IACP,KAAK,EAAC,kCAAkC,EACxC,OAAO,EAAG;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,SAAS;4BACf,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,OAAO,CAAC;yBAClC;wBACD;4BACE,IAAI,EAAE,WAAW;4BACjB,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,SAAS,CAAC;yBACpC;wBACD;4BACE,IAAI,EAAE,UAAU;4BAChB,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,QAAQ,CAAC;yBACnC;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,UAAU;4BAChB,GAAG,EAAE,sBAAS,CAAC,sBAAS,CAAC,QAAQ,CAAC;yBACnC;qBACF,EACD,WAAW,EAAG,sBAAS,CAAC,cAAe,CAAC,EACxC,SAAS,EAAG,IAAI,CAAC,kBAAkB,GACnC,CACE,CACP,CAAC;QACJ,CAAC;QAOH,6BAAC;IAAD,CAAC,AAlED,CAA4C,KAAK,CAAC,SAAS,GAkE1D;IAlEY,wDAAsB","sourcesContent":["import * as React from 'react';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\r\nimport './DatePicker.Examples.scss';\r\n\r\nconst DayPickerStrings: IDatePickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year'\r\n};\r\n\r\nexport interface IDatePickerBasicExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n}\r\n\r\nexport class DatePickerBasicExample extends React.Component<{}, IDatePickerBasicExampleState> {\r\n  public constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { firstDayOfWeek } = this.state;\r\n\r\n    return (\r\n      <div className='docs-DatePickerExample'>\r\n        <DatePicker\r\n          firstDayOfWeek={ firstDayOfWeek }\r\n          strings={ DayPickerStrings }\r\n          placeholder='Select a date...'\r\n          // tslint:disable:jsx-no-lambda\r\n          onAfterMenuDismiss={ () => console.log('onAfterMenuDismiss called') }\r\n        // tslint:enable:jsx-no-lambda\r\n        />\r\n        <Dropdown\r\n          label='Select the first day of the week'\r\n          options={ [\r\n            {\r\n              text: 'Sunday',\r\n              key: DayOfWeek[DayOfWeek.Sunday]\r\n            },\r\n            {\r\n              text: 'Monday',\r\n              key: DayOfWeek[DayOfWeek.Monday]\r\n            },\r\n            {\r\n              text: 'Tuesday',\r\n              key: DayOfWeek[DayOfWeek.Tuesday]\r\n            },\r\n            {\r\n              text: 'Wednesday',\r\n              key: DayOfWeek[DayOfWeek.Wednesday]\r\n            },\r\n            {\r\n              text: 'Thursday',\r\n              key: DayOfWeek[DayOfWeek.Thursday]\r\n            },\r\n            {\r\n              text: 'Friday',\r\n              key: DayOfWeek[DayOfWeek.Friday]\r\n            },\r\n            {\r\n              text: 'Saturday',\r\n              key: DayOfWeek[DayOfWeek.Saturday]\r\n            }\r\n          ] }\r\n          selectedKey={ DayOfWeek[firstDayOfWeek!] }\r\n          onChanged={ this._onDropdownChanged }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onDropdownChanged = (option: IDropdownOption): void => {\r\n    this.setState({\r\n      firstDayOfWeek: (DayOfWeek as any)[option.key]\r\n    });\r\n  }\r\n}\r\n"]}