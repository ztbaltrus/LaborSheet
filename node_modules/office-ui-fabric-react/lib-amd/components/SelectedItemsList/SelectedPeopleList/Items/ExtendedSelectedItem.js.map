{"version":3,"file":"ExtendedSelectedItem.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/Items/ExtendedSelectedItem.tsx"],"names":[],"mappings":";;;IAQA,kCAAkC;IAClC,IAAM,MAAM,GAAQ,YAAY,CAAC;IAMjC;QAA0C,gDAA+D;QAGvG,8BAAY,KAA+B;YAA3C,YACE,kBAAM,KAAK,CAAC,SAEb;YALS,aAAO,GAAG,qBAAS,EAAkB,CAAC;YAI9C,KAAI,CAAC,KAAK,GAAG,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC;;QAChD,CAAC;QAEM,qCAAM,GAAb;YACQ,IAAA,eAOQ,EANZ,cAAI,EACJ,8BAAY,EACZ,8BAAY,EACZ,gDAAqB,EACrB,gBAAK,EACL,sBAAQ,CACK;YACf,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;YACvB,OAAO,CACL,6BACE,GAAG,EAAG,IAAI,CAAC,OAAO,EAClB,SAAS,EAAG,eAAG,CACb,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,CAAC,IAAI,CAAC,OAAO,MAC1D,uBACmB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC5B,IAAI,EAAG,UAAU,qBACC,sBAAsB,GAAG,MAAM;gBAEjD,6BAAK,MAAM,EAAG,CAAC,IAAI,CAAC,SAAS,IAAI,YAAY,KAAK,SAAS;oBACzD,oBAAC,mBAAU,IACT,OAAO,EAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAC/C,SAAS,EAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC5D,SAAS,EAAG,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,EACvF,SAAS,EAAG,qBAAqB,GACjC,CACE;gBACN,6BAAK,SAAS,EAAG,eAAG,CAAC,MAAM,CAAC,cAAc,CAAC;oBACzC,6BACE,SAAS,EAAG,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAC5D,EAAE,EAAG,sBAAsB,GAAG,MAAM;wBAEpC,oBAAC,iBAAO,uBACD,IAAI,IACT,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAC3C,mBAAmB,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAClD,IAAI,EAAG,qBAAW,CAAC,MAAM,IACzB,CACE;oBACN,oBAAC,mBAAU,IACT,OAAO,EAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAC/C,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC/D,SAAS,EAAG,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,EACvF,SAAS,EAAG,qBAAqB,GACjC,CACG,CACF,CAAC,CAAC;;QACb,CAAC;QAEO,iDAAkB,GAA1B,UAA2B,MAAgC;YACzD,OAAO,UAAC,EAA2D;gBACjE,EAAE,CAAC,eAAe,EAAE,CAAC;gBACrB,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,IAAI,MAAM,EAAE;oBACV,MAAM,EAAE,CAAC;iBACV;YACH,CAAC,CAAC;QACJ,CAAC;QACH,2BAAC;IAAD,CAAC,AAxED,CAA0C,yBAAa,GAwEtD;IAxEY,oDAAoB","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { BaseComponent, css, getId, createRef } from '../../../../Utilities';\r\nimport { Persona, PersonaSize } from '../../../Persona';\r\nimport { ISelectedPeopleItemProps } from '../SelectedPeopleList';\r\nimport { IconButton } from '../../../Button';\r\nimport * as stylesImport from './ExtendedSelectedItem.scss';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IPeoplePickerItemState {\r\n  contextualMenuVisible: boolean;\r\n}\r\n\r\nexport class ExtendedSelectedItem extends BaseComponent<ISelectedPeopleItemProps, IPeoplePickerItemState> {\r\n  protected persona = createRef<HTMLDivElement>();\r\n\r\n  constructor(props: ISelectedPeopleItemProps) {\r\n    super(props);\r\n    this.state = { contextualMenuVisible: false };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      item,\r\n      onExpandItem,\r\n      onRemoveItem,\r\n      removeButtonAriaLabel,\r\n      index,\r\n      selected\r\n    } = this.props;\r\n    const itemId = getId();\r\n    return (\r\n      <div\r\n        ref={ this.persona }\r\n        className={ css(\r\n          'ms-PickerPersona-container',\r\n          styles.personaContainer,\r\n          { ['is-selected ' + styles.personaContainerIsSelected]: selected },\r\n          { ['is-invalid ' + styles.validationError]: !item.isValid }\r\n        ) }\r\n        data-is-focusable={ true }\r\n        data-is-sub-focuszone={ true }\r\n        data-selection-index={ index }\r\n        role={ 'listitem' }\r\n        aria-labelledby={ 'selectedItemPersona-' + itemId }\r\n      >\r\n        <div hidden={ !item.canExpand || onExpandItem === undefined }>\r\n          <IconButton\r\n            onClick={ this._onClickIconButton(onExpandItem) }\r\n            iconProps={ { iconName: 'Add', style: { fontSize: '14px' } } }\r\n            className={ css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton) }\r\n            ariaLabel={ removeButtonAriaLabel }\r\n          />\r\n        </div>\r\n        <div className={ css(styles.personaWrapper) }>\r\n          <div\r\n            className={ css('ms-PickerItem-content', styles.itemContent) }\r\n            id={ 'selectedItemPersona-' + itemId }\r\n          >\r\n            <Persona\r\n              { ...item }\r\n              onRenderCoin={ this.props.renderPersonaCoin }\r\n              onRenderPrimaryText={ this.props.renderPrimaryText }\r\n              size={ PersonaSize.size32 }\r\n            />\r\n          </div>\r\n          <IconButton\r\n            onClick={ this._onClickIconButton(onRemoveItem) }\r\n            iconProps={ { iconName: 'Cancel', style: { fontSize: '14px' } } }\r\n            className={ css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton) }\r\n            ariaLabel={ removeButtonAriaLabel }\r\n          />\r\n        </div >\r\n      </div >);\r\n  }\r\n\r\n  private _onClickIconButton(action: (() => void) | undefined): (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void {\r\n    return (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>): void => {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n      if (action) {\r\n        action();\r\n      }\r\n    };\r\n  }\r\n}"]}