{"version":3,"file":"Calendar.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { ICalendar, ICalendarProps, ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\r\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType } from '../../utilities/dateValues/DateValues';\r\nimport { CalendarDay, ICalendarDay } from './CalendarDay';\r\nimport { CalendarMonth, ICalendarMonth } from './CalendarMonth';\r\nimport { compareDates, getDateRangeArray } from '../../utilities/dateMath/DateMath';\r\nimport {\r\n  css,\r\n  BaseComponent,\r\n  KeyCodes,\r\n  createRef\r\n} from '../../Utilities';\r\nimport * as stylesImport from './Calendar.scss';\r\nconst styles: any = stylesImport;\r\n\r\nconst leftArrow = 'Up';\r\nconst rightArrow = 'Down';\r\nconst iconStrings: ICalendarIconStrings = {\r\n  leftNavigation: leftArrow,\r\n  rightNavigation: rightArrow\r\n};\r\nconst defaultWorkWeekDays: DayOfWeek[] = [\r\n  DayOfWeek.Monday,\r\n  DayOfWeek.Tuesday,\r\n  DayOfWeek.Wednesday,\r\n  DayOfWeek.Thursday,\r\n  DayOfWeek.Friday,\r\n];\r\n\r\nconst dateTimeFormatterCallbacks: ICalendarFormatDateCallbacks = {\r\n  formatMonthDayYear: (date: Date, strings: ICalendarStrings) => (strings.months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear()),\r\n  formatMonthYear: (date: Date, strings: ICalendarStrings) => (strings.months[date.getMonth()] + ' ' + date.getFullYear()),\r\n  formatDay: (date: Date) => date.getDate().toString(),\r\n  formatYear: (date: Date) => date.getFullYear().toString()\r\n};\r\n\r\nexport interface ICalendarState {\r\n  /** The currently focused date in the day picker, but not necessarily selected */\r\n  navigatedDayDate?: Date;\r\n\r\n  /** The currently focused date in the month picker, but not necessarily selected */\r\n  navigatedMonthDate?: Date;\r\n\r\n  /** The currently selected date in the calendar */\r\n  selectedDate?: Date;\r\n\r\n  /** State used to show/hide month picker */\r\n  isMonthPickerVisible?: boolean;\r\n\r\n  /** State used to show/hide day picker */\r\n  isDayPickerVisible?: boolean;\r\n}\r\n\r\nexport class Calendar extends BaseComponent<ICalendarProps, ICalendarState> implements ICalendar {\r\n  public static defaultProps: ICalendarProps = {\r\n    onSelectDate: undefined,\r\n    onDismiss: undefined,\r\n    isMonthPickerVisible: true,\r\n    isDayPickerVisible: true,\r\n    showMonthPickerAsOverlay: false,\r\n    value: undefined,\r\n    today: new Date(),\r\n    firstDayOfWeek: DayOfWeek.Sunday,\r\n    dateRangeType: DateRangeType.Day,\r\n    autoNavigateOnSelection: false,\r\n    showGoToToday: true,\r\n    strings: null,\r\n    highlightCurrentMonth: false,\r\n    highlightSelectedMonth: false,\r\n    navigationIcons: iconStrings,\r\n    showWeekNumbers: false,\r\n    firstWeekOfYear: FirstWeekOfYear.FirstDay,\r\n    dateTimeFormatter: dateTimeFormatterCallbacks,\r\n    showSixWeeksByDefault: false,\r\n    workWeekDays: defaultWorkWeekDays\r\n  };\r\n\r\n  private _dayPicker = createRef<ICalendarDay>();\r\n  private _monthPicker = createRef<ICalendarMonth>();\r\n\r\n  private _focusOnUpdate: boolean;\r\n\r\n  constructor(props: ICalendarProps) {\r\n    super(props);\r\n    const currentDate = props.value && !isNaN(props.value.getTime()) ? props.value : (props.today || new Date());\r\n\r\n    this.state = {\r\n      selectedDate: currentDate,\r\n      navigatedDayDate: currentDate,\r\n      navigatedMonthDate: currentDate,\r\n\r\n      /** When showMonthPickerAsOverlay is active it overrides isMonthPickerVisible/isDayPickerVisible props (These props permanently set the visibility of their respective calendars). */\r\n      isMonthPickerVisible: this.props.showMonthPickerAsOverlay ? false : this.props.isMonthPickerVisible,\r\n      isDayPickerVisible: this.props.showMonthPickerAsOverlay ? true : this.props.isDayPickerVisible\r\n    };\r\n\r\n    this._focusOnUpdate = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarProps): void {\r\n    const { autoNavigateOnSelection, value, today = new Date() } = nextProps;\r\n\r\n    // Make sure auto-navigation is supported for programmatic changes to selected date, i.e.,\r\n    // if selected date is updated via props, we may need to modify the navigated date\r\n    const overrideNavigatedDate = (autoNavigateOnSelection && !compareDates(value!, this.props.value!));\r\n    if (overrideNavigatedDate) {\r\n      this.setState({\r\n        navigatedMonthDate: value,\r\n        navigatedDayDate: value\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      selectedDate: value || today\r\n    });\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    if (this._focusOnUpdate) {\r\n      this.focus();\r\n      this._focusOnUpdate = false;\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const rootClass = 'ms-DatePicker';\r\n    const { firstDayOfWeek, dateRangeType, strings, showMonthPickerAsOverlay, autoNavigateOnSelection, showGoToToday, highlightCurrentMonth, highlightSelectedMonth, navigationIcons, minDate, maxDate, className } = this.props;\r\n    const { selectedDate, navigatedDayDate, navigatedMonthDate, isMonthPickerVisible, isDayPickerVisible } = this.state;\r\n    const onHeaderSelect = showMonthPickerAsOverlay ? this._onHeaderSelect : undefined;\r\n    const monthPickerOnly = !showMonthPickerAsOverlay && !isDayPickerVisible;\r\n    const overlayedWithButton = showMonthPickerAsOverlay && showGoToToday;\r\n\r\n    return (\r\n      <div className={ css(rootClass, styles.root, className) } role='application'>\r\n        <div\r\n          className={ css(\r\n            'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused',\r\n            styles.picker,\r\n            styles.pickerIsOpened,\r\n            styles.pickerIsFocused,\r\n            isMonthPickerVisible && ('ms-DatePicker-monthPickerVisible ' + styles.monthPickerVisible),\r\n            isMonthPickerVisible && isDayPickerVisible && ('ms-DatePicker-calendarsInline ' + styles.calendarsInline),\r\n            monthPickerOnly && ('ms-DatePicker-monthPickerOnly ' + styles.monthPickerOnly),\r\n            showMonthPickerAsOverlay && ('ms-DatePicker-monthPickerAsOverlay ' + styles.monthPickerAsOverlay),\r\n          ) }\r\n        >\r\n          <div className={ css('ms-DatePicker-holder ms-slideDownIn10', styles.holder, overlayedWithButton && styles.holderWithButton) } onKeyDown={ this._onDatePickerPopupKeyDown }>\r\n            <div className={ css('ms-DatePicker-frame', styles.frame) }>\r\n              <div className={ css('ms-DatePicker-wrap', styles.wrap, showGoToToday && styles.goTodaySpacing) }>\r\n                { isDayPickerVisible && <CalendarDay\r\n                  selectedDate={ selectedDate! }\r\n                  navigatedDate={ navigatedDayDate! }\r\n                  today={ this.props.today }\r\n                  onSelectDate={ this._onSelectDate }\r\n                  onNavigateDate={ this._onNavigateDayDate }\r\n                  onDismiss={ this.props.onDismiss }\r\n                  firstDayOfWeek={ firstDayOfWeek! }\r\n                  dateRangeType={ dateRangeType! }\r\n                  autoNavigateOnSelection={ autoNavigateOnSelection! }\r\n                  strings={ strings! }\r\n                  onHeaderSelect={ onHeaderSelect }\r\n                  navigationIcons={ navigationIcons! }\r\n                  showWeekNumbers={ this.props.showWeekNumbers }\r\n                  firstWeekOfYear={ this.props.firstWeekOfYear! }\r\n                  dateTimeFormatter={ this.props.dateTimeFormatter! }\r\n                  showSixWeeksByDefault={ this.props.showSixWeeksByDefault }\r\n                  minDate={ minDate }\r\n                  maxDate={ maxDate }\r\n                  workWeekDays={ this.props.workWeekDays }\r\n                  componentRef={ this._dayPicker }\r\n                />\r\n                }\r\n                { isDayPickerVisible && isMonthPickerVisible && <div className={ styles.divider } /> }\r\n                { isMonthPickerVisible &&\r\n                  <CalendarMonth\r\n                    navigatedDate={ navigatedMonthDate! }\r\n                    selectedDate={ navigatedDayDate! }\r\n                    strings={ strings! }\r\n                    onNavigateDate={ this._onNavigateMonthDate }\r\n                    today={ this.props.today }\r\n                    highlightCurrentMonth={ highlightCurrentMonth! }\r\n                    highlightSelectedMonth={ highlightSelectedMonth! }\r\n                    onHeaderSelect={ onHeaderSelect }\r\n                    navigationIcons={ navigationIcons! }\r\n                    dateTimeFormatter={ this.props.dateTimeFormatter! }\r\n                    minDate={ minDate }\r\n                    maxDate={ maxDate }\r\n                    componentRef={ this._monthPicker }\r\n                  /> }\r\n\r\n                { showGoToToday &&\r\n                  <button\r\n                    role='button'\r\n                    className={ css('ms-DatePicker-goToday js-goToday', styles.goToday, {\r\n                      [styles.goTodayInlineMonth]: isMonthPickerVisible\r\n                    }) }\r\n                    onClick={ this._onGotoToday }\r\n                    onKeyDown={ this._onGotoTodayKeyDown }\r\n                    tabIndex={ 0 }\r\n                  >\r\n                    { strings!.goToToday }\r\n                  </button>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.state.isDayPickerVisible && this._dayPicker.current) {\r\n      this._dayPicker.current.focus();\r\n    } else if (this.state.isMonthPickerVisible && this._monthPicker.current) {\r\n      this._monthPicker.current.focus();\r\n    }\r\n  }\r\n\r\n  private _navigateDayPickerDay = (date: Date): void => {\r\n    this.setState({\r\n      navigatedDayDate: date,\r\n      navigatedMonthDate: date\r\n    });\r\n  }\r\n\r\n  private _navigateMonthPickerDay = (date: Date): void => {\r\n    this.setState({\r\n      navigatedMonthDate: date\r\n    });\r\n  }\r\n\r\n  private _onNavigateDayDate = (date: Date, focusOnNavigatedDay: boolean): void => {\r\n    this._navigateDayPickerDay(date);\r\n    this._focusOnUpdate = focusOnNavigatedDay;\r\n  }\r\n\r\n  private _onNavigateMonthDate = (date: Date, focusOnNavigatedDay: boolean): void => {\r\n    if (!focusOnNavigatedDay) {\r\n      this._navigateMonthPickerDay(date);\r\n      this._focusOnUpdate = focusOnNavigatedDay;\r\n      return;\r\n    }\r\n    if (!this.state.isDayPickerVisible) {\r\n      this._onSelectDate(date);\r\n    }\r\n\r\n    this._navigateDayPickerDay(date);\r\n  }\r\n\r\n  private _onSelectDate = (date: Date, selectedDateRangeArray?: Date[]): void => {\r\n    const { onSelectDate } = this.props;\r\n\r\n    this.setState({\r\n      selectedDate: date\r\n    });\r\n\r\n    if (onSelectDate) {\r\n      onSelectDate(date, selectedDateRangeArray);\r\n    }\r\n  }\r\n\r\n  private _onHeaderSelect = (focus: boolean): void => {\r\n    this.setState({\r\n      isDayPickerVisible: !this.state.isDayPickerVisible,\r\n      isMonthPickerVisible: !this.state.isMonthPickerVisible\r\n    });\r\n\r\n    if (focus) {\r\n      this._focusOnUpdate = true;\r\n    }\r\n  }\r\n\r\n  private _onGotoToday = (): void => {\r\n    const { dateRangeType, firstDayOfWeek, today, workWeekDays } = this.props;\r\n\r\n    const dates = getDateRangeArray(today!, dateRangeType!, firstDayOfWeek!, workWeekDays!);\r\n\r\n    this._onSelectDate(today!, dates);\r\n    this._navigateDayPickerDay(today!);\r\n  }\r\n\r\n  private _onGotoTodayKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which === KeyCodes.enter) {\r\n      ev.preventDefault();\r\n      this._onGotoToday();\r\n    }\r\n  }\r\n\r\n  private _onDatePickerPopupKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    switch (ev.which) {\r\n      case KeyCodes.enter:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.backspace:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.escape:\r\n        this._handleEscKey(ev);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _handleEscKey = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (this.props.onDismiss) {\r\n      this.props.onDismiss();\r\n    }\r\n  }\r\n}\r\n"]}