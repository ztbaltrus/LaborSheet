{"version":3,"file":"Calendar.Inline.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Inline.Example.tsx"],"names":[],"mappings":";;;IASA,IAAM,gBAAgB,GAAG;QACvB,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE;YACX,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN;QAED,IAAI,EAAE;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,WAAW;YACX,UAAU;YACV,QAAQ;YACR,UAAU;SACX;QAED,SAAS,EAAE;YACT,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ;QAED,SAAS,EAAE,aAAa;QACxB,sBAAsB,EAAE,iBAAiB;KAC1C,CAAC;IAyBF;QAA2C,iDAAyE;QAClH,+BAAmB,KAAkC;YAArD,YACE,kBAAM,KAAK,CAAC,SAWb;YATC,KAAI,CAAC,KAAK,GAAG;gBACX,YAAY,EAAE,IAAI;gBAClB,iBAAiB,EAAE,IAAI;aACxB,CAAC;YAEF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC7C,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACnD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACvC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QACjD,CAAC;QAEM,sCAAM,GAAb;YACE,IAAM,QAAQ,GAAwB;gBACpC,MAAM,EAAE,OAAO;aAChB,CAAC;YAEF,IAAM,WAAW,GAAwB;gBACvC,MAAM,EAAE,eAAe;aACxB,CAAC;YAEF,IAAI,eAAe,GAAkB,IAAI,CAAC;YAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;gBAChC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACnD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACvF,eAAe,GAAG,UAAU,CAAC,kBAAkB,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;aACzF;YAED,OAAO,CACL,6BAAK,KAAK,EAAG,QAAQ;gBACjB;;oBACkB,kCAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,EAAE,CAAS,CAC9G;gBACN;;oBAEE;;wBAAS,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,eAAe,CAAS,CAC5D;gBACJ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;oBAC1C;;wBAEE;;4BAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,SAAS;;4BAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAS,CACnK;gBAER,oBAAC,mBAAQ,IACP,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,SAAS,EAAG,IAAI,CAAC,UAAU,EAC3B,oBAAoB,EAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,EACtD,aAAa,EAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,uBAAuB,EAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAC5D,aAAa,EAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,YAAa,EAChC,cAAc,EAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,oBAAS,CAAC,MAAM,EACzF,OAAO,EAAG,gBAAgB,EAC1B,qBAAqB,EAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EACxD,sBAAsB,EAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAC1D,kBAAkB,EAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAClD,wBAAwB,EAAG,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAC9D,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAC5B,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAC5B,qBAAqB,EAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EACxD,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GACtC;gBACA,IAAI,CAAC,KAAK,CAAC,mBAAmB;oBAC9B;wBACE,oBAAC,sBAAa,IAAC,KAAK,EAAG,WAAW,EAAG,OAAO,EAAG,IAAI,CAAC,WAAW,EAAG,IAAI,EAAC,UAAU,GAAG;wBACpF,oBAAC,sBAAa,IAAC,KAAK,EAAG,WAAW,EAAG,OAAO,EAAG,IAAI,CAAC,OAAO,EAAG,IAAI,EAAC,MAAM,GAAG,CACxE,CAEJ,CACP,CAAC;QACJ,CAAC;QAEO,0CAAU,GAAlB;YACE,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;gBACnD,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,2CAAW,GAAnB;YAAA,iBAmBC;YAlBC,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;gBACnD,IAAM,YAAY,GAAG,SAAS,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;gBAC1D,IAAM,cAAc,GAAG,4BAAiB,CAAC,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;gBAEnG,IAAI,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC;gBAE3C,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,KAAK,wBAAa,CAAC,KAAK,EAAE;oBACpD,YAAY,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;oBAChF,cAAc,GAAG,CAAC,CAAC;iBACpB;gBAED,IAAM,eAAe,GAAG,kBAAO,CAAC,YAAY,EAAE,CAAC,cAAc,CAAC,CAAC;gBAE/D,OAAO;oBACL,YAAY,EAAE,eAAe;iBAC9B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,uCAAO,GAAf;YAAA,iBAUC;YATC,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;gBACnD,IAAM,YAAY,GAAG,SAAS,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;gBAC1D,IAAM,cAAc,GAAG,4BAAiB,CAAC,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,oBAAS,CAAC,MAAM,CAAC,CAAC;gBACnG,IAAM,eAAe,GAAG,kBAAO,CAAC,cAAc,CAAC,GAAG,EAAG,EAAE,CAAC,CAAC,CAAC;gBAE1D,OAAO;oBACL,YAAY,EAAE,eAAe;iBAC9B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,6CAAa,GAArB,UAAsB,IAAU,EAAE,cAAsB;YACtD,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;gBACnD,OAAO;oBACL,YAAY,EAAE,IAAI;oBAClB,iBAAiB,EAAE,cAAc;iBAClC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QACH,4BAAC;IAAD,CAAC,AA3HD,CAA2C,KAAK,CAAC,SAAS,GA2HzD;IA3HY,sDAAqB","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { addDays, getDateRangeArray } from 'office-ui-fabric-react/lib/utilities/dateMath/DateMath';\r\nimport {\r\n  Calendar,\r\n  DayOfWeek\r\n} from 'office-ui-fabric-react/lib/Calendar';\r\nimport { DateRangeType } from 'office-ui-fabric-react/lib/Calendar';\r\n\r\nconst DayPickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n  weekNumberFormatString: 'Week number {0}',\r\n};\r\n\r\nexport interface ICalendarInlineExampleState {\r\n  selectedDate?: Date | null;\r\n  selectedDateRange?: Date[] | null;\r\n}\r\n\r\nexport interface ICalendarInlineExampleProps {\r\n  isMonthPickerVisible?: boolean;\r\n  dateRangeType: DateRangeType;\r\n  autoNavigateOnSelection: boolean;\r\n  showGoToToday: boolean;\r\n  showNavigateButtons?: boolean;\r\n  highlightCurrentMonth?: boolean;\r\n  highlightSelectedMonth?: boolean;\r\n  isDayPickerVisible?: boolean;\r\n  showMonthPickerAsOverlay?: boolean;\r\n  showWeekNumbers?: boolean;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  showSixWeeksByDefault?: boolean;\r\n  workWeekDays?: DayOfWeek[];\r\n  firstDayOfWeek?: DayOfWeek;\r\n}\r\n\r\nexport class CalendarInlineExample extends React.Component<ICalendarInlineExampleProps, ICalendarInlineExampleState> {\r\n  public constructor(props: ICalendarInlineExampleProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedDate: null,\r\n      selectedDateRange: null\r\n    };\r\n\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n    this._onSelectDate = this._onSelectDate.bind(this);\r\n    this._goNext = this._goNext.bind(this);\r\n    this._goPrevious = this._goPrevious.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const divStyle: React.CSSProperties = {\r\n      height: '340px'\r\n    };\r\n\r\n    const buttonStyle: React.CSSProperties = {\r\n      margin: '17px 10px 0 0'\r\n    };\r\n\r\n    let dateRangeString: string | null = null;\r\n    if (this.state.selectedDateRange) {\r\n      const rangeStart = this.state.selectedDateRange[0];\r\n      const rangeEnd = this.state.selectedDateRange[this.state.selectedDateRange.length - 1];\r\n      dateRangeString = rangeStart.toLocaleDateString() + '-' + rangeEnd.toLocaleDateString();\r\n    }\r\n\r\n    return (\r\n      <div style={ divStyle }>\r\n        { <div>\r\n          Selected date(s): <span>{ !this.state.selectedDate ? 'Not set' : this.state.selectedDate.toLocaleString() }</span>\r\n        </div> }\r\n        <div>\r\n          Selected dates:\r\n          <span> { !dateRangeString ? 'Not set' : dateRangeString }</span>\r\n        </div>\r\n        { (this.props.minDate || this.props.maxDate) &&\r\n          <div>\r\n            Date boundary:\r\n            <span> { this.props.minDate ? this.props.minDate.toLocaleDateString() : 'Not set' }-{ this.props.maxDate ? this.props.maxDate.toLocaleDateString() : 'Not set' }</span>\r\n          </div>\r\n        }\r\n        <Calendar\r\n          onSelectDate={ this._onSelectDate }\r\n          onDismiss={ this._onDismiss }\r\n          isMonthPickerVisible={ this.props.isMonthPickerVisible }\r\n          dateRangeType={ this.props.dateRangeType }\r\n          autoNavigateOnSelection={ this.props.autoNavigateOnSelection }\r\n          showGoToToday={ this.props.showGoToToday }\r\n          value={ this.state.selectedDate! }\r\n          firstDayOfWeek={ this.props.firstDayOfWeek ? this.props.firstDayOfWeek : DayOfWeek.Sunday }\r\n          strings={ DayPickerStrings }\r\n          highlightCurrentMonth={ this.props.highlightCurrentMonth }\r\n          highlightSelectedMonth={ this.props.highlightSelectedMonth }\r\n          isDayPickerVisible={ this.props.isDayPickerVisible }\r\n          showMonthPickerAsOverlay={ this.props.showMonthPickerAsOverlay }\r\n          showWeekNumbers={ this.props.showWeekNumbers }\r\n          minDate={ this.props.minDate }\r\n          maxDate={ this.props.maxDate }\r\n          showSixWeeksByDefault={ this.props.showSixWeeksByDefault }\r\n          workWeekDays={ this.props.workWeekDays }\r\n        />\r\n        { this.props.showNavigateButtons &&\r\n          <div>\r\n            <DefaultButton style={ buttonStyle } onClick={ this._goPrevious } text='Previous' />\r\n            <DefaultButton style={ buttonStyle } onClick={ this._goNext } text='Next' />\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onDismiss(): void {\r\n    this.setState((prevState: ICalendarInlineExampleState) => {\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  private _goPrevious(): void {\r\n    this.setState((prevState: ICalendarInlineExampleState) => {\r\n      const selectedDate = prevState.selectedDate || new Date();\r\n      const dateRangeArray = getDateRangeArray(selectedDate, this.props.dateRangeType, DayOfWeek.Sunday);\r\n\r\n      let subtractFrom = dateRangeArray[0];\r\n      let daysToSubtract = dateRangeArray.length;\r\n\r\n      if (this.props.dateRangeType === DateRangeType.Month) {\r\n        subtractFrom = new Date(subtractFrom.getFullYear(), subtractFrom.getMonth(), 1);\r\n        daysToSubtract = 1;\r\n      }\r\n\r\n      const newSelectedDate = addDays(subtractFrom, -daysToSubtract);\r\n\r\n      return {\r\n        selectedDate: newSelectedDate\r\n      };\r\n    });\r\n  }\r\n\r\n  private _goNext(): void {\r\n    this.setState((prevState: ICalendarInlineExampleState) => {\r\n      const selectedDate = prevState.selectedDate || new Date();\r\n      const dateRangeArray = getDateRangeArray(selectedDate, this.props.dateRangeType, DayOfWeek.Sunday);\r\n      const newSelectedDate = addDays(dateRangeArray.pop()!, 1);\r\n\r\n      return {\r\n        selectedDate: newSelectedDate\r\n      };\r\n    });\r\n  }\r\n\r\n  private _onSelectDate(date: Date, dateRangeArray: Date[]): void {\r\n    this.setState((prevState: ICalendarInlineExampleState) => {\r\n      return {\r\n        selectedDate: date,\r\n        selectedDateRange: dateRangeArray\r\n      };\r\n    });\r\n  }\r\n}\r\n"]}