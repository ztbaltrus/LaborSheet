{"version":3,"file":"BaseFloatingPicker.js","sourceRoot":"../src/","sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  getRTL,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { Callout, DirectionalHint } from '../../Callout';\r\nimport { ISuggestionModel }\r\n  from '../../Pickers';\r\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps, IBaseFloatingPickerSuggestionProps } from './BaseFloatingPicker.types';\r\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\r\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\r\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\r\nimport * as stylesImport from './BaseFloatingPicker.scss';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBaseFloatingPickerState {\r\n  queryString: string;\r\n  suggestedDisplayValue?: string;\r\n  moreSuggestionsAvailable?: boolean;\r\n  isMostRecentlyUsedVisible?: boolean;\r\n  suggestionsVisible?: boolean;\r\n  suggestionsLoading?: boolean;\r\n  isResultsFooterVisible?: boolean;\r\n  didBind: boolean;\r\n}\r\n\r\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>> extends BaseComponent<P, IBaseFloatingPickerState>\r\n  implements IBaseFloatingPicker {\r\n  protected selection: Selection;\r\n\r\n  protected root = createRef<HTMLDivElement>();\r\n  protected suggestionStore: SuggestionsStore<T>;\r\n  protected suggestionsControl: SuggestionsControl<T>;\r\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T> =\r\n    SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\r\n  protected loadingTimer: number | undefined;\r\n  // tslint:disable-next-line:no-any\r\n  protected currentPromise: PromiseLike<any>;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    this.suggestionStore = basePickerProps.suggestionsStore;\r\n    this.state = {\r\n      queryString: '',\r\n      suggestedDisplayValue: '',\r\n      isMostRecentlyUsedVisible: false,\r\n      moreSuggestionsAvailable: false,\r\n      didBind: false,\r\n    };\r\n  }\r\n\r\n  public get inputText(): string {\r\n    return this.state.queryString;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public get suggestions(): any[] {\r\n    return this.suggestionStore.suggestions;\r\n  }\r\n\r\n  public forceResolveSuggestion(): void {\r\n    if (this.suggestionsControl && this.suggestionsControl.hasSuggestionSelected()) {\r\n      this.completeSuggestion();\r\n    } else {\r\n      this._onValidateInput();\r\n    }\r\n  }\r\n\r\n  public get isSuggestionsShown(): boolean {\r\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\r\n  }\r\n\r\n  public onQueryStringChanged = (queryString: string): void => {\r\n    if (queryString !== this.state.queryString) {\r\n      this.setState({\r\n        queryString: queryString,\r\n        moreSuggestionsAvailable: true,\r\n        isMostRecentlyUsedVisible: false,\r\n      });\r\n\r\n      this.showPicker();\r\n\r\n      if (queryString === '') {\r\n        this.updateSuggestionWithZeroState();\r\n      } else {\r\n        this.updateValue(queryString);\r\n      }\r\n    }\r\n  }\r\n\r\n  public hidePicker = (): void => {\r\n    if (this.props.onSuggestionsHidden && this.isSuggestionsShown) {\r\n      this.props.onSuggestionsHidden();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: false,\r\n    });\r\n  }\r\n\r\n  public showPicker = (updateValue: boolean = false): void => {\r\n    if (this.props.onSuggestionsShown && !this.isSuggestionsShown) {\r\n      this.props.onSuggestionsShown();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: true,\r\n    });\r\n\r\n    // If updateValue AND\r\n    //  Either suggestionsVisible is undefined (first time the suggestions is set to visble)\r\n    //  OR the inputElement value is different than the query string\r\n    if (updateValue &&\r\n      (this.state.suggestionsVisible === undefined\r\n        || (this.props.inputElement && this.props.inputElement.value !== this.state.queryString))) {\r\n      if (this.state.queryString === '') {\r\n        this.updateSuggestionWithZeroState();\r\n      } else {\r\n        this.updateValue(this.state.queryString);\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._bindToInputElement();\r\n\r\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    this._bindToInputElement();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._unbindFromInputElement();\r\n  }\r\n\r\n  public completeSuggestion = (): void => {\r\n    if (this.suggestionsControl && this.suggestionsControl.hasSuggestionSelected()) {\r\n      this.onChange(this.suggestionsControl.currentSuggestion!.item);\r\n    }\r\n  }\r\n\r\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\r\n    this.suggestionStore.updateSuggestions(suggestions);\r\n\r\n    if (forceUpdate) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className } = this.props;\r\n    return (\r\n      <div\r\n        ref={ this.root }\r\n        className={ css('ms-BasePicker', className ? className : '') }\r\n      >\r\n        { this.renderSuggestions() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element | null {\r\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\r\n    return this.state.suggestionsVisible ? (\r\n      <Callout\r\n        className={ styles.callout }\r\n        isBeakVisible={ false }\r\n        gapSpace={ 5 }\r\n        target={ this.props.inputElement }\r\n        onDismiss={ this.hidePicker }\r\n        directionalHint={\r\n          getRTL() ? (\r\n            DirectionalHint.bottomRightEdge\r\n          ) : (\r\n              DirectionalHint.bottomLeftEdge\r\n            )\r\n        }\r\n        calloutWidth={ this.props.calloutWidth ? this.props.calloutWidth : 0 }\r\n      >\r\n        <TypedSuggestionsControl\r\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\r\n          onSuggestionClick={ this.onSuggestionClick }\r\n          onSuggestionRemove={ this.onSuggestionRemove }\r\n          suggestions={ this.suggestionStore.getSuggestions() }\r\n          ref={ this._resolveRef('suggestionsControl') }\r\n          completeSuggestion={ this.completeSuggestion }\r\n          shouldLoopSelection={ false }\r\n          { ...this.props.pickerSuggestionsProps as IBaseFloatingPickerSuggestionProps }\r\n        />\r\n      </Callout>\r\n    ) : null;\r\n  }\r\n\r\n  protected onSuggestionSelect(): void {\r\n    if (this.suggestionsControl && this.suggestionsControl.currentSuggestion) {\r\n      const currentValue: string = this.state.queryString;\r\n      const itemValue: string = this._getTextFromItem(\r\n        this.suggestionsControl.currentSuggestion.item,\r\n        currentValue\r\n      );\r\n      this.setState({ suggestedDisplayValue: itemValue });\r\n    }\r\n  }\r\n\r\n  protected onSelectionChange(): void {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected updateValue(updatedValue: string): void {\r\n    if (this.props.onInputChanged) {\r\n      (this.props.onInputChanged as (filter: string) => void)(updatedValue);\r\n    }\r\n\r\n    this._onResolveSuggestions(updatedValue);\r\n  }\r\n\r\n  protected updateSuggestionWithZeroState(): void {\r\n    if (this.props.onZeroQuerySuggestion) {\r\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\r\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\r\n      this.updateSuggestionsList(suggestions);\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  protected updateSuggestionsList(\r\n    suggestions: T[] | PromiseLike<T[]>,\r\n    updatedValue?: string\r\n  ): void {\r\n    const suggestionsArray: T[] = suggestions as T[];\r\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<\r\n      T[]\r\n      >;\r\n\r\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\r\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\r\n    if (Array.isArray(suggestionsArray)) {\r\n      if (updatedValue !== undefined) {\r\n        this.resolveNewValue(updatedValue, suggestionsArray);\r\n      } else {\r\n        this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\r\n      }\r\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\r\n      this.setState({\r\n        suggestionsLoading: true\r\n      });\r\n\r\n      this._updateSuggestionsVisible(updatedValue !== undefined && updatedValue !== '');\r\n\r\n      // Ensure that the promise will only use the callback if it was the most recent one.\r\n      const promise: PromiseLike<\r\n        T[]\r\n        > = (this.currentPromise = suggestionsPromiseLike);\r\n      promise.then((newSuggestions: T[]) => {\r\n        if (promise === this.currentPromise) {\r\n          if (updatedValue !== undefined) {\r\n            this.resolveNewValue(updatedValue, newSuggestions);\r\n          } else {\r\n            this.updateSuggestions(newSuggestions);\r\n            this.setState({\r\n              suggestionsLoading: false\r\n            });\r\n\r\n            this._updateSuggestionsVisible(newSuggestions.length > 0);\r\n          }\r\n          if (this.loadingTimer) {\r\n            this._async.clearTimeout(this.loadingTimer);\r\n            this.loadingTimer = undefined;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected resolveNewValue(updatedValue: string, suggestions: T[]): void {\r\n    this.updateSuggestions(suggestions);\r\n    let itemValue: string | undefined = undefined;\r\n\r\n    if (this.suggestionsControl && this.suggestionsControl.currentSuggestion) {\r\n      itemValue = this._getTextFromItem(\r\n        this.suggestionsControl.currentSuggestion.item,\r\n        updatedValue\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsLoading: false,\r\n      suggestedDisplayValue: itemValue\r\n    });\r\n\r\n    this._updateSuggestionsVisible(updatedValue !== '');\r\n  }\r\n\r\n  protected onChange(item: T): void {\r\n    if (this.props.onChange) {\r\n      (this.props.onChange as ((items: T) => void))(item);\r\n    }\r\n  }\r\n\r\n  protected onSuggestionClick = (\r\n    ev: React.MouseEvent<HTMLElement>,\r\n    item: T,\r\n    index: number\r\n  ): void => {\r\n    this.onChange(item);\r\n  }\r\n\r\n  protected onSuggestionRemove = (\r\n    ev: React.MouseEvent<HTMLElement>,\r\n    item: T,\r\n    index: number\r\n  ): void => {\r\n    if (this.props.onRemoveSuggestion) {\r\n      (this.props.onRemoveSuggestion as ((item: T) => void))(item);\r\n    }\r\n\r\n    if (this.suggestionsControl) {\r\n      this.suggestionsControl.removeSuggestion(index);\r\n    }\r\n  }\r\n\r\n  protected onKeyDown = (ev: MouseEvent): void => {\r\n    if (!this.state.suggestionsVisible ||\r\n      (this.props.inputElement &&\r\n        !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))) {\r\n      return;\r\n    }\r\n    const keyCode = ev.which;\r\n    switch (keyCode) {\r\n      case KeyCodes.escape:\r\n        this.hidePicker();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n      case KeyCodes.enter:\r\n        if (!ev.shiftKey &&\r\n          !ev.ctrlKey &&\r\n          this.suggestionsControl &&\r\n          this.suggestionsControl.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        } else {\r\n          this._onValidateInput();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.del:\r\n        if (this.props.onRemoveSuggestion\r\n          && this.suggestionsControl\r\n          && this.suggestionsControl.hasSuggestionSelected\r\n          && this.suggestionsControl.currentSuggestion) {\r\n          (this.props.onRemoveSuggestion as ((item: T) => void))(\r\n            this.suggestionsControl.currentSuggestion!.item\r\n          );\r\n\r\n          this.suggestionsControl.removeSuggestion();\r\n          this.forceUpdate();\r\n        }\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (this.suggestionsControl && this.suggestionsControl.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (this.suggestionsControl && this.suggestionsControl.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onResolveSuggestions(updatedValue: string): void {\r\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\r\n\r\n    if (suggestions !== null) {\r\n      this.updateSuggestionsList(suggestions, updatedValue);\r\n    }\r\n  }\r\n\r\n  private _onValidateInput = (): void => {\r\n    if (\r\n      this.state.queryString &&\r\n      this.props.onValidateInput &&\r\n      this.props.createGenericItem\r\n    ) {\r\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as ((\r\n        input: string,\r\n        isValid: boolean\r\n      ) => ISuggestionModel<T>))(\r\n        this.state.queryString,\r\n        (this.props.onValidateInput as ((input: string) => boolean))(this.state.queryString)\r\n      );\r\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\r\n      this.onChange(convertedItems[0].item);\r\n    }\r\n  }\r\n\r\n  private _getTextFromItem(item: T, currentValue?: string): string {\r\n    if (this.props.getTextFromItem) {\r\n      return (this.props.getTextFromItem as ((item: T, currentValue?: string) => string))(item, currentValue);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\r\n    if (shouldShow) {\r\n      this.showPicker();\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  private _bindToInputElement(): void {\r\n    if (this.props.inputElement && !this.state.didBind) {\r\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: true });\r\n    }\r\n  }\r\n\r\n  private _unbindFromInputElement(): void {\r\n    if (this.props.inputElement && this.state.didBind) {\r\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: false });\r\n    }\r\n  }\r\n}"]}