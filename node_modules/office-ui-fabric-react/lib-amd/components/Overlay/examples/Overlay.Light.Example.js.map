{"version":3,"file":"Overlay.Light.Example.js","sourceRoot":"../src/","sources":["components/Overlay/examples/Overlay.Light.Example.tsx"],"names":[],"mappings":";;;IAeA;QAAyC,+CAEvC;QACA,6BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAGb;YAwBO,yBAAmB,GAAG;gBAC5B,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC7C,CAAC,CAAA;YAEO,oBAAc,GAAG;gBACvB,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;YACpE,CAAC,CAAA;YA/BC,KAAI,CAAC,KAAK,GAAG,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC;;QAC3C,CAAC;QAEM,oCAAM,GAAb;YACU,IAAA,8CAAgB,CAAgB;YACxC,IAAM,aAAa,GAAG,8BAAkB,EAA6B,CAAC;YACtE,IAAM,UAAU,GAAG,aAAa,CAAC,kCAAS,CAAC,CAAC;YAE5C,OAAO,CACL;gBACE,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,CAAC,cAAc,EAC7B,IAAI,EAAC,kBAAkB,GACvB;gBACA,gBAAgB,IAAI,CACpB,oBAAC,iBAAO,IAAC,OAAO,EAAG,IAAI,CAAC,mBAAmB;oBACzC,6BAAK,SAAS,EAAG,UAAU,CAAC,IAAI;wBAC9B,kEAAuC,CACnC,CACE,CACX,CACG,CACP,CAAC;QACJ,CAAC;QASH,0BAAC;IAAD,CAAC,AAtCD,CAAyC,KAAK,CAAC,SAAS,GAsCvD;IAtCY,kDAAmB","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  IStyleFunction,\r\n  classNamesFunction\r\n} from '../../../Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\n\r\nimport { Overlay } from '../Overlay';\r\n\r\nimport { getStyles, IOverlayExampleStyles } from './Overlay.Example.styles';\r\n\r\nexport interface IOverlayLightExampleProps {\r\n  getStyles?: IStyleFunction<{}, IOverlayExampleStyles>;\r\n}\r\n\r\nexport class OverlayLightExample extends React.Component<{}, {\r\n  isOverlayVisible: boolean;\r\n}> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = { isOverlayVisible: false };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isOverlayVisible } = this.state;\r\n    const getClassNames = classNamesFunction<{}, IOverlayExampleStyles>();\r\n    const classNames = getClassNames(getStyles);\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          onClick={ this._toggleOverlay }\r\n          text='Show the overlay'\r\n        />\r\n        { isOverlayVisible && (\r\n          <Overlay onClick={ this._setVisibilityFalse } >\r\n            <div className={ classNames.root }>\r\n              <p>I am content within the overlay.</p>\r\n            </div>\r\n          </Overlay>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _setVisibilityFalse = (): void => {\r\n    this.setState({ isOverlayVisible: false });\r\n  }\r\n\r\n  private _toggleOverlay = (): void => {\r\n    this.setState({ isOverlayVisible: !this.state.isOverlayVisible });\r\n  }\r\n}\r\n"]}