define(["require", "exports", "tslib", "react", "@uifabric/example-app-base", "./examples/Spinner.Basic.Example", "../../demo/ComponentStatus/ComponentStatus", "./Spinner.checklist"], function (require, exports, tslib_1, React, example_app_base_1, Spinner_Basic_Example_1, ComponentStatus_1, Spinner_checklist_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SpinnerBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Spinner/examples/Spinner.Basic.Example.tsx');
    var SpinnerPage = /** @class */ (function (_super) {
        tslib_1.__extends(SpinnerPage, _super);
        function SpinnerPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SpinnerPage.prototype.render = function () {
            return (React.createElement(example_app_base_1.ComponentPage, { title: 'Spinner', componentName: 'SpinnerExample', componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Spinner', exampleCards: React.createElement(example_app_base_1.ExampleCard, { title: 'Various Spinner Types', code: SpinnerBasicExampleCode },
                    React.createElement(Spinner_Basic_Example_1.SpinnerBasicExample, null)), propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                        require('!raw-loader!office-ui-fabric-react/src/components/Spinner/Spinner.types.ts')
                    ] }), overview: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Spinner/docs/SpinnerOverview.md')), bestPractices: React.createElement("div", null), dos: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Spinner/docs/SpinnerDos.md')), donts: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Spinner/docs/SpinnerDonts.md')), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus_1.ComponentStatus, tslib_1.__assign({}, Spinner_checklist_1.SpinnerStatus)) }));
        };
        return SpinnerPage;
    }(React.Component));
    exports.SpinnerPage = SpinnerPage;
});
//# sourceMappingURL=SpinnerPage.js.map