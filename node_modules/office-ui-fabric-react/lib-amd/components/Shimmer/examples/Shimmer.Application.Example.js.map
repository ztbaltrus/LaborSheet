{"version":3,"file":"Shimmer.Application.Example.js","sourceRoot":"../src/","sources":["components/Shimmer/examples/Shimmer.Application.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { createListItems } from '@uifabric/example-app-base/lib/utilities/data';\r\nimport {\r\n  IColumn,\r\n  DetailsList,\r\n  buildColumns,\r\n  SelectionMode,\r\n  Toggle,\r\n  IDetailsRowProps,\r\n  DetailsRow\r\n} from 'office-ui-fabric-react/lib/index';\r\nimport { Shimmer } from 'office-ui-fabric-react/lib/Shimmer';\r\n\r\nimport * as ShimmerExampleStyles from './Shimmer.Example.scss';\r\n\r\nexport interface IItem {\r\n  [index: string]: string | number;\r\n  thumbnail: string;\r\n  key: string;\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  shape: string;\r\n  location: string;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst fileIcons: { name: string }[] = [\r\n  { name: 'accdb' },\r\n  { name: 'csv' },\r\n  { name: 'docx' },\r\n  { name: 'dotx' },\r\n  { name: 'mpp' },\r\n  { name: 'mpt' },\r\n  { name: 'odp' },\r\n  { name: 'ods' },\r\n  { name: 'odt' },\r\n  { name: 'one' },\r\n  { name: 'onepkg' },\r\n  { name: 'onetoc' },\r\n  { name: 'potx' },\r\n  { name: 'ppsx' },\r\n  { name: 'pptx' },\r\n  { name: 'pub' },\r\n  { name: 'vsdx' },\r\n  { name: 'vssx' },\r\n  { name: 'vstx' },\r\n  { name: 'xls' },\r\n  { name: 'xlsx' },\r\n  { name: 'xltx' },\r\n  { name: 'xsn' }\r\n];\r\n\r\nconst ITEMS_COUNT = 500;\r\nconst ITEMS_BATCH_SIZE = 10;\r\nconst PAGING_DELAY = 2500;\r\n\r\n// tslint:disable-next-line:no-any\r\nlet _items: any[];\r\n\r\nexport interface IShimmerApplicationExampleState {\r\n  items?: IItem[];\r\n  columns?: IColumn[];\r\n  isDataLoaded?: boolean;\r\n  isModalSelection?: boolean;\r\n  isCompactMode?: boolean;\r\n}\r\n\r\nexport class ShimmerApplicationExample extends BaseComponent<{}, IShimmerApplicationExampleState> {\r\n  private _isFetchingItems: boolean;\r\n  private _lastTimeoutId: number;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: new Array(),\r\n      columns: _buildColumns(),\r\n      isDataLoaded: false,\r\n      isModalSelection: false,\r\n      isCompactMode: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items, columns, isDataLoaded, isModalSelection, isCompactMode } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={ShimmerExampleStyles.shimmerExampleFlexGroup}>\r\n          <Toggle\r\n            label='Enable Modal Selection'\r\n            checked={isModalSelection}\r\n            onChanged={this._onChangeModalSelection}\r\n            onText='Modal'\r\n            offText='Normal'\r\n          />\r\n          <Toggle\r\n            label='Enable Compact Mode'\r\n            checked={isCompactMode}\r\n            onChanged={this._onChangeCompactMode}\r\n            onText='Compact'\r\n            offText='Normal'\r\n          />\r\n          <Toggle\r\n            label='Enable content loading'\r\n            checked={isDataLoaded}\r\n            onChanged={this._onLoadData}\r\n            onText='Content'\r\n            offText='Shimmer'\r\n          />\r\n        </div>\r\n        <div>\r\n          <DetailsList\r\n            setKey='items'\r\n            items={items!}\r\n            columns={columns}\r\n            compact={isCompactMode}\r\n            selectionMode={this.state.isModalSelection ? SelectionMode.multiple : SelectionMode.none}\r\n            onRenderItemColumn={this._onRenderItemColumn}\r\n            onRenderMissingItem={this._onRenderMissingItem}\r\n            enableShimmer={true}\r\n            listProps={{ renderedWindowsAhead: 0, renderedWindowsBehind: 0 }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderMissingItem = (index: number, rowProps: IDetailsRowProps): React.ReactNode => {\r\n    const { isDataLoaded } = this.state;\r\n    isDataLoaded && this._onDataMiss(index as number);\r\n\r\n    const shimmerRow: JSX.Element = <DetailsRow {...rowProps} shimmer={true} />;\r\n\r\n    return <Shimmer customElementsGroup={shimmerRow} />;\r\n  }\r\n\r\n  // Simulating asynchronus data loading each 2.5 sec\r\n  private _onDataMiss = (index: number): void => {\r\n    index = Math.floor(index / ITEMS_BATCH_SIZE) * ITEMS_BATCH_SIZE;\r\n    if (!this._isFetchingItems) {\r\n      this._isFetchingItems = true;\r\n      this._lastTimeoutId = this._async.setTimeout(() => {\r\n        this._isFetchingItems = false;\r\n        // tslint:disable-next-line:no-any\r\n        const itemsCopy = ([] as any[]).concat(this.state.items);\r\n        itemsCopy.splice.apply(\r\n          itemsCopy,\r\n          [index, ITEMS_BATCH_SIZE].concat(_items.slice(index, index + ITEMS_BATCH_SIZE))\r\n        );\r\n        this.setState({\r\n          items: itemsCopy\r\n        });\r\n      }, PAGING_DELAY);\r\n    }\r\n  }\r\n\r\n  private _onLoadData = (checked: boolean): void => {\r\n    if (!_items) {\r\n      _items = createListItems(ITEMS_COUNT);\r\n      _items.map((item: IItem) => {\r\n        const randomFileType = this._randomFileIcon();\r\n        item.thumbnail = randomFileType.url;\r\n      });\r\n    }\r\n\r\n    let items: IItem[];\r\n    if (checked) {\r\n      items = _items.slice(0, ITEMS_BATCH_SIZE).concat(new Array(ITEMS_COUNT - ITEMS_BATCH_SIZE));\r\n    } else {\r\n      items = new Array();\r\n      this._async.clearTimeout(this._lastTimeoutId);\r\n    }\r\n    this.setState({\r\n      isDataLoaded: checked,\r\n      items: items\r\n    });\r\n  }\r\n\r\n  private _onChangeModalSelection = (checked: boolean): void => {\r\n    this.setState({ isModalSelection: checked });\r\n  }\r\n\r\n  private _onChangeCompactMode = (checked: boolean): void => {\r\n    this.setState({ isCompactMode: checked });\r\n  }\r\n\r\n  private _onRenderItemColumn = (item: IItem, index: number, column: IColumn): JSX.Element | string | number => {\r\n    if (column.key === 'thumbnail') {\r\n      return <img src={item.thumbnail} />;\r\n    }\r\n\r\n    return item[column.key];\r\n  }\r\n\r\n  private _randomFileIcon(): { docType: string; url: string } {\r\n    const docType: string = fileIcons[Math.floor(Math.random() * fileIcons.length) + 0].name;\r\n    return {\r\n      docType,\r\n      url: `https://static2.sharepointonline.com/files/fabric/assets/brand-icons/document/svg/${docType}_16x1.svg`\r\n    };\r\n  }\r\n}\r\n\r\nfunction _buildColumns(): IColumn[] {\r\n  const _item = createListItems(1);\r\n  const columns: IColumn[] = buildColumns(_item);\r\n\r\n  columns.forEach((column: IColumn) => {\r\n    if (column.key === 'thumbnail') {\r\n      column.name = 'FileType';\r\n      column.minWidth = 16;\r\n      column.maxWidth = 16;\r\n      column.isIconOnly = true;\r\n      column.iconName = 'Page';\r\n    }\r\n  });\r\n  return columns;\r\n}\r\n"]}