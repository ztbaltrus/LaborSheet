{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { IContextualMenuItem, ContextualMenuItemType, DirectionalHint } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './ContextualMenuExample.scss';\r\n\r\nexport interface IContextualMenuMultiselectExampleState {\r\n  selection?: { [key: string]: boolean };\r\n}\r\n\r\nconst keys: string[] = ['newItem', 'share', 'mobile', 'enablePrint', 'enableMusic', 'newSub', 'emailMessage', 'calendarEvent', 'disabledNewSub', 'disabledEmailMessage', 'disabledCalendarEvent', 'splitButtonSubMenuLeftDirection', 'emailMessageLeft', 'calendarEventLeft', 'disabledPrimarySplit'];\r\n\r\nexport class ContextualMenuCheckmarksExample extends React.Component<{}, IContextualMenuMultiselectExampleState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._onToggleSelect = this._onToggleSelect.bind(this);\r\n\r\n    this.state = {\r\n      selection: {},\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { selection } = this.state;\r\n\r\n    return (\r\n      <DefaultButton\r\n        id='ContextualMenuButton2'\r\n        text='Click for ContextualMenu'\r\n        menuProps={\r\n          {\r\n            shouldFocusOnMount: true,\r\n            items:\r\n              [\r\n                {\r\n                  key: keys[0],\r\n                  name: 'New',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[0]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[1],\r\n                  name: 'Share',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[1]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[2],\r\n                  name: 'Mobile',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[2]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: 'divider_1',\r\n                  itemType: ContextualMenuItemType.Divider\r\n                },\r\n\r\n                {\r\n                  key: keys[3],\r\n                  name: 'Print',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[3]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[4],\r\n                  name: 'Music',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[4]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[5],\r\n                  iconProps: {\r\n                    iconName: 'MusicInCollectionFill'\r\n                  },\r\n                  subMenuProps: {\r\n                    items: [\r\n                      {\r\n                        key: keys[6],\r\n                        name: 'Email message',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[6]],\r\n                        onClick: this._onToggleSelect\r\n                      },\r\n                      {\r\n                        key: keys[7],\r\n                        name: 'Calendar event',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[7]],\r\n                        onClick: this._onToggleSelect\r\n                      }\r\n                    ],\r\n                  },\r\n                  name: 'Split Button',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[5]],\r\n                  split: true,\r\n                  onClick: this._onToggleSelect,\r\n                },\r\n                {\r\n                  key: keys[8],\r\n                  iconProps: {\r\n                    iconName: 'MusicInCollectionFill'\r\n                  },\r\n                  subMenuProps: {\r\n                    items: [\r\n                      {\r\n                        key: keys[9],\r\n                        name: 'Email message',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[9]],\r\n                        onClick: this._onToggleSelect\r\n                      },\r\n                      {\r\n                        key: keys[10],\r\n                        name: 'Calendar event',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[10]],\r\n                        onClick: this._onToggleSelect\r\n                      }\r\n                    ],\r\n                  },\r\n                  name: 'Split Button',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[8]],\r\n                  split: true,\r\n                  onClick: this._onToggleSelect,\r\n                  disabled: true\r\n                },\r\n                {\r\n                  key: keys[11],\r\n                  iconProps: {\r\n                    iconName: 'MusicInCollectionFill'\r\n                  },\r\n                  subMenuProps: {\r\n                    directionalHint: DirectionalHint.leftCenter,\r\n                    items: [\r\n                      {\r\n                        key: keys[12],\r\n                        name: 'Email message',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[12]],\r\n                        onClick: this._onToggleSelect\r\n                      },\r\n                      {\r\n                        key: keys[13],\r\n                        name: 'Calendar event',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[13]],\r\n                        onClick: this._onToggleSelect\r\n                      }\r\n                    ],\r\n                  },\r\n                  name: 'Split Button Left Menu',\r\n                  canCheck: true,\r\n                  isChecked: selection![keys[11]],\r\n                  split: true,\r\n                  onClick: this._onToggleSelect,\r\n                },\r\n                {\r\n                  key: keys[12],\r\n                  iconProps: {\r\n                    iconName: 'MusicInCollectionFill'\r\n                  },\r\n                  subMenuProps: {\r\n                    items: [\r\n                      {\r\n                        key: keys[12],\r\n                        name: 'Email message',\r\n                        canCheck: true,\r\n                        isChecked: selection![keys[12]],\r\n                        onClick: this._onToggleSelect\r\n                      }\r\n                    ],\r\n                  },\r\n                  name: 'Split Button Disabled Primary',\r\n                  split: true,\r\n                  primaryDisabled: true\r\n                },\r\n              ]\r\n          }\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem): void {\r\n    const { selection } = this.state;\r\n    ev!.preventDefault();\r\n    selection![item!.key] = !selection![item!.key];\r\n\r\n    this.setState({\r\n      selection: selection\r\n    });\r\n  }\r\n}"]}