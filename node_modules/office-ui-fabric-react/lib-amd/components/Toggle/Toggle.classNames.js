define(["require", "exports", "../../Utilities", "../../Styling"], function (require, exports, Utilities_1, Styling_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getClassNames = Utilities_1.memoizeFunction(function (theme, styles, className, disabled, checked) {
        var semanticColors = theme.semanticColors;
        var pillUncheckedBackground = semanticColors.bodyBackground;
        var pillCheckedBackground = semanticColors.inputBackgroundChecked;
        var pillCheckedHoveredBackground = semanticColors.inputBackgroundCheckedHovered;
        var pillCheckedDisabledBackground = semanticColors.disabledBodyText;
        var thumbBackground = semanticColors.inputBorderHovered;
        var thumbCheckedBackground = semanticColors.inputForegroundChecked;
        var thumbDisabledBackground = semanticColors.disabledBodyText;
        var thumbCheckedDisabledBackground = semanticColors.disabledBackground;
        var pillBorderColor = semanticColors.smallInputBorder;
        var pillBorderHoveredColor = semanticColors.inputBorderHovered;
        var pillBorderDisabledColor = semanticColors.disabledBodyText;
        var textDisabledColor = semanticColors.disabledText;
        styles = styles || {};
        return Styling_1.mergeStyleSets({
            root: [
                'ms-Toggle',
                checked && 'is-checked',
                !disabled && 'is-enabled',
                disabled && 'is-disabled',
                theme.fonts.medium,
                {
                    marginBottom: '8px'
                },
                className,
                styles.root,
            ],
            label: [
                'ms-Toggle-label',
                styles.label,
                disabled && {
                    color: textDisabledColor,
                    selectors: (_a = {},
                        _a[Styling_1.HighContrastSelector] = {
                            color: 'GrayText'
                        },
                        _a)
                }
            ],
            container: [
                'ms-Toggle-innerContainer',
                {
                    display: 'inline-flex',
                    position: 'relative',
                },
                styles.container
            ],
            pill: [
                'ms-Toggle-background',
                Styling_1.getFocusStyle(theme, -3),
                {
                    fontSize: '20px',
                    boxSizing: 'border-box',
                    width: '2.2em',
                    height: '1em',
                    borderRadius: '1em',
                    transition: 'all 0.1s ease',
                    borderWidth: '1px',
                    borderStyle: 'solid',
                    background: pillUncheckedBackground,
                    borderColor: pillBorderColor,
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    padding: '0 .2em'
                },
                styles.pill,
                !disabled && [
                    !checked && {
                        selectors: {
                            ':hover': [
                                {
                                    borderColor: pillBorderHoveredColor
                                },
                                styles.pillHovered
                            ],
                            ':hover .ms-Toggle-thumb': [
                                styles.thumbHovered,
                                {
                                    selectors: (_b = {},
                                        _b[Styling_1.HighContrastSelector] = {
                                            borderColor: 'Highlight'
                                        },
                                        _b)
                                }
                            ]
                        }
                    },
                    checked && [
                        {
                            background: pillCheckedBackground,
                            borderColor: 'transparent',
                            justifyContent: 'flex-end'
                        },
                        styles.pillChecked,
                        {
                            selectors: (_c = {
                                    ':hover': [
                                        {
                                            backgroundColor: pillCheckedHoveredBackground,
                                            borderColor: 'transparent',
                                            selectors: (_d = {},
                                                _d[Styling_1.HighContrastSelector] = {
                                                    backgroundColor: 'Highlight'
                                                },
                                                _d)
                                        },
                                        styles.pillCheckedHovered
                                    ],
                                    ':hover .ms-Toggle-thumb': [
                                        styles.thumbCheckedHovered
                                    ]
                                },
                                _c[Styling_1.HighContrastSelector] = {
                                    backgroundColor: 'WindowText'
                                },
                                _c)
                        }
                    ]
                ],
                disabled && [
                    {
                        cursor: 'default'
                    },
                    !checked && [
                        {
                            borderColor: pillBorderDisabledColor
                        },
                        styles.pillDisabled
                    ],
                    checked && [
                        {
                            backgroundColor: pillCheckedDisabledBackground,
                            borderColor: 'transparent',
                            justifyContent: 'flex-end'
                        },
                        styles.pillCheckedDisabled
                    ],
                ],
                !disabled && {
                    selectors: {
                        '&:hover': {
                            selectors: (_e = {},
                                _e[Styling_1.HighContrastSelector] = {
                                    borderColor: 'Highlight'
                                },
                                _e)
                        }
                    }
                }
            ],
            thumb: [
                'ms-Toggle-thumb',
                {
                    width: '.5em',
                    height: '.5em',
                    borderRadius: '.5em',
                    transition: 'all 0.1s ease',
                    backgroundColor: thumbBackground,
                    /* Border is added to handle high contrast mode for Firefox */
                    borderColor: 'transparent',
                    borderWidth: '.28em',
                    borderStyle: 'solid',
                    boxSizing: 'border-box'
                },
                styles.thumb,
                !disabled && checked && [
                    {
                        backgroundColor: thumbCheckedBackground,
                        selectors: (_f = {},
                            _f[Styling_1.HighContrastSelector] = {
                                backgroundColor: 'Window',
                                borderColor: 'Window'
                            },
                            _f)
                    },
                    styles.thumbChecked,
                ],
                disabled && [
                    !checked && [
                        {
                            backgroundColor: thumbDisabledBackground,
                        },
                        styles.thumbDisabled
                    ],
                    checked && [
                        {
                            backgroundColor: thumbCheckedDisabledBackground,
                        },
                        styles.thumbCheckedDisabled
                    ]
                ]
            ],
            text: [
                'ms-Toggle-stateText',
                {
                    selectors: {
                        // Workaround: make rules more sepecific than Label rules.
                        '&&': {
                            padding: '0',
                            margin: '0 10px',
                            userSelect: 'none',
                        }
                    }
                },
                disabled && {
                    selectors: {
                        '&&': {
                            color: textDisabledColor,
                            selectors: (_g = {},
                                _g[Styling_1.HighContrastSelector] = {
                                    color: 'GrayText'
                                },
                                _g)
                        }
                    }
                },
                styles.text
            ]
        });
        var _a, _b, _c, _d, _e, _f, _g;
    });
});
//# sourceMappingURL=Toggle.classNames.js.map