{"version":3,"file":"PeoplePicker.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":";;;IAeA;QAAsC,4CAA6C;QAAnF;;QACA,CAAC;QAAD,uBAAC;IAAD,CAAC,AADD,CAAsC,uBAAU,GAC/C;IADY,4CAAgB;IAG7B;QAA4C,kDAAsD;QAAlG;;QACA,CAAC;QAAD,6BAAC;IAAD,CAAC,AADD,CAA4C,gCAAmB,GAC9D;IADY,wDAAsB;IAGnC;;OAEG;IACH;QAAwC,8CAAgB;QAAxD;;QAMA,CAAC;QALe,+BAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,yCAAmB,uBAAM,KAAK,EAAK,EAApC,CAAoC;YACrF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,4CAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAApD,CAAoD;YAChJ,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,yBAAC;KAAA,AAND,CAAwC,gBAAgB,GAMvD;IANY,gDAAkB;IAQ/B;;MAEE;IACF;QAAyC,+CAAgB;QAAzD;;QAMA,CAAC;QALe,gCAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,yCAAmB,uBAAM,KAAK,EAAK,EAApC,CAAoC;YACrF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,2CAAmB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAAnD,CAAmD;YAC/I,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,0BAAC;KAAA,AAND,CAAyC,gBAAgB,GAMxD;IANY,kDAAmB;IAQhC;;OAEG;IACH;QAAsC,4CAAsB;QAA5D;;QAMA,CAAC;QALe,6BAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,yCAAmB,uBAAM,KAAK,EAAK,EAApC,CAAoC;YACrF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,4CAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAApD,CAAoD;YAChJ,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,uBAAC;KAAA,AAND,CAAsC,sBAAsB,GAM3D;IANY,4CAAgB;IAc7B,2BAAkC,IAAY,EAAE,sBAAuC,EAAE,kBAA2B;QAClH,IAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,IAAI;YACT,WAAW,EAAE,IAAI;YACjB,aAAa,EAAE,GAAG;YAClB,eAAe,EAAE,sBAAsB;SACxC,CAAC;QAEF,IAAI,sBAAsB,KAAK,kCAAe,CAAC,OAAO,EAAE;YACtD,gBAAgB,CAAC,aAAa,GAAG,uBAAW,CAAC,IAAI,EAAE,kBAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC;SAClF;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAbD,8CAaC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { getRTL, getInitials } from '../../../Utilities';\r\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\r\nimport { IBasePickerProps, IBasePickerSuggestionsProps, ValidationState } from '../BasePicker.types';\r\nimport { SelectedItemDefault } from './PeoplePickerItems/SelectedItemDefault';\r\nimport { IPersonaProps } from '../../../Persona';\r\nimport { SuggestionItemSmall, SuggestionItemNormal } from './PeoplePickerItems/SuggestionItemDefault';\r\nimport './PeoplePicker.scss';\r\nimport { IPeoplePickerItemProps } from './PeoplePickerItems/PeoplePickerItem.types';\r\n\r\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {\r\n}\r\n\r\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {\r\n}\r\n\r\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {\r\n}\r\n\r\n/**\r\n * Standard People Picker.\r\n */\r\nexport class NormalPeoplePicker extends BasePeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault { ...props } />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemNormal({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n* Compact layout. It uses small personas when displaying search results.\r\n*/\r\nexport class CompactPeoplePicker extends BasePeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault { ...props } />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemSmall({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n * MemberList layout. The selected people show up below the search box.\r\n */\r\nexport class ListPeoplePicker extends MemberListPeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault { ...props } />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemNormal({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\nexport interface IGenericItem {\r\n  primaryText: string;\r\n  imageInitials: string;\r\n  ValidationState: ValidationState;\r\n}\r\n\r\nexport function createGenericItem(name: string, currentValidationState: ValidationState, allowPhoneInitials: boolean): IGenericItem & { key: React.Key } {\r\n  const personaToConvert = {\r\n    key: name,\r\n    primaryText: name,\r\n    imageInitials: '!',\r\n    ValidationState: currentValidationState\r\n  };\r\n\r\n  if (currentValidationState !== ValidationState.warning) {\r\n    personaToConvert.imageInitials = getInitials(name, getRTL(), allowPhoneInitials);\r\n  }\r\n\r\n  return personaToConvert;\r\n}"]}