{"version":3,"file":"BasePicker.js","sourceRoot":"../src/","sources":["components/pickers/BasePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  createRef,\r\n  elementContains\r\n} from '../../Utilities';\r\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Callout, DirectionalHint } from '../../Callout';\r\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\r\nimport { Suggestions } from './Suggestions/Suggestions';\r\nimport { ISuggestionsProps } from './Suggestions/Suggestions.types';\r\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\r\nimport { IBasePicker, IBasePickerProps, ValidationState } from './BasePicker.types';\r\nimport { IAutofill, Autofill } from '../Autofill/index';\r\nimport { IPickerItemProps } from './PickerItem.types';\r\nimport { IPersonaProps } from '../Persona/Persona.types';\r\nimport * as stylesImport from './BasePicker.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBasePickerState {\r\n  items?: any;\r\n  suggestedDisplayValue?: string;\r\n  moreSuggestionsAvailable?: boolean;\r\n  isFocused?: boolean;\r\n  isSearching?: boolean;\r\n  isMostRecentlyUsedVisible?: boolean;\r\n  suggestionsVisible?: boolean;\r\n  suggestionsLoading?: boolean;\r\n  isResultsFooterVisible?: boolean;\r\n}\r\n\r\nexport class BasePicker<T, P extends IBasePickerProps<T>> extends BaseComponent<P, IBasePickerState> implements IBasePicker<T> {\r\n\r\n  protected selection: Selection;\r\n\r\n  protected root = createRef<HTMLDivElement>();\r\n  protected input = createRef<IAutofill>();\r\n  protected focusZone = createRef<IFocusZone>();\r\n  protected suggestionElement = createRef<Suggestions<T>>();\r\n\r\n  protected suggestionStore: SuggestionsController<T>;\r\n  protected SuggestionOfProperType = Suggestions as new (props: ISuggestionsProps<T>) => Suggestions<T>;\r\n  protected loadingTimer: number | undefined;\r\n  protected currentPromise: PromiseLike<any> | undefined;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    const items: T[] = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\r\n\r\n    this.suggestionStore = new SuggestionsController<T>();\r\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\r\n    this.selection.setItems(items);\r\n    this.state = {\r\n      items: items,\r\n      suggestedDisplayValue: '',\r\n      isMostRecentlyUsedVisible: false,\r\n      moreSuggestionsAvailable: false,\r\n      isFocused: false,\r\n      isSearching: false\r\n    };\r\n  }\r\n\r\n  public get items(): T[] {\r\n    return this.state.items;\r\n  }\r\n\r\n  public componentWillUpdate(newProps: P, newState: IBasePickerState): void {\r\n    if (newState.items && newState.items !== this.state.items) {\r\n      this.selection.setItems(newState.items);\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.selection.setItems(this.state.items);\r\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: P): void {\r\n    const newItems = newProps.selectedItems;\r\n\r\n    if (newItems) {\r\n      let focusIndex: number;\r\n\r\n      // If there are less new items than old items then something was removed and we\r\n      // should try to keep focus consistent\r\n      if (newItems.length < this.state.items.length) {\r\n        focusIndex = this.state.items.indexOf(this.selection.getSelection()[0]);\r\n      }\r\n\r\n      this.setState({\r\n        items: newProps.selectedItems\r\n      }, () => {\r\n        if (focusIndex >= 0) {\r\n          this.resetFocus(focusIndex);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    super.componentWillUnmount();\r\n    if (this.loadingTimer) {\r\n      this._async.clearTimeout(this.loadingTimer);\r\n    }\r\n    if (this.currentPromise) {\r\n      this.currentPromise = undefined;\r\n    }\r\n  }\r\n\r\n  public focus() {\r\n    if (this.focusZone.current) {\r\n      this.focusZone.current.focus();\r\n    }\r\n  }\r\n\r\n  public focusInput() {\r\n    if (this.input.current) {\r\n      this.input.current.focus();\r\n    }\r\n  }\r\n\r\n  public dismissSuggestions = (ev?: any): void => {\r\n    const selectItemFunction = () => {\r\n      if (this.props.onDismiss) {\r\n        this.props.onDismiss(\r\n          ev,\r\n          this.suggestionStore.currentSuggestion ? this.suggestionStore.currentSuggestion.item : undefined\r\n        );\r\n      }\r\n\r\n      if (!ev || (ev && !ev.defaultPrevented)) {\r\n        // Select the first suggestion if one is available when user leaves.\r\n        if (this.canAddItems() && this.suggestionStore.hasSelectedSuggestion() && this.state.suggestedDisplayValue) {\r\n          this.addItemByIndex(0);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (this.currentPromise) {\r\n      this.currentPromise.then(() => selectItemFunction());\r\n    } else {\r\n      selectItemFunction();\r\n    }\r\n    this.setState({ suggestionsVisible: false });\r\n  }\r\n\r\n  public completeSuggestion() {\r\n    if (this.suggestionStore.hasSelectedSuggestion() && this.input.current) {\r\n      this.addItem(this.suggestionStore.currentSuggestion!.item);\r\n      this.updateValue('');\r\n      this.input.current.clear();\r\n    }\r\n  }\r\n\r\n  public refocusSuggestions = (keyCode: KeyCodes): void => {\r\n    this.resetFocus();\r\n    if (this.suggestionStore.suggestions && this.suggestionStore.suggestions.length > 0) {\r\n      if (keyCode === KeyCodes.up) {\r\n        this.suggestionStore.setSelectedSuggestion(this.suggestionStore.suggestions.length - 1);\r\n      } else if (keyCode === KeyCodes.down) {\r\n        this.suggestionStore.setSelectedSuggestion(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { suggestedDisplayValue } = this.state;\r\n    const {\r\n      className,\r\n      inputProps,\r\n      disabled\r\n    } = this.props;\r\n\r\n    const currentIndex = this.suggestionStore.currentIndex;\r\n    const activeDescendant = currentIndex > -1 ? 'sug-' + currentIndex : undefined;\r\n\r\n    let selectedSuggestionAlert = undefined;\r\n    if (this.props.enableSelectedSuggestionAlert) {\r\n      const selectedSuggestion = currentIndex > -1 ? this.suggestionStore.getSuggestionAtIndex(this.suggestionStore.currentIndex) : undefined;\r\n      const selectedSuggestionAlertText = selectedSuggestion ? selectedSuggestion.ariaLabel : undefined;\r\n      selectedSuggestionAlert = (<div className={ styles.screenReaderOnly } role='alert' id='selected-suggestion-alert' aria-live='assertive'>{ selectedSuggestionAlertText } </div>);\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ this.root }\r\n        className={ css(\r\n          'ms-BasePicker',\r\n          className ? className : '') }\r\n        onKeyDown={ this.onKeyDown }\r\n      >\r\n        <FocusZone\r\n          componentRef={ this.focusZone }\r\n          direction={ FocusZoneDirection.bidirectional }\r\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke }\r\n        >\r\n          { selectedSuggestionAlert }\r\n          <SelectionZone selection={ this.selection } selectionMode={ SelectionMode.multiple }>\r\n            <div className={ css('ms-BasePicker-text', styles.pickerText, this.state.isFocused && styles.inputFocused) } role={ 'list' }>\r\n              { this.renderItems() }\r\n              { this.canAddItems() && (<Autofill\r\n                { ...inputProps as any }\r\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\r\n                ref={ this.input }\r\n                onFocus={ this.onInputFocus }\r\n                onBlur={ this.onInputBlur }\r\n                onInputValueChange={ this.onInputChange }\r\n                suggestedDisplayValue={ suggestedDisplayValue }\r\n                aria-activedescendant={ activeDescendant }\r\n                aria-owns={ this.state.suggestionsVisible ? 'suggestion-list' : undefined }\r\n                aria-expanded={ !!this.state.suggestionsVisible }\r\n                aria-haspopup='true'\r\n                autoCapitalize='off'\r\n                autoComplete='off'\r\n                role='combobox'\r\n                disabled={ disabled }\r\n                aria-controls='selected-suggestion-alert'\r\n                onInputChange={ this.props.onInputChange }\r\n              />) }\r\n            </div>\r\n          </SelectionZone>\r\n        </FocusZone>\r\n        { this.renderSuggestions() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected canAddItems(): boolean {\r\n    const { items } = this.state;\r\n    const { itemLimit } = this.props;\r\n    return itemLimit === undefined || items.length < itemLimit;\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element | null {\r\n    const TypedSuggestion = this.SuggestionOfProperType;\r\n    return this.state.suggestionsVisible && this.input ? (\r\n      <Callout\r\n        isBeakVisible={ false }\r\n        gapSpace={ 5 }\r\n        target={ this.input.current ? this.input.current.inputElement : undefined }\r\n        onDismiss={ this.dismissSuggestions }\r\n        directionalHint={ DirectionalHint.bottomLeftEdge }\r\n        directionalHintForRTL={ DirectionalHint.bottomRightEdge }\r\n      >\r\n        <TypedSuggestion\r\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\r\n          onSuggestionClick={ this.onSuggestionClick }\r\n          onSuggestionRemove={ this.onSuggestionRemove }\r\n          suggestions={ this.suggestionStore.getSuggestions() }\r\n          ref={ this.suggestionElement }\r\n          onGetMoreResults={ this.onGetMoreResults }\r\n          moreSuggestionsAvailable={ this.state.moreSuggestionsAvailable }\r\n          isLoading={ this.state.suggestionsLoading }\r\n          isSearching={ this.state.isSearching }\r\n          isMostRecentlyUsedVisible={ this.state.isMostRecentlyUsedVisible }\r\n          isResultsFooterVisible={ this.state.isResultsFooterVisible }\r\n          refocusSuggestions={ this.refocusSuggestions }\r\n          removeSuggestionAriaLabel={ this.props.removeButtonAriaLabel }\r\n          { ...this.props.pickerSuggestionsProps as any }\r\n        />\r\n      </Callout>\r\n    ) : (null);\r\n  }\r\n\r\n  protected renderItems(): JSX.Element[] {\r\n    const { disabled, removeButtonAriaLabel } = this.props;\r\n    const onRenderItem = this.props.onRenderItem as (props: IPickerItemProps<T>) => JSX.Element;\r\n\r\n    const { items } = this.state;\r\n    return items.map((item: any, index: number) => onRenderItem({\r\n      item,\r\n      index,\r\n      key: item.key ? item.key : index,\r\n      selected: this.selection.isIndexSelected(index),\r\n      onRemoveItem: () => this.removeItem(item),\r\n      disabled: disabled,\r\n      onItemChange: this.onItemChange,\r\n      removeButtonAriaLabel: removeButtonAriaLabel\r\n    }));\r\n  }\r\n\r\n  protected resetFocus(index?: number) {\r\n    const { items } = this.state;\r\n\r\n    if (items.length && index! >= 0) {\r\n      const newEl: HTMLElement | null = this.root.current && this.root.current.querySelectorAll('[data-selection-index]')[Math.min(index!, items.length - 1)] as HTMLElement | null;\r\n      if (newEl && this.focusZone.current) {\r\n        this.focusZone.current.focusElement(newEl);\r\n      }\r\n    } else if (!this.canAddItems()) {\r\n      (items[items.length - 1] as IPickerItemProps<T>).selected = true;\r\n      this.resetFocus(items.length - 1);\r\n    } else {\r\n      if (this.input.current) {\r\n        this.input.current.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onSuggestionSelect() {\r\n    if (this.suggestionStore.currentSuggestion) {\r\n      const currentValue: string = this.input.current ? this.input.current.value : '';\r\n      const itemValue: string = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\r\n      this.setState({ suggestedDisplayValue: itemValue });\r\n    }\r\n  }\r\n\r\n  protected onSelectionChange() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected updateSuggestions(suggestions: any[]) {\r\n    this.suggestionStore.updateSuggestions(suggestions, 0);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected onEmptyInputFocus() {\r\n    const onEmptyInputFocus = this.props.onEmptyInputFocus as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\r\n    const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.state.items);\r\n    this.updateSuggestionsList(suggestions);\r\n  }\r\n\r\n  protected updateValue(updatedValue: string) {\r\n    this._onResolveSuggestions(updatedValue);\r\n  }\r\n\r\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>, updatedValue?: string) {\r\n    const suggestionsArray: T[] = suggestions as T[];\r\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\r\n\r\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\r\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\r\n    if (Array.isArray(suggestionsArray)) {\r\n      if (updatedValue !== undefined) {\r\n        this.resolveNewValue(updatedValue, suggestionsArray);\r\n      } else {\r\n        this.suggestionStore.updateSuggestions(suggestionsArray, 0);\r\n      }\r\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\r\n      if (!this.loadingTimer) {\r\n        this.loadingTimer = this._async.setTimeout(() => {\r\n          this.setState({\r\n            suggestionsLoading: true\r\n          });\r\n        }, 500);\r\n      }\r\n\r\n      // Clear suggestions\r\n      this.suggestionStore.updateSuggestions([]);\r\n\r\n      if (updatedValue !== undefined) {\r\n        this.setState({\r\n          suggestionsVisible: this.input.current ? (this.input.current.value !== '' && this.input.current.inputElement === document.activeElement) : false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          suggestionsVisible: this.input.current ? this.input.current.inputElement === document.activeElement : false\r\n        });\r\n      }\r\n\r\n      // Ensure that the promise will only use the callback if it was the most recent one.\r\n      const promise: PromiseLike<T[]> = this.currentPromise = suggestionsPromiseLike;\r\n      promise.then((newSuggestions: T[]) => {\r\n        if (promise === this.currentPromise) {\r\n          if (updatedValue !== undefined) {\r\n            this.resolveNewValue(updatedValue, newSuggestions);\r\n          } else {\r\n            this.suggestionStore.updateSuggestions(newSuggestions);\r\n            this.setState({\r\n              suggestionsLoading: false\r\n            });\r\n          }\r\n          if (this.loadingTimer) {\r\n            this._async.clearTimeout(this.loadingTimer);\r\n            this.loadingTimer = undefined;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected resolveNewValue(updatedValue: string, suggestions: T[]) {\r\n    this.suggestionStore.updateSuggestions(suggestions, 0);\r\n    let itemValue: string | undefined = undefined;\r\n\r\n    if (this.suggestionStore.currentSuggestion) {\r\n      itemValue = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsLoading: false,\r\n      suggestedDisplayValue: itemValue,\r\n      suggestionsVisible: this.input.current ? (this.input.current.value !== '' && this.input.current.inputElement === document.activeElement) : false\r\n    });\r\n  }\r\n\r\n  protected onChange(items?: T[]) {\r\n    if (this.props.onChange) {\r\n      (this.props.onChange as any)(items);\r\n    }\r\n  }\r\n\r\n  protected onInputChange = (value: string): void => {\r\n    this.updateValue(value);\r\n    this.setState({\r\n      moreSuggestionsAvailable: true,\r\n      isMostRecentlyUsedVisible: false\r\n    });\r\n  }\r\n\r\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: any, index: number): void => {\r\n    this.addItemByIndex(index);\r\n    this.setState({ suggestionsVisible: false });\r\n  }\r\n\r\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: IPersonaProps, index: number): void => {\r\n    if (this.props.onRemoveSuggestion) {\r\n      (this.props.onRemoveSuggestion as any)(item);\r\n    }\r\n    this.suggestionStore.removeSuggestion(index);\r\n  }\r\n\r\n  protected onInputFocus = (ev: React.FocusEvent<HTMLInputElement | Autofill>): void => {\r\n    // Only trigger all of the focus if this component isn't already focused.\r\n    // For example when an item is selected or removed from the selected list it should be treated\r\n    // as though the input is still focused.\r\n    if (!this.state.isFocused) {\r\n      this.setState({ isFocused: true });\r\n      this.selection.setAllSelected(false);\r\n      if (this.input.current && this.input.current.value === '' && this.props.onEmptyInputFocus) {\r\n        this.onEmptyInputFocus();\r\n        this.setState({\r\n          isMostRecentlyUsedVisible: true,\r\n          moreSuggestionsAvailable: false,\r\n          suggestionsVisible: true\r\n        });\r\n      } else if (this.input.current && this.input.current.value) {\r\n        this.setState({\r\n          isMostRecentlyUsedVisible: false,\r\n          suggestionsVisible: true\r\n        });\r\n      }\r\n      if (this.props.inputProps && this.props.inputProps.onFocus) {\r\n        this.props.inputProps.onFocus(ev as React.FocusEvent<HTMLInputElement>);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onInputBlur = (ev: React.FocusEvent<HTMLInputElement | Autofill>): void => {\r\n    if (this.props.inputProps && this.props.inputProps.onBlur) {\r\n      this.props.inputProps.onBlur(ev as React.FocusEvent<HTMLInputElement>);\r\n    }\r\n    // Only blur the entire component if an unrelated element gets focus. Otherwise treat it as though it still has focus.\r\n    if (!elementContains(this.root.value!, ev.relatedTarget as HTMLElement)) {\r\n      this.setState({ isFocused: false });\r\n      if (this.props.onBlur) {\r\n        this.props.onBlur(ev as React.FocusEvent<HTMLInputElement>);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    const keyCode = ev.which;\r\n    switch (keyCode) {\r\n      case KeyCodes.escape:\r\n        if (this.state.suggestionsVisible) {\r\n          this.setState({ suggestionsVisible: false });\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n      case KeyCodes.enter:\r\n        if (this.suggestionElement.current && this.suggestionElement.current.hasSuggestedActionSelected()) {\r\n          this.suggestionElement.current.executeSelectedAction();\r\n        } else if (!ev.shiftKey && this.suggestionStore.hasSelectedSuggestion() && this.state.suggestionsVisible) {\r\n          this.completeSuggestion();\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        } else {\r\n          this._onValidateInput();\r\n        }\r\n\r\n        break;\r\n\r\n      case KeyCodes.backspace:\r\n        if (!this.props.disabled) {\r\n          this.onBackspace(ev);\r\n        }\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.del:\r\n        if (!this.props.disabled) {\r\n          if (this.input.current && ev.target === this.input.current.inputElement && this.state.suggestionsVisible && this.suggestionStore.currentIndex !== -1) {\r\n            if (this.props.onRemoveSuggestion) {\r\n              (this.props.onRemoveSuggestion as any)(this.suggestionStore.currentSuggestion!.item);\r\n            }\r\n            this.suggestionStore.removeSuggestion(this.suggestionStore.currentIndex);\r\n            this.forceUpdate();\r\n          } else {\r\n            this.onBackspace(ev);\r\n          }\r\n        }\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (this.input.current && ev.target === this.input.current.inputElement && this.state.suggestionsVisible) {\r\n          if (this.suggestionElement.current && this.suggestionElement.current.tryHandleKeyDown(keyCode, this.suggestionStore.currentIndex)) {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n          } else {\r\n            if (this.suggestionElement.current && this.suggestionElement.current.hasSuggestedAction() && this.suggestionStore.currentIndex === 0) {\r\n              ev.preventDefault();\r\n              ev.stopPropagation();\r\n              this.suggestionElement.current.focusAboveSuggestions();\r\n              this.suggestionStore.deselectAllSuggestions();\r\n              this.forceUpdate();\r\n            } else {\r\n              if (this.suggestionStore.previousSuggestion()) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                this.onSuggestionSelect();\r\n              }\r\n            }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (this.input.current && ev.target === this.input.current.inputElement && this.state.suggestionsVisible) {\r\n          if (this.suggestionElement.current && this.suggestionElement.current.tryHandleKeyDown(keyCode, this.suggestionStore.currentIndex)) {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n          } else {\r\n            if (this.suggestionElement.current && this.suggestionElement.current.hasSuggestedAction() && (this.suggestionStore.currentIndex + 1) === this.suggestionStore.suggestions.length) {\r\n              ev.preventDefault();\r\n              ev.stopPropagation();\r\n              this.suggestionElement.current.focusBelowSuggestions();\r\n              this.suggestionStore.deselectAllSuggestions();\r\n              this.forceUpdate();\r\n            } else {\r\n              if (this.suggestionStore.nextSuggestion()) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                this.onSuggestionSelect();\r\n              }\r\n            }\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  protected onItemChange = (changedItem: T, index: number): void => {\r\n    const { items } = this.state;\r\n\r\n    if (index >= 0) {\r\n      const newItems: T[] = items;\r\n      newItems[index] = changedItem;\r\n\r\n      this._updateSelectedItems(newItems);\r\n    }\r\n  }\r\n\r\n  protected onGetMoreResults = (): void => {\r\n    this.setState({\r\n      isSearching: true\r\n    }, () => {\r\n      if (this.props.onGetMoreResults && this.input.current) {\r\n        const suggestions: T[] | PromiseLike<T[]> = (this.props.onGetMoreResults as any)(this.input.current.value, this.state.items);\r\n        const suggestionsArray: T[] = suggestions as T[];\r\n        const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\r\n\r\n        if (Array.isArray(suggestionsArray)) {\r\n          this.updateSuggestions(suggestionsArray);\r\n          this.setState({ isSearching: false });\r\n        } else if (suggestionsPromiseLike.then) {\r\n          suggestionsPromiseLike.then((newSuggestions: T[]) => {\r\n            this.updateSuggestions(newSuggestions);\r\n            this.setState({ isSearching: false });\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({ isSearching: false });\r\n      }\r\n\r\n      if (this.input.current) {\r\n        this.input.current.focus();\r\n      }\r\n\r\n      this.setState({\r\n        moreSuggestionsAvailable: false,\r\n        isResultsFooterVisible: true\r\n      });\r\n    });\r\n  }\r\n\r\n  protected addItemByIndex = (index: number): void => {\r\n    this.addItem(this.suggestionStore.getSuggestionAtIndex(index).item);\r\n    if (this.input.current) {\r\n      this.input.current.clear();\r\n    }\r\n    this.updateValue('');\r\n  }\r\n\r\n  protected addItem = (item: T): void => {\r\n    const processedItem: T | PromiseLike<T> | null =\r\n      this.props.onItemSelected ? (this.props.onItemSelected as any)(item) : item;\r\n\r\n    if (processedItem === null) {\r\n      return;\r\n    }\r\n\r\n    const processedItemObject: T = processedItem as T;\r\n    const processedItemPromiseLike: PromiseLike<T> = processedItem as PromiseLike<T>;\r\n\r\n    if (processedItemPromiseLike && processedItemPromiseLike.then) {\r\n      processedItemPromiseLike.then((resolvedProcessedItem: T) => {\r\n        const newItems: T[] = this.state.items.concat([resolvedProcessedItem]);\r\n        this._updateSelectedItems(newItems);\r\n      });\r\n    } else {\r\n      const newItems: T[] = this.state.items.concat([processedItemObject]);\r\n      this._updateSelectedItems(newItems);\r\n    }\r\n    this.setState({ suggestedDisplayValue: '' });\r\n  }\r\n\r\n  protected removeItem = (item: IPickerItemProps<T>): void => {\r\n    const { items } = this.state;\r\n    const index: number = items.indexOf(item);\r\n\r\n    if (index >= 0) {\r\n      const newItems: T[] = items.slice(0, index).concat(items.slice(index + 1));\r\n      this._updateSelectedItems(newItems);\r\n    }\r\n  }\r\n\r\n  protected removeItems = (itemsToRemove: any[]): void => {\r\n    const { items } = this.state;\r\n    const newItems: T[] = items.filter((item: any) => itemsToRemove.indexOf(item) === -1);\r\n    const firstItemToRemove = itemsToRemove[0];\r\n    const index: number = items.indexOf(firstItemToRemove);\r\n\r\n    this._updateSelectedItems(newItems, index);\r\n  }\r\n\r\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\r\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\r\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (this.state.items.length && !this.input.current || this.input.current && (!this.input.current.isValueSelected && this.input.current.cursorLocation === 0)) {\r\n      if (this.selection.getSelectedCount() > 0) {\r\n        this.removeItems(this.selection.getSelection());\r\n      } else {\r\n        this.removeItem(this.state.items[this.state.items.length - 1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected _isFocusZoneInnerKeystroke = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\r\n    // If suggestions are shown const up/down keys control them, otherwise allow them through to control the focusZone.\r\n    if (this.state.suggestionsVisible) {\r\n      switch (ev.which) {\r\n        case KeyCodes.up:\r\n        case KeyCodes.down:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    if (ev.which === KeyCodes.enter) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Controls what happens whenever there is an action that impacts the selected items.\r\n   * If selectedItems is provided as a property then this will act as a controlled component and it will not update it's own state.\r\n   */\r\n  private _updateSelectedItems(items: T[], focusIndex?: number): void {\r\n    if (this.props.selectedItems) {\r\n      // If the component is a controlled component then the controlling component will need\r\n      this.onChange(items);\r\n    } else {\r\n      this.setState({ items: items }, () => {\r\n        this._onSelectedItemsUpdated(items, focusIndex);\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onSelectedItemsUpdated(items?: T[], focusIndex?: number): void {\r\n    this.resetFocus(focusIndex);\r\n    this.onChange(items);\r\n  }\r\n\r\n  private _onResolveSuggestions(updatedValue: string): void {\r\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.state.items);\r\n\r\n    if (suggestions !== null) {\r\n      this.updateSuggestionsList(suggestions, updatedValue);\r\n    }\r\n  }\r\n\r\n  private _onValidateInput(): void {\r\n    if (this.props.onValidateInput && this.input.current && (this.props.onValidateInput as any)(this.input.current.value) !== ValidationState.invalid && this.props.createGenericItem) {\r\n      const itemToConvert = this.props.createGenericItem(this.input.current.value, this.props.onValidateInput(this.input.current.value));\r\n      this.suggestionStore.createGenericSuggestion(itemToConvert);\r\n      this.completeSuggestion();\r\n    }\r\n  }\r\n\r\n  private _getTextFromItem(item: T, currentValue?: string): string {\r\n    if (this.props.getTextFromItem) {\r\n      return (this.props.getTextFromItem as any)(item, currentValue);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\nexport class BasePickerListBelow<T, P extends IBasePickerProps<T>> extends BasePicker<T, P> {\r\n  public render(): JSX.Element {\r\n    const { suggestedDisplayValue } = this.state;\r\n    const {\r\n      className,\r\n      inputProps,\r\n      disabled\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          ref={ this.root }\r\n          className={ css('ms-BasePicker', className ? className : '') }\r\n          onKeyDown={ this.onKeyDown }\r\n        >\r\n          <SelectionZone\r\n            selection={ this.selection }\r\n            selectionMode={ SelectionMode.multiple }\r\n          >\r\n            <div className={ css('ms-BasePicker-text', styles.pickerText, this.state.isFocused && styles.inputFocused) }>\r\n              <Autofill\r\n                { ...inputProps as any }\r\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\r\n                ref={ this.input }\r\n                onFocus={ this.onInputFocus }\r\n                onBlur={ this.onInputBlur }\r\n                onInputValueChange={ this.onInputChange }\r\n                suggestedDisplayValue={ suggestedDisplayValue }\r\n                aria-activedescendant={ this.state.suggestionsVisible ? 'sug-' + this.suggestionStore.currentIndex : undefined }\r\n                aria-owns={ this.state.suggestionsVisible ? 'suggestion-list' : undefined }\r\n                aria-expanded={ !!this.state.suggestionsVisible }\r\n                aria-haspopup='true'\r\n                autoCapitalize='off'\r\n                autoComplete='off'\r\n                role='combobox'\r\n                disabled={ disabled }\r\n              />\r\n            </div>\r\n          </SelectionZone>\r\n        </div>\r\n        { this.renderSuggestions() }\r\n        <FocusZone\r\n          componentRef={ this.focusZone }\r\n          className='ms-BasePicker-selectedItems'\r\n          isCircularNavigation={ true }\r\n          direction={ FocusZoneDirection.bidirectional }\r\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke }\r\n        >\r\n          { this.renderItems() }\r\n        </FocusZone>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\r\n    // override the existing backspace method to not do anything because the list items appear below.\r\n  }\r\n}\r\n"]}