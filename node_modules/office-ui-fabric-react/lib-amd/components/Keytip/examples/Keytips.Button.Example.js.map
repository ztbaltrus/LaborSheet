{"version":3,"file":"Keytips.Button.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton, CompoundButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { keytipMap } from './KeytipSetup';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\nexport interface IKeytipsButtonExampleState {\r\n  btnDisabled: boolean;\r\n}\r\n\r\nexport class KeytipsButtonExample extends React.Component<{}, IKeytipsButtonExampleState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      btnDisabled: false\r\n    };\r\n  }\r\n\r\n  /* tslint:disable:jsx-ban-props jsx-no-lambda */\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          Keytips on the same level starting with the same characters will get filtered out as you hit those keys\r\n        </p>\r\n        <DefaultButton\r\n          keytipProps={ keytipMap.Button }\r\n          text='Button'\r\n          onClick={ () => { console.log('Button'); } }\r\n        />\r\n        <CompoundButton\r\n          keytipProps={ keytipMap.CompoundButton }\r\n          text='Compound Button'\r\n          secondaryText={ 'With a Keytip' }\r\n          onClick={ () => { console.log('Compound Button'); } }\r\n        />\r\n        <DefaultButton\r\n          keytipProps={ keytipMap.ButtonWithMenu }\r\n          text='Button with Menu'\r\n          onClick={ () => { console.log('Button with Menu'); } }\r\n          menuProps={ {\r\n            items: [\r\n              {\r\n                key: 'buttonMenuItem1',\r\n                name: 'Menu Item 1',\r\n                keytipProps: keytipMap.ButtonMenuItem1\r\n              },\r\n              {\r\n                key: 'buttonMenuItem2',\r\n                name: 'Menu Item 2',\r\n                keytipProps: keytipMap.ButtonMenuItem2\r\n              }\r\n            ]\r\n          } }\r\n        />\r\n        <DefaultButton\r\n          keytipProps={ keytipMap.SplitButton }\r\n          text='Split Button'\r\n          split={ true }\r\n          onClick={ () => { console.log('Split Button'); } }\r\n          menuProps={ {\r\n            items: [\r\n              {\r\n                key: 'splitButtonMenuButton1',\r\n                name: 'Split Button Menu Item 1',\r\n                keytipProps: keytipMap.SplitButtonMenuItem1\r\n              },\r\n              {\r\n                key: 'splitButtonMenuButton2',\r\n                name: 'Split Button Menu Item 2',\r\n                keytipProps: keytipMap.SplitButtonMenuItem2\r\n              }\r\n            ]\r\n          } }\r\n        />\r\n        <DefaultButton\r\n          text='I do not have a keytip'\r\n        />\r\n        <p>A keytip can have an 'offset' prop which will position the keytip starting from the top-left corner of the element</p>\r\n        <DefaultButton\r\n          keytipProps={ keytipMap.ButtonOffset }\r\n          text='Button keytip offset 10x10'\r\n          onClick={ () => { console.log('Button'); } }\r\n        />\r\n        <p>A keytip will become disabled when its corresponding component becomes disabled. A disabled keytip will be visible but cannot be triggered</p>\r\n        <Toggle\r\n          onText={ 'Enabled' }\r\n          offText={ 'Disabled' }\r\n          defaultChecked={ !this.state.btnDisabled }\r\n          onChanged={ this._toggleDisabled }\r\n        />\r\n        <DefaultButton\r\n          keytipProps={ keytipMap.DisabledButton }\r\n          disabled={ this.state.btnDisabled }\r\n          text={ (this.state.btnDisabled ? 'Disabled' : 'Enabled') + ' Button' }\r\n          onClick={ () => { console.log('Disabled Button'); } }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _toggleDisabled = (checked: boolean) => {\r\n    this.setState({ btnDisabled: !checked });\r\n  }\r\n}"]}