define(["require", "exports", "tslib", "react", "@uifabric/example-app-base", "../examples/ExtendedPeoplePicker.Basic.Example"], function (require, exports, tslib_1, React, example_app_base_1, ExtendedPeoplePicker_Basic_Example_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExtendedPeoplePickerBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ExtendedPicker/examples/ExtendedPeoplePicker.Basic.Example.tsx');
    var ExtendedPeoplePickerPage = /** @class */ (function (_super) {
        tslib_1.__extends(ExtendedPeoplePickerPage, _super);
        function ExtendedPeoplePickerPage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ExtendedPeoplePickerPage.prototype.render = function () {
            return (React.createElement(example_app_base_1.ComponentPage, { title: 'ExtendedPeoplePicker', componentName: 'ExtendedPeoplePickerExample', exampleCards: React.createElement("div", null,
                    React.createElement(example_app_base_1.ExampleCard, { title: 'Extended People Picker', code: ExtendedPeoplePickerBasicExampleCode },
                        React.createElement(ExtendedPeoplePicker_Basic_Example_1.ExtendedPeoplePickerTypesExample, null))), propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                        require('!raw-loader!office-ui-fabric-react/src/components/ExtendedPicker/BaseExtendedPicker.types.ts')
                    ] }), overview: React.createElement("div", null,
                    React.createElement("span", null, "ExtendedPeoplePicker are used to pick recipients. The difference between this and the current PeoplePicker are:"),
                    React.createElement("ul", null,
                        React.createElement("li", null, "Will remove selected items on backspace even if there is text in the input area"))), isHeaderVisible: this.props.isHeaderVisible, bestPractices: React.createElement("div", null, "The ExtendedPeoplePicker is used to select one or more entities, such as people or groups. Entry points for ExtendedPeoplePicker are typically specialized TextField-like input fields known as a \"well\", which are used to search for recipients from a list. When a recipient is selected from the list, it is added to the well as a specialized Persona that can be interacted with or removed. Clicking on a Persona from the well should invoke a PersonaCard or open a profile pane for that recipient."), dos: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use the ExtendedPeoplePicker to quickly search for a few people"),
                        React.createElement("li", null, "Use the ExtendedPeoplePicker to manage a group of people"),
                        React.createElement("li", null, "Use defaultSelectedItems when some people have already been selected"))), donts: React.createElement("div", null,
                    React.createElement("ul", null,
                        React.createElement("li", null, "Use the ExtendedPeoplePicker to select something other than people"),
                        React.createElement("li", null, "Use the ExtendedPeoplePicker to only display people"),
                        React.createElement("li", null, "Use the ExtendedPeoplePicker without sufficient space"))) }));
        };
        return ExtendedPeoplePickerPage;
    }(React.Component));
    exports.ExtendedPeoplePickerPage = ExtendedPeoplePickerPage;
});
//# sourceMappingURL=ExtendedPeoplePickerPage.js.map