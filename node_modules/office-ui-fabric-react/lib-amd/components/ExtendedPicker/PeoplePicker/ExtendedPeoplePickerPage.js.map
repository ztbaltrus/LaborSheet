{"version":3,"file":"ExtendedPeoplePickerPage.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/PeoplePicker/ExtendedPeoplePickerPage.tsx"],"names":[],"mappings":";;;IASA,IAAM,oCAAoC,GAAG,OAAO,CAClD,kHAAkH,CACzG,CAAC;IAEZ;QAA8C,oDAA4C;QAA1F;;QA0DA,CAAC;QAzDQ,yCAAM,GAAb;YACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,sBAAsB,EAC5B,aAAa,EAAC,6BAA6B,EAC3C,YAAY,EACV;oBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,oCAAoC;wBACrF,oBAAC,qEAAgC,OAAG,CACxB,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;wBACR,OAAO,CAAS,8FAA8F,CAAC;qBAChH,GACD,EAEJ,QAAQ,EACN;oBACE,oJAA4H;oBAC5H;wBACE,kHAAwF,CACrF,CACD,EAER,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,aAAa,EACX,ohBAIkH,EAEpH,GAAG,EACD;oBACE;wBACE,kGAAwE;wBACxE,2FAAiE;wBACjE,uGAA6E,CAC1E,CACD,EAER,KAAK,EACH;oBACE;wBACE,qGAA2E;wBAC3E,sFAA4D;wBAC5D,wFAA8D,CAC3D,CACD,GAER,CACH,CAAC;QACJ,CAAC;QAEH,+BAAC;IAAD,CAAC,AA1DD,CAA8C,KAAK,CAAC,SAAS,GA0D5D;IA1DY,4DAAwB","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  ComponentPage,\r\n  IComponentDemoPageProps,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport { ExtendedPeoplePickerTypesExample } from '../examples/ExtendedPeoplePicker.Basic.Example';\r\n\r\nconst ExtendedPeoplePickerBasicExampleCode = require(\r\n  '!raw-loader!office-ui-fabric-react/src/components/ExtendedPicker/examples/ExtendedPeoplePicker.Basic.Example.tsx'\r\n) as string;\r\n\r\nexport class ExtendedPeoplePickerPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ComponentPage\r\n        title='ExtendedPeoplePicker'\r\n        componentName='ExtendedPeoplePickerExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Extended People Picker' code={ ExtendedPeoplePickerBasicExampleCode }>\r\n              <ExtendedPeoplePickerTypesExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/ExtendedPicker/BaseExtendedPicker.types.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <div>\r\n            <span>ExtendedPeoplePicker are used to pick recipients. The difference between this and the current PeoplePicker are:</span>\r\n            <ul>\r\n              <li>Will remove selected items on backspace even if there is text in the input area</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n        bestPractices={\r\n          <div>The ExtendedPeoplePicker is used to select one or more entities, such as people or groups. Entry points for\r\n            ExtendedPeoplePicker are\r\n            typically specialized TextField-like input fields known as a \"well\", which are used to search for recipients from a list. When\r\n            a recipient is selected from the list, it is added to the well as a specialized Persona that can be interacted with or removed.\r\n            Clicking on a Persona from the well should invoke a PersonaCard or open a profile pane for that recipient.</div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use the ExtendedPeoplePicker to quickly search for a few people</li>\r\n              <li>Use the ExtendedPeoplePicker to manage a group of people</li>\r\n              <li>Use defaultSelectedItems when some people have already been selected</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use the ExtendedPeoplePicker to select something other than people</li>\r\n              <li>Use the ExtendedPeoplePicker to only display people</li>\r\n              <li>Use the ExtendedPeoplePicker without sufficient space</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n}"]}