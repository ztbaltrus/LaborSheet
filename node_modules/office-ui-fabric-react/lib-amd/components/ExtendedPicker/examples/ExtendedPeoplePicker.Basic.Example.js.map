{"version":3,"file":"ExtendedPeoplePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/examples/ExtendedPeoplePicker.Basic.Example.tsx"],"names":[],"mappings":";;;IAgBA,kCAAkC;IAClC,IAAM,MAAM,GAAQ,YAAY,CAAC;IAQjC,kCAAkC;IAClC;QAAsD,4DAA4C;QAMhG,0CAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SA0Fb;YAkDO,sBAAgB,GAAG,UAAC,SAA+B;gBACzD,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YAC3B,CAAC,CAAA;YAEO,8BAAwB,GAAG;gBACjC,IAAI,KAAI,CAAC,OAAO,EAAE;oBAChB,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBACtB;YACH,CAAC,CAAA;YAEO,mBAAa,GAAG,UAAC,IAA2B;gBAClD,IAAI,KAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE;oBAC1C,kCAAkC;oBACjC,KAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAA8B,CAAC,WAAW,CAAC,IAAI,EAAE,KAAI,CAAC,sBAAsB,CAAC,IAAW,CAAC,CAAC,CAAC;iBAC5H;YACH,CAAC,CAAA;YAEO,yBAAmB,GAAG,UAAC,IAAmB;gBAC1C,IAAA,gBAAuD,EAArD,0BAAU,EAAE,8BAA0B,CAAgB;gBAC9D,IAAM,eAAe,GAAW,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAM,qBAAqB,GAAW,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAE7D,IAAI,eAAe,IAAI,CAAC,EAAE;oBACxB,IAAM,SAAS,GAAoB,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtH,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC;iBAC1C;gBAED,IAAI,qBAAqB,IAAI,CAAC,EAAE;oBAC9B,IAAM,kBAAkB,GACpB,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC/F,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,CAAC,CAAC;iBACzD;YACH,CAAC,CAAA;YAEO,sBAAgB,GAAG,UAAC,UAAkB,EAAE,eAAgC,EAAE,YAAqB;gBAErG,IAAI,UAAU,EAAE;oBACd,IAAI,gBAAgB,GAAoB,KAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;oBAE/E,gBAAgB,GAAG,KAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;oBAC7E,gBAAgB,GAAG,YAAY,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;oBAC9F,OAAO,KAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;iBACxD;qBAAM;oBACL,OAAO,KAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;iBAC1C;YACH,CAAC,CAAA;YAEO,6BAAuB,GAAG,UAAC,eAAgC;gBAC3D,IAAA,+CAAgB,CAAgB;gBACtC,gBAAgB,GAAG,KAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChF,OAAO,KAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;YACzD,CAAC,CAAA;YAeO,6BAAuB,GAAG;gBAChC,OAAO,OAAO,CACZ,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO;oBACnC,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC;oBAClE,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAC7D,CAAC;YACJ,CAAC,CAAA;YAEO,kCAA4B,GAAG;gBACrC,OAAO,KAAI,CAAC,OAAO,KAAK,SAAS;uBAC5B,KAAI,CAAC,OAAO,CAAC,YAAY,KAAK,IAAI;uBAClC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,KAAK,EAAE,CAAC;YAC9C,CAAC,CAAA;YAqBO,qBAAe,GAAG;gBACxB,KAAI,CAAC,QAAQ,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/C,CAAC,CAAA;YAWO,oBAAc,GAAG,UAAC,KAAa;gBACrC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC7B,OAAO,IAAI,CAAC;iBACb;qBAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3B,OAAO,KAAK,CAAC;iBACd;qBAAM;oBACL,OAAO,KAAK,CAAC;iBACd;YACH,CAAC,CAAA;YAnQC,IAAM,UAAU,GAAuB,EAAE,CAAC;YAC1C,0BAAM,CAAC,OAAO,CAAC,UAAC,OAAsB;gBACpC,IAAM,MAAM,GAAqB,EAAE,CAAC;gBAEpC,kBAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBACxB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,UAAU;gBACtB,gBAAgB,EAAE,uBAAG;gBACrB,mBAAmB,EAAE,IAAI;aAC1B,CAAC;YAEF,KAAI,CAAC,gBAAgB,GAAG;gBACtB,gBAAgB,EAAE,CAAC;wBACjB,UAAU,EAAE;4BACV,OAAO,CACL,6BAAK,SAAS,EAAG,MAAM,CAAC,UAAU;;gCAAuB,KAAI,CAAC,OAAO;uCAChE,KAAI,CAAC,OAAO,CAAC,YAAY;uCACzB,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAQ,CAC9E,CAAC;wBACJ,CAAC;wBACD,UAAU,EAAE;4BACV,OAAO,KAAI,CAAC,OAAO,KAAK,SAAS;mCAC5B,KAAI,CAAC,OAAO,CAAC,YAAY,KAAK,IAAI;mCAClC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;wBACzD,CAAC;wBACD,SAAS,EAAE;4BACT,IAAI,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,KAAK,IAAI,EAAE;gCAChD,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;6BAC9D;wBACH,CAAC;qBACF;oBACD;wBACE,UAAU,EAAE;4BACV,OAAO,CACL,6BAAK,SAAS,EAAG,MAAM,CAAC,UAAU,yBAA2B,CAC9D,CAAC;wBACJ,CAAC;wBACD,UAAU,EAAE,KAAI,CAAC,4BAA4B;qBAC9C;iBACA;gBACD,gBAAgB,EAAE,CAAC;wBACjB,UAAU,EAAE;4BACV,OAAO,CACL,6BAAK,SAAS,EAAG,MAAM,CAAC,UAAU,iBAAmB,CACtD,CAAC;wBACJ,CAAC;wBACD,UAAU,EAAE;4BACV,OAAO,KAAI,CAAC,OAAO,KAAK,SAAS;mCAC5B,KAAI,CAAC,OAAO,CAAC,cAAc,KAAK,SAAS;mCACzC,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,KAAK,IAAI;mCAC5C,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;wBACpE,CAAC;qBACF;oBACD;wBACE,UAAU,EAAE,cAAQ,OAAO,CAAC,6BAAK,SAAS,EAAG,MAAM,CAAC,UAAU,sBAAwB,CAAC,CAAC,CAAC,CAAC;wBAC1F,SAAS,EAAE,cAAQ,KAAI,CAAC,QAAQ,CAAC,EAAE,mBAAmB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;wBACnE,UAAU,EAAE,cAAQ,OAAO,KAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,CAAC,KAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC;qBACrG,CAAC;gBACF,qBAAqB,EAAE,cAAQ,OAAO,CAAC,KAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC;aAC9E,CAAC;YAEF,KAAI,CAAC,oBAAoB,GAAG;gBAC1B,gBAAgB,EAAE,IAAI,iCAAgB,EAAiB;gBACvD,oBAAoB,EAAE,KAAI,CAAC,gBAAgB;gBAC3C,eAAe,EAAE,KAAI,CAAC,gBAAgB;gBACtC,sBAAsB,EAAE,KAAI,CAAC,gBAAgB;gBAC7C,GAAG,EAAE,QAAQ;gBACb,kBAAkB,EAAE,KAAI,CAAC,mBAAmB;gBAC5C,eAAe,EAAE,KAAI,CAAC,cAAc;gBACpC,qBAAqB,EAAE,KAAI,CAAC,uBAAuB;gBACnD,gBAAgB,EAAE,KAAI,CAAC,uBAAuB;gBAC9C,cAAc,EAAE,KAAI,CAAC,eAAe;gBACpC,mBAAmB,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;gBACrE,kBAAkB,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;aACpE,CAAC;YAEF,KAAI,CAAC,uBAAuB,GAAG;gBAC7B,WAAW,EAAE,KAAI,CAAC,YAAY;gBAC9B,aAAa,EAAE,KAAI,CAAC,aAAa;gBACjC,kBAAkB,EAAE,QAAQ;gBAC5B,gBAAgB,EAAE,WAAW;gBAC7B,gBAAgB,EAAE,MAAM;gBACxB,kBAAkB,EAAE,KAAI,CAAC,mBAAmB;gBAC5C,sBAAsB,EAAE,KAAI,CAAC,uBAAuB;gBACpD,mBAAmB,EAAE,KAAI,CAAC,oBAAoB;aAC/C,CAAC;;QACJ,CAAC;QAEM,iDAAM,GAAb;YACE,OAAO,CACL;gBACI,IAAI,CAAC,qBAAqB,EAAE;gBAC9B,oBAAC,sBAAa,IACZ,IAAI,EAAC,WAAW,EAChB,OAAO,EAAG,IAAI,CAAC,wBAAwB,GACvC,CACE,CACP,CAAC;QACJ,CAAC;QAEO,gEAAqB,GAA7B;YACE,OAAO,CACL,oBAAC,2CAAoB,IACnB,mBAAmB,EAAG,IAAI,CAAC,oBAAoB,EAC/C,sBAAsB,EAAG,IAAI,CAAC,uBAAuB,EACrD,sBAAsB,EAAG,IAAI,CAAC,uBAAuB,EACrD,qBAAqB,EAAG,IAAI,CAAC,sBAAsB,EACnD,SAAS,EAAG,iBAAiB,EAC7B,GAAG,EAAG,QAAQ,EACd,UAAU,EAAG;oBACX,MAAM,EAAE,UAAC,EAAsC,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAA5B,CAA4B;oBAChF,OAAO,EAAE,UAAC,EAAsC,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B;oBAClF,YAAY,EAAE,eAAe;iBAC9B,EACD,YAAY,EAAG,IAAI,CAAC,gBAAgB,EACpC,eAAe,EAAG,IAAI,CAAC,aAAa,EAAE,GACtC,CACH,CAAC;QACJ,CAAC;QAEO,wDAAa,GAArB;YACE,OAAO,uCAAc,CAAC;QACxB,CAAC;QAEO,kEAAuB,GAA/B,UAAgC,KAA8C;YAC5E,OAAO,CAAC,oBAAC,qCAAoB,uBAAM,KAAK,EAAK,CAAC,CAAC;QACjD,CAAC;QAEO,iEAAsB,GAA9B,UAA+B,KAAyD;YACtF,OAAO,CAAC,oBAAC,sCAAkB,uBAAM,KAAK,EAAK,CAAC,CAAC;QAC/C,CAAC;QAEO,8DAAmB,GAA3B,UAA4B,IAA2B;YACrD,OAAO,IAAI,CAAC,IAAc,CAAC;QAC7B,CAAC;QAuDO,uDAAY,GAApB,UAAqB,KAA8B;YACjD,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,KAAK,CAAC,OAAO,CAAC,UAAC,IAA2B,EAAE,KAAa;gBACvD,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC;gBAEtB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,QAAQ,IAAI,IAAI,CAAC;iBAClB;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,QAAQ,CAAC;QAClB,CAAC;QAgBO,+DAAoB,GAA5B,UAA6B,OAAsB,EAAE,QAAyB;YAC5E,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1D,OAAO,KAAK,CAAC;aACd;YACD,OAAO,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAmB,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAA1B,CAA0B,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QACzF,CAAC;QAEO,gEAAqB,GAA7B,UAA8B,UAAkB;YAAhD,iBAEC;YADC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,IAAmB,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAc,EAAE,UAAU,CAAC,EAAxD,CAAwD,CAAC,CAAC;QACzH,CAAC;QAEO,6DAAkB,GAA1B,UAA2B,IAAY,EAAE,UAAkB;YACzD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;QACpE,CAAC;QAEO,4DAAiB,GAAzB,UAA0B,QAAyB,EAAE,aAA8B;YAAnF,iBAEC;YADC,OAAO,QAAQ,CAAC,MAAM,CAAC,UAAC,OAAsB,IAAK,OAAA,CAAC,KAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,aAAa,CAAC,EAAlD,CAAkD,CAAC,CAAC;QACzG,CAAC;QAMO,2DAAgB,GAAxB,UAAyB,OAAsB;YAC7C,OAAO,OAAO,CAAC,IAAc,CAAC;QAChC,CAAC;QAEO,mEAAwB,GAAhC,UAAiC,OAAwB;YACvD,kCAAkC;YAClC,OAAO,IAAI,OAAO,CAAkB,UAAC,OAAY,EAAE,MAAW,IAAK,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,CAAC,EAAhB,CAAgB,EAAE,GAAG,CAAC,EAAvC,CAAuC,CAAC,CAAC;QAC9G,CAAC;QAYO,iEAAsB,GAA9B,UAA+B,IAA2B;YACxD,QAAQ,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,WAAW;oBACd,OAAO,4BAAQ,CAAC;gBAClB,KAAK,WAAW;oBACd,OAAO,4BAAQ,CAAC;gBAClB;oBACE,OAAO,EAAE,CAAC;aACb;QACH,CAAC;QACH,uCAAC;IAAD,CAAC,AAvRD,CAAsD,yBAAa,GAuRlE;IAvRY,4EAAgC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport {\r\n  BaseComponent,\r\n  assign\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\r\nimport { ExtendedPeoplePicker } from '../PeoplePicker/ExtendedPeoplePicker';\r\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { IPersonaWithMenu } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.types';\r\nimport { people, mru, groupOne, groupTwo } from './PeopleExampleData';\r\nimport { SuggestionsStore, FloatingPeoplePicker, IBaseFloatingPickerProps, IBaseFloatingPickerSuggestionProps } from '../../FloatingPicker';\r\nimport { IBaseSelectedItemsListProps, ISelectedPeopleProps, SelectedPeopleList, IExtendedPersonaProps } from '../../SelectedItemsList';\r\n\r\nimport * as stylesImport from './ExtendedPeoplePicker.Basic.Example.scss';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IPeoplePickerExampleState {\r\n  peopleList: IPersonaProps[];\r\n  mostRecentlyUsed: IPersonaProps[];\r\n  searchMoreAvailable: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nexport class ExtendedPeoplePickerTypesExample extends BaseComponent<{}, IPeoplePickerExampleState> {\r\n  private _picker: ExtendedPeoplePicker;\r\n  private _floatingPickerProps: IBaseFloatingPickerProps<IPersonaProps>;\r\n  private _selectedItemsListProps: ISelectedPeopleProps;\r\n  private _suggestionProps: IBaseFloatingPickerSuggestionProps;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    const peopleList: IPersonaWithMenu[] = [];\r\n    people.forEach((persona: IPersonaProps) => {\r\n      const target: IPersonaWithMenu = {};\r\n\r\n      assign(target, persona);\r\n      peopleList.push(target);\r\n    });\r\n\r\n    this.state = {\r\n      peopleList: peopleList,\r\n      mostRecentlyUsed: mru,\r\n      searchMoreAvailable: true,\r\n    };\r\n\r\n    this._suggestionProps = {\r\n      headerItemsProps: [{\r\n        renderItem: () => {\r\n          return (\r\n            <div className={ styles.headerItem }>Use this address: { this._picker\r\n              && this._picker.inputElement\r\n              && this._picker.inputElement ? this._picker.inputElement.value : '' }</div>\r\n          );\r\n        },\r\n        shouldShow: () => {\r\n          return this._picker !== undefined\r\n            && this._picker.inputElement !== null\r\n            && this._picker.inputElement.value.indexOf('@') > -1;\r\n        },\r\n        onExecute: () => {\r\n          if (this._picker.floatingPicker.current !== null) {\r\n            this._picker.floatingPicker.current.forceResolveSuggestion();\r\n          }\r\n        }\r\n      },\r\n      {\r\n        renderItem: () => {\r\n          return (\r\n            <div className={ styles.headerItem }>Suggested Contacts</div>\r\n          );\r\n        },\r\n        shouldShow: this._shouldShowSuggestedContacts,\r\n      }\r\n      ],\r\n      footerItemsProps: [{\r\n        renderItem: () => {\r\n          return (\r\n            <div className={ styles.footerItem }>No results</div>\r\n          );\r\n        },\r\n        shouldShow: () => {\r\n          return this._picker !== undefined\r\n            && this._picker.floatingPicker !== undefined\r\n            && this._picker.floatingPicker.current !== null\r\n            && this._picker.floatingPicker.current.suggestions.length === 0;\r\n        }\r\n      },\r\n      {\r\n        renderItem: () => { return (<div className={ styles.footerItem }>Search for more</div>); },\r\n        onExecute: () => { this.setState({ searchMoreAvailable: false }); },\r\n        shouldShow: () => { return this.state.searchMoreAvailable && !this._shouldShowSuggestedContacts(); }\r\n      }],\r\n      shouldSelectFirstItem: () => { return !this._shouldShowSuggestedContacts(); },\r\n    };\r\n\r\n    this._floatingPickerProps = {\r\n      suggestionsStore: new SuggestionsStore<IPersonaProps>(),\r\n      onResolveSuggestions: this._onFilterChanged,\r\n      getTextFromItem: this._getTextFromItem,\r\n      pickerSuggestionsProps: this._suggestionProps,\r\n      key: 'normal',\r\n      onRemoveSuggestion: this._onRemoveSuggestion,\r\n      onValidateInput: this._validateInput,\r\n      onZeroQuerySuggestion: this._returnMostRecentlyUsed,\r\n      showForceResolve: this._shouldShowForceResolve,\r\n      onInputChanged: this._onInputChanged,\r\n      onSuggestionsHidden: () => { console.log('FLOATINGPICKER: hidden'); },\r\n      onSuggestionsShown: () => { console.log('FLOATINGPICKER: shown'); },\r\n    };\r\n\r\n    this._selectedItemsListProps = {\r\n      onCopyItems: this._onCopyItems,\r\n      onExpandGroup: this._onExpandItem,\r\n      removeMenuItemText: 'Remove',\r\n      copyMenuItemText: 'Copy name',\r\n      editMenuItemText: 'Edit',\r\n      getEditingItemText: this._getEditingItemText,\r\n      onRenderFloatingPicker: this._onRenderFloatingPicker,\r\n      floatingPickerProps: this._floatingPickerProps,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        { this._renderExtendedPicker() }\r\n        <PrimaryButton\r\n          text='Set focus'\r\n          onClick={ this._onSetFocusButtonClicked }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderExtendedPicker(): JSX.Element {\r\n    return (\r\n      <ExtendedPeoplePicker\r\n        floatingPickerProps={ this._floatingPickerProps }\r\n        selectedItemsListProps={ this._selectedItemsListProps }\r\n        onRenderFloatingPicker={ this._onRenderFloatingPicker }\r\n        onRenderSelectedItems={ this._onRenderSelectedItems }\r\n        className={ 'ms-PeoplePicker' }\r\n        key={ 'normal' }\r\n        inputProps={ {\r\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\r\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\r\n          'aria-label': 'People Picker'\r\n        } }\r\n        componentRef={ this._setComponentRef }\r\n        headerComponent={ this._renderHeader() }\r\n      />\r\n    );\r\n  }\r\n\r\n  private _renderHeader(): JSX.Element {\r\n    return <div>TO:</div>;\r\n  }\r\n\r\n  private _onRenderFloatingPicker(props: IBaseFloatingPickerProps<IPersonaProps>): JSX.Element {\r\n    return (<FloatingPeoplePicker { ...props } />);\r\n  }\r\n\r\n  private _onRenderSelectedItems(props: IBaseSelectedItemsListProps<IExtendedPersonaProps>): JSX.Element {\r\n    return (<SelectedPeopleList { ...props } />);\r\n  }\r\n\r\n  private _getEditingItemText(item: IExtendedPersonaProps): string {\r\n    return item.text as string;\r\n  }\r\n\r\n  private _setComponentRef = (component: ExtendedPeoplePicker): void => {\r\n    this._picker = component;\r\n  }\r\n\r\n  private _onSetFocusButtonClicked = (): void => {\r\n    if (this._picker) {\r\n      this._picker.focus();\r\n    }\r\n  }\r\n\r\n  private _onExpandItem = (item: IExtendedPersonaProps): void => {\r\n    if (this._picker.selectedItemsList.current) {\r\n      // tslint:disable-next-line:no-any\r\n      (this._picker.selectedItemsList.current as SelectedPeopleList).replaceItem(item, this._getExpandedGroupItems(item as any));\r\n    }\r\n  }\r\n\r\n  private _onRemoveSuggestion = (item: IPersonaProps): void => {\r\n    const { peopleList, mostRecentlyUsed: mruState } = this.state;\r\n    const indexPeopleList: number = peopleList.indexOf(item);\r\n    const indexMostRecentlyUsed: number = mruState.indexOf(item);\r\n\r\n    if (indexPeopleList >= 0) {\r\n      const newPeople: IPersonaProps[] = peopleList.slice(0, indexPeopleList).concat(peopleList.slice(indexPeopleList + 1));\r\n      this.setState({ peopleList: newPeople });\r\n    }\r\n\r\n    if (indexMostRecentlyUsed >= 0) {\r\n      const newSuggestedPeople: IPersonaProps[]\r\n        = mruState.slice(0, indexMostRecentlyUsed).concat(mruState.slice(indexMostRecentlyUsed + 1));\r\n      this.setState({ mostRecentlyUsed: newSuggestedPeople });\r\n    }\r\n  }\r\n\r\n  private _onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number):\r\n    Promise<IPersonaProps[]> | null => {\r\n    if (filterText) {\r\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\r\n\r\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\r\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\r\n      return this._convertResultsToPromise(filteredPersonas);\r\n    } else {\r\n      return this._convertResultsToPromise([]);\r\n    }\r\n  }\r\n\r\n  private _returnMostRecentlyUsed = (currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> => {\r\n    let { mostRecentlyUsed } = this.state;\r\n    mostRecentlyUsed = this._removeDuplicates(mostRecentlyUsed, this._picker.items);\r\n    return this._convertResultsToPromise(mostRecentlyUsed);\r\n  }\r\n\r\n  private _onCopyItems(items: IExtendedPersonaProps[]): string {\r\n    let copyText = '';\r\n    items.forEach((item: IExtendedPersonaProps, index: number) => {\r\n      copyText += item.text;\r\n\r\n      if (index < items.length - 1) {\r\n        copyText += ', ';\r\n      }\r\n    });\r\n\r\n    return copyText;\r\n  }\r\n\r\n  private _shouldShowForceResolve = (): boolean => {\r\n    return Boolean(\r\n      this._picker.floatingPicker.current &&\r\n      this._validateInput(this._picker.floatingPicker.current.inputText) &&\r\n      this._picker.floatingPicker.current.suggestions.length === 0\r\n    );\r\n  }\r\n\r\n  private _shouldShowSuggestedContacts = (): boolean => {\r\n    return this._picker !== undefined\r\n      && this._picker.inputElement !== null\r\n      && this._picker.inputElement.value === '';\r\n  }\r\n\r\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]): boolean {\r\n    if (!personas || !personas.length || personas.length === 0) {\r\n      return false;\r\n    }\r\n    return personas.filter((item: IPersonaProps) => item.text === persona.text).length > 0;\r\n  }\r\n\r\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\r\n    return this.state.peopleList.filter((item: IPersonaProps) => this._doesTextStartWith(item.text as string, filterText));\r\n  }\r\n\r\n  private _doesTextStartWith(text: string, filterText: string): boolean {\r\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\r\n  }\r\n\r\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]): IPersonaProps[] {\r\n    return personas.filter((persona: IPersonaProps) => !this._listContainsPersona(persona, possibleDupes));\r\n  }\r\n\r\n  private _onInputChanged = (): void => {\r\n    this.setState({ searchMoreAvailable: true });\r\n  }\r\n\r\n  private _getTextFromItem(persona: IPersonaProps): string {\r\n    return persona.text as string;\r\n  }\r\n\r\n  private _convertResultsToPromise(results: IPersonaProps[]): Promise<IPersonaProps[]> {\r\n    // tslint:disable-next-line:no-any\r\n    return new Promise<IPersonaProps[]>((resolve: any, reject: any) => setTimeout(() => resolve(results), 150));\r\n  }\r\n\r\n  private _validateInput = (input: string): boolean => {\r\n    if (input.indexOf('@') !== -1) {\r\n      return true;\r\n    } else if (input.length > 1) {\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private _getExpandedGroupItems(item: IExtendedPersonaProps): IExtendedPersonaProps[] {\r\n    switch (item.text) {\r\n      case 'Group One':\r\n        return groupOne;\r\n      case 'Group Two':\r\n        return groupTwo;\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n}"]}