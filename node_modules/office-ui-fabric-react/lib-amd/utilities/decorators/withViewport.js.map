{"version":3,"file":"withViewport.js","sourceRoot":"../src/","sources":["utilities/decorators/withViewport.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseDecorator } from './BaseDecorator';\r\nimport {\r\n  findScrollableParent,\r\n  getRect,\r\n  createRef\r\n} from '../../Utilities';\r\n\r\nexport interface IViewport {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface IWithViewportState {\r\n  viewport?: IViewport;\r\n}\r\n\r\nexport interface IWithViewportProps {\r\n  skipViewportMeasures?: boolean;\r\n}\r\n\r\nconst RESIZE_DELAY = 500;\r\nconst MAX_RESIZE_ATTEMPTS = 3;\r\n\r\nexport function withViewport<TProps extends { viewport?: IViewport }, TState>(ComposedComponent: (new (props: TProps, ...args: any[]) => React.Component<TProps, TState>)): any {\r\n\r\n  return class WithViewportComponent extends BaseDecorator<TProps, IWithViewportState> {\r\n    private _root = createRef<HTMLDivElement>();\r\n    private _resizeAttempts: number;\r\n\r\n    constructor(props: TProps) {\r\n      super(props);\r\n      this._resizeAttempts = 0;\r\n\r\n      this.state = {\r\n        viewport: {\r\n          width: 0,\r\n          height: 0\r\n        }\r\n      };\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n      this._onAsyncResize = this._async.debounce(\r\n        this._onAsyncResize,\r\n        RESIZE_DELAY,\r\n        {\r\n          leading: false\r\n        });\r\n\r\n      this._events.on(window, 'resize', this._onAsyncResize);\r\n      const {\r\n        skipViewportMeasures\r\n      } = this.props as IWithViewportProps;\r\n      if (!skipViewportMeasures) {\r\n        this._updateViewport();\r\n      }\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n      this._events.dispose();\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n      const { viewport } = this.state;\r\n      const {\r\n        skipViewportMeasures\r\n      } = this.props as IWithViewportProps;\r\n      const isViewportVisible = skipViewportMeasures || (viewport!.width > 0 && viewport!.height > 0);\r\n\r\n      return (\r\n        <div className='ms-Viewport' ref={ this._root } style={ { minWidth: 1, minHeight: 1 } }>\r\n          { isViewportVisible && (\r\n            <ComposedComponent ref={ this._updateComposedComponentRef } viewport={ viewport } { ...this.props as any } />\r\n          ) }\r\n        </div>\r\n      );\r\n    }\r\n\r\n    public forceUpdate(): void {\r\n      this._updateViewport(true);\r\n    }\r\n\r\n    private _onAsyncResize(): void {\r\n      this._updateViewport();\r\n    }\r\n\r\n    /* Note: using lambda here because decorators don't seem to work in decorators. */\r\n    private _updateViewport = (withForceUpdate?: boolean) => {\r\n      const { viewport } = this.state;\r\n      const viewportElement = this._root.current;\r\n      const scrollElement = findScrollableParent(viewportElement);\r\n      const scrollRect = getRect(scrollElement);\r\n      const clientRect = getRect(viewportElement);\r\n      const updateComponent = () => {\r\n        if (withForceUpdate && this._composedComponentInstance) {\r\n          this._composedComponentInstance.forceUpdate();\r\n        }\r\n      };\r\n\r\n      const isSizeChanged = (\r\n        (clientRect && clientRect.width) !== viewport!.width ||\r\n        (scrollRect && scrollRect.height) !== viewport!.height);\r\n\r\n      if (isSizeChanged && this._resizeAttempts < MAX_RESIZE_ATTEMPTS && clientRect && scrollRect) {\r\n        this._resizeAttempts++;\r\n        this.setState({\r\n          viewport: {\r\n            width: clientRect.width,\r\n            height: scrollRect.height\r\n          }\r\n        }, () => { this._updateViewport(withForceUpdate); });\r\n      } else {\r\n        this._resizeAttempts = 0;\r\n        updateComponent();\r\n      }\r\n    }\r\n  };\r\n}\r\n"]}