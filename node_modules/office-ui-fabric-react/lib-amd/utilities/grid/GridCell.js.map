{"version":3,"file":"GridCell.js","sourceRoot":"../src/","sources":["utilities/grid/GridCell.tsx"],"names":[],"mappings":";;;IAQA;QAA8D,oCAAsB;QAApF;YAAA,qEAuHC;YApES,cAAQ,GAAG;gBACX,IAAA,gBAIa,EAHjB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACc;gBAEpB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;YAEO,mBAAa,GAAG,UAAC,EAAuC;gBACxD,IAAA,gBAKa,EAJjB,oBAAO,EACP,sBAAQ,EACR,cAAI,EACJ,8BAAY,CACM;gBAEpB,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;gBAE1D,IAAI,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;YAEO,kBAAY,GAAG,UAAC,EAAuC;gBACvD,IAAA,gBAKa,EAJjB,oBAAO,EACP,sBAAQ,EACR,cAAI,EACJ,4BAAW,CACO;gBAEpB,IAAM,eAAe,GAAG,WAAW,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;gBAEvD,IAAI,CAAC,eAAe,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBAC5C,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;YAEO,mBAAa,GAAG,UAAC,EAAuC;gBACxD,IAAA,gBAIa,EAHjB,oBAAO,EACP,sBAAQ,EACR,8BAAY,CACM;gBAEpB,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;gBAE1D,IAAI,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBAC7C,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAA;YAEO,cAAQ,GAAG;gBACX,IAAA,gBAIa,EAHjB,oBAAO,EACP,sBAAQ,EACR,cAAI,CACc;gBAEpB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;oBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAA;;QAEH,CAAC;QAhHQ,yBAAM,GAAb;YACQ,IAAA,eAaQ,EAZZ,cAAI,EACJ,UAAE,EACF,wBAAS,EACT,cAAI,EACJ,sBAAQ,EACR,sBAAQ,EACR,8BAAY,EACZ,wCAAiB,EACjB,4CAAmB,EACnB,gBAAK,EACL,gBAAK,EACL,gCAAa,CACA;YAEf,OAAO,CACL,oBAAC,sBAAa,IACZ,EAAE,EAAG,EAAE,gBACM,KAAK,uBACE,IAAI,EACxB,QAAQ,EAAG,QAAQ,EACnB,SAAS,EAAG,eAAG,CAAC,SAAS;oBAErB,GAAC,EAAE,GAAG,mBAAmB,IAAG,QAAQ;oBACpC,GAAC,EAAE,GAAG,iBAAiB,IAAG,QAAQ;wBAErC,EACD,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,WAAW,EAAG,IAAI,CAAC,YAAY,EAC/B,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAG,IAAI,mBACK,QAAQ,EACxB,SAAS,EAAG,KAAK,EACjB,KAAK,EAAG,KAAK,EACb,aAAa,EAAG,aAAa,IAE3B,YAAY,CAAC,IAAI,CAAC,CACL,CAClB,CAAC;;QACJ,CAAC;QA/Ca,qBAAY,GAAG;YAC3B,QAAQ,EAAE,KAAK;YACf,EAAE,EAAE,iBAAK,CAAC,UAAU,CAAC;SACtB,CAAC;QAkHJ,eAAC;KAAA,AAvHD,CAA8D,KAAK,CAAC,SAAS,GAuH5E;IAvHY,4BAAQ","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  css,\r\n  getId,\r\n} from '../../Utilities';\r\nimport { IGridCellProps } from './GridCell.types';\r\nimport { CommandButton } from '../../Button';\r\n\r\nexport class GridCell<T, P extends IGridCellProps<T>> extends React.Component<P, {}> {\r\n\r\n  public static defaultProps = {\r\n    disabled: false,\r\n    id: getId('gridCell')\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      item,\r\n      id,\r\n      className,\r\n      role,\r\n      selected,\r\n      disabled,\r\n      onRenderItem,\r\n      cellDisabledStyle,\r\n      cellIsSelectedStyle,\r\n      index,\r\n      label,\r\n      getClassNames\r\n    } = this.props;\r\n\r\n    return (\r\n      <CommandButton\r\n        id={ id }\r\n        data-index={ index }\r\n        data-is-focusable={ true }\r\n        disabled={ disabled }\r\n        className={ css(className,\r\n          {\r\n            ['' + cellIsSelectedStyle]: selected,\r\n            ['' + cellDisabledStyle]: disabled\r\n          }\r\n        ) }\r\n        onClick={ this._onClick }\r\n        onMouseEnter={ this._onMouseEnter }\r\n        onMouseMove={ this._onMouseMove }\r\n        onMouseLeave={ this._onMouseLeave }\r\n        onFocus={ this._onFocus }\r\n        role={ role }\r\n        aria-selected={ selected }\r\n        ariaLabel={ label }\r\n        title={ label }\r\n        getClassNames={ getClassNames }\r\n      >\r\n        { onRenderItem(item) }\r\n      </CommandButton >\r\n    );\r\n  }\r\n\r\n  private _onClick = (): void => {\r\n    const {\r\n      onClick,\r\n      disabled,\r\n      item\r\n    } = this.props as P;\r\n\r\n    if (onClick && !disabled) {\r\n      onClick(item);\r\n    }\r\n  }\r\n\r\n  private _onMouseEnter = (ev: React.MouseEvent<HTMLButtonElement>): void => {\r\n    const {\r\n      onHover,\r\n      disabled,\r\n      item,\r\n      onMouseEnter\r\n    } = this.props as P;\r\n\r\n    const didUpdateOnEnter = onMouseEnter && onMouseEnter(ev);\r\n\r\n    if (!didUpdateOnEnter && onHover && !disabled) {\r\n      onHover(item);\r\n    }\r\n  }\r\n\r\n  private _onMouseMove = (ev: React.MouseEvent<HTMLButtonElement>): void => {\r\n    const {\r\n      onHover,\r\n      disabled,\r\n      item,\r\n      onMouseMove\r\n    } = this.props as P;\r\n\r\n    const didUpdateOnMove = onMouseMove && onMouseMove(ev);\r\n\r\n    if (!didUpdateOnMove && onHover && !disabled) {\r\n      onHover(item);\r\n    }\r\n  }\r\n\r\n  private _onMouseLeave = (ev: React.MouseEvent<HTMLButtonElement>): void => {\r\n    const {\r\n      onHover,\r\n      disabled,\r\n      onMouseLeave\r\n    } = this.props as P;\r\n\r\n    const didUpdateOnLeave = onMouseLeave && onMouseLeave(ev);\r\n\r\n    if (!didUpdateOnLeave && onHover && !disabled) {\r\n      onHover();\r\n    }\r\n  }\r\n\r\n  private _onFocus = (): void => {\r\n    const {\r\n      onFocus,\r\n      disabled,\r\n      item\r\n    } = this.props as P;\r\n\r\n    if (onFocus && !disabled) {\r\n      onFocus(item);\r\n    }\r\n  }\r\n\r\n}"]}