{"version":3,"file":"DetailsList.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.tsx"],"names":[],"mappings":"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","sourcesContent":["\r\nimport * as React from 'react';\r\nimport * as stylesImport from './DetailsList.scss';\r\n\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  assign,\r\n  css,\r\n  elementContains,\r\n  getRTLSafeKeyCode,\r\n  IRenderFunction,\r\n  createRef\r\n} from '../../Utilities';\r\nimport {\r\n  CheckboxVisibility,\r\n  ColumnActionsMode,\r\n  ConstrainMode,\r\n  DetailsListLayoutMode,\r\n  IColumn,\r\n  IDetailsList,\r\n  IDetailsListProps,\r\n  IDetailsGroupRenderProps\r\n} from '../DetailsList/DetailsList.types';\r\nimport { DetailsHeader, IDetailsHeader, SelectAllVisibility, IDetailsHeaderProps } from '../DetailsList/DetailsHeader';\r\nimport { DetailsRow, IDetailsRowProps } from '../DetailsList/DetailsRow';\r\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport {\r\n  ISelectionZone,\r\n  IObjectWithKey,\r\n  ISelection,\r\n  Selection,\r\n  SelectionMode,\r\n  SelectionZone,\r\n} from '../../utilities/selection/index';\r\n\r\nimport { DragDropHelper } from '../../utilities/dragdrop/DragDropHelper';\r\nimport { IGroupedList, GroupedList, IGroupRenderProps, IGroupDividerProps } from '../../GroupedList';\r\nimport {\r\n  IList,\r\n  List,\r\n  IListProps,\r\n  ScrollToMode\r\n} from '../../List';\r\nimport { withViewport } from '../../utilities/decorators/withViewport';\r\nimport { GetGroupCount } from '../../utilities/groupedList/GroupedListUtility';\r\nimport { IDetailsFooterProps } from '../DetailsList/DetailsFooter.types';\r\n\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IDetailsListState {\r\n  focusedItemIndex: number;\r\n  lastWidth?: number;\r\n  lastSelectionMode?: SelectionMode;\r\n  adjustedColumns?: IColumn[];\r\n  isCollapsed?: boolean;\r\n  isSizing?: boolean;\r\n  isDropping?: boolean;\r\n  isSomeGroupExpanded?: boolean;\r\n}\r\n\r\nconst MIN_COLUMN_WIDTH = 100; // this is the global min width\r\nconst CHECKBOX_WIDTH = 40;\r\nconst GROUP_EXPAND_WIDTH = 36;\r\nconst DEFAULT_INNER_PADDING = 16;\r\nconst ISPADDED_WIDTH = 24;\r\n\r\nconst DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\r\nconst DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\r\n\r\nconst SHIMMER_INITIAL_ITEMS = 10;\r\nconst SHIMMER_ITEMS = new Array(SHIMMER_INITIAL_ITEMS);\r\n\r\n@withViewport\r\nexport class DetailsList extends BaseComponent<IDetailsListProps, IDetailsListState> implements IDetailsList {\r\n  public static defaultProps = {\r\n    layoutMode: DetailsListLayoutMode.justified,\r\n    selectionMode: SelectionMode.multiple,\r\n    constrainMode: ConstrainMode.horizontalConstrained,\r\n    checkboxVisibility: CheckboxVisibility.onHover,\r\n    isHeaderVisible: true,\r\n    enableShimmer: false\r\n  };\r\n\r\n  // References\r\n  private _root = createRef<HTMLDivElement>();\r\n  private _header = createRef<IDetailsHeader>();\r\n  private _groupedList = createRef<IGroupedList>();\r\n  private _list = createRef<IList>();\r\n  private _focusZone = createRef<IFocusZone>();\r\n  private _selectionZone = createRef<ISelectionZone>();\r\n\r\n  private _selection: ISelection;\r\n  private _activeRows: { [key: string]: DetailsRow };\r\n  private _dragDropHelper: DragDropHelper | null;\r\n  private _initialFocusedIndex: number | undefined;\r\n  private _pendingForceUpdate: boolean;\r\n\r\n  private _columnOverrides: {\r\n    [key: string]: IColumn;\r\n  };\r\n\r\n  constructor(props: IDetailsListProps) {\r\n    super(props);\r\n\r\n    this._activeRows = {};\r\n    this._columnOverrides = {};\r\n    this._onColumnIsSizingChanged = this._onColumnIsSizingChanged.bind(this);\r\n    this._onColumnResized = this._onColumnResized.bind(this);\r\n    this._onColumnAutoResized = this._onColumnAutoResized.bind(this);\r\n    this._onRowDidMount = this._onRowDidMount.bind(this);\r\n    this._onRowWillUnmount = this._onRowWillUnmount.bind(this);\r\n    this._onToggleCollapse = this._onToggleCollapse.bind(this);\r\n    this._onActiveRowChanged = this._onActiveRowChanged.bind(this);\r\n    this._onBlur = this._onBlur.bind(this);\r\n    this._onHeaderKeyDown = this._onHeaderKeyDown.bind(this);\r\n    this._onContentKeyDown = this._onContentKeyDown.bind(this);\r\n    this._onRenderCell = this._onRenderCell.bind(this);\r\n    this._onGroupExpandStateChanged = this._onGroupExpandStateChanged.bind(this);\r\n\r\n    this.state = {\r\n      focusedItemIndex: -1,\r\n      lastWidth: 0,\r\n      adjustedColumns: this._getAdjustedColumns(props),\r\n      isSizing: false,\r\n      isDropping: false,\r\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\r\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed\r\n    };\r\n\r\n    this._selection = props.selection || new Selection({ onSelectionChanged: undefined, getKey: props.getKey });\r\n    this._selection.setItems(props.items as IObjectWithKey[], false);\r\n    this._dragDropHelper = props.dragDropEvents\r\n      ? new DragDropHelper({\r\n        selection: this._selection,\r\n        minimumPixelsForDrag: props.minimumPixelsForDrag\r\n      })\r\n      : null;\r\n    this._initialFocusedIndex = props.initialFocusedIndex;\r\n  }\r\n\r\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\r\n    this._list.current && this._list.current.scrollToIndex(index, measureItem, scrollToMode);\r\n    this._groupedList.current && this._groupedList.current.scrollToIndex(index, measureItem, scrollToMode);\r\n  }\r\n\r\n  public focusIndex(\r\n    index: number,\r\n    forceIntoFirstElement: boolean = false,\r\n    measureItem?: (itemIndex: number) => number,\r\n    scrollToMode?: ScrollToMode): void {\r\n\r\n    const item = this.props.items[index];\r\n    if (item) {\r\n      this.scrollToIndex(index, measureItem, scrollToMode);\r\n\r\n      const itemKey = this._getItemKey(item, index);\r\n      const row = this._activeRows[itemKey];\r\n      if (row) {\r\n        this._setFocusToRow(row, forceIntoFirstElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this._dragDropHelper) {\r\n      this._dragDropHelper.dispose();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: any, prevState: any) {\r\n    if (this._initialFocusedIndex !== undefined) {\r\n      const item = this.props.items[this._initialFocusedIndex];\r\n      if (item) {\r\n        const itemKey = this._getItemKey(item, this._initialFocusedIndex);\r\n        const row = this._activeRows[itemKey];\r\n        if (row) {\r\n          this._setFocusToRowIfPending(row);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.props.items !== prevProps.items &&\r\n      this.props.items.length > 0 &&\r\n      this.state.focusedItemIndex !== -1 &&\r\n      !elementContains(this._root.current, document.activeElement as HTMLElement, false)\r\n    ) {\r\n      // Item set has changed and previously-focused item is gone.\r\n      // Set focus to item at index of previously-focused item if it is in range,\r\n      // else set focus to the last item.\r\n      const index = this.state.focusedItemIndex < this.props.items.length ?\r\n        this.state.focusedItemIndex :\r\n        this.props.items.length - 1;\r\n      const item = this.props.items[index];\r\n      const itemKey = this._getItemKey(item, this.state.focusedItemIndex);\r\n      const row = this._activeRows[itemKey];\r\n      if (row) {\r\n        this._setFocusToRow(row);\r\n      } else {\r\n        this._initialFocusedIndex = index;\r\n      }\r\n    }\r\n\r\n    if (this.props.onDidUpdate) {\r\n      this.props.onDidUpdate(this);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDetailsListProps): void {\r\n    const {\r\n      checkboxVisibility,\r\n      items,\r\n      setKey,\r\n      selectionMode,\r\n      columns,\r\n      viewport\r\n    } = this.props;\r\n    const shouldResetSelection = (newProps.setKey !== setKey) || newProps.setKey === undefined;\r\n    let shouldForceUpdates = false;\r\n\r\n    if (newProps.layoutMode !== this.props.layoutMode) {\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    if (shouldResetSelection) {\r\n      this._initialFocusedIndex = newProps.initialFocusedIndex;\r\n      // reset focusedItemIndex when setKey changes\r\n      this.setState({\r\n        focusedItemIndex: (this._initialFocusedIndex !== undefined) ? this._initialFocusedIndex : -1\r\n      });\r\n    }\r\n\r\n    if (newProps.items !== items) {\r\n      this._selection.setItems(newProps.items, shouldResetSelection);\r\n    }\r\n\r\n    if (\r\n      newProps.checkboxVisibility !== checkboxVisibility ||\r\n      newProps.columns !== columns ||\r\n      newProps.viewport!.width !== viewport!.width\r\n    ) {\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    this._adjustColumns(newProps, true);\r\n\r\n    if (newProps.selectionMode !== selectionMode) {\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    if (shouldForceUpdates) {\r\n      this._pendingForceUpdate = true;\r\n    }\r\n  }\r\n\r\n  public componentWillUpdate(): void {\r\n    if (this._pendingForceUpdate) {\r\n      this._forceListUpdates();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      ariaLabelForListHeader,\r\n      ariaLabelForSelectAllCheckbox,\r\n      ariaLabelForSelectionColumn,\r\n      className,\r\n      checkboxVisibility,\r\n      compact,\r\n      constrainMode,\r\n      dragDropEvents,\r\n      groups,\r\n      groupProps,\r\n      items,\r\n      isHeaderVisible,\r\n      layoutMode,\r\n      onItemInvoked,\r\n      onItemContextMenu,\r\n      onColumnHeaderClick,\r\n      onColumnHeaderContextMenu,\r\n      selectionMode,\r\n      selectionPreservedOnEmptyClick,\r\n      selectionZoneProps,\r\n      ariaLabel,\r\n      ariaLabelForGrid,\r\n      rowElementEventMap,\r\n      shouldApplyApplicationRole = false,\r\n      getKey,\r\n      listProps,\r\n      usePageCache,\r\n      onShouldVirtualize,\r\n      enableShimmer,\r\n      columnReorderOptions,\r\n      minimumPixelsForDrag\r\n    } = this.props;\r\n    const {\r\n      adjustedColumns,\r\n      isCollapsed,\r\n      isSizing,\r\n      isSomeGroupExpanded\r\n    } = this.state;\r\n    const {\r\n      _selection: selection,\r\n      _dragDropHelper: dragDropHelper\r\n    } = this;\r\n    const groupNestingDepth = this._getGroupNestingDepth();\r\n    const additionalListProps: IListProps = {\r\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\r\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\r\n      getKey,\r\n      ...listProps\r\n    };\r\n    let selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\r\n    if (selectionMode === SelectionMode.single) {\r\n      selectAllVisibility = SelectAllVisibility.hidden;\r\n    }\r\n    if (selectionMode === SelectionMode.multiple) {\r\n      // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\r\n      let isCollapsedGroupSelectVisible = groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\r\n      if (isCollapsedGroupSelectVisible === undefined) {\r\n        isCollapsedGroupSelectVisible = true;\r\n      }\r\n      const isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\r\n      selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\r\n    }\r\n\r\n    if (checkboxVisibility === CheckboxVisibility.hidden) {\r\n      selectAllVisibility = SelectAllVisibility.none;\r\n    }\r\n\r\n    const {\r\n      onRenderDetailsHeader = this._onRenderDetailsHeader,\r\n      onRenderDetailsFooter = this._onRenderDetailsFooter\r\n    } = this.props;\r\n\r\n    const detailsFooterProps = this._getDetailsFooterProps();\r\n    const rowCount = (isHeaderVisible ? 1 : 0) + GetGroupCount(groups) + (items ? items.length : 0);\r\n    return (\r\n      // If shouldApplyApplicationRole is true, role application will be applied to make arrow keys work\r\n      // with JAWS.\r\n      <div\r\n        ref={ this._root }\r\n        className={ css(\r\n          'ms-DetailsList',\r\n          styles.root,\r\n          className,\r\n          layoutMode === DetailsListLayoutMode.fixedColumns && 'is-fixed',\r\n          constrainMode === ConstrainMode.horizontalConstrained &&\r\n          'is-horizontalConstrained ' + styles.rootIsHorizontalConstrained,\r\n          !!compact && 'ms-DetailsList--Compact ' + styles.rootCompact\r\n        ) }\r\n        data-automationid='DetailsList'\r\n        data-is-scrollable='false'\r\n        aria-label={ ariaLabel }\r\n        { ...(shouldApplyApplicationRole ? { role: 'application' } : {}) }\r\n      >\r\n        <div\r\n          role='grid'\r\n          aria-label={ ariaLabelForGrid }\r\n          aria-rowcount={ rowCount }\r\n          aria-colcount={ (selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) + (adjustedColumns ? adjustedColumns.length : 0) }\r\n          aria-readonly='true'\r\n        >\r\n          <div onKeyDown={ this._onHeaderKeyDown } role='presentation'>\r\n            { isHeaderVisible &&\r\n              onRenderDetailsHeader(\r\n                {\r\n                  componentRef: this._header,\r\n                  selectionMode: selectionMode!,\r\n                  layoutMode: layoutMode!,\r\n                  selection: selection,\r\n                  columns: adjustedColumns as IColumn[],\r\n                  onColumnClick: onColumnHeaderClick,\r\n                  onColumnContextMenu: onColumnHeaderContextMenu,\r\n                  onColumnResized: this._onColumnResized,\r\n                  onColumnIsSizingChanged: this._onColumnIsSizingChanged,\r\n                  onColumnAutoResized: this._onColumnAutoResized,\r\n                  groupNestingDepth: groupNestingDepth,\r\n                  isAllCollapsed: isCollapsed,\r\n                  onToggleCollapseAll: this._onToggleCollapse,\r\n                  ariaLabel: ariaLabelForListHeader,\r\n                  ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\r\n                  ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\r\n                  selectAllVisibility: selectAllVisibility,\r\n                  collapseAllVisibility: groupProps && groupProps.collapseAllVisibility,\r\n                  columnReorderOptions: columnReorderOptions,\r\n                  minimumPixelsForDrag: minimumPixelsForDrag\r\n                },\r\n                this._onRenderDetailsHeader\r\n              ) }\r\n          </div>\r\n          <div onKeyDown={ this._onContentKeyDown } role='presentation'>\r\n            <FocusZone\r\n              componentRef={ this._focusZone }\r\n              className={ styles.focusZone }\r\n              direction={ FocusZoneDirection.vertical }\r\n              isInnerZoneKeystroke={ isRightArrow }\r\n              onActiveElementChanged={ this._onActiveRowChanged }\r\n              onBlur={ this._onBlur }\r\n            >\r\n              <SelectionZone\r\n                ref={ this._selectionZone }\r\n                selection={ selection }\r\n                selectionPreservedOnEmptyClick={ selectionPreservedOnEmptyClick }\r\n                selectionMode={ selectionMode }\r\n                onItemInvoked={ onItemInvoked }\r\n                onItemContextMenu={ onItemContextMenu }\r\n                enterModalOnTouch={ this.props.enterModalSelectionOnTouch }\r\n                { ...(selectionZoneProps || {}) }\r\n              >\r\n                { groups ? (\r\n                  <GroupedList\r\n                    ref={ this._groupedList }\r\n                    groups={ groups }\r\n                    groupProps={ groupProps ? this._getGroupProps(groupProps) : undefined }\r\n                    items={ items }\r\n                    onRenderCell={ this._onRenderCell }\r\n                    selection={ selection }\r\n                    selectionMode={ selectionMode }\r\n                    dragDropEvents={ dragDropEvents }\r\n                    dragDropHelper={ dragDropHelper as DragDropHelper }\r\n                    eventsToRegister={ rowElementEventMap }\r\n                    listProps={ additionalListProps }\r\n                    onGroupExpandStateChanged={ this._onGroupExpandStateChanged }\r\n                    usePageCache={ usePageCache }\r\n                    onShouldVirtualize={ onShouldVirtualize }\r\n                  />\r\n                ) : (\r\n                    <List\r\n                      ref={ this._list }\r\n                      role='presentation'\r\n                      items={ enableShimmer && !items.length ? SHIMMER_ITEMS : items }\r\n                      onRenderCell={ this._onRenderListCell(0) }\r\n                      usePageCache={ usePageCache }\r\n                      onShouldVirtualize={ onShouldVirtualize }\r\n                      { ...additionalListProps }\r\n                    />\r\n                  ) }\r\n              </SelectionZone>\r\n            </FocusZone>\r\n          </div>\r\n          { onRenderDetailsFooter(\r\n            {\r\n              ...detailsFooterProps\r\n            },\r\n            this._onRenderDetailsFooter\r\n          ) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public forceUpdate(): void {\r\n    super.forceUpdate();\r\n    this._forceListUpdates();\r\n  }\r\n\r\n  protected _onRenderRow = (props: IDetailsRowProps, defaultRender?: any): JSX.Element => {\r\n    return <DetailsRow { ...props } />;\r\n  }\r\n\r\n  private _onRenderDetailsHeader = (detailsHeaderProps: IDetailsHeaderProps, defaultRender?: IRenderFunction<IDetailsHeaderProps>): JSX.Element => {\r\n    return <DetailsHeader { ...detailsHeaderProps } />;\r\n  }\r\n\r\n  private _onRenderDetailsFooter = (\r\n    detailsFooterProps: IDetailsFooterProps,\r\n    defaultRender?: IRenderFunction<IDetailsFooterProps>\r\n  ): JSX.Element | null => {\r\n    return null;\r\n  }\r\n\r\n  private _onRenderListCell = (nestingDepth: number)\r\n    : (item: any, itemIndex: number) => React.ReactNode => {\r\n    return (item: any, itemIndex: number): React.ReactNode => {\r\n      return this._onRenderCell(nestingDepth, item, itemIndex as number);\r\n    };\r\n  }\r\n\r\n  private _onRenderCell(nestingDepth: number, item: any, index: number): React.ReactNode {\r\n    const {\r\n      compact,\r\n      dragDropEvents,\r\n      rowElementEventMap: eventsToRegister,\r\n      onRenderMissingItem,\r\n      onRenderItemColumn,\r\n      onRenderRow = this._onRenderRow,\r\n      selectionMode,\r\n      viewport,\r\n      checkboxVisibility,\r\n      getRowAriaLabel,\r\n      getRowAriaDescribedBy,\r\n      checkButtonAriaLabel,\r\n      checkboxCellClassName,\r\n      groupProps\r\n    } = this.props;\r\n    const collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\r\n    const selection = this._selection;\r\n    const dragDropHelper = this._dragDropHelper;\r\n    const {\r\n      adjustedColumns: columns\r\n    } = this.state;\r\n\r\n    const rowProps: IDetailsRowProps = {\r\n      item: item,\r\n      itemIndex: index,\r\n      compact: compact,\r\n      columns: columns as IColumn[],\r\n      groupNestingDepth: nestingDepth,\r\n      selectionMode: selectionMode!,\r\n      selection: selection,\r\n      onDidMount: this._onRowDidMount,\r\n      onWillUnmount: this._onRowWillUnmount,\r\n      onRenderItemColumn: onRenderItemColumn,\r\n      eventsToRegister: eventsToRegister,\r\n      dragDropEvents: dragDropEvents,\r\n      dragDropHelper: dragDropHelper!,\r\n      viewport: viewport,\r\n      checkboxVisibility: checkboxVisibility,\r\n      collapseAllVisibility: collapseAllVisibility,\r\n      getRowAriaLabel: getRowAriaLabel,\r\n      getRowAriaDescribedBy: getRowAriaDescribedBy,\r\n      checkButtonAriaLabel: checkButtonAriaLabel,\r\n      checkboxCellClassName: checkboxCellClassName,\r\n    };\r\n\r\n    if (!item) {\r\n      if (onRenderMissingItem) {\r\n        return onRenderMissingItem(index, rowProps);\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    return onRenderRow(rowProps, this._onRenderRow);\r\n  }\r\n\r\n  private _onGroupExpandStateChanged(isSomeGroupExpanded: boolean): void {\r\n    this.setState({ isSomeGroupExpanded: isSomeGroupExpanded });\r\n  }\r\n\r\n  private _onColumnIsSizingChanged(column: IColumn, isSizing: boolean): void {\r\n    this.setState({ isSizing: isSizing });\r\n  }\r\n\r\n  private _onHeaderKeyDown(ev: React.KeyboardEvent<HTMLElement>): void {\r\n    if (ev.which === KeyCodes.down) {\r\n      if (this._focusZone.current && this._focusZone.current.focus()) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onContentKeyDown(ev: React.KeyboardEvent<HTMLElement>): void {\r\n    if (ev.which === KeyCodes.up && !ev.altKey) {\r\n      if (this._header.current && this._header.current.focus()) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getGroupNestingDepth(): number {\r\n    const { groups } = this.props;\r\n    let level = 0;\r\n    let groupsInLevel = groups;\r\n\r\n    while (groupsInLevel && groupsInLevel.length > 0) {\r\n      level++;\r\n      groupsInLevel = groupsInLevel[0].children;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private _onRowDidMount(row: DetailsRow): void {\r\n    const { item, itemIndex } = row.props;\r\n    const itemKey = this._getItemKey(item, itemIndex);\r\n    this._activeRows[itemKey] = row; // this is used for column auto resize\r\n\r\n    this._setFocusToRowIfPending(row);\r\n\r\n    const { onRowDidMount } = this.props;\r\n    if (onRowDidMount) {\r\n      onRowDidMount(item, itemIndex);\r\n    }\r\n  }\r\n\r\n  private _setFocusToRowIfPending(row: DetailsRow): void {\r\n    const { itemIndex } = row.props;\r\n    if (this._initialFocusedIndex !== undefined && itemIndex === this._initialFocusedIndex) {\r\n      this._setFocusToRow(row);\r\n      delete this._initialFocusedIndex;\r\n    }\r\n  }\r\n\r\n  private _setFocusToRow(row: DetailsRow, forceIntoFirstElement: boolean = false): void {\r\n    if (this._selectionZone.current) {\r\n      this._selectionZone.current.ignoreNextFocus();\r\n    }\r\n    this._async.setTimeout((): void => {\r\n      row.focus(forceIntoFirstElement);\r\n    }, 0);\r\n  }\r\n\r\n  private _onRowWillUnmount(row: DetailsRow): void {\r\n    const { onRowWillUnmount } = this.props;\r\n\r\n    const { item, itemIndex } = row.props;\r\n    const itemKey = this._getItemKey(item, itemIndex);\r\n    delete this._activeRows[itemKey];\r\n\r\n    if (onRowWillUnmount) {\r\n      onRowWillUnmount(item, itemIndex);\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapse(collapsed: boolean): void {\r\n    this.setState({\r\n      isCollapsed: collapsed\r\n    });\r\n    if (this._groupedList.current) {\r\n      this._groupedList.current.toggleCollapseAll(collapsed);\r\n    }\r\n  }\r\n\r\n  private _forceListUpdates(): void {\r\n    this._pendingForceUpdate = false;\r\n\r\n    if (this._groupedList.current) {\r\n      this._groupedList.current.forceUpdate();\r\n    }\r\n    if (this._list.current) {\r\n      this._list.current.forceUpdate();\r\n    }\r\n  }\r\n\r\n  private _adjustColumns(newProps: IDetailsListProps, forceUpdate?: boolean, resizingColumnIndex?: number): void {\r\n    const adjustedColumns = this._getAdjustedColumns(newProps, forceUpdate, resizingColumnIndex);\r\n    const { width: viewportWidth } = this.props.viewport!;\r\n\r\n    if (adjustedColumns) {\r\n      this.setState({\r\n        adjustedColumns: adjustedColumns,\r\n        lastWidth: viewportWidth,\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Returns adjusted columns, given the viewport size and layout mode. */\r\n  private _getAdjustedColumns(newProps: IDetailsListProps, forceUpdate?: boolean, resizingColumnIndex?: number): IColumn[] | undefined {\r\n    const { items: newItems, layoutMode, selectionMode } = newProps;\r\n    let { columns: newColumns } = newProps;\r\n    let { width: viewportWidth } = newProps.viewport!;\r\n\r\n    const columns = this.props ? this.props.columns : [];\r\n    const lastWidth = this.state ? this.state.lastWidth : -1;\r\n    const lastSelectionMode = this.state ? this.state.lastSelectionMode : undefined;\r\n\r\n    if (viewportWidth !== undefined) {\r\n      if (!forceUpdate &&\r\n        lastWidth === viewportWidth &&\r\n        lastSelectionMode === selectionMode &&\r\n        (!columns || newColumns === columns)) {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      viewportWidth = this.props.viewport!.width;\r\n    }\r\n\r\n    newColumns = newColumns || buildColumns(newItems, true);\r\n\r\n    let adjustedColumns: IColumn[];\r\n\r\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\r\n      adjustedColumns = this._getFixedColumns(newColumns);\r\n\r\n      // Preserve adjusted column calculated widths.\r\n      adjustedColumns.forEach(column => {\r\n        this._rememberCalculatedWidth(column, column.calculatedWidth!);\r\n      });\r\n    } else {\r\n      if (resizingColumnIndex !== undefined) {\r\n        adjustedColumns = this._getJustifiedColumnsAfterResize(newColumns, viewportWidth, newProps, resizingColumnIndex);\r\n      } else {\r\n        adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps, 0);\r\n      }\r\n\r\n      adjustedColumns.forEach(column => {\r\n        this._getColumnOverride(column.key).currentWidth = column.calculatedWidth;\r\n      });\r\n    }\r\n\r\n    return adjustedColumns;\r\n  }\r\n\r\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\r\n  private _getFixedColumns(newColumns: IColumn[]): IColumn[] {\r\n    return newColumns.map(column => {\r\n      const newColumn: IColumn = assign({}, column, this._columnOverrides[column.key]);\r\n\r\n      if (!newColumn.calculatedWidth) {\r\n        newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\r\n      }\r\n\r\n      return newColumn;\r\n    });\r\n  }\r\n\r\n  private _getJustifiedColumnsAfterResize(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps, resizingColumnIndex: number): IColumn[] {\r\n    const fixedColumns = newColumns.slice(0, resizingColumnIndex);\r\n    fixedColumns.forEach(column =>\r\n      column.calculatedWidth = this._getColumnOverride(column.key).currentWidth);\r\n\r\n    const fixedWidth = fixedColumns.reduce((total, column, i) => total + getPaddedWidth(column, i === 0), 0);\r\n\r\n    const remainingColumns = newColumns.slice(resizingColumnIndex);\r\n    const remainingWidth = viewportWidth - fixedWidth;\r\n\r\n    return [\r\n      ...fixedColumns,\r\n      ...this._getJustifiedColumns(remainingColumns, remainingWidth, props, resizingColumnIndex),\r\n    ];\r\n  }\r\n\r\n  /** Builds a set of columns to fix within the viewport width. */\r\n  private _getJustifiedColumns(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps, firstIndex: number): IColumn[] {\r\n    const {\r\n      selectionMode,\r\n      checkboxVisibility,\r\n      groups\r\n    } = props;\r\n    const outerPadding = DEFAULT_INNER_PADDING;\r\n    const rowCheckWidth = (selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden) ? CHECKBOX_WIDTH : 0;\r\n    const groupExpandWidth = groups ? GROUP_EXPAND_WIDTH : 0;\r\n    let totalWidth = 0; // offset because we have one less inner padding.\r\n    const availableWidth = viewportWidth - (outerPadding + rowCheckWidth + groupExpandWidth);\r\n    const adjustedColumns: IColumn[] = newColumns.map((column, i) => {\r\n      const newColumn = assign(\r\n        {},\r\n        column,\r\n        {\r\n          calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH\r\n        },\r\n        this._columnOverrides[column.key]);\r\n\r\n      const isFirst = i + firstIndex === 0;\r\n      totalWidth += getPaddedWidth(newColumn, isFirst);\r\n\r\n      return newColumn;\r\n    });\r\n\r\n    let lastIndex = adjustedColumns.length - 1;\r\n\r\n    // Shrink or remove collapsable columns.\r\n    while (lastIndex > 0 && totalWidth > availableWidth) {\r\n      const column = adjustedColumns[lastIndex];\r\n\r\n      const minWidth = column.minWidth || MIN_COLUMN_WIDTH;\r\n      const overflowWidth = totalWidth - availableWidth;\r\n\r\n      if (column.calculatedWidth! - minWidth >= overflowWidth || !column.isCollapsable) {\r\n        column.calculatedWidth = Math.max(column.calculatedWidth! - overflowWidth, minWidth);\r\n        totalWidth = availableWidth;\r\n      } else {\r\n        totalWidth -= getPaddedWidth(column, false);\r\n        adjustedColumns.splice(lastIndex, 1);\r\n      }\r\n      lastIndex--;\r\n    }\r\n\r\n    // Then expand columns starting at the beginning, until we've filled the width.\r\n    for (let i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\r\n      const column = adjustedColumns[i];\r\n      const isLast = i === (adjustedColumns.length - 1);\r\n      const overrides = this._columnOverrides[column.key];\r\n      if (overrides && overrides.calculatedWidth && !isLast) {\r\n        continue;\r\n      }\r\n\r\n      const spaceLeft = availableWidth - totalWidth;\r\n      let increment: number;\r\n      if (isLast) {\r\n        increment = spaceLeft;\r\n      } else {\r\n        const maxWidth = column.maxWidth;\r\n        const minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\r\n        increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\r\n      }\r\n\r\n      column.calculatedWidth = (column.calculatedWidth as number) + increment;\r\n      totalWidth += increment;\r\n    }\r\n\r\n    return adjustedColumns;\r\n  }\r\n\r\n  private _onColumnResized(resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number): void {\r\n    const newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\r\n    if (this.props.onColumnResize) {\r\n      this.props.onColumnResize(resizingColumn, newCalculatedWidth, resizingColumnIndex);\r\n    }\r\n\r\n    this._rememberCalculatedWidth(resizingColumn, newCalculatedWidth);\r\n\r\n    this._adjustColumns(this.props, true, resizingColumnIndex);\r\n    this._forceListUpdates();\r\n  }\r\n\r\n  private _rememberCalculatedWidth(column: IColumn, newCalculatedWidth: number): void {\r\n    const overrides = this._getColumnOverride(column.key);\r\n    overrides.calculatedWidth = newCalculatedWidth;\r\n    overrides.currentWidth = newCalculatedWidth;\r\n  }\r\n\r\n  private _getColumnOverride(key: string): IColumn {\r\n    return this._columnOverrides[key] = this._columnOverrides[key] || {} as IColumn;\r\n  }\r\n\r\n  /**\r\n   * Callback function when double clicked on the details header column resizer\r\n   * which will measure the column cells of all the active rows and resize the\r\n   * column to the max cell width.\r\n   *\r\n   * @private\r\n* @param { IColumn } column (double clicked column definition)\r\n* @param { number } columnIndex (double clicked column index)\r\n       * @todo min width 100 should be changed to const value and should be consistent with the value used on _onSizerMove method in DetailsHeader\r\n       */\r\n  private _onColumnAutoResized(column: IColumn, columnIndex: number): void {\r\n    let max = 0;\r\n    let count = 0;\r\n    const totalCount = Object.keys(this._activeRows).length;\r\n\r\n    for (const key in this._activeRows) {\r\n      if (this._activeRows.hasOwnProperty(key)) {\r\n        const currentRow = this._activeRows[key];\r\n        currentRow.measureCell(columnIndex, (width: number) => {\r\n          max = Math.max(max, width);\r\n          count++;\r\n          if (count === totalCount) {\r\n            this._onColumnResized(column, max, columnIndex);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call back function when an element in FocusZone becomes active. It will transalate it into item\r\n   * and call onActiveItemChanged callback if specified.\r\n   *\r\n   * @private\r\n* @param { el } row element that became active in Focus Zone\r\n* @param { ev } focus event from Focus Zone\r\n                                             */\r\n  private _onActiveRowChanged(el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>): void {\r\n    const { items, onActiveItemChanged } = this.props;\r\n\r\n    if (!el) {\r\n      return;\r\n    }\r\n    const index = Number(el.getAttribute('data-item-index'));\r\n    if (index >= 0) {\r\n      if (onActiveItemChanged) {\r\n        onActiveItemChanged(items[index], index, ev);\r\n      }\r\n      this.setState({\r\n        focusedItemIndex: index\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onBlur(event: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      focusedItemIndex: -1\r\n    });\r\n  }\r\n\r\n  private _getItemKey(item: any, itemIndex: number): string | number {\r\n    const { getKey } = this.props;\r\n\r\n    let itemKey: string | number | undefined = undefined;\r\n    if (item) {\r\n      itemKey = item.key;\r\n    }\r\n\r\n    if (getKey) {\r\n      itemKey = getKey(item, itemIndex);\r\n    }\r\n\r\n    if (!itemKey) {\r\n      itemKey = itemIndex;\r\n    }\r\n\r\n    return itemKey;\r\n  }\r\n\r\n  private _getDetailsFooterProps(): IDetailsFooterProps | undefined {\r\n    const { adjustedColumns: columns } = this.state;\r\n    const detailsFooterProps: IDetailsFooterProps = {\r\n      columns: columns as IColumn[],\r\n      groupNestingDepth: this._getGroupNestingDepth(),\r\n      selection: this._selection\r\n    };\r\n    return {\r\n      ...detailsFooterProps\r\n    };\r\n  }\r\n\r\n  private _getGroupProps(detailsGroupProps: IDetailsGroupRenderProps): IGroupRenderProps {\r\n    const {\r\n      onRenderFooter: onRenderDetailsGroupFooter,\r\n      onRenderHeader: onRenderDetailsGroupHeader\r\n    } = detailsGroupProps;\r\n    const { adjustedColumns: columns } = this.state;\r\n    const groupNestingDepth = this._getGroupNestingDepth();\r\n    const onRenderFooter = onRenderDetailsGroupFooter\r\n      ? (props: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\r\n        return onRenderDetailsGroupFooter(\r\n          {\r\n            ...props,\r\n            columns: columns,\r\n            groupNestingDepth: groupNestingDepth,\r\n            selection: this._selection\r\n          },\r\n          defaultRender\r\n        );\r\n      }\r\n      : undefined;\r\n\r\n    const onRenderHeader = onRenderDetailsGroupHeader\r\n      ? (props: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\r\n        return onRenderDetailsGroupHeader(\r\n          {\r\n            ...props,\r\n            columns: columns,\r\n            groupNestingDepth: groupNestingDepth,\r\n            selection: this._selection\r\n          },\r\n          defaultRender\r\n        );\r\n      }\r\n      : undefined;\r\n\r\n    const groupProps = detailsGroupProps as IGroupRenderProps;\r\n    return {\r\n      ...groupProps,\r\n      onRenderFooter,\r\n      onRenderHeader\r\n    };\r\n  }\r\n}\r\n\r\nexport function buildColumns(\r\n  items: any[],\r\n  canResizeColumns?: boolean,\r\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => any,\r\n  sortedColumnKey?: string,\r\n  isSortedDescending?: boolean,\r\n  groupedColumnKey?: string,\r\n  isMultiline?: boolean) {\r\n  const columns: IColumn[] = [];\r\n\r\n  if (items && items.length) {\r\n    const firstItem = items[0];\r\n\r\n    for (const propName in firstItem) {\r\n      if (firstItem.hasOwnProperty(propName)) {\r\n        columns.push({\r\n          key: propName,\r\n          name: propName,\r\n          fieldName: propName,\r\n          minWidth: MIN_COLUMN_WIDTH,\r\n          maxWidth: 300,\r\n          isCollapsable: !!columns.length,\r\n          isMultiline: (isMultiline === undefined) ? false : isMultiline,\r\n          isSorted: sortedColumnKey === propName,\r\n          isSortedDescending: !!isSortedDescending,\r\n          isRowHeader: false,\r\n          columnActionsMode: ColumnActionsMode.clickable,\r\n          isResizable: canResizeColumns,\r\n          onColumnClick: onColumnClick,\r\n          isGrouped: groupedColumnKey === propName\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return columns;\r\n}\r\n\r\nfunction isRightArrow(event: React.KeyboardEvent<HTMLElement>): boolean {\r\n  return event.which === getRTLSafeKeyCode(KeyCodes.right);\r\n}\r\n\r\nfunction getPaddedWidth(column: IColumn, isFirst: boolean): number {\r\n  return column.calculatedWidth! + (isFirst ? 0 : DEFAULT_INNER_PADDING) + (column.isPadded ? ISPADDED_WIDTH : 0);\r\n}\r\n"]}