import * as tslib_1 from "tslib";
import * as React from 'react';
import { ExampleCard, ComponentPage, PropertiesTableSet, PageMarkdown, } from '@uifabric/example-app-base';
import { ContextualMenuBasicExample } from './examples/ContextualMenu.Basic.Example';
import { ContextualMenuIconExample } from './examples/ContextualMenu.Icon.Example';
import { ContextualMenuIconSecondaryTextExample } from './examples/ContextualMenu.Icon.SecondaryText.Example';
import { ContextualMenuSectionExample } from './examples/ContextualMenu.Section.Example';
import { ContextualMenuSubmenuExample } from './examples/ContextualMenu.Submenu.Example';
import { ContextualMenuCustomizationWithNoWrapExample } from './examples/ContextualMenu.CustomizationWithNoWrap.Example';
import { ContextualMenuCheckmarksExample } from './examples/ContextualMenu.Checkmarks.Example';
import { ContextualMenuDirectionalExample } from './examples/ContextualMenu.Directional.Example';
import { ContextualMenuCustomizationExample } from './examples/ContextualMenu.Customization.Example';
import { ContextualMenuWithScrollBarExample } from './examples/ContextualMenu.ScrollBar.Example';
import { ContextualMenuWithCustomMenuItemExample } from './examples/ContextualMenu.CustomMenuItem.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { ContextualMenuStatus } from './ContextualMenu.checklist';
var ContextualMenuBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Basic.Example.tsx');
var ContextualMenuIconExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Icon.Example.tsx');
var ContextualMenuIconSecondaryTextExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Icon.SecondaryText.Example.tsx');
var ContextualMenuSectionExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Section.Example.tsx');
var ContextualMenuSubmenuExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Submenu.Example.tsx');
var ContextualMenuCheckmarksExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx');
var ContextualMenuDirectionalExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Directional.Example.tsx');
var ContextualMenuCustomizationExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.Customization.Example.tsx');
var ContextualMenuWithScrollBarExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.ScrollBar.Example.tsx');
var ContextualMenuWithCustomMenuItemExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/examples/ContextualMenu.CustomMenuItem.Example.tsx');
var ContextualMenuPage = /** @class */ (function (_super) {
    tslib_1.__extends(ContextualMenuPage, _super);
    function ContextualMenuPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextualMenuPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'ContextualMenu', componentName: 'ContextualMenuExample', componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/ContextualMenu', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'Default ContextualMenu', code: ContextualMenuBasicExampleCode },
                    React.createElement(ContextualMenuBasicExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with icons', code: ContextualMenuIconExampleCode },
                    React.createElement(ContextualMenuIconExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with icons and secondary text', code: ContextualMenuIconSecondaryTextExampleCode },
                    React.createElement(ContextualMenuIconSecondaryTextExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with submenus', code: ContextualMenuSubmenuExampleCode },
                    React.createElement(ContextualMenuSubmenuExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with section headers', code: ContextualMenuSectionExampleCode },
                    React.createElement(ContextualMenuSectionExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with checkable menu items and toggleable split button', code: ContextualMenuCheckmarksExampleCode },
                    React.createElement(ContextualMenuCheckmarksExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with beak and directional settings', code: ContextualMenuDirectionalExampleCode },
                    React.createElement(ContextualMenuDirectionalExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with customized submenus', code: ContextualMenuCustomizationExampleCode },
                    React.createElement(ContextualMenuCustomizationExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with customized submenus and noWrap attributes', code: ContextualMenuSubmenuExampleCode },
                    React.createElement(ContextualMenuCustomizationWithNoWrapExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with a scroll bar and fixed direction', code: ContextualMenuWithScrollBarExampleCode },
                    React.createElement(ContextualMenuWithScrollBarExample, null)),
                React.createElement(ExampleCard, { title: 'ContextualMenu with custom rendered menu items', code: ContextualMenuWithCustomMenuItemExampleCode },
                    React.createElement(ContextualMenuWithCustomMenuItemExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/ContextualMenu.types.ts'),
                    require('!raw-loader!office-ui-fabric-react/src/components/Callout/Callout.types.ts'),
                ] }), overview: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/docs/ContextualMenuOverview.md')), bestPractices: React.createElement("div", null), dos: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/docs/ContextualMenuDos.md')), donts: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/docs/ContextualMenuDonts.md')), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, ContextualMenuStatus)) }));
    };
    return ContextualMenuPage;
}(React.Component));
export { ContextualMenuPage };
//# sourceMappingURL=ContextualMenuPage.js.map