{"version":3,"file":"DatePicker.Required.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Required.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,UAAU,EACV,SAAS,EAEV,MAAM,uCAAuC,CAAC;AAC/C,OAAO,4BAA4B,CAAC;AAEpC,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,oBAAoB;IAE5C,wBAAwB,EAAE,sBAAsB;CACjD,CAAC;AAMF;IAA+C,qDAAoD;IACjG,mCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,SAAS,CAAC,MAAM;SACjC,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QACU,IAAA,0CAAc,CAAgB;QAEtC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;YACrC,sFAA2D;YAC3D,oBAAC,UAAU,IAAC,KAAK,EAAC,4BAA4B,EAAC,UAAU,EAAG,IAAI,EAAG,cAAc,EAAG,cAAc,EAAG,OAAO,EAAG,gBAAgB,EAAG,WAAW,EAAC,kBAAkB,GAAG;YACnK,oBAAC,UAAU,IAAC,UAAU,EAAG,IAAI,EAAG,cAAc,EAAG,cAAc,EAAG,OAAO,EAAG,gBAAgB,EAAG,WAAW,EAAC,gCAAgC,GAAG,CAC1I,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AApBD,CAA+C,KAAK,CAAC,SAAS,GAoB7D","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  IDatePickerStrings\r\n} from 'office-ui-fabric-react/lib/DatePicker';\r\nimport './DatePicker.Examples.scss';\r\n\r\nconst DayPickerStrings: IDatePickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year',\r\n\r\n  isRequiredErrorMessage: 'Field is required.',\r\n\r\n  invalidInputErrorMessage: 'Invalid date format.'\r\n};\r\n\r\nexport interface IDatePickerRequiredExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n}\r\n\r\nexport class DatePickerRequiredExample extends React.Component<{}, IDatePickerRequiredExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { firstDayOfWeek } = this.state;\r\n\r\n    return (\r\n      <div className='docs-DatePickerExample'>\r\n        <p>Validation will happen when Date Picker loses focus.</p>\r\n        <DatePicker label='Date required (with label)' isRequired={ true } firstDayOfWeek={ firstDayOfWeek } strings={ DayPickerStrings } placeholder='Select a date...' />\r\n        <DatePicker isRequired={ true } firstDayOfWeek={ firstDayOfWeek } strings={ DayPickerStrings } placeholder='Date required with no label...' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}