{"version":3,"file":"Pivot.base.js","sourceRoot":"../src/","sources":["components/Pivot/Pivot.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  getId,\r\n  getNativeProps,\r\n  divProperties,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { CommandButton } from '../../Button';\r\nimport { IPivotProps } from './Pivot.types';\r\nimport { IPivotItemProps } from './PivotItem.types';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { PivotItem } from './PivotItem';\r\nimport { PivotLinkFormat } from './Pivot.types';\r\nimport { PivotLinkSize } from './Pivot.types';\r\nimport { Icon } from '../../Icon';\r\nimport * as stylesImport from './Pivot.scss';\r\nconst styles: any = stylesImport;\r\n\r\n/**\r\n *  Usage:\r\n *\r\n *   <Pivot>\r\n *     <PivotItem linkText=\"Foo\">\r\n *       <Label>Pivot #1</Label>\r\n *     </PivotItem>\r\n *     <PivotItem linkText=\"Bar\">\r\n *       <Label>Pivot #2</Label>\r\n *     </PivotItem>\r\n *     <PivotItem linkText=\"Bas\">\r\n *       <Label>Pivot #3</Label>\r\n *     </PivotItem>\r\n *   </Pivot>\r\n */\r\n\r\nexport interface IPivotState {\r\n  links: IPivotItemProps[];\r\n  selectedKey: string;\r\n  selectedTabId: string;\r\n}\r\n\r\nconst PivotItemType = (<PivotItem />).type;\r\n\r\nexport class PivotBase extends BaseComponent<IPivotProps, IPivotState> {\r\n  private _keyToIndexMapping: { [key: string]: number };\r\n  private _keyToTabIds: { [key: string]: string };\r\n  private _pivotId: string;\r\n  private focusZone = createRef<FocusZone>();\r\n\r\n  constructor(props: IPivotProps) {\r\n    super(props);\r\n    this._pivotId = getId('Pivot');\r\n    const links: IPivotItemProps[] = this._getPivotLinks(this.props);\r\n    let selectedKey: string | undefined;\r\n\r\n    if (props.initialSelectedKey) {\r\n      selectedKey = props.initialSelectedKey;\r\n    } else if (props.initialSelectedIndex) {\r\n      selectedKey = links[props.initialSelectedIndex].itemKey as string;\r\n    } else if (props.selectedKey) {\r\n      selectedKey = props.selectedKey;\r\n    } else if (links.length) {\r\n      selectedKey = links[0].itemKey as string;\r\n    }\r\n\r\n    this.state = {\r\n      links,\r\n      selectedKey: selectedKey!,\r\n      selectedTabId: this._keyToTabIds[selectedKey!],\r\n    } as IPivotState;\r\n\r\n    this._renderPivotLink = this._renderPivotLink.bind(this);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IPivotProps): void {\r\n    const links: IPivotItemProps[] = this._getPivotLinks(nextProps);\r\n\r\n    this.setState((prevState, props) => {\r\n      let selectedKey: string | undefined;\r\n      if (this._isKeyValid(nextProps.selectedKey)) {\r\n        selectedKey = nextProps.selectedKey;\r\n      } else if (this._isKeyValid(prevState.selectedKey)) {\r\n        selectedKey = prevState.selectedKey;\r\n      } else if (links.length) {\r\n        selectedKey = links[0].itemKey;\r\n      }\r\n\r\n      return {\r\n        links: links,\r\n        selectedKey,\r\n        selectedTabId: this._keyToTabIds[selectedKey as string],\r\n      } as IPivotState;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets focus to the first pivot tab.\r\n   */\r\n  public focus(): void {\r\n    if (this.focusZone.current) {\r\n      this.focusZone.current.focus();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n\r\n    return (\r\n      <div { ...divProps }>\r\n        { this._renderPivotLinks() }\r\n        { this._renderPivotItem() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the set of links to route between pivots\r\n   */\r\n  private _renderPivotLinks(): JSX.Element {\r\n    return (\r\n      <FocusZone componentRef={ this.focusZone } direction={ FocusZoneDirection.horizontal }>\r\n        <ul\r\n          className={ css('ms-Pivot', styles.root,\r\n            { ['ms-Pivot--large ' + styles.rootIsLarge]: this.props.linkSize === PivotLinkSize.large },\r\n            { ['ms-Pivot--tabs ' + styles.rootIsTabs]: this.props.linkFormat === PivotLinkFormat.tabs }) }\r\n          role='tablist'\r\n        >\r\n          { this.state.links.map(this._renderPivotLink) }\r\n        </ul>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _renderPivotLink = (link: IPivotItemProps): JSX.Element => {\r\n    const { itemKey, headerButtonProps } = link;\r\n    const tabId = this._keyToTabIds[itemKey as string];\r\n    const { onRenderItemLink } = link;\r\n    let linkContent: JSX.Element | null;\r\n\r\n    if (onRenderItemLink) {\r\n      linkContent = onRenderItemLink(link, this._renderLinkContent);\r\n    } else {\r\n      linkContent = this._renderLinkContent(link);\r\n    }\r\n\r\n    return (\r\n      <CommandButton\r\n        { ...headerButtonProps }\r\n        id={ tabId }\r\n        key={ itemKey }\r\n        className={ css(\r\n          'ms-Pivot-link',\r\n          styles.link,\r\n          {\r\n            ['is-selected ' + styles.linkIsSelected]: this.state.selectedKey === itemKey\r\n          }\r\n        ) }\r\n        onClick={ this._onLinkClick.bind(this, itemKey) }\r\n        onKeyPress={ this._onKeyPress.bind(this, itemKey) }\r\n        ariaLabel={ link.ariaLabel }\r\n        role='tab'\r\n        aria-selected={ this.state.selectedKey === itemKey }\r\n        name={ link.headerText }\r\n        keytipProps={ link.keytipProps }\r\n      >\r\n        { linkContent }\r\n      </CommandButton>\r\n    );\r\n  }\r\n\r\n  private _renderLinkContent = (link: IPivotItemProps): JSX.Element => {\r\n    const { itemCount, itemIcon, headerText } = link;\r\n\r\n    return (\r\n      <span className={ css('ms-Pivot-link-content') }>\r\n        { itemIcon !== undefined && (\r\n          <span className={ css('ms-Pivot-icon', styles.icon) }>\r\n            <Icon iconName={ itemIcon } />\r\n          </span>\r\n        ) }\r\n        { headerText !== undefined && <span className={ css('ms-Pivot-text', styles.text) }> { link.headerText }</span> }\r\n        { itemCount !== undefined && <span className={ css('ms-Pivot-count', styles.count) } > ({ itemCount })</span> }\r\n      </span>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the current Pivot Item\r\n   */\r\n  private _renderPivotItem(): JSX.Element | null {\r\n    if (this.props.headersOnly) {\r\n      return null;\r\n    }\r\n\r\n    const itemKey: string = this.state.selectedKey;\r\n    const index = this._keyToIndexMapping[itemKey];\r\n    const { selectedTabId } = this.state;\r\n\r\n    return (\r\n      <div\r\n        role='tabpanel'\r\n        aria-labelledby={ selectedTabId }\r\n      >\r\n        { React.Children.toArray(this.props.children)[index] }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\r\n   * The set of Links is determined by child components of type PivotItem\r\n   */\r\n  private _getPivotLinks(props: IPivotProps): IPivotItemProps[] {\r\n    const links: IPivotItemProps[] = [];\r\n    this._keyToIndexMapping = {};\r\n    this._keyToTabIds = {};\r\n\r\n    React.Children.map(props.children, (child: any, index: number) => {\r\n      if (typeof child === 'object' && child.type === PivotItemType) {\r\n        const pivotItem = child as PivotItem;\r\n        const itemKey = pivotItem.props.itemKey || index.toString();\r\n\r\n        links.push({\r\n          headerText: pivotItem.props.headerText || pivotItem.props.linkText,\r\n          headerButtonProps: pivotItem.props.headerButtonProps,\r\n          ariaLabel: pivotItem.props.ariaLabel,\r\n          itemKey: itemKey,\r\n          itemCount: pivotItem.props.itemCount,\r\n          itemIcon: pivotItem.props.itemIcon,\r\n          onRenderItemLink: pivotItem.props.onRenderItemLink,\r\n          keytipProps: pivotItem.props.keytipProps\r\n        });\r\n        this._keyToIndexMapping[itemKey] = index;\r\n        this._keyToTabIds[itemKey] = this._getTabId(itemKey, index);\r\n      }\r\n    });\r\n\r\n    return links;\r\n  }\r\n\r\n  /**\r\n   * Generates the Id for the tab button.\r\n   */\r\n  private _getTabId(itemKey: string, index: number): string {\r\n    if (this.props.getTabId) {\r\n      return this.props.getTabId(itemKey, index);\r\n    }\r\n\r\n    return this._pivotId + `-Tab${index}`;\r\n  }\r\n\r\n  /**\r\n   * whether the key exists in the pivot items.\r\n   */\r\n  private _isKeyValid(itemKey: string | undefined): boolean {\r\n    return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Handles the onClick event on PivotLinks\r\n   */\r\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>): void {\r\n    ev.preventDefault();\r\n    this._updateSelectedItem(itemKey, ev);\r\n  }\r\n\r\n  /**\r\n   * Handle the onKeyPress eventon the PivotLinks\r\n   */\r\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>): void {\r\n    ev.preventDefault();\r\n    if (ev.which === KeyCodes.enter) {\r\n      this._updateSelectedItem(itemKey);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state with the new selected index\r\n   */\r\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>): void {\r\n    this.setState({\r\n      selectedKey: itemKey,\r\n      selectedTabId: this._keyToTabIds[itemKey]\r\n    } as IPivotState);\r\n\r\n    if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {\r\n      const index = this._keyToIndexMapping[itemKey];\r\n\r\n      // React.Element<any> cannot directly convert to PivotItem.\r\n      const item = React.Children.toArray(this.props.children)[index] as any;\r\n\r\n      if (typeof item === 'object' && item.type === PivotItem) {\r\n        this.props.onLinkClick(item as PivotItem, ev);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}