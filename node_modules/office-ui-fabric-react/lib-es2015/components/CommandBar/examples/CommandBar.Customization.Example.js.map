{"version":3,"file":"CommandBar.Customization.Example.js","sourceRoot":"../src/","sources":["components/CommandBar/examples/CommandBar.Customization.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,UAAU,EAAE,MAAM,uCAAuC,CAAC;AACnE,OAAO,EAAE,GAAG,EAAE,MAAM,sCAAsC,CAAC;AAC3D,OAAO,KAAK,MAAM,MAAM,2BAA2B,CAAC;AAOpD;IAAoD,0DAA8C;IAGhG,wCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAEb;QAsCO,gCAA0B,GAAG,UAAC,IAAyB;YAC7D,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,MAAM,CAAC,QAAQ,CAAC;YAElE,IAAM,mBAAmB,GAAG,GAAG,CAC7B,MAAM,CAAC,MAAM,EACb,QAAQ,CACT,CAAC;YACF,IAAM,gBAAgB,GAAG,GAAG,CAC1B,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC3C,MAAM,CAAC,MAAM,EACb,QAAQ,CACT,CAAC;YAEF,OAAO,CACL;gBACE,6BACE,SAAS,EAAG,GAAG,CACb,MAAM,CAAC,qBAAqB,EAC5B,QAAQ,CACT,EACD,GAAG,EAAG,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,SAAS,GAAG,GAAI,EAArB,CAAqB;oBAElC,oBAAC,aAAa,IACZ,SAAS,EAAG,gBAAgB,EAC5B,SAAS,EAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC/B,IAAI,EAAC,KAAK,GACV;oBACF,8BAAM,SAAS,EAAG,MAAM,CAAC,QAAQ,QAAW;oBAC5C,oBAAC,aAAa,IACZ,OAAO,EAAG,KAAI,CAAC,eAAe,EAC9B,SAAS,EAAG,mBAAmB,EAC/B,SAAS,EAAG;4BACV,SAAS,EAAE,GAAG,CAAC,wBAAwB,CAAC;4BACxC,KAAK,EAAE,IAAI,CAAC,YAAa,CAAC,KAAK;yBAChC,GACD,CACE,CACD,CACR,CAAC;QACJ,CAAC,CAAA;QAEO,qBAAe,GAAG,UAAC,EAAO;YAChC,EAAE,CAAC,eAAe,EAAE,CAAC;YACrB,KAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;QACpC,CAAC,CAAA;QAEO,8BAAwB,GAAG,UAAC,EAAO;YACzC,KAAI,CAAC,QAAQ,CAAC;gBACZ,kBAAkB,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,kBAAkB;aACnD,CAAC,CAAC;QACL,CAAC,CAAA;QAzFC,KAAI,CAAC,KAAK,GAAG,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;;IAC7C,CAAC;IAEM,+CAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,UAAU,IACT,kBAAkB,EAAG,KAAK,EAC1B,KAAK,EACH;oBACE;wBACE,GAAG,EAAE,KAAK;wBACV,IAAI,EAAE,KAAK;wBACX,QAAQ,EAAE,IAAI,CAAC,0BAA0B;wBACzC,SAAS,EAAE,mBAAmB;wBAC9B,YAAY,EAAE;4BACZ,KAAK,EAAE;;wCAEH,GAAG,EAAE,cAAc;wCACnB,IAAI,EAAE,eAAe;wCACrB,IAAI,EAAE,MAAM;;oCACZ,GAAC,oBAAoB,IAAG,gBAAgB;;;wCAGxC,GAAG,EAAE,eAAe;wCACpB,IAAI,EAAE,gBAAgB;wCACtB,IAAI,EAAE,UAAU;;oCAChB,GAAC,oBAAoB,IAAG,mBAAmB;;6BAE9C;yBACF;qBACF;iBACF,GAEH,CACE,CACP,CAAC;;IACJ,CAAC;IAqDH,qCAAC;AAAD,CAAC,AA/FD,CAAoD,KAAK,CAAC,SAAS,GA+FlE","sourcesContent":["import * as React from 'react';\r\nimport { CommandButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport * as styles from './CommandBar.Example.scss';\r\nimport { IContextualMenuItem } from '../../ContextualMenu';\r\n\r\nexport interface ISplitDropDownButtonState {\r\n  isContextMenuShown: boolean;\r\n}\r\n\r\nexport class CommandBarCustomizationExample extends React.Component<{}, ISplitDropDownButtonState> {\r\n  private container: HTMLElement;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { isContextMenuShown: false };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <CommandBar\r\n          isSearchBoxVisible={ false }\r\n          items={\r\n            [\r\n              {\r\n                key: 'new',\r\n                name: 'Add',\r\n                onRender: this._renderSplitButtonMenuItem,\r\n                className: 'ms-CommandBarItem',\r\n                subMenuProps: {\r\n                  items: [\r\n                    {\r\n                      key: 'emailMessage',\r\n                      name: 'Email message',\r\n                      icon: 'Mail',\r\n                      ['data-automation-id']: 'newEmailButton'\r\n                    },\r\n                    {\r\n                      key: 'calendarEvent',\r\n                      name: 'Calendar event',\r\n                      icon: 'Calendar',\r\n                      ['data-automation-id']: 'newCalendarButton'\r\n                    }\r\n                  ],\r\n                },\r\n              },\r\n            ]\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderSplitButtonMenuItem = (item: IContextualMenuItem): JSX.Element => {\r\n    const darkerBG = this.state.isContextMenuShown && styles.darkerBG;\r\n\r\n    const dropDownButtonClass = css(\r\n      styles.button,\r\n      darkerBG\r\n    );\r\n    const mainBtnClassName = css(\r\n      !item.name && ('ms-CommandBarItem--noName'),\r\n      styles.button,\r\n      darkerBG\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className={ css(\r\n            styles.customButtonContainer,\r\n            darkerBG\r\n          ) }\r\n          ref={ ref => this.container = ref! }\r\n        >\r\n          <CommandButton\r\n            className={ mainBtnClassName }\r\n            iconProps={ { iconName: 'Add' } }\r\n            text='New'\r\n          />\r\n          <span className={ styles.splitter }>|</span>\r\n          <CommandButton\r\n            onClick={ this._onClickChevron }\r\n            className={ dropDownButtonClass }\r\n            menuProps={ {\r\n              className: css('ms-CommandBar-menuHost'),\r\n              items: item.subMenuProps!.items\r\n            } }\r\n          />\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  private _onClickChevron = (ev: any): void => {\r\n    ev.stopPropagation();\r\n    this._toggleDropDownMenuShown(ev);\r\n  }\r\n\r\n  private _toggleDropDownMenuShown = (ev: any): void => {\r\n    this.setState({\r\n      isContextMenuShown: !this.state.isContextMenuShown\r\n    });\r\n  }\r\n}\r\n"]}