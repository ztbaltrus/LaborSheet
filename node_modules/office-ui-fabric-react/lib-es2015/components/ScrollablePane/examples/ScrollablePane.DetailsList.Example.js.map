{"version":3,"file":"ScrollablePane.DetailsList.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.DetailsList.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  IDetailsHeaderProps,\r\n  Selection,\r\n  IColumn\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport {\r\n  IRenderFunction\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n  TooltipHost,\r\n  ITooltipHostProps\r\n} from 'office-ui-fabric-react/lib/Tooltip';\r\nimport {\r\n  ScrollablePane\r\n} from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport {\r\n  Sticky,\r\n  StickyPositionType\r\n} from 'office-ui-fabric-react/lib/Sticky';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\n\r\nconst _items: {\r\n  key: number,\r\n  name: string,\r\n  value: number\r\n}[] = [];\r\n\r\nconst _columns: IColumn[] = [\r\n  {\r\n    key: 'column1',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for name'\r\n  },\r\n  {\r\n    key: 'column2',\r\n    name: 'Value',\r\n    fieldName: 'value',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  },\r\n];\r\n\r\nexport class ScrollablePaneDetailsListExample extends React.Component<{}, {\r\n  items: {}[];\r\n  selectionDetails: string;\r\n}> {\r\n  private _selection: Selection;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    // Populate with items for demos.\r\n    if (_items.length === 0) {\r\n      for (let i = 0; i < 200; i++) {\r\n        _items.push({\r\n          key: i,\r\n          name: 'Item ' + i,\r\n          value: i\r\n        });\r\n      }\r\n    }\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this.state = {\r\n      items: _items,\r\n      selectionDetails: this._getSelectionDetails()\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={ {\r\n          height: '10000px',\r\n          position: 'relative',\r\n          maxHeight: 'inherit'\r\n        } }\r\n      >\r\n        <ScrollablePane>\r\n          <Sticky stickyPosition={ StickyPositionType.Header }>{ selectionDetails }</Sticky>\r\n          <TextField\r\n            label='Filter by name:'\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onChanged={ text => this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items }) }\r\n          />\r\n          <Sticky stickyPosition={ StickyPositionType.Header }>\r\n            <h1 style={ { margin: '0px' } }>Item List</h1>\r\n          </Sticky>\r\n          <MarqueeSelection selection={ this._selection }>\r\n            <DetailsList\r\n              items={ items }\r\n              columns={ _columns }\r\n              setKey='set'\r\n              layoutMode={ DetailsListLayoutMode.fixedColumns }\r\n              onRenderDetailsHeader={\r\n                // tslint:disable-next-line:jsx-no-lambda\r\n                (detailsHeaderProps: IDetailsHeaderProps, defaultRender: IRenderFunction<IDetailsHeaderProps>) => (\r\n                  <Sticky stickyPosition={ StickyPositionType.Header }>\r\n                    { defaultRender({\r\n                      ...detailsHeaderProps,\r\n                      onRenderColumnHeaderTooltip: (tooltipHostProps: ITooltipHostProps) => <TooltipHost { ...tooltipHostProps } />\r\n                    }) }\r\n                  </Sticky>\r\n                ) }\r\n              selection={ this._selection }\r\n              selectionPreservedOnEmptyClick={ true }\r\n              ariaLabelForSelectionColumn='Toggle selection'\r\n              ariaLabelForSelectAllCheckbox='Toggle selection for all items'\r\n              // tslint:disable-next-line:jsx-no-lambda\r\n              onItemInvoked={ (item) => alert(`Item invoked: ${item.name}`) }\r\n            />\r\n          </MarqueeSelection>\r\n        </ScrollablePane>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    const selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n}\r\n"]}