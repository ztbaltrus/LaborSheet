{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,2CAA2C,CAAC;AAC3E,OAAO,EAAE,MAAM,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AAC/E,OAAO,EAAE,KAAK,EAAE,MAAM,4BAA4B,CAAC;AACnD,OAAO,+BAA+B,CAAC;AAEvC,IAAM,MAAM,GAAG;IACb,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;CACV,CAAC;AAEF;IAAkD,wDAAe;IAAjE;;IA+CA,CAAC;IA9CQ,6CAAM,GAAb;QACE,IAAM,YAAY,GAAkB,EAAE,CAAC;QACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;QAED,OAAO,CACL,6BACE,KAAK,EAAG;gBACN,MAAM,EAAE,OAAO;gBACf,QAAQ,EAAE,UAAU;gBACpB,SAAS,EAAE,SAAS;aACrB;YAED,oBAAC,cAAc,IAAC,SAAS,EAAC,8BAA8B,IACpD,YAAY,CAAC,GAAG,CAAC,UAAC,GAAG;gBACrB,OAAO,GAAG,CAAC;YACb,CAAC,CAAC,CACa,CACb,CACP,CAAC;IACJ,CAAC;IAEO,yDAAkB,GAA1B,UAA2B,KAAa;QACtC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7E,OAAO,CACL,6BACE,GAAG,EAAG,KAAK,EACX,KAAK,EAAG;gBACN,eAAe,EAAE,KAAK;aACvB;YAED,oBAAC,MAAM,IACL,cAAc,EAAG,kBAAkB,CAAC,IAAI;gBAExC,6BAAK,SAAS,EAAC,QAAQ;;oBACD,KAAK,GAAG,CAAC,CACzB,CACC;YACT,6BAAK,SAAS,EAAC,aAAa,IACxB,KAAK,CAAC,GAAG,CAAC,CACR,CACF,CACP,CAAC;IACJ,CAAC;IACH,mCAAC;AAAD,CAAC,AA/CD,CAAkD,KAAK,CAAC,SAAS,GA+ChE","sourcesContent":["import * as React from 'react';\r\nimport { ScrollablePane } from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\r\nimport { lorem } from '@uifabric/example-app-base';\r\nimport './ScrollablePane.Example.scss';\r\n\r\nconst colors = [\r\n  '#eaeaea',\r\n  '#dadada',\r\n  '#d0d0d0',\r\n  '#c8c8c8',\r\n  '#a6a6a6',\r\n  '#c7e0f4',\r\n  '#71afe5',\r\n  '#eff6fc',\r\n  '#deecf9'\r\n];\r\n\r\nexport class ScrollablePaneDefaultExample extends React.Component {\r\n  public render() {\r\n    const contentAreas: JSX.Element[] = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      contentAreas.push(this._createContentArea(i));\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={ {\r\n          height: '900px',\r\n          position: 'relative',\r\n          maxHeight: 'inherit'\r\n        } }\r\n      >\r\n        <ScrollablePane className='scrollablePaneDefaultExample'>\r\n          { contentAreas.map((ele) => {\r\n            return ele;\r\n          }) }\r\n        </ScrollablePane>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _createContentArea(index: number) {\r\n    const color = colors.splice(Math.floor(Math.random() * colors.length), 1)[0];\r\n\r\n    return (\r\n      <div\r\n        key={ index }\r\n        style={ {\r\n          backgroundColor: color\r\n        } }\r\n      >\r\n        <Sticky\r\n          stickyPosition={ StickyPositionType.Both }\r\n        >\r\n          <div className='sticky'>\r\n            Sticky Component #{ index + 1 }\r\n          </div>\r\n        </Sticky>\r\n        <div className='textContent'>\r\n          { lorem(200) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}