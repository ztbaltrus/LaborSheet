import * as tslib_1 from "tslib";
import * as React from 'react';
import { ExampleCard, ComponentPage, PageMarkdown, PropertiesTableSet } from '@uifabric/example-app-base';
import { PersonaInitialsExample } from './examples/Persona.Initials.Example';
import { PersonaBasicExample } from './examples/Persona.Basic.Example';
import { PersonaAlternateExample } from './examples/Persona.Alternate.Example';
import { PersonaCustomRenderExample } from './examples/Persona.CustomRender.Example';
import { PersonaCustomCoinRenderExample } from './examples/Persona.CustomCoinRender.Example';
import { UnknownPersonaExample } from './examples/Persona.UnknownPersona.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { PersonaStatus } from './Persona.checklist';
var PersonaInitialsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.Initials.Example.tsx');
var PersonaBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.Basic.Example.tsx');
var PersonaAlternateExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.Alternate.Example.tsx');
var PersonaCustomRenderExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.CustomRender.Example.tsx');
var PersonaCustomCoinRenderExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.CustomCoinRender.Example.tsx');
var UnknownPersonaExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Persona/examples/Persona.UnknownPersona.Example.tsx');
var PersonaPage = /** @class */ (function (_super) {
    tslib_1.__extends(PersonaPage, _super);
    function PersonaPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PersonaPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'Persona', componentName: 'PersonaExample', componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Persona', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'Persona in various sizes', code: PersonaBasicExampleCode },
                    React.createElement(PersonaBasicExample, null)),
                React.createElement(ExampleCard, { title: 'Alternative small personas', code: PersonaAlternateExampleCode },
                    React.createElement(PersonaAlternateExample, null)),
                React.createElement(ExampleCard, { title: 'Persona with initials', code: PersonaInitialsExampleCode },
                    React.createElement(PersonaInitialsExample, null)),
                React.createElement(ExampleCard, { title: 'Rendering custom persona text', code: PersonaCustomRenderExampleCode },
                    React.createElement(PersonaCustomRenderExample, null)),
                React.createElement(ExampleCard, { title: 'Rendering custom coin', code: PersonaCustomCoinRenderExampleCode },
                    React.createElement(PersonaCustomCoinRenderExample, null)),
                React.createElement(ExampleCard, { title: 'Rendering unknown persona coin', code: UnknownPersonaExampleCode },
                    React.createElement(UnknownPersonaExample, null))), allowNativeProps: true, propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/Persona/Persona.types.ts')
                ] }), overview: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Persona/docs/PersonaOverview.md')), bestPractices: React.createElement("div", null), dos: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Persona/docs/PersonaDos.md')), donts: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Persona/docs/PersonaDonts.md')), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, PersonaStatus)) }));
    };
    return PersonaPage;
}(React.Component));
export { PersonaPage };
//# sourceMappingURL=PersonaPage.js.map