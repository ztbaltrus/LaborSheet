{"version":3,"file":"DocumentCardPage.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardPage.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,WAAW,EAEX,aAAa,EACb,YAAY,EACZ,kBAAkB,EACnB,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;AACjF,OAAO,EAAE,2BAA2B,EAAE,MAAM,0CAA0C,CAAC;AACvF,OAAO,EAAE,0BAA0B,EAAE,MAAM,yCAAyC,CAAC;AACrF,OAAO,EAAE,eAAe,EAAE,MAAM,4CAA4C,CAAC;AAC7E,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAE9D,IAAM,4BAA4B,GAAG,OAAO,CAAC,wGAAwG,CAAW,CAAC;AACjK,IAAM,+BAA+B,GAAG,OAAO,CAAC,2GAA2G,CAAW,CAAC;AACvK,IAAM,8BAA8B,GAAG,OAAO,CAAC,0GAA0G,CAAW,CAAC;AAErK;IAAsC,4CAA4C;IAAlF;;IAmEA,CAAC;IAlEQ,iCAAM,GAAb;QACE,OAAO,CACL,oBAAC,aAAa,IACZ,KAAK,EAAC,cAAc,EACpB,aAAa,EAAC,qBAAqB,EACnC,YAAY,EAAC,iHAAiH,EAC9H,YAAY,EACV;gBACE,oBAAC,WAAW,IAAC,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAG,4BAA4B;oBAC3E,yKAEI;oBACJ,oBAAC,wBAAwB,OAAG,CAChB;gBACd,oBAAC,WAAW,IAAC,KAAK,EAAC,uDAAuD,EAAC,IAAI,EAAG,+BAA+B;oBAC/G,kQAEI;oBACJ,yHAEI;oBACJ,oBAAC,2BAA2B,OAAG,CACnB;gBACd,oBAAC,WAAW,IAAC,KAAK,EAAC,mCAAmC,EAAC,IAAI,EAAG,8BAA8B;oBAC1F,qOAEI;oBACJ,oBAAC,0BAA0B,OAAG,CAClB,CACV,EAER,gBAAgB,EACd,oBAAC,kBAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,sFAAsF,CAAC;iBACxG,GACD,EAEJ,QAAQ,EACN,oBAAC,YAAY,QACT,OAAO,CAAS,6FAA6F,CAAC,CACnG,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,YAAY,QACT,OAAO,CAAS,wFAAwF,CAAC,CAC9F,EAEjB,KAAK,EACH,oBAAC,YAAY,QACT,OAAO,CAAS,0FAA0F,CAAC,CAChG,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,eAAe,uBACT,kBAAkB,EACvB,GAEJ,CACH,CAAC;IACJ,CAAC;IAEH,uBAAC;AAAD,CAAC,AAnED,CAAsC,KAAK,CAAC,SAAS,GAmEpD","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  IComponentDemoPageProps,\r\n  ComponentPage,\r\n  PageMarkdown,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport { DocumentCardBasicExample } from './examples/DocumentCard.Basic.Example';\r\nimport { DocumentCardCompleteExample } from './examples/DocumentCard.Complete.Example';\r\nimport { DocumentCardCompactExample } from './examples/DocumentCard.Compact.Example';\r\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\r\nimport { DocumentCardStatus } from './DocumentCard.checklist';\r\n\r\nconst DocumentCardBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Basic.Example.tsx') as string;\r\nconst DocumentCardCompleteExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Complete.Example.tsx') as string;\r\nconst DocumentCardCompactExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Compact.Example.tsx') as string;\r\n\r\nexport class DocumentCardPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ComponentPage\r\n        title='DocumentCard'\r\n        componentName='DocumentCardExample'\r\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Default DocumentCard' code={ DocumentCardBasicExampleCode }>\r\n              <p>\r\n                The default configuration for a card represents a single file, with space to denote the last significant event and the person involved.\r\n              </p>\r\n              <DocumentCardBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='DocumentCard with multiple items, commands, and views' code={ DocumentCardCompleteExampleCode }>\r\n              <p>\r\n                This example shows a couple of optional abilities, including being able to have a card represent multiple items, being able to expose up to three relevant commands, and showing the number of views in the bottom right corner.\r\n              </p>\r\n              <p>\r\n                Also show a card with Logo, text preview and status that is used for Conversation card.\r\n              </p>\r\n              <DocumentCardCompleteExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='DocumentCard with compact layout ' code={ DocumentCardCompactExampleCode }>\r\n              <p>\r\n                When showing a card on a mobile device or a similarly narrow layout, you may choose this Compact layout which helps the filename remain scannable while giving roomy space for a preview thumbnail.\r\n              </p>\r\n              <DocumentCardCompactExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/DocumentCard.types.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardOverview.md') }\r\n          </PageMarkdown>\r\n        }\r\n        bestPractices={\r\n          <div />\r\n        }\r\n        dos={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardDos.md') }\r\n          </PageMarkdown>\r\n        }\r\n        donts={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardDonts.md') }\r\n          </PageMarkdown>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n        componentStatus={\r\n          <ComponentStatus\r\n            { ...DocumentCardStatus }\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n"]}