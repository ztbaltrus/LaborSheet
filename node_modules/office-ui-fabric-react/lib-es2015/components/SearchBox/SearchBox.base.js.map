{"version":3,"file":"SearchBox.base.js","sourceRoot":"../src/","sources":["components/SearchBox/SearchBox.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\r\nimport {\r\n  BaseComponent,\r\n  getId,\r\n  KeyCodes,\r\n  customizable,\r\n  classNamesFunction,\r\n  createRef\r\n} from '../../Utilities';\r\n\r\nimport { IconButton } from '../../Button';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\r\n\r\nexport interface ISearchBoxState {\r\n  value?: string;\r\n  hasFocus?: boolean;\r\n  id?: string;\r\n}\r\n\r\n@customizable('SearchBox', ['theme'])\r\nexport class SearchBoxBase extends BaseComponent<ISearchBoxProps, ISearchBoxState> {\r\n  public static defaultProps: ISearchBoxProps = {\r\n    disableAnimation: false\r\n  };\r\n\r\n  private _rootElement = createRef<HTMLDivElement>();\r\n  private _inputElement = createRef<HTMLInputElement>();\r\n  private _latestValue: string;\r\n\r\n  public constructor(props: ISearchBoxProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      'labelText': 'placeholder',\r\n      'defaultValue': 'value'\r\n    });\r\n\r\n    this._latestValue = props.value || '';\r\n\r\n    this.state = {\r\n      value: this._latestValue,\r\n      hasFocus: false,\r\n      id: getId('SearchBox')\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: ISearchBoxProps): void {\r\n    if (newProps.value !== undefined) {\r\n      this._latestValue = newProps.value;\r\n      this.setState({\r\n        value: newProps.value\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      ariaLabel,\r\n      placeholder,\r\n      className,\r\n      disabled,\r\n      underlined,\r\n      getStyles,\r\n      labelText,\r\n      theme,\r\n      clearButtonProps,\r\n      disableAnimation\r\n    } = this.props;\r\n    const { value, hasFocus, id } = this.state;\r\n    const placeholderValue = labelText === undefined ? placeholder : labelText;\r\n\r\n    const classNames = getClassNames(getStyles!, {\r\n      theme: theme!,\r\n      className,\r\n      underlined,\r\n      hasFocus,\r\n      disabled,\r\n      hasInput: value!.length > 0,\r\n      disableAnimation\r\n    });\r\n\r\n    return (\r\n      <div\r\n        ref={ this._rootElement }\r\n        className={ classNames.root }\r\n        onFocusCapture={ this._onFocusCapture }\r\n      >\r\n        <div\r\n          className={ classNames.iconContainer }\r\n          onClick={ this._onClickFocus }\r\n        >\r\n          <Icon\r\n            className={ classNames.icon }\r\n            iconName='Search'\r\n          />\r\n        </div>\r\n        <input\r\n          id={ id }\r\n          className={ classNames.field }\r\n          placeholder={ placeholderValue }\r\n          onChange={ this._onInputChange }\r\n          onInput={ this._onInputChange }\r\n          onKeyDown={ this._onKeyDown }\r\n          value={ value }\r\n          disabled={ this.props.disabled }\r\n          aria-label={ ariaLabel ? ariaLabel : placeholder }\r\n          ref={ this._inputElement }\r\n        />\r\n        { value!.length > 0 &&\r\n          <div className={ classNames.clearButton }>\r\n            <IconButton\r\n              styles={ { root: { height: 'auto' }, icon: { fontSize: '12px' } } }\r\n              iconProps={ { iconName: 'Clear' } }\r\n              { ...clearButtonProps }\r\n              onClick={ this._onClearClick }\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets focus to the search box input field\r\n   */\r\n  public focus() {\r\n    if (this._inputElement.current) {\r\n      this._inputElement.current.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns whether or not the SearchBox has focus\r\n   */\r\n  public hasFocus(): boolean {\r\n    return !!this.state.hasFocus;\r\n  }\r\n\r\n  private _onClear(ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) {\r\n    this.props.onClear && this.props.onClear(ev);\r\n    if (!ev.defaultPrevented) {\r\n      this._latestValue = '';\r\n      this.setState({\r\n        value: ''\r\n      });\r\n      this._callOnChange('');\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  private _onClickFocus = () => {\r\n    const inputElement = this._inputElement.value;\r\n    if (inputElement) {\r\n      this.focus();\r\n      inputElement.selectionStart = inputElement.selectionEnd = 0;\r\n    }\r\n  }\r\n\r\n  private _onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\r\n    this.setState({\r\n      hasFocus: true\r\n    });\r\n\r\n    this._events.on(this._rootElement.current, 'blur', this._onBlur, true);\r\n\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(ev as React.FocusEvent<HTMLInputElement>);\r\n    }\r\n  }\r\n\r\n  private _onClearClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\r\n    const { clearButtonProps } = this.props;\r\n\r\n    if (clearButtonProps && clearButtonProps.onClick) {\r\n      clearButtonProps.onClick(ev);\r\n    }\r\n\r\n    if (!ev.defaultPrevented) {\r\n      this._onClear(ev);\r\n    }\r\n  }\r\n\r\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\r\n\r\n    switch (ev.which) {\r\n\r\n      case KeyCodes.escape:\r\n        this.props.onEscape && this.props.onEscape(ev);\r\n        if (!ev.defaultPrevented) {\r\n          this._onClear(ev);\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.enter:\r\n        if (this.props.onSearch && this.state.value!.length > 0) {\r\n          this.props.onSearch(this.state.value);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        this.props.onKeyDown && this.props.onKeyDown(ev);\r\n        if (!ev.defaultPrevented) {\r\n          return;\r\n        }\r\n    }\r\n\r\n    // We only get here if the keypress has been handled,\r\n    // or preventDefault was called in case of default keyDown handler\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement>): void => {\r\n    this._events.off(this._rootElement.current, 'blur');\r\n    this.setState({\r\n      hasFocus: false\r\n    });\r\n\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(ev);\r\n    }\r\n  }\r\n\r\n  private _onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = ev.target.value;\r\n\r\n    if (value === this._latestValue) {\r\n      return;\r\n    }\r\n    this._latestValue = value;\r\n\r\n    this.setState({ value });\r\n    this._callOnChange(value);\r\n  }\r\n\r\n  private _callOnChange(newValue: string): void {\r\n    const { onChange, onChanged } = this.props;\r\n\r\n    // Call @deprecated method.\r\n    if (onChanged) {\r\n      onChanged(newValue);\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(newValue);\r\n    }\r\n  }\r\n}\r\n"]}