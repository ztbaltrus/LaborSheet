import * as tslib_1 from "tslib";
import * as React from 'react';
import { ExampleCard, ComponentPage, PageMarkdown, PropertiesTableSet } from '@uifabric/example-app-base';
import { OverlayDarkExample } from './examples/Overlay.Dark.Example';
import { OverlayLightExample } from './examples/Overlay.Light.Example';
import { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';
import { OverlayStatus } from './Overlay.checklist';
var OverlayLightExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Light.Example.tsx');
var OverlayDarkExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Dark.Example.tsx');
var OverlayPage = /** @class */ (function (_super) {
    tslib_1.__extends(OverlayPage, _super);
    function OverlayPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OverlayPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { title: 'Overlay', componentName: 'OverlayExample', componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Overlay', exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: 'Light', code: OverlayLightExampleCode },
                    React.createElement(OverlayLightExample, null)),
                React.createElement(ExampleCard, { title: 'Dark', code: OverlayDarkExampleCode },
                    React.createElement(OverlayDarkExample, null))), allowNativeProps: true, propertiesTables: React.createElement(PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/Overlay/Overlay.types.ts')
                ] }), overview: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Overlay/docs/OverlayOverview.md')), bestPractices: React.createElement("div", null), dos: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Overlay/docs/OverlayDos.md')), donts: React.createElement(PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Overlay/docs/OverlayDonts.md')), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus, tslib_1.__assign({}, OverlayStatus)) }));
    };
    return OverlayPage;
}(React.Component));
export { OverlayPage };
//# sourceMappingURL=OverlayPage.js.map