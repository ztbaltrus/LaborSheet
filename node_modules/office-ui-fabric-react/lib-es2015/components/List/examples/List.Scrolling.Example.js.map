{"version":3,"file":"List.Scrolling.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Scrolling.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  css\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n  FocusZone,\r\n  FocusZoneDirection\r\n} from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { List, ScrollToMode } from 'office-ui-fabric-react/lib/List';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport './List.Scrolling.Example.scss';\r\n\r\nexport interface IListScrollingExampleProps {\r\n  items: any[];\r\n}\r\n\r\nexport interface IListScrollingExampleState {\r\n  selectedIndex: number;\r\n  scrollToMode: ScrollToMode;\r\n}\r\n\r\nconst evenItemHeight = 25;\r\nconst oddItemHeight = 50;\r\nconst numberOfItemsOnPage = 10;\r\n\r\nexport class ListScrollingExample extends React.Component<IListScrollingExampleProps, IListScrollingExampleState> {\r\n  private _list: List;\r\n\r\n  constructor(props: IListScrollingExampleProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedIndex: 0,\r\n      scrollToMode: ScrollToMode.auto\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { items } = this.props;\r\n\r\n    return (\r\n      <FocusZone direction={ FocusZoneDirection.vertical }>\r\n        <div>\r\n          <DefaultButton onClick={ this._scrollRelative(-10) }>-10</DefaultButton>\r\n          <DefaultButton onClick={ this._scrollRelative(-1) }>-1</DefaultButton>\r\n          <DefaultButton onClick={ this._scrollRelative(1) }>+1</DefaultButton>\r\n          <DefaultButton onClick={ this._scrollRelative(10) }>+10</DefaultButton>\r\n        </div>\r\n        <Dropdown\r\n          placeHolder='Select an Option'\r\n          label='Scroll To Mode:'\r\n          id='Scrolldrop1'\r\n          ariaLabel='Scroll To Mode'\r\n          defaultSelectedKey={ 'auto' }\r\n          options={\r\n            [\r\n              { key: 'auto', text: 'Auto' },\r\n              { key: 'top', text: 'Top' },\r\n              { key: 'bottom', text: 'Bottom' },\r\n              { key: 'center', text: 'Center' },\r\n            ]\r\n          }\r\n          onChanged={ this._onDropdownChanged }\r\n        />\r\n        <div>\r\n          Scroll item index:\r\n          <TextField\r\n            value={ this.state.selectedIndex.toString(10) }\r\n            onChanged={ this._onChangeText }\r\n          />\r\n        </div>\r\n\r\n        <div className='ms-ListScrollingExample-container' data-is-scrollable={ true }>\r\n          <List\r\n            ref={ this._resolveList }\r\n            items={ items }\r\n            getPageHeight={ this._getPageHeight }\r\n            onRenderCell={ this._onRenderCell }\r\n          />\r\n        </div>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _getPageHeight(idx: number): number {\r\n    let h = 0;\r\n    for (let i = idx; i < idx + numberOfItemsOnPage; ++i) {\r\n      const isEvenRow = i % 2 === 0;\r\n\r\n      h += isEvenRow ? evenItemHeight : oddItemHeight;\r\n    }\r\n    return h;\r\n  }\r\n\r\n  private _onChangeText = (value: any): void => {\r\n    this._scroll(parseInt(value, 10) || 0, this.state.scrollToMode);\r\n  }\r\n\r\n  private _onDropdownChanged = (option: IDropdownOption) => {\r\n    let scrollMode = this.state.scrollToMode;\r\n    switch (option.key) {\r\n      case 'auto':\r\n        scrollMode = ScrollToMode.auto;\r\n        break;\r\n      case 'top':\r\n        scrollMode = ScrollToMode.top;\r\n        break;\r\n      case 'bottom':\r\n        scrollMode = ScrollToMode.bottom;\r\n        break;\r\n      case 'center':\r\n        scrollMode = ScrollToMode.center;\r\n        break;\r\n    }\r\n    this._scroll(this.state.selectedIndex, scrollMode);\r\n  }\r\n\r\n  private _onRenderCell = (item: any, index: number): JSX.Element => {\r\n    return (\r\n      <div className='ms-ListScrollingExample-itemCell' data-is-focusable={ true }>\r\n        <div\r\n          className={ css(\r\n            'ms-ListScrollingExample-itemContent',\r\n            (index % 2 === 0) && 'ms-ListScrollingExample-itemContent-even',\r\n            (index % 2 === 1) && 'ms-ListScrollingExample-itemContent-odd'\r\n          ) }\r\n        >\r\n          { index } &nbsp; { item.name }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _scrollRelative = (delta: number): () => void => {\r\n    return (): void => {\r\n      this._scroll(this.state.selectedIndex + delta, this.state.scrollToMode);\r\n    };\r\n  }\r\n\r\n  private _scroll = (index: number, scrollToMode: ScrollToMode): void => {\r\n    const updatedSelectedIndex = Math.min(Math.max(index, 0), this.props.items.length - 1);\r\n\r\n    this.setState({\r\n      selectedIndex: updatedSelectedIndex,\r\n      scrollToMode: scrollToMode\r\n    }, () => {\r\n      this._list.scrollToIndex(\r\n        updatedSelectedIndex,\r\n        (idx) => idx % 2 === 0 ? evenItemHeight : oddItemHeight,\r\n        scrollToMode);\r\n    });\r\n  }\r\n\r\n  private _resolveList = (list: List): void => {\r\n    this._list = list;\r\n  }\r\n}\r\n"]}