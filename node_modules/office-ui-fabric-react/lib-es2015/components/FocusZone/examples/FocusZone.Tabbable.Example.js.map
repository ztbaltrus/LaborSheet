{"version":3,"file":"FocusZone.Tabbable.Example.js","sourceRoot":"../src/","sources":["components/FocusZone/examples/FocusZone.Tabbable.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAA6B,MAAM,sCAAsC,CAAC;AAChH,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,mCAAmC,CAAC;AAE3C,IAAM,YAAY,GAAG;IACnB,KAAK,CAAC,SAAS,CAAC,CAAC;AACnB,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,wBAAwB,GAAG,cAAM,OAAA,CAC5C,6BAAK,SAAS,EAAC,6BAA6B;IAC1C,6BAAK,SAAS,EAAC,QAAQ;QACrB,oBAAC,SAAS,IAAC,SAAS,EAAG,kBAAkB,CAAC,UAAU,EAAG,YAAY,eAAmC,oBAAoB,EAAG,IAAI;YAC/H,kEAA0C;YAC1C,oBAAC,aAAa,mBAAyB;YACvC,oBAAC,aAAa,mBAAyB;YACvC,oBAAC,SAAS,IAAC,KAAK,EAAC,qBAAqB,EAAC,SAAS,EAAC,uCAAuC,GAAG;YAC3F,oBAAC,aAAa,mBAAyB;YACvC,oBAAC,aAAa,IACZ,IAAI,EAAC,gBAAgB,EACrB,KAAK,EAAG,IAAI,EACZ,OAAO,EAAG,YAAY,EACtB,oBAAoB,EAAG,sBAAsB,EAC7C,SAAS,EAAG;oBACV,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,cAAc;4BACnB,IAAI,EAAE,eAAe;4BACrB,IAAI,EAAE,MAAM;yBACb;wBACD;4BACE,GAAG,EAAE,eAAe;4BACpB,IAAI,EAAE,gBAAgB;4BACtB,IAAI,EAAE,UAAU;yBACjB;qBACF;iBACF,GACD,CACQ,CACR;IACN,6BAAK,SAAS,EAAC,QAAQ;QACrB,oBAAC,SAAS,IAAC,SAAS,EAAG,kBAAkB,CAAC,UAAU,EAAG,YAAY,qBAAyC,oBAAoB,EAAG,KAAK;YACtI,2DAAmC;YACnC,oBAAC,aAAa,mBAAyB;YACvC,oBAAC,aAAa,mBAAyB;YACvC,oBAAC,SAAS,IAAC,KAAK,EAAC,qBAAqB,EAAC,SAAS,EAAC,uCAAuC,GAAG;YAC3F,oBAAC,aAAa,mBAAyB,CAC7B,CACR,CACF,CACP,EAzC6C,CAyC7C,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport './FocusZone.Tabbable.Example.scss';\r\n\r\nconst alertClicked = (): void => {\r\n  alert('Clicked');\r\n};\r\n\r\nexport const FocusZoneTabbableExample = () => (\r\n  <div className='ms-FocusZoneTabbableExample'>\r\n    <div className='ms-Row'>\r\n      <FocusZone direction={ FocusZoneDirection.horizontal } handleTabKey={ FocusZoneTabbableElements.all } isCircularNavigation={ true }>\r\n        <span>Circular Tabbable FocusZone: </span>\r\n        <DefaultButton>Button 1</DefaultButton>\r\n        <DefaultButton>Button 2</DefaultButton>\r\n        <TextField value='FocusZone TextField' className='ms-FocusZoneTabbableExample-textField' />\r\n        <DefaultButton>Button 3</DefaultButton>\r\n        <DefaultButton\r\n          text='Create account'\r\n          split={ true }\r\n          onClick={ alertClicked }\r\n          splitButtonAriaLabel={ 'See 2 sample options' }\r\n          menuProps={ {\r\n            items: [\r\n              {\r\n                key: 'emailMessage',\r\n                name: 'Email message',\r\n                icon: 'Mail'\r\n              },\r\n              {\r\n                key: 'calendarEvent',\r\n                name: 'Calendar event',\r\n                icon: 'Calendar'\r\n              }\r\n            ]\r\n          } }\r\n        />\r\n      </FocusZone>\r\n    </div>\r\n    <div className='ms-Row'>\r\n      <FocusZone direction={ FocusZoneDirection.horizontal } handleTabKey={ FocusZoneTabbableElements.inputOnly } isCircularNavigation={ false }>\r\n        <span>Input Only FocusZone: </span>\r\n        <DefaultButton>Button 1</DefaultButton>\r\n        <DefaultButton>Button 2</DefaultButton>\r\n        <TextField value='FocusZone TextField' className='ms-FocusZoneTabbableExample-textField' />\r\n        <DefaultButton>Button 3</DefaultButton>\r\n      </FocusZone>\r\n    </div>\r\n  </div>\r\n);\r\n"]}