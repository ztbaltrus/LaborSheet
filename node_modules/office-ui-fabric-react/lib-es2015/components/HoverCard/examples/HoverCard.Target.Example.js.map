{"version":3,"file":"HoverCard.Target.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.Target.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n  HoverCard,\r\n  IExpandingCardProps\r\n} from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/common/DirectionalHint';\r\nimport { createListItems } from '@uifabric/example-app-base';\r\nimport './HoverCard.Example.scss';\r\n\r\nlet _items: any[];\r\n\r\nexport interface IHoverCardExampleState {\r\n  items?: any[];\r\n  columns?: IColumn[];\r\n}\r\n\r\ninterface IHoverCardFieldProps {\r\n  componentRef?: any;\r\n  content: HTMLDivElement;\r\n  expandingCardProps: IExpandingCardProps;\r\n}\r\n\r\ninterface IHoverCardFieldState {\r\n  contentRendered?: HTMLDivElement;\r\n}\r\n\r\nclass HoverCardField extends BaseComponent<IHoverCardFieldProps, IHoverCardFieldState> {\r\n  constructor(props: IHoverCardFieldProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      contentRendered: undefined\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div ref={ (c: HTMLDivElement) => !this.state.contentRendered && this.setState({ contentRendered: c }) } data-is-focusable={ true }>\r\n        { this.props.content }\r\n        {\r\n          this.state.contentRendered &&\r\n          <HoverCard\r\n            expandingCardProps={ this.props.expandingCardProps }\r\n            target={ this.state.contentRendered }\r\n            cardDismissDelay={ 300 }\r\n            onCardVisible={ this._log('onCardVisible') }\r\n            onCardHide={ this._log('onCardHide') }\r\n            trapFocus={ true }\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _log(text: string): () => void {\r\n    return (): void => {\r\n      console.log(text);\r\n    };\r\n  }\r\n}\r\n\r\nexport class HoverCardTargetExample extends BaseComponent<{}, IHoverCardExampleState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    _items = _items || createListItems(10);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      columns: _buildColumns()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { items, columns } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p> Hover over key of a row item to see the card </p>\r\n        <DetailsList\r\n          setKey='hoverSet'\r\n          items={ items! }\r\n          columns={ columns }\r\n          onRenderItemColumn={ this._onRenderItemColumn }\r\n          ariaLabel={ 'Hover card DetailsList test' }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderItemColumn = (item: any, index: number, column: IColumn): JSX.Element => {\r\n    const expandingCardProps: IExpandingCardProps = {\r\n      onRenderCompactCard: this._onRenderCompactCard,\r\n      onRenderExpandedCard: this._onRenderExpandedCard,\r\n      renderData: item,\r\n      directionalHint: DirectionalHint.rightTopEdge,\r\n      gapSpace: 16\r\n    };\r\n\r\n    if (column.key === 'key') {\r\n      return (\r\n        <div className='HoverCard-item'>\r\n          <HoverCardField\r\n            content={ item.key }\r\n            expandingCardProps={ expandingCardProps }\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return item[column.key];\r\n  }\r\n\r\n  private _onRenderCompactCard = (item: any): JSX.Element => {\r\n    return (\r\n      <div className='hoverCardExample-compactCard'>\r\n        <a target='_blank' href={ `http://wikipedia.org/wiki/${item.location}` }>\r\n          { item.location }\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderExpandedCard = (item: any): JSX.Element => {\r\n    const { items, columns } = this.state;\r\n    return (\r\n      <div className='hoverCardExample-expandedCard'>\r\n        { item.description }\r\n        <DetailsList\r\n          setKey='expandedCardSet'\r\n          items={ items! }\r\n          columns={ columns }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction _buildColumns() {\r\n  return buildColumns(_items).filter(column => column.name === 'location' || column.name === 'key');\r\n}"]}