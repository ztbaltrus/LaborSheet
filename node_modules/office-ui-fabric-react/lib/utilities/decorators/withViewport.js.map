{"version":3,"file":"withViewport.js","sourceRoot":"../src/","sources":["utilities/decorators/withViewport.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseDecorator } from './BaseDecorator';\r\nimport {\r\n  findScrollableParent,\r\n  getRect,\r\n  createRef\r\n} from '../../Utilities';\r\n\r\nexport interface IViewport {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface IWithViewportState {\r\n  viewport?: IViewport;\r\n}\r\n\r\nexport interface IWithViewportProps {\r\n  skipViewportMeasures?: boolean;\r\n}\r\n\r\nconst RESIZE_DELAY = 500;\r\nconst MAX_RESIZE_ATTEMPTS = 3;\r\n\r\nexport function withViewport<TProps extends { viewport?: IViewport }, TState>(ComposedComponent: (new (props: TProps, ...args: any[]) => React.Component<TProps, TState>)): any {\r\n\r\n  return class WithViewportComponent extends BaseDecorator<TProps, IWithViewportState> {\r\n    private _root = createRef<HTMLDivElement>();\r\n    private _resizeAttempts: number;\r\n\r\n    constructor(props: TProps) {\r\n      super(props);\r\n      this._resizeAttempts = 0;\r\n\r\n      this.state = {\r\n        viewport: {\r\n          width: 0,\r\n          height: 0\r\n        }\r\n      };\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n      this._onAsyncResize = this._async.debounce(\r\n        this._onAsyncResize,\r\n        RESIZE_DELAY,\r\n        {\r\n          leading: false\r\n        });\r\n\r\n      this._events.on(window, 'resize', this._onAsyncResize);\r\n      const {\r\n        skipViewportMeasures\r\n      } = this.props as IWithViewportProps;\r\n      if (!skipViewportMeasures) {\r\n        this._updateViewport();\r\n      }\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n      this._events.dispose();\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n      const { viewport } = this.state;\r\n      const {\r\n        skipViewportMeasures\r\n      } = this.props as IWithViewportProps;\r\n      const isViewportVisible = skipViewportMeasures || (viewport!.width > 0 && viewport!.height > 0);\r\n\r\n      return (\r\n        <div className='ms-Viewport' ref={ this._root } style={ { minWidth: 1, minHeight: 1 } }>\r\n          { isViewportVisible && (\r\n            <ComposedComponent ref={ this._updateComposedComponentRef } viewport={ viewport } { ...this.props as any } />\r\n          ) }\r\n        </div>\r\n      );\r\n    }\r\n\r\n    public forceUpdate(): void {\r\n      this._updateViewport(true);\r\n    }\r\n\r\n    private _onAsyncResize(): void {\r\n      this._updateViewport();\r\n    }\r\n\r\n    /* Note: using lambda here because decorators don't seem to work in decorators. */\r\n    private _updateViewport = (withForceUpdate?: boolean) => {\r\n      const { viewport } = this.state;\r\n      const viewportElement = this._root.current;\r\n      const scrollElement = findScrollableParent(viewportElement);\r\n      const scrollRect = getRect(scrollElement);\r\n      const clientRect = getRect(viewportElement);\r\n      const updateComponent = () => {\r\n        if (withForceUpdate && this._composedComponentInstance) {\r\n          this._composedComponentInstance.forceUpdate();\r\n        }\r\n      };\r\n\r\n      const isSizeChanged = (\r\n        (clientRect && clientRect.width) !== viewport!.width ||\r\n        (scrollRect && scrollRect.height) !== viewport!.height);\r\n\r\n      if (isSizeChanged && this._resizeAttempts < MAX_RESIZE_ATTEMPTS && clientRect && scrollRect) {\r\n        this._resizeAttempts++;\r\n        this.setState({\r\n          viewport: {\r\n            width: clientRect.width,\r\n            height: scrollRect.height\r\n          }\r\n        }, () => { this._updateViewport(withForceUpdate); });\r\n      } else {\r\n        this._resizeAttempts = 0;\r\n        updateComponent();\r\n      }\r\n    }\r\n  };\r\n}\r\n"]}