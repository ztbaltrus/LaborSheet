{"version":3,"file":"ShimmerLine.base.js","sourceRoot":"../src/","sources":["components/Shimmer/ShimmerLine/ShimmerLine.base.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,gDAAqF;AAGrF,IAAM,aAAa,GAAG,8BAAkB,EAA8C,CAAC;AAGvF;IAAqC,2CAAoC;IAGvE,yBAAY,KAAwB;eAClC,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,gCAAM,GAAb;QACQ,IAAA,eAA6D,EAA3D,kBAAM,EAAE,wBAAS,EAAE,gBAAK,EAAE,4BAAW,EAAE,gBAAK,CAAgB;QAEpE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,SAAU,EAAE;YAC3C,KAAK,EAAE,KAAM;YACb,MAAM,QAAA;YACN,WAAW,aAAA;SACZ,CAAC,CAAC;QAEH,OAAO,CACL,6BACE,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAI,KAAK,OAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EACtG,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI;YAEjC,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,aAAa;gBAClE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC;YACN,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc;gBACnE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC;YACN,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB;gBACtE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC;YACN,6BAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB;gBACrE,8BAAM,CAAC,EAAC,kCAAkC,GAAG,CACzC,CACF,CACP,CAAC;IACJ,CAAC;IAnCU,eAAe;QAD3B,wBAAY,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC;OAC1B,eAAe,CAoC3B;IAAD,sBAAC;CAAA,AApCD,CAAqC,yBAAa,GAoCjD;AApCY,0CAAe","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, customizable } from '../../../Utilities';\r\nimport { IShimmerLineProps, IShimmerLineStyleProps, IShimmerLineStyles } from './ShimmerLine.types';\r\n\r\nconst getClassNames = classNamesFunction<IShimmerLineStyleProps, IShimmerLineStyles>();\r\n\r\n@customizable('ShimmerLine', ['theme'])\r\nexport class ShimmerLineBase extends BaseComponent<IShimmerLineProps, {}> {\r\n  private _classNames: { [key in keyof IShimmerLineStyles]: string };\r\n\r\n  constructor(props: IShimmerLineProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { height, getStyles, width, borderStyle, theme } = this.props;\r\n\r\n    this._classNames = getClassNames(getStyles!, {\r\n      theme: theme!,\r\n      height,\r\n      borderStyle\r\n    });\r\n\r\n    return (\r\n      <div\r\n        style={ { width: width ? width : '100%', minWidth: typeof width === 'number' ? `${width}px` : 'auto' } }\r\n        className={ this._classNames.root }\r\n      >\r\n        <svg width='2' height='2' className={ this._classNames.topLeftCorner }>\r\n          <path d='M0 2 A 2 2, 0, 0, 1, 2 0 L 0 0 Z' />\r\n        </svg>\r\n        <svg width='2' height='2' className={ this._classNames.topRightCorner }>\r\n          <path d='M0 0 A 2 2, 0, 0, 1, 2 2 L 2 0 Z' />\r\n        </svg>\r\n        <svg width='2' height='2' className={ this._classNames.bottomRightCorner }>\r\n          <path d='M2 0 A 2 2, 0, 0, 1, 0 2 L 2 2 Z' />\r\n        </svg>\r\n        <svg width='2' height='2' className={ this._classNames.bottomLeftCorner }>\r\n          <path d='M2 2 A 2 2, 0, 0, 1, 0 0 L 0 2 Z' />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}