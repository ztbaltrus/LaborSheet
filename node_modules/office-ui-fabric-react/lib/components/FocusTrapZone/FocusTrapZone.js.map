{"version":3,"file":"FocusTrapZone.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/FocusTrapZone.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  elementContains,\r\n  getNativeProps,\r\n  divProperties,\r\n  getFirstFocusable,\r\n  getLastTabbable,\r\n  getNextElement,\r\n  focusAsync,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { IFocusTrapZone, IFocusTrapZoneProps } from './FocusTrapZone.types';\r\n\r\nexport class FocusTrapZone extends BaseComponent<IFocusTrapZoneProps, {}> implements IFocusTrapZone {\r\n\r\n  private static _focusStack: FocusTrapZone[] = [];\r\n  private static _clickStack: FocusTrapZone[] = [];\r\n\r\n  private _root = createRef<HTMLDivElement>();\r\n  private _previouslyFocusedElement: HTMLElement;\r\n  private _isInFocusStack = false;\r\n  private _isInClickStack = false;\r\n\r\n  public componentWillMount(): void {\r\n    const { isClickableOutsideFocusTrap = false, forceFocusInsideTrap = true } = this.props;\r\n    if (forceFocusInsideTrap) {\r\n      this._isInFocusStack = true;\r\n      FocusTrapZone._focusStack.push(this);\r\n    }\r\n    if (!isClickableOutsideFocusTrap) {\r\n      this._isInClickStack = true;\r\n      FocusTrapZone._clickStack.push(this);\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const { isClickableOutsideFocusTrap = false, forceFocusInsideTrap = true, elementToFocusOnDismiss, disableFirstFocus = false } = this.props;\r\n\r\n    this._previouslyFocusedElement = elementToFocusOnDismiss ? elementToFocusOnDismiss : document.activeElement as HTMLElement;\r\n    if (!elementContains(this._root.current, this._previouslyFocusedElement) && !disableFirstFocus) {\r\n      this.focus();\r\n    }\r\n\r\n    if (forceFocusInsideTrap) {\r\n      this._events.on(window, 'focus', this._forceFocusInTrap, true);\r\n    }\r\n\r\n    if (!isClickableOutsideFocusTrap) {\r\n      this._events.on(window, 'click', this._forceClickInTrap, true);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IFocusTrapZoneProps): void {\r\n    const { elementToFocusOnDismiss } = nextProps;\r\n    if (elementToFocusOnDismiss && this._previouslyFocusedElement !== elementToFocusOnDismiss) {\r\n      this._previouslyFocusedElement = elementToFocusOnDismiss;\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    const { ignoreExternalFocusing } = this.props;\r\n\r\n    this._events.dispose();\r\n    if (this._isInFocusStack || this._isInClickStack) {\r\n      const filter = (value: FocusTrapZone) => {\r\n        return this !== value;\r\n      };\r\n      if (this._isInFocusStack) {\r\n        FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter(filter);\r\n      }\r\n      if (this._isInClickStack) {\r\n        FocusTrapZone._clickStack = FocusTrapZone._clickStack.filter(filter);\r\n      }\r\n    }\r\n\r\n    const activeElement = document.activeElement as HTMLElement;\r\n    if (!ignoreExternalFocusing &&\r\n      this._previouslyFocusedElement &&\r\n      typeof this._previouslyFocusedElement.focus === 'function' &&\r\n      (elementContains(this._root.value, activeElement) || activeElement === document.body)) {\r\n      focusAsync(this._previouslyFocusedElement);\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className, ariaLabelledBy } = this.props;\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n\r\n    return (\r\n      <div\r\n        { ...divProps }\r\n        className={ className }\r\n        ref={ this._root }\r\n        aria-labelledby={ ariaLabelledBy }\r\n        onKeyDown={ this._onKeyboardHandler }\r\n      >\r\n        { this.props.children }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Need to expose this method in case of popups since focus needs to be set when popup is opened\r\n   */\r\n  public focus() {\r\n    const { firstFocusableSelector } = this.props;\r\n    const focusSelector = typeof firstFocusableSelector === 'string'\r\n      ? firstFocusableSelector\r\n      : firstFocusableSelector && firstFocusableSelector();\r\n\r\n    let _firstFocusableChild;\r\n\r\n    if (this._root.current) {\r\n      if (focusSelector) {\r\n        _firstFocusableChild = this._root.current.querySelector('.' + focusSelector);\r\n      } else {\r\n        _firstFocusableChild = getNextElement(this._root.current, this._root.current.firstChild as HTMLElement, true, false, false, true);\r\n      }\r\n    }\r\n    if (_firstFocusableChild) {\r\n      focusAsync(_firstFocusableChild);\r\n    }\r\n  }\r\n\r\n  private _onKeyboardHandler = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(ev);\r\n    }\r\n\r\n    // If the default has been prevented, do not process keyboard events.\r\n    if (ev.isDefaultPrevented()) {\r\n      return;\r\n    }\r\n\r\n    if (ev.which !== KeyCodes.tab) {\r\n      return;\r\n    }\r\n\r\n    if (!this._root.current) {\r\n      return;\r\n    }\r\n\r\n    const _firstFocusableChild = getFirstFocusable(this._root.current, this._root.current.firstChild as HTMLElement, true);\r\n    const _lastFocusableChild = getLastTabbable(this._root.current, this._root.current.lastChild as HTMLElement, true);\r\n\r\n    if (ev.shiftKey && _firstFocusableChild === ev.target) {\r\n      focusAsync(_lastFocusableChild);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    } else if (!ev.shiftKey && _lastFocusableChild === ev.target) {\r\n      focusAsync(_firstFocusableChild);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _forceFocusInTrap(ev: FocusEvent): void {\r\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n      const focusedElement = document.activeElement as HTMLElement;\r\n\r\n      if (!elementContains(this._root.current, focusedElement)) {\r\n        this.focus();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _forceClickInTrap(ev: MouseEvent): void {\r\n    if (FocusTrapZone._clickStack.length && this === FocusTrapZone._clickStack[FocusTrapZone._clickStack.length - 1]) {\r\n      const clickedElement = ev.target as HTMLElement;\r\n\r\n      if (clickedElement && !elementContains(this._root.current, clickedElement)) {\r\n        this.focus();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}