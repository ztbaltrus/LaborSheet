{"version":3,"file":"ExpandingCard.js","sourceRoot":"../src/","sources":["components/HoverCard/ExpandingCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  getNativeProps,\r\n  divProperties,\r\n  customizable,\r\n  KeyCodes,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { IExpandingCardProps, IExpandingCardStyles, ExpandingCardMode } from './ExpandingCard.types';\r\nimport { Callout, ICallout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { mergeStyles } from '../../Styling';\r\nimport { FocusTrapZone } from '../../FocusTrapZone';\r\nimport { getStyles } from './ExpandingCard.styles';\r\n\r\nexport interface IExpandingCardState {\r\n  firstFrameRendered: boolean;\r\n  needsScroll: boolean;\r\n}\r\n\r\n@customizable('ExpandingCard', ['theme'])\r\nexport class ExpandingCard extends BaseComponent<IExpandingCardProps, IExpandingCardState> {\r\n  public static defaultProps = {\r\n    compactCardHeight: 156,\r\n    expandedCardHeight: 384,\r\n    directionalHint: DirectionalHint.bottomLeftEdge,\r\n    directionalHintFixed: true,\r\n    gapSpace: 0\r\n  };\r\n\r\n  private _styles: IExpandingCardStyles;\r\n  // tslint:disable-next-line:no-unused-variable\r\n  private _callout = createRef<ICallout>();\r\n  private _expandedElem = createRef<HTMLDivElement>();\r\n\r\n  constructor(props: IExpandingCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstFrameRendered: false,\r\n      needsScroll: false\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._checkNeedsScroll();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._async.dispose();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      targetElement,\r\n      theme,\r\n      styles: customStyles,\r\n      compactCardHeight,\r\n      directionalHintFixed,\r\n      firstFocus,\r\n      expandedCardHeight\r\n    } = this.props;\r\n    this._styles = getStyles(theme!, customStyles);\r\n\r\n    const content = (\r\n      <div\r\n        onMouseEnter={ this.props.onEnter }\r\n        onMouseLeave={ this.props.onLeave }\r\n        onKeyDown={ this._onKeyDown }\r\n      >\r\n        { this._onRenderCompactCard() }\r\n        { this._onRenderExpandedCard() }\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Callout\r\n        { ...getNativeProps(this.props, divProperties) }\r\n        componentRef={ this._callout }\r\n        className={ mergeStyles(this._styles.root) }\r\n        target={ targetElement }\r\n        isBeakVisible={ false }\r\n        directionalHint={ this.props.directionalHint }\r\n        directionalHintFixed={ directionalHintFixed }\r\n        finalHeight={ compactCardHeight! + expandedCardHeight! }\r\n        minPagePadding={ 24 }\r\n        onDismiss={ this.props.onLeave }\r\n        gapSpace={ this.props.gapSpace }\r\n      >\r\n        { this.props.trapFocus ?\r\n          <FocusTrapZone forceFocusInsideTrap={ false } isClickableOutsideFocusTrap={ true } disableFirstFocus={ !firstFocus }>\r\n            { content }\r\n          </FocusTrapZone> :\r\n          content\r\n        }\r\n      </Callout >\r\n    );\r\n  }\r\n\r\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which === KeyCodes.escape) {\r\n      this.props.onLeave && this.props.onLeave(ev);\r\n    }\r\n  }\r\n\r\n  private _onRenderCompactCard = (): JSX.Element => {\r\n    return (\r\n      <div className={ mergeStyles(this._styles.compactCard, { height: this.props.compactCardHeight + 'px' }) as string }>\r\n        { this.props.onRenderCompactCard!(this.props.renderData) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderExpandedCard = (): JSX.Element => {\r\n    // firstFrameRendered helps in initially setting height of expanded card to 1px, even if\r\n    // mode prop is set to ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\r\n    !this.state.firstFrameRendered && this._async.requestAnimationFrame(() => {\r\n      this.setState({\r\n        firstFrameRendered: true\r\n      });\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className={ mergeStyles(\r\n          this._styles.expandedCard,\r\n          this.props.mode === ExpandingCardMode.expanded && this.state.firstFrameRendered && { height: this.props.expandedCardHeight + 'px' }\r\n        ) }\r\n        ref={ this._expandedElem }\r\n      >\r\n        <div className={ mergeStyles(this.state.needsScroll && this._styles.expandedCardScroll) }>\r\n          { this.props.onRenderExpandedCard && this.props.onRenderExpandedCard(this.props.renderData) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _checkNeedsScroll = (): void => {\r\n    if (this._expandedElem.current) {\r\n      this._async.requestAnimationFrame(() => {\r\n        if (this._expandedElem.current && this._expandedElem.current.scrollHeight >= this.props.expandedCardHeight!) {\r\n          this.setState({\r\n            needsScroll: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}