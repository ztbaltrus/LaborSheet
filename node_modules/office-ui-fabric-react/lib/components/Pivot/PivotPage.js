"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var example_app_base_1 = require("@uifabric/example-app-base");
var Pivot_Basic_Example_1 = require("./examples/Pivot.Basic.Example");
var Pivot_IconCount_Example_1 = require("./examples/Pivot.IconCount.Example");
var Pivot_Large_Example_1 = require("./examples/Pivot.Large.Example");
var Pivot_Tabs_Example_1 = require("./examples/Pivot.Tabs.Example");
var Pivot_TabsLarge_Example_1 = require("./examples/Pivot.TabsLarge.Example");
var Pivot_Fabric_Example_1 = require("./examples/Pivot.Fabric.Example");
var Pivot_OnChange_Example_1 = require("./examples/Pivot.OnChange.Example");
var Pivot_Remove_Example_1 = require("./examples/Pivot.Remove.Example");
var Pivot_Override_Example_1 = require("./examples/Pivot.Override.Example");
var Pivot_Separate_Example_1 = require("./examples/Pivot.Separate.Example");
var ComponentStatus_1 = require("../../demo/ComponentStatus/ComponentStatus");
var Pivot_checklist_1 = require("./Pivot.checklist");
var PivotRemoveExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Remove.Example.tsx');
var PivotBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Basic.Example.tsx');
var PivotLargeExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Large.Example.tsx');
var PivotTabsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Tabs.Example.tsx');
var PivotTabsLargesExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.TabsLarge.Example.tsx');
var PivotFabricExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Fabric.Example.tsx');
var PivotOnChangeExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.OnChange.Example.tsx');
var PivotIconCountExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.IconCount.Example.tsx');
var PivotOverrideExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Override.Example.tsx');
var PivotSeparateExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Pivot/examples/Pivot.Separate.Example.tsx');
var PivotPage = /** @class */ (function (_super) {
    tslib_1.__extends(PivotPage, _super);
    function PivotPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PivotPage.prototype.render = function () {
        return (React.createElement(example_app_base_1.ComponentPage, { title: 'Pivot', componentName: 'PivotExample', componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Pivot', exampleCards: React.createElement("div", null,
                React.createElement(example_app_base_1.ExampleCard, { title: 'Default Pivot', code: PivotBasicExampleCode },
                    React.createElement(Pivot_Basic_Example_1.PivotBasicExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Count and Icon', code: PivotIconCountExampleCode },
                    React.createElement(Pivot_IconCount_Example_1.PivotIconCountExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Large link size', code: PivotLargeExampleCode },
                    React.createElement(Pivot_Large_Example_1.PivotLargeExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Links of tab style', code: PivotTabsExampleCode },
                    React.createElement(Pivot_Tabs_Example_1.PivotTabsExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Links of large tab style', code: PivotTabsLargesExampleCode },
                    React.createElement(Pivot_TabsLarge_Example_1.PivotTabsLargeExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Trigger onchange event', code: PivotOnChangeExampleCode },
                    React.createElement(Pivot_OnChange_Example_1.PivotOnChangeExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Rendering nested components within the Pivot', code: PivotFabricExampleCode },
                    React.createElement(Pivot_Fabric_Example_1.PivotFabricExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Show/Hide pivot item', code: PivotRemoveExampleCode },
                    React.createElement(Pivot_Remove_Example_1.PivotRemoveExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Override selected item', code: PivotOverrideExampleCode },
                    React.createElement(Pivot_Override_Example_1.PivotOverrideExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'Render content separately', code: PivotSeparateExampleCode },
                    React.createElement(Pivot_Separate_Example_1.PivotSeparateExample, null))), allowNativeProps: 'PivotItem', propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/Pivot/Pivot.types.ts'),
                    require('!raw-loader!office-ui-fabric-react/src/components/Pivot/PivotItem.types.ts')
                ] }), overview: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Pivot/docs/PivotOverview.md')), bestPractices: React.createElement("div", null), dos: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Pivot/docs/PivotDos.md')), donts: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/Pivot/docs/PivotDonts.md')), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus_1.ComponentStatus, tslib_1.__assign({}, Pivot_checklist_1.PivotStatus)) }));
    };
    return PivotPage;
}(React.Component));
exports.PivotPage = PivotPage;
//# sourceMappingURL=PivotPage.js.map