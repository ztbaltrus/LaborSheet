"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var example_app_base_1 = require("@uifabric/example-app-base");
var data_1 = require("./examples/data");
var CommandBar_Basic_Example_1 = require("./examples/CommandBar.Basic.Example");
var CommandBar_NonFocusable_Example_1 = require("./examples/CommandBar.NonFocusable.Example");
var CommandBar_Customization_Example_1 = require("./examples/CommandBar.Customization.Example");
var ComponentStatus_1 = require("../../demo/ComponentStatus/ComponentStatus");
var CommandBar_checklist_1 = require("./CommandBar.checklist");
var CommandBarBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Basic.Example.tsx');
var CommandBarNoFocusableItemsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.NonFocusable.Example.tsx');
var CommandBarCustomizationExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Customization.Example.tsx');
var CommandBarPage = /** @class */ (function (_super) {
    tslib_1.__extends(CommandBarPage, _super);
    function CommandBarPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommandBarPage.prototype.render = function () {
        var cmdBarParamsTextAndIcons = { items: data_1.items, overflowItems: data_1.overflowItems, farItems: data_1.farItems };
        return (React.createElement(example_app_base_1.ComponentPage, { title: 'CommandBar', componentName: 'CommandBarExample', componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/CommandBar', exampleCards: React.createElement("div", null,
                React.createElement(example_app_base_1.ExampleCard, { title: 'CommandBar with search box and overflowing menu items', code: CommandBarBasicExampleCode },
                    React.createElement(CommandBar_Basic_Example_1.CommandBarBasicExample, tslib_1.__assign({}, cmdBarParamsTextAndIcons))),
                React.createElement(example_app_base_1.ExampleCard, { title: 'CommandBar with non-focusable items', code: CommandBarNoFocusableItemsExampleCode },
                    React.createElement(CommandBar_NonFocusable_Example_1.CommandBarNonFocusableItemsExample, null)),
                React.createElement(example_app_base_1.ExampleCard, { title: 'CommandBar with customized rendered items', code: CommandBarCustomizationExampleCode },
                    React.createElement(CommandBar_Customization_Example_1.CommandBarCustomizationExample, null))), propertiesTables: React.createElement(example_app_base_1.PropertiesTableSet, { sources: [
                    require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/CommandBar.types.ts'),
                    require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/ContextualMenu.types.ts')
                ] }), overview: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarOverview.md')), bestPractices: React.createElement("div", null), dos: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDos.md')), donts: React.createElement(example_app_base_1.PageMarkdown, null, require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDonts.md')), isHeaderVisible: this.props.isHeaderVisible, componentStatus: React.createElement(ComponentStatus_1.ComponentStatus, tslib_1.__assign({}, CommandBar_checklist_1.CommandBarStatus)) }));
    };
    return CommandBarPage;
}(React.Component));
exports.CommandBarPage = CommandBarPage;
//# sourceMappingURL=CommandBarPage.js.map