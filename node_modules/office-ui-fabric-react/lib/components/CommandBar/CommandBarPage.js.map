{"version":3,"file":"CommandBarPage.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBarPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAMoC;AACpC,wCAAiE;AACjE,gFAA6E;AAC7E,8FAAgG;AAChG,gGAA6F;AAC7F,8EAA6E;AAC7E,+DAA0D;AAE1D,IAAM,0BAA0B,GAAG,OAAO,CAAC,oGAAoG,CAAW,CAAC;AAC3J,IAAM,qCAAqC,GAAG,OAAO,CAAC,2GAA2G,CAAW,CAAC;AAC7K,IAAM,kCAAkC,GAAG,OAAO,CAAC,4GAA4G,CAAW,CAAC;AAE3K;IAAoC,0CAA4C;IAAhF;;IA0DA,CAAC;IAzDQ,+BAAM,GAAb;QACE,IAAM,wBAAwB,GAAQ,EAAE,KAAK,cAAA,EAAE,aAAa,sBAAA,EAAE,QAAQ,iBAAA,EAAE,CAAC;QAEzE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EAAC,2HAA2H,EACxI,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,uDAAuD,EAAC,IAAI,EAAG,0BAA0B;oBAC1G,oBAAC,iDAAsB,uBAAM,wBAAwB,EAAK,CAC9C;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,qCAAqC,EAAC,IAAI,EAAG,qCAAqC;oBACnG,oBAAC,oEAAkC,OAAG,CAC1B;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,2CAA2C,EAAC,IAAI,EAAG,kCAAkC;oBACtG,oBAAC,iEAA8B,OAAG,CACtB,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,kFAAkF,CAAC;oBACnG,OAAO,CAAS,0FAA0F,CAAC;iBAC5G,GACD,EAEJ,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,yFAAyF,CAAC,CAC/F,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,oFAAoF,CAAC,CAC1F,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,sFAAsF,CAAC,CAC5F,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,uCAAgB,EACrB,GAEJ,CACH,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CAAC,AA1DD,CAAoC,KAAK,CAAC,SAAS,GA0DlD;AA1DY,wCAAc","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  IComponentDemoPageProps,\r\n  ComponentPage,\r\n  PropertiesTableSet,\r\n  PageMarkdown,\r\n} from '@uifabric/example-app-base';\r\nimport { items, overflowItems, farItems } from './examples/data';\r\nimport { CommandBarBasicExample } from './examples/CommandBar.Basic.Example';\r\nimport { CommandBarNonFocusableItemsExample } from './examples/CommandBar.NonFocusable.Example';\r\nimport { CommandBarCustomizationExample } from './examples/CommandBar.Customization.Example';\r\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\r\nimport { CommandBarStatus } from './CommandBar.checklist';\r\n\r\nconst CommandBarBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Basic.Example.tsx') as string;\r\nconst CommandBarNoFocusableItemsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.NonFocusable.Example.tsx') as string;\r\nconst CommandBarCustomizationExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Customization.Example.tsx') as string;\r\n\r\nexport class CommandBarPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render(): JSX.Element {\r\n    const cmdBarParamsTextAndIcons: any = { items, overflowItems, farItems };\r\n\r\n    return (\r\n      <ComponentPage\r\n        title='CommandBar'\r\n        componentName='CommandBarExample'\r\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/CommandBar'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='CommandBar with search box and overflowing menu items' code={ CommandBarBasicExampleCode }>\r\n              <CommandBarBasicExample { ...cmdBarParamsTextAndIcons } />\r\n            </ExampleCard>\r\n            <ExampleCard title='CommandBar with non-focusable items' code={ CommandBarNoFocusableItemsExampleCode }>\r\n              <CommandBarNonFocusableItemsExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='CommandBar with customized rendered items' code={ CommandBarCustomizationExampleCode }>\r\n              <CommandBarCustomizationExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/CommandBar.types.ts'),\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/ContextualMenu.types.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarOverview.md') }\r\n          </PageMarkdown>\r\n        }\r\n        bestPractices={\r\n          <div />\r\n        }\r\n        dos={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDos.md') }\r\n          </PageMarkdown>\r\n        }\r\n        donts={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDonts.md') }\r\n          </PageMarkdown>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n        componentStatus={\r\n          <ComponentStatus\r\n            { ...CommandBarStatus }\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n"]}