{"version":3,"file":"Suggestions.js","sourceRoot":"../src/","sources":["components/pickers/Suggestions/Suggestions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  KeyCodes,\r\n  createRef\r\n} from '../../../Utilities';\r\nimport { CommandButton, IconButton, IButton } from '../../../Button';\r\nimport { Spinner } from '../../../Spinner';\r\nimport { ISuggestionItemProps, ISuggestionsProps } from './Suggestions.types';\r\nimport * as stylesImport from './Suggestions.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport enum SuggestionActionType {\r\n  none,\r\n  forceResolve,\r\n  searchMore,\r\n}\r\n\r\nexport interface ISuggestionsState {\r\n  selectedActionType: SuggestionActionType;\r\n}\r\n\r\nexport class SuggestionsItem<T> extends BaseComponent<ISuggestionItemProps<T>, {}> {\r\n  public render(): JSX.Element {\r\n    const {\r\n      suggestionModel,\r\n      RenderSuggestion,\r\n      onClick,\r\n      className,\r\n      onRemoveItem,\r\n      isSelectedOverride,\r\n      removeButtonAriaLabel\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className={ css(\r\n          'ms-Suggestions-item',\r\n          styles.suggestionsItem,\r\n          {\r\n            ['is-suggested ' + styles.suggestionsItemIsSuggested]: suggestionModel.selected || isSelectedOverride\r\n          },\r\n          className\r\n        ) }\r\n      >\r\n        <CommandButton\r\n          onClick={ onClick }\r\n          className={ css('ms-Suggestions-itemButton', styles.itemButton) }\r\n        >\r\n          { RenderSuggestion(suggestionModel.item, this.props) }\r\n        </CommandButton>\r\n        { this.props.showRemoveButton ? (\r\n          <IconButton\r\n            iconProps={ { iconName: 'Cancel', style: { fontSize: '12px' } } }\r\n            title={ removeButtonAriaLabel }\r\n            ariaLabel={ removeButtonAriaLabel }\r\n            onClick={ onRemoveItem }\r\n            className={ css('ms-Suggestions-closeButton', styles.closeButton) }\r\n          />) : (null)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Suggestions<T> extends BaseComponent<ISuggestionsProps<T>, ISuggestionsState> {\r\n\r\n  protected _forceResolveButton = createRef<IButton>();\r\n  protected _searchForMoreButton = createRef<IButton>();\r\n  protected _selectedElement = createRef<HTMLDivElement>();\r\n  private SuggestionsItemOfProperType = SuggestionsItem as new (props: ISuggestionItemProps<T>) => SuggestionsItem<T>;\r\n  private activeSelectedElement: HTMLDivElement | null;\r\n  constructor(suggestionsProps: ISuggestionsProps<T>) {\r\n    super(suggestionsProps);\r\n    this.state = {\r\n      selectedActionType: SuggestionActionType.none,\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.scrollSelected();\r\n    this.activeSelectedElement = this._selectedElement ? this._selectedElement.current : null;\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    // Only scroll to selected element if the selected element has changed. Otherwise do nothing.\r\n    // This prevents some odd behavior where scrolling the active element out of view and clicking on a selected element\r\n    // will trigger a focus event and not give the clicked element the click.\r\n    if (this._selectedElement.current && this.activeSelectedElement !== this._selectedElement.current) {\r\n      this.scrollSelected();\r\n      this.activeSelectedElement = this._selectedElement.current;\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      forceResolveText,\r\n      mostRecentlyUsedHeaderText,\r\n      searchForMoreText,\r\n      className,\r\n      moreSuggestionsAvailable,\r\n      noResultsFoundText,\r\n      suggestions,\r\n      isLoading,\r\n      isSearching,\r\n      loadingText,\r\n      onRenderNoResultFound,\r\n      searchingText,\r\n      isMostRecentlyUsedVisible,\r\n      resultsMaximumNumber,\r\n      resultsFooterFull,\r\n      resultsFooter,\r\n      isResultsFooterVisible = true,\r\n      suggestionsAvailableAlertText,\r\n      suggestionsHeaderText,\r\n    } = this.props;\r\n\r\n    const noResults = () => {\r\n      return noResultsFoundText ?\r\n        (\r\n          <div role='alert' className={ css('ms-Suggestions-none', styles.suggestionsNone) }>\r\n            { noResultsFoundText }\r\n          </div>\r\n        ) : null;\r\n    };\r\n    // MostRecently Used text should supercede the header text if it's there and available.\r\n    let headerText: string | undefined = suggestionsHeaderText;\r\n    if (isMostRecentlyUsedVisible && mostRecentlyUsedHeaderText) {\r\n      headerText = mostRecentlyUsedHeaderText;\r\n    }\r\n    let footerTitle: ((props: ISuggestionsProps<T>) => JSX.Element) | undefined = undefined;\r\n    if (isResultsFooterVisible) {\r\n      footerTitle = (suggestions.length >= (resultsMaximumNumber as number)) ? resultsFooterFull : resultsFooter;\r\n    }\r\n    const hasNoSuggestions = (!suggestions || !suggestions.length) && !isLoading;\r\n    return (\r\n      <div\r\n        className={ css(\r\n          'ms-Suggestions',\r\n          className ? className : '',\r\n          styles.root) }\r\n      >\r\n        { headerText ?\r\n          (<div className={ css('ms-Suggestions-title', styles.suggestionsTitle) }>\r\n            { headerText }\r\n          </div>) : (null) }\r\n        { forceResolveText && this._shouldShowForceResolve() && (\r\n          <CommandButton\r\n            componentRef={ this._forceResolveButton }\r\n            className={ css(\r\n              'ms-forceResolve-button',\r\n              styles.actionButton,\r\n              {\r\n                ['is-selected ' + styles.buttonSelected]:\r\n                  this.state.selectedActionType === SuggestionActionType.forceResolve\r\n              }) }\r\n            onClick={ this._forceResolve }\r\n          >\r\n            { forceResolveText }\r\n          </CommandButton>\r\n        ) }\r\n        { isLoading && (\r\n          <Spinner\r\n            className={ css('ms-Suggestions-spinner', styles.suggestionsSpinner) }\r\n            label={ loadingText }\r\n          />) }\r\n        { hasNoSuggestions ?\r\n          (onRenderNoResultFound ? onRenderNoResultFound(undefined, noResults) : noResults()) :\r\n          this._renderSuggestions()\r\n        }\r\n        { searchForMoreText && moreSuggestionsAvailable && (\r\n          <CommandButton\r\n            componentRef={ this._searchForMoreButton }\r\n            className={ css('ms-SearchMore-button',\r\n              styles.actionButton,\r\n              {\r\n                ['is-selected ' + styles.buttonSelected]:\r\n                  this.state.selectedActionType === SuggestionActionType.searchMore\r\n              }) }\r\n            iconProps={ { iconName: 'Search' } }\r\n            onClick={ this._getMoreResults }\r\n          >\r\n            { searchForMoreText }\r\n          </CommandButton>\r\n        ) }\r\n        { isSearching ?\r\n          (<Spinner\r\n            className={ css('ms-Suggestions-spinner', styles.suggestionsSpinner) }\r\n            label={ searchingText }\r\n          />) : (null)\r\n        }\r\n        {\r\n          footerTitle && !moreSuggestionsAvailable && !isMostRecentlyUsedVisible && !isSearching ?\r\n            (<div className={ css('ms-Suggestions-title', styles.suggestionsTitle) }>\r\n              { footerTitle(this.props) }\r\n            </div>) : (null)\r\n        }\r\n        {\r\n          (<span\r\n            role='alert'\r\n            aria-live='polite'\r\n            className={ css('ms-Suggestions-suggestionsAvailable', styles.suggestionsAvailable) }\r\n          >\r\n            { (!isLoading && !isSearching && suggestions && suggestions.length > 0 && suggestionsAvailableAlertText) ?\r\n              suggestionsAvailableAlertText : null\r\n            }\r\n          </span>)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns true if the event was handled, false otherwise\r\n   */\r\n  public tryHandleKeyDown = (keyCode: number, currentSuggestionIndex: number): boolean => {\r\n    let isEventHandled = false;\r\n    let newSelectedActionType = null;\r\n    const currentSelectedAction = this.state.selectedActionType;\r\n    const suggestionLength = this.props.suggestions.length;\r\n    if (keyCode === KeyCodes.down) {\r\n      switch (currentSelectedAction) {\r\n        case SuggestionActionType.forceResolve:\r\n          if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          } else if (this._searchForMoreButton.current) {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          } else {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          }\r\n          break;\r\n        case SuggestionActionType.searchMore:\r\n          if (this._forceResolveButton.current) {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          } else if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          } else {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          }\r\n          break;\r\n        case SuggestionActionType.none:\r\n          if (currentSuggestionIndex === -1 && this._forceResolveButton.current) {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          }\r\n          break;\r\n      }\r\n    } else if (keyCode === KeyCodes.up) {\r\n      switch (currentSelectedAction) {\r\n        case SuggestionActionType.forceResolve:\r\n          if (this._searchForMoreButton.current) {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          } else if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          }\r\n          break;\r\n        case SuggestionActionType.searchMore:\r\n          if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          } else if (this._forceResolveButton.current) {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          }\r\n          break;\r\n        case SuggestionActionType.none:\r\n          if (currentSuggestionIndex === -1 && this._searchForMoreButton.current) {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (newSelectedActionType !== null) {\r\n      this.setState({ selectedActionType: newSelectedActionType });\r\n      isEventHandled = true;\r\n    }\r\n\r\n    return isEventHandled;\r\n  }\r\n\r\n  public hasSuggestedAction(): boolean {\r\n    return this._searchForMoreButton.current !== undefined || this._forceResolveButton.current !== undefined;\r\n  }\r\n\r\n  public hasSuggestedActionSelected(): boolean {\r\n    return (this.state.selectedActionType !== SuggestionActionType.none);\r\n  }\r\n\r\n  public executeSelectedAction(): void {\r\n    switch (this.state.selectedActionType) {\r\n      case SuggestionActionType.forceResolve:\r\n        this._forceResolve();\r\n        break;\r\n      case SuggestionActionType.searchMore:\r\n        this._getMoreResults();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public focusAboveSuggestions(): void {\r\n    if (this._forceResolveButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\r\n    } else if (this._searchForMoreButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\r\n    }\r\n  }\r\n\r\n  public focusBelowSuggestions(): void {\r\n    if (this._searchForMoreButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\r\n    } else if (this._forceResolveButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\r\n    }\r\n  }\r\n\r\n  public focusSearchForMoreButton(): void {\r\n    if (this._searchForMoreButton.current) {\r\n      this._searchForMoreButton.current.focus();\r\n    }\r\n  }\r\n\r\n  // TODO get the element to scroll into view properly regardless of direction.\r\n  public scrollSelected(): void {\r\n    if (this._selectedElement.current && this._selectedElement.current.scrollIntoView !== undefined) {\r\n      this._selectedElement.current.scrollIntoView(false);\r\n    }\r\n  }\r\n\r\n  private _renderSuggestions(): JSX.Element {\r\n    const {\r\n      onRenderSuggestion,\r\n      removeSuggestionAriaLabel,\r\n      suggestionsItemClassName,\r\n      resultsMaximumNumber,\r\n      showRemoveButtons,\r\n      suggestionsContainerAriaLabel } = this.props;\r\n    let { suggestions } = this.props;\r\n    const TypedSuggestionsItem = this.SuggestionsItemOfProperType;\r\n\r\n    if (resultsMaximumNumber) {\r\n      suggestions = suggestions.slice(0, resultsMaximumNumber);\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={ css('ms-Suggestions-container', styles.suggestionsContainer) }\r\n        id='suggestion-list'\r\n        role='list'\r\n        aria-label={ suggestionsContainerAriaLabel }\r\n      >\r\n        { suggestions.map((suggestion, index) =>\r\n          <div\r\n            ref={ suggestion.selected ? this._selectedElement : '' }\r\n            // tslint:disable-next-line:no-string-literal\r\n            key={ (suggestion.item as any)['key'] ? (suggestion.item as any)['key'] : index }\r\n            id={ 'sug-' + index }\r\n            role='listitem'\r\n            aria-label={ suggestion.ariaLabel }\r\n          >\r\n            <TypedSuggestionsItem\r\n              id={ 'sug-item' + index }\r\n              suggestionModel={ suggestion }\r\n              RenderSuggestion={ onRenderSuggestion as any }\r\n              onClick={ this._onClickTypedSuggestionsItem(suggestion.item, index) }\r\n              className={ suggestionsItemClassName }\r\n              showRemoveButton={ showRemoveButtons }\r\n              removeButtonAriaLabel={ removeSuggestionAriaLabel }\r\n              onRemoveItem={ this._onRemoveTypedSuggestionsItem(suggestion.item, index) }\r\n            />\r\n          </div>) }\r\n      </div>);\r\n  }\r\n\r\n  private _getMoreResults = (): void => {\r\n    if (this.props.onGetMoreResults) {\r\n      this.props.onGetMoreResults();\r\n    }\r\n  }\r\n\r\n  private _forceResolve = (): void => {\r\n    if (this.props.createGenericItem) {\r\n      this.props.createGenericItem();\r\n    }\r\n  }\r\n\r\n  private _shouldShowForceResolve = (): boolean => {\r\n    return this.props.showForceResolve ? this.props.showForceResolve() : false;\r\n  }\r\n\r\n  private _onClickTypedSuggestionsItem = (item: T, index: number): (ev: React.MouseEvent<HTMLElement>) => void => {\r\n    return (ev: React.MouseEvent<HTMLElement>): void => {\r\n      this.props.onSuggestionClick(ev, item, index);\r\n    };\r\n  }\r\n\r\n  private _refocusOnSuggestions = (keyCode: number): void => {\r\n    if (typeof this.props.refocusSuggestions === 'function') {\r\n      this.props.refocusSuggestions(keyCode);\r\n    }\r\n  }\r\n\r\n  private _onRemoveTypedSuggestionsItem = (item: T, index: number): (ev: React.MouseEvent<HTMLElement>) => void => {\r\n    return (ev: React.MouseEvent<HTMLElement>): void => {\r\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\r\n      onSuggestionRemove(ev, item, index);\r\n      ev.stopPropagation();\r\n    };\r\n  }\r\n}\r\n"]}