{"version":3,"file":"ActivityItem.js","sourceRoot":"../src/","sources":["components/ActivityItem/ActivityItem.tsx"],"names":[],"mappings":"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","sourcesContent":["\r\nimport * as React from 'react';\r\nimport { BaseComponent } from '../../Utilities';\r\nimport { IActivityItemProps } from './ActivityItem.types';\r\nimport { IActivityItemClassNames, getClassNames } from './ActivityItem.classNames';\r\nimport { getStyles } from './ActivityItem.styles';\r\nimport { PersonaSize, PersonaCoin, IPersonaSharedProps, IPersonaCoinProps } from '../../Persona';\r\n\r\ntype OptionalReactKey = { key?: React.Key };\r\n\r\nexport class ActivityItem extends BaseComponent<IActivityItemProps, {}> {\r\n\r\n  constructor(props: IActivityItemProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      onRenderIcon = this._onRenderIcon,\r\n      onRenderActivityDescription = this._onRenderActivityDescription,\r\n      onRenderComments = this._onRenderComments,\r\n      onRenderTimeStamp = this._onRenderTimeStamp,\r\n      animateBeaconSignal,\r\n      isCompact\r\n    } = this.props;\r\n\r\n    const classNames = this._getClassNames(this.props);\r\n\r\n    return (\r\n      <div className={ classNames.root } style={ this.props.style } >\r\n\r\n        { (this.props.activityPersonas || this.props.activityIcon || this.props.onRenderIcon) &&\r\n          <div className={ classNames.activityTypeIcon }>\r\n            { animateBeaconSignal && isCompact &&\r\n              <div className={ classNames.pulsingBeacon } />\r\n            }\r\n            { onRenderIcon(this.props) }\r\n          </div>\r\n        }\r\n\r\n        <div className={ classNames.activityContent }>\r\n          { onRenderActivityDescription(this.props, this._onRenderActivityDescription) }\r\n          { onRenderComments(this.props, this._onRenderComments) }\r\n          { onRenderTimeStamp(this.props, this._onRenderTimeStamp) }\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderIcon = (props: IActivityItemProps): JSX.Element | React.ReactNode | null => {\r\n    if (props.activityPersonas) {\r\n      return this._onRenderPersonaArray(props);\r\n    } else {\r\n      return this.props.activityIcon;\r\n    }\r\n  }\r\n\r\n  private _onRenderActivityDescription = (props: IActivityItemProps): JSX.Element | null => {\r\n    const classNames = this._getClassNames(props);\r\n\r\n    const activityDescription = props.activityDescription || props.activityDescriptionText;\r\n\r\n    if (activityDescription) {\r\n      return (<span className={ classNames.activityText }>{ activityDescription }</span>);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _onRenderComments = (props: IActivityItemProps): JSX.Element | null => {\r\n    const classNames = this._getClassNames(props);\r\n\r\n    const comments = props.comments || props.commentText;\r\n\r\n    if (!props.isCompact && comments) {\r\n      return (<div className={ classNames.commentText }>{ comments }</div>);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _onRenderTimeStamp = (props: IActivityItemProps): JSX.Element | null => {\r\n    const classNames = this._getClassNames(props);\r\n\r\n    if (!props.isCompact && props.timeStamp) {\r\n      return (<div className={ classNames.timeStamp }>{ props.timeStamp }</div>);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // If activityPersonas is an array of persona props, build the persona cluster element.\r\n  private _onRenderPersonaArray = (props: IActivityItemProps): JSX.Element | null => {\r\n    const classNames = this._getClassNames(props);\r\n\r\n    let personaElement: JSX.Element | null = null;\r\n    const activityPersonas = props.activityPersonas as Array<IPersonaSharedProps & OptionalReactKey>;\r\n    if (activityPersonas[0].imageUrl || activityPersonas[0].imageInitials) {\r\n      const personaList: Array<JSX.Element> = [];\r\n      const showSize16Personas = (activityPersonas.length > 1 || props.isCompact);\r\n      const personaLimit = props.isCompact ? 3 : 4;\r\n      let style: React.CSSProperties | undefined = undefined;\r\n      if (props.isCompact) {\r\n        style = {\r\n          display: 'inline-block',\r\n          width: '10px',\r\n          minWidth: '10px',\r\n          overflow: 'visible'\r\n        };\r\n      }\r\n      activityPersonas\r\n        .filter((person: IPersonaCoinProps & OptionalReactKey, index: number) => index < personaLimit)\r\n        .forEach((person: IPersonaCoinProps & OptionalReactKey, index: number) => {\r\n          personaList.push(\r\n            <PersonaCoin\r\n              { ...person }\r\n              // tslint:disable-next-line:no-string-literal\r\n              key={ person['key'] ? person['key'] : index }\r\n              className={ classNames.activityPersona }\r\n              size={ showSize16Personas ? PersonaSize.size16 : PersonaSize.size32 }\r\n              style={ style }\r\n            />\r\n          );\r\n        });\r\n      personaElement = <div className={ classNames.personaContainer }>{ personaList }</div>;\r\n    }\r\n    return personaElement;\r\n  }\r\n\r\n  private _getClassNames(props: IActivityItemProps): IActivityItemClassNames {\r\n    return getClassNames(getStyles(\r\n      undefined,\r\n      props.styles,\r\n      props.animateBeaconSignal,\r\n      props.beaconColorOne,\r\n      props.beaconColorTwo,\r\n      props.isCompact\r\n    ), props.className!, props.activityPersonas!, props.isCompact!);\r\n  }\r\n}\r\n"]}