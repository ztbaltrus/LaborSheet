{"version":3,"file":"ChoiceGroup.Custom.Example.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/examples/ChoiceGroup.Custom.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,sEAAqE;AACrE,kEAA2D;AAC3D,gEAA+D;AAE/D,gEAAkE;AAClE,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC;IAA8C,oDAAe;IAA7D;QAAA,qEAyDC;QAHS,eAAS,GAAG,UAAC,EAAqC,EAAE,MAAW;YACrE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAA;;IACH,CAAC;IAvDQ,yCAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,yBAAW,IACV,kBAAkB,EAAC,GAAG,EACtB,OAAO,EAAG;oBACR;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,oCAAoC;wBAC1C,aAAa,EAAE,UAAC,KAAK,EAAE,MAAM;4BAC3B,OAAO,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gCAC7B,MAAO,CAAC,KAAK,CAAC;gCAChB,oBAAC,mBAAQ,IACP,SAAS,EAAG,eAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAChC,kBAAkB,EAAC,GAAG,EACtB,OAAO,EACL;wCACE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE;wCAC/B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;wCAChC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;qCACjC,EAEH,QAAQ,EAAG,KAAK,GAChB,CACE,CACP,CAAC;wBACJ,CAAC;qBACF;oBACD;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;qBACjB;oBACD;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,IAAI;qBACf;oBACD;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,KAAK;qBAChB;iBACF,EACD,QAAQ,EAAG,IAAI,CAAC,SAAS,EACzB,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf,CACE,CACP,CAAC;IACJ,CAAC;IAKH,+BAAC;AAAD,CAAC,AAzDD,CAA8C,KAAK,CAAC,SAAS,GAyD5D;AAzDY,4DAAwB","sourcesContent":["import * as React from 'react';\r\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\nimport * as stylesImport from './ChoiceGroup.Custom.Example.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport class ChoiceGroupCustomExample extends React.Component {\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <ChoiceGroup\r\n          defaultSelectedKey='B'\r\n          options={ [\r\n            {\r\n              key: 'A',\r\n              text: 'Mark displayed items as read after',\r\n              onRenderField: (props, render) => {\r\n                return (\r\n                  <div className={ css(styles.root) }>\r\n                    { render!(props) }\r\n                    <Dropdown\r\n                      className={ css(styles.dropdown) }\r\n                      defaultSelectedKey='A'\r\n                      options={\r\n                        [\r\n                          { key: 'A', text: '5 seconds' },\r\n                          { key: 'B', text: '10 seconds' },\r\n                          { key: 'C', text: '20 seconds' }\r\n                        ]\r\n                      }\r\n                      disabled={ false }\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            },\r\n            {\r\n              key: 'B',\r\n              text: 'Option B',\r\n            },\r\n            {\r\n              key: 'C',\r\n              text: 'Option C',\r\n              disabled: true\r\n            },\r\n            {\r\n              key: 'D',\r\n              text: 'Option D',\r\n              disabled: false\r\n            }\r\n          ] }\r\n          onChange={ this._onChange }\r\n          label='Pick one'\r\n          required={ true }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onChange = (ev: React.FormEvent<HTMLInputElement>, option: any): void => {\r\n    console.dir(option);\r\n  }\r\n}\r\n"]}