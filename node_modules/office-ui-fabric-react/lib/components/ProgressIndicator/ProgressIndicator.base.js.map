{"version":3,"file":"ProgressIndicator.base.js","sourceRoot":"../src/","sources":["components/ProgressIndicator/ProgressIndicator.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  classNamesFunction,\r\n  customizable,\r\n} from '../../Utilities';\r\nimport {\r\n  IProgressIndicatorProps,\r\n  IProgressIndicatorStyleProps,\r\n  IProgressIndicatorStyles,\r\n} from './ProgressIndicator.types';\r\n\r\nconst getClassNames = classNamesFunction<IProgressIndicatorStyleProps, IProgressIndicatorStyles>();\r\n\r\n// if the percentComplete is near 0, don't animate it.\r\n// This prevents animations on reset to 0 scenarios\r\nconst ZERO_THRESHOLD = 0.01;\r\n\r\n/**\r\n* ProgressIndicator with no default styles.\r\n* [Use the `getStyles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n*/\r\n@customizable('ProgressIndicator', ['theme'])\r\nexport class ProgressIndicatorBase extends BaseComponent<IProgressIndicatorProps, {}> {\r\n  public static defaultProps = {\r\n    label: '',\r\n    description: '',\r\n    width: 180\r\n  };\r\n\r\n  constructor(props: IProgressIndicatorProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      title: 'label'\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      barHeight,\r\n      className,\r\n      label = this.props.title, // Fall back to deprecated value.\r\n      description,\r\n      getStyles,\r\n      theme,\r\n      progressHidden,\r\n      onRenderProgress = this._onRenderProgress\r\n    } = this.props;\r\n\r\n    const percentComplete = typeof this.props.percentComplete === 'number' ?\r\n      Math.min(100, Math.max(0, this.props.percentComplete * 100)) :\r\n      undefined;\r\n\r\n    const classNames = getClassNames(getStyles, {\r\n      theme: theme!,\r\n      className,\r\n      barHeight,\r\n      indeterminate: percentComplete === undefined ? true : false,\r\n    });\r\n\r\n    return (\r\n      <div className={ classNames.root }>\r\n        {\r\n          label ? (\r\n            <div className={ classNames.itemName }>{ label }</div>\r\n          ) : null\r\n        }\r\n        {\r\n          !progressHidden ? onRenderProgress({\r\n            ...(this.props as IProgressIndicatorProps),\r\n            percentComplete: percentComplete\r\n          }, this._onRenderProgress) : null\r\n        }\r\n        {\r\n          description ? (\r\n            <div className={ classNames.itemDescription }>{ description }</div>\r\n          ) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderProgress = (props: IProgressIndicatorProps): JSX.Element => {\r\n    const {\r\n      ariaValueText,\r\n      barHeight,\r\n      className,\r\n      getStyles,\r\n      theme,\r\n    } = this.props;\r\n\r\n    const percentComplete = typeof this.props.percentComplete === 'number' ?\r\n      Math.min(100, Math.max(0, this.props.percentComplete * 100)) :\r\n      undefined;\r\n\r\n    const classNames = getClassNames(getStyles, {\r\n      theme: theme!,\r\n      className,\r\n      barHeight,\r\n      indeterminate: percentComplete === undefined ? true : false,\r\n    });\r\n\r\n    const progressBarStyles = {\r\n      width: percentComplete !== undefined ? percentComplete + '%' : undefined,\r\n      transition: (percentComplete !== undefined && percentComplete < ZERO_THRESHOLD) ? 'none' : undefined,\r\n    };\r\n\r\n    const ariaValueMin = percentComplete !== undefined ? 0 : undefined;\r\n    const ariaValueMax = percentComplete !== undefined ? 100 : undefined;\r\n    const ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete!) : undefined;\r\n\r\n    return (\r\n      <div className={ classNames.itemProgress }>\r\n        <div className={ classNames.progressTrack } />\r\n        <div\r\n          className={ classNames.progressBar }\r\n          style={ progressBarStyles }\r\n          role='progressbar'\r\n          aria-valuemin={ ariaValueMin }\r\n          aria-valuemax={ ariaValueMax }\r\n          aria-valuenow={ ariaValueNow }\r\n          aria-valuetext={ ariaValueText }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}