{"version":3,"file":"Button.Split.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { css, classNamesFunction } from '../../../Utilities';\r\nimport {\r\n  getStyles,\r\n  IButtonBasicExampleStyleProps,\r\n  IButtonBasicExampleStyles\r\n} from './Button.Basic.Example.styles';\r\nimport { DefaultButton, IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { getCustomSplitButtonStyles } from './Button.Split.Example.styles';\r\n\r\nconst alertClicked = (): void => {\r\n  alert('Clicked');\r\n};\r\n\r\nexport class ButtonSplitExample extends React.Component<IButtonProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { disabled, checked } = this.props;\r\n\r\n    const getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\r\n    const classNames = getClassNames(getStyles);\r\n\r\n    return (\r\n      <div className={ css(classNames.twoup) }>\r\n        <div>\r\n          <Label>Standard</Label>\r\n          <DefaultButton\r\n            data-automation-id='test'\r\n            disabled={ disabled }\r\n            checked={ checked }\r\n            text='Create account'\r\n            onClick={ alertClicked }\r\n            split={ true }\r\n            splitButtonAriaLabel={ 'See 2 sample options' }\r\n            style={ { height: '35px' } }\r\n            menuProps={ {\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  name: 'Email message',\r\n                  icon: 'Mail'\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  name: 'Calendar event',\r\n                  icon: 'Calendar'\r\n                }\r\n              ]\r\n            } }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>Primary</Label>\r\n          <DefaultButton\r\n            primary\r\n            data-automation-id='test'\r\n            disabled={ disabled }\r\n            checked={ checked }\r\n            text='Create account'\r\n            onClick={ alertClicked }\r\n            split={ true }\r\n            style={ { height: '35px' } }\r\n            menuProps={ {\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  name: 'Email message',\r\n                  icon: 'Mail'\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  name: 'Calendar event',\r\n                  icon: 'Calendar'\r\n                }\r\n              ]\r\n            } }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>Primary Action Disabled</Label>\r\n          <DefaultButton\r\n            primary\r\n            data-automation-id='test'\r\n            disabled={ disabled }\r\n            primaryDisabled={ true }\r\n            checked={ checked }\r\n            text='Create account'\r\n            onClick={ alertClicked }\r\n            split={ true }\r\n            style={ { height: '35px' } }\r\n            menuProps={ {\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  name: 'Email message',\r\n                  icon: 'Mail'\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  name: 'Calendar event',\r\n                  icon: 'Calendar'\r\n                }\r\n              ]\r\n            } }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>Button Disabled</Label>\r\n          <DefaultButton\r\n            primary\r\n            data-automation-id='test'\r\n            disabled={ true }\r\n            checked={ checked }\r\n            text='Create account'\r\n            onClick={ alertClicked }\r\n            split={ true }\r\n            style={ { height: '35px' } }\r\n            menuProps={ {\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  name: 'Email message',\r\n                  icon: 'Mail'\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  name: 'Calendar event',\r\n                  icon: 'Calendar'\r\n                }\r\n              ]\r\n            } }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { disabled, checked } = this.props;\r\n    const customSplitButtonStyles = getCustomSplitButtonStyles();\r\n\r\n    return (\r\n      <div>\r\n        <Label>Split button with icon and custom styles</Label>\r\n        <IconButton\r\n          data-automation-id='test'\r\n          disabled={ disabled }\r\n          checked={ checked }\r\n          iconProps={ { iconName: 'Upload' } }\r\n          text='Create account'\r\n          onClick={ alertClicked }\r\n          split={ true }\r\n          styles={ customSplitButtonStyles }\r\n          menuProps={ {\r\n            items: [\r\n              {\r\n                key: 'emailMessage',\r\n                name: 'Email message',\r\n                icon: 'Mail'\r\n              },\r\n              {\r\n                key: 'calendarEvent',\r\n                name: 'Calendar event',\r\n                icon: 'Calendar'\r\n              }\r\n            ]\r\n          } }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}