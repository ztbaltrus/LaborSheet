{"version":3,"file":"IconPage.js","sourceRoot":"../src/","sources":["components/Icon/IconPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAMoC;AACpC,oEAAiE;AACjE,gEAA6D;AAC7D,oEAAiE;AACjE,8EAA2E;AAC3E,8EAA6E;AAC7E,mDAA8C;AAE9C,IAAM,oBAAoB,GAAG,OAAO,CAAC,wFAAwF,CAAW,CAAC;AACzI,IAAM,kBAAkB,GAAG,OAAO,CAAC,sFAAsF,CAAW,CAAC;AACrI,IAAM,oBAAoB,GAAG,OAAO,CAAC,wFAAwF,CAAW,CAAC;AACzI,IAAM,yBAAyB,GAAG,OAAO,CAAC,6FAA6F,CAAW,CAAC;AAEnJ;IAA8B,oCAA4C;IAA1E;;IA0DA,CAAC;IAzDQ,yBAAM,GAAb;QACE,OAAO,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,MAAM,EACZ,aAAa,EAAC,aAAa,EAC3B,YAAY,EAAC,qHAAqH,EAClI,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAG,oBAAoB;oBACnD,oBAAC,qCAAgB,OAAG,CACR;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,oBAAoB;oBACrE,oBAAC,qCAAgB,OAAG,CACR;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,uBAAuB,EAAC,IAAI,EAAG,kBAAkB;oBAClE,oBAAC,iCAAc,OAAG,CACN;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,yBAAyB;oBAC1E,oBAAC,+CAAqB,OAAG,CACb,CACV,EAER,gBAAgB,EAAG,IAAI,EACvB,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,sEAAsE,CAAC;iBACxF,GACD,EAEJ,QAAQ,EACN,oBAAC,+BAAY,QACT,OAAO,CAAS,6EAA6E,CAAC,CACnF,EAEjB,aAAa,EACX,gCAAO,EAET,GAAG,EACD,oBAAC,+BAAY,QACT,OAAO,CAAS,wEAAwE,CAAC,CAC9E,EAEjB,KAAK,EACH,oBAAC,+BAAY,QACT,OAAO,CAAS,0EAA0E,CAAC,CAChF,EAEjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAC5C,eAAe,EACb,oBAAC,iCAAe,uBACT,2BAAU,EACf,GAEJ,CACH,CAAC;IACJ,CAAC;IACH,eAAC;AAAD,CAAC,AA1DD,CAA8B,KAAK,CAAC,SAAS,GA0D5C;AA1DY,4BAAQ","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  IComponentDemoPageProps,\r\n  ComponentPage,\r\n  PageMarkdown,\r\n  PropertiesTableSet\r\n} from '@uifabric/example-app-base';\r\nimport { IconBasicExample } from './examples/Icon.Basic.Example';\r\nimport { IconSvgExample } from './examples/Icon.Svg.Example';\r\nimport { IconColorExample } from './examples/Icon.Color.Example';\r\nimport { IconImageSheetExample } from './examples/Icon.ImageSheet.Example';\r\nimport { ComponentStatus } from '../../demo/ComponentStatus/ComponentStatus';\r\nimport { IconStatus } from './Icon.checklist';\r\n\r\nconst IconBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Basic.Example.tsx') as string;\r\nconst IconSvgExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Svg.Example.tsx') as string;\r\nconst IconColorExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.Color.Example.tsx') as string;\r\nconst IconImageSheetExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Icon/examples/Icon.ImageSheet.Example.tsx') as string;\r\n\r\nexport class IconPage extends React.Component<IComponentDemoPageProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ComponentPage\r\n        title='Icon'\r\n        componentName='IconExample'\r\n        componentUrl='https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Icon'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Icon' code={ IconBasicExampleCode }>\r\n              <IconBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Icon with custom color' code={ IconColorExampleCode }>\r\n              <IconColorExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Icon using custom svg' code={ IconSvgExampleCode }>\r\n              <IconSvgExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Icon using image sheet' code={ IconImageSheetExampleCode }>\r\n              <IconImageSheetExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        allowNativeProps={ true }\r\n        propertiesTables={\r\n          <PropertiesTableSet\r\n            sources={ [\r\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Icon/Icon.types.ts')\r\n            ] }\r\n          />\r\n        }\r\n        overview={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Icon/docs/IconOverview.md') }\r\n          </PageMarkdown>\r\n        }\r\n        bestPractices={\r\n          <div />\r\n        }\r\n        dos={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Icon/docs/IconDos.md') }\r\n          </PageMarkdown>\r\n        }\r\n        donts={\r\n          <PageMarkdown>\r\n            { require<string>('!raw-loader!office-ui-fabric-react/src/components/Icon/docs/IconDonts.md') }\r\n          </PageMarkdown>\r\n        }\r\n        isHeaderVisible={ this.props.isHeaderVisible }\r\n        componentStatus={\r\n          <ComponentStatus\r\n            { ...IconStatus }\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n"]}