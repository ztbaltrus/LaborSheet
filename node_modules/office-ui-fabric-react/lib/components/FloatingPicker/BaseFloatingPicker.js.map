{"version":3,"file":"BaseFloatingPicker.js","sourceRoot":"../src/","sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  getRTL,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { Callout, DirectionalHint } from '../../Callout';\r\nimport { ISuggestionModel }\r\n  from '../../Pickers';\r\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps, IBaseFloatingPickerSuggestionProps } from './BaseFloatingPicker.types';\r\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\r\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\r\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\r\nimport * as stylesImport from './BaseFloatingPicker.scss';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBaseFloatingPickerState {\r\n  queryString: string;\r\n  suggestedDisplayValue?: string;\r\n  moreSuggestionsAvailable?: boolean;\r\n  isMostRecentlyUsedVisible?: boolean;\r\n  suggestionsVisible?: boolean;\r\n  suggestionsLoading?: boolean;\r\n  isResultsFooterVisible?: boolean;\r\n  didBind: boolean;\r\n}\r\n\r\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>> extends BaseComponent<P, IBaseFloatingPickerState>\r\n  implements IBaseFloatingPicker {\r\n  protected selection: Selection;\r\n\r\n  protected root = createRef<HTMLDivElement>();\r\n  protected suggestionStore: SuggestionsStore<T>;\r\n  protected suggestionsControl: SuggestionsControl<T>;\r\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T> =\r\n    SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\r\n  protected loadingTimer: number | undefined;\r\n  // tslint:disable-next-line:no-any\r\n  protected currentPromise: PromiseLike<any>;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    this.suggestionStore = basePickerProps.suggestionsStore;\r\n    this.state = {\r\n      queryString: '',\r\n      suggestedDisplayValue: '',\r\n      isMostRecentlyUsedVisible: false,\r\n      moreSuggestionsAvailable: false,\r\n      didBind: false,\r\n    };\r\n  }\r\n\r\n  public get inputText(): string {\r\n    return this.state.queryString;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public get suggestions(): any[] {\r\n    return this.suggestionStore.suggestions;\r\n  }\r\n\r\n  public forceResolveSuggestion(): void {\r\n    if (this.suggestionsControl && this.suggestionsControl.hasSuggestionSelected()) {\r\n      this.completeSuggestion();\r\n    } else {\r\n      this._onValidateInput();\r\n    }\r\n  }\r\n\r\n  public get isSuggestionsShown(): boolean {\r\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\r\n  }\r\n\r\n  public onQueryStringChanged = (queryString: string): void => {\r\n    if (queryString !== this.state.queryString) {\r\n      this.setState({\r\n        queryString: queryString,\r\n        moreSuggestionsAvailable: true,\r\n        isMostRecentlyUsedVisible: false,\r\n      });\r\n\r\n      this.showPicker();\r\n\r\n      if (queryString === '') {\r\n        this.updateSuggestionWithZeroState();\r\n      } else {\r\n        this.updateValue(queryString);\r\n      }\r\n    }\r\n  }\r\n\r\n  public hidePicker = (): void => {\r\n    if (this.props.onSuggestionsHidden && this.isSuggestionsShown) {\r\n      this.props.onSuggestionsHidden();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: false,\r\n    });\r\n  }\r\n\r\n  public showPicker = (updateValue: boolean = false): void => {\r\n    if (this.props.onSuggestionsShown && !this.isSuggestionsShown) {\r\n      this.props.onSuggestionsShown();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: true,\r\n    });\r\n\r\n    // If updateValue AND\r\n    //  Either suggestionsVisible is undefined (first time the suggestions is set to visble)\r\n    //  OR the inputElement value is different than the query string\r\n    if (updateValue &&\r\n      (this.state.suggestionsVisible === undefined\r\n        || (this.props.inputElement && this.props.inputElement.value !== this.state.queryString))) {\r\n      if (this.state.queryString === '') {\r\n        this.updateSuggestionWithZeroState();\r\n      } else {\r\n        this.updateValue(this.state.queryString);\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._bindToInputElement();\r\n\r\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    this._bindToInputElement();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._unbindFromInputElement();\r\n  }\r\n\r\n  public completeSuggestion = (): void => {\r\n    if (this.suggestionsControl && this.suggestionsControl.hasSuggestionSelected()) {\r\n      this.onChange(this.suggestionsControl.currentSuggestion!.item);\r\n    }\r\n  }\r\n\r\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\r\n    this.suggestionStore.updateSuggestions(suggestions);\r\n\r\n    if (forceUpdate) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className } = this.props;\r\n    return (\r\n      <div\r\n        ref={ this.root }\r\n        className={ css('ms-BasePicker', className ? className : '') }\r\n      >\r\n        { this.renderSuggestions() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element | null {\r\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\r\n    return this.state.suggestionsVisible ? (\r\n      <Callout\r\n        className={ styles.callout }\r\n        isBeakVisible={ false }\r\n        gapSpace={ 5 }\r\n        target={ this.props.inputElement }\r\n        onDismiss={ this.hidePicker }\r\n        directionalHint={\r\n          getRTL() ? (\r\n            DirectionalHint.bottomRightEdge\r\n          ) : (\r\n              DirectionalHint.bottomLeftEdge\r\n            )\r\n        }\r\n        calloutWidth={ this.props.calloutWidth ? this.props.calloutWidth : 0 }\r\n      >\r\n        <TypedSuggestionsControl\r\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\r\n          onSuggestionClick={ this.onSuggestionClick }\r\n          onSuggestionRemove={ this.onSuggestionRemove }\r\n          suggestions={ this.suggestionStore.getSuggestions() }\r\n          ref={ this._resolveRef('suggestionsControl') }\r\n          completeSuggestion={ this.completeSuggestion }\r\n          shouldLoopSelection={ false }\r\n          { ...this.props.pickerSuggestionsProps as IBaseFloatingPickerSuggestionProps }\r\n        />\r\n      </Callout>\r\n    ) : null;\r\n  }\r\n\r\n  protected onSuggestionSelect(): void {\r\n    if (this.suggestionsControl && this.suggestionsControl.currentSuggestion) {\r\n      const currentValue: string = this.state.queryString;\r\n      const itemValue: string = this._getTextFromItem(\r\n        this.suggestionsControl.currentSuggestion.item,\r\n        currentValue\r\n      );\r\n      this.setState({ suggestedDisplayValue: itemValue });\r\n    }\r\n  }\r\n\r\n  protected onSelectionChange(): void {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected updateValue(updatedValue: string): void {\r\n    if (this.props.onInputChanged) {\r\n      (this.props.onInputChanged as (filter: string) => void)(updatedValue);\r\n    }\r\n\r\n    this._onResolveSuggestions(updatedValue);\r\n  }\r\n\r\n  protected updateSuggestionWithZeroState(): void {\r\n    if (this.props.onZeroQuerySuggestion) {\r\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\r\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\r\n      this.updateSuggestionsList(suggestions);\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  protected updateSuggestionsList(\r\n    suggestions: T[] | PromiseLike<T[]>,\r\n    updatedValue?: string\r\n  ): void {\r\n    const suggestionsArray: T[] = suggestions as T[];\r\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<\r\n      T[]\r\n      >;\r\n\r\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\r\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\r\n    if (Array.isArray(suggestionsArray)) {\r\n      if (updatedValue !== undefined) {\r\n        this.resolveNewValue(updatedValue, suggestionsArray);\r\n      } else {\r\n        this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\r\n      }\r\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\r\n      this.setState({\r\n        suggestionsLoading: true\r\n      });\r\n\r\n      this._updateSuggestionsVisible(updatedValue !== undefined && updatedValue !== '');\r\n\r\n      // Ensure that the promise will only use the callback if it was the most recent one.\r\n      const promise: PromiseLike<\r\n        T[]\r\n        > = (this.currentPromise = suggestionsPromiseLike);\r\n      promise.then((newSuggestions: T[]) => {\r\n        if (promise === this.currentPromise) {\r\n          if (updatedValue !== undefined) {\r\n            this.resolveNewValue(updatedValue, newSuggestions);\r\n          } else {\r\n            this.updateSuggestions(newSuggestions);\r\n            this.setState({\r\n              suggestionsLoading: false\r\n            });\r\n\r\n            this._updateSuggestionsVisible(newSuggestions.length > 0);\r\n          }\r\n          if (this.loadingTimer) {\r\n            this._async.clearTimeout(this.loadingTimer);\r\n            this.loadingTimer = undefined;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected resolveNewValue(updatedValue: string, suggestions: T[]): void {\r\n    this.updateSuggestions(suggestions);\r\n    let itemValue: string | undefined = undefined;\r\n\r\n    if (this.suggestionsControl && this.suggestionsControl.currentSuggestion) {\r\n      itemValue = this._getTextFromItem(\r\n        this.suggestionsControl.currentSuggestion.item,\r\n        updatedValue\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsLoading: false,\r\n      suggestedDisplayValue: itemValue\r\n    });\r\n\r\n    this._updateSuggestionsVisible(updatedValue !== '');\r\n  }\r\n\r\n  protected onChange(item: T): void {\r\n    if (this.props.onChange) {\r\n      (this.props.onChange as ((items: T) => void))(item);\r\n    }\r\n  }\r\n\r\n  protected onSuggestionClick = (\r\n    ev: React.MouseEvent<HTMLElement>,\r\n    item: T,\r\n    index: number\r\n  ): void => {\r\n    this.onChange(item);\r\n  }\r\n\r\n  protected onSuggestionRemove = (\r\n    ev: React.MouseEvent<HTMLElement>,\r\n    item: T,\r\n    index: number\r\n  ): void => {\r\n    if (this.props.onRemoveSuggestion) {\r\n      (this.props.onRemoveSuggestion as ((item: T) => void))(item);\r\n    }\r\n\r\n    if (this.suggestionsControl) {\r\n      this.suggestionsControl.removeSuggestion(index);\r\n    }\r\n  }\r\n\r\n  protected onKeyDown = (ev: MouseEvent): void => {\r\n    if (!this.state.suggestionsVisible ||\r\n      (this.props.inputElement &&\r\n        !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))) {\r\n      return;\r\n    }\r\n    const keyCode = ev.which;\r\n    switch (keyCode) {\r\n      case KeyCodes.escape:\r\n        this.hidePicker();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n      case KeyCodes.enter:\r\n        if (!ev.shiftKey &&\r\n          !ev.ctrlKey &&\r\n          this.suggestionsControl &&\r\n          this.suggestionsControl.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        } else {\r\n          this._onValidateInput();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.del:\r\n        if (this.props.onRemoveSuggestion\r\n          && this.suggestionsControl\r\n          && this.suggestionsControl.hasSuggestionSelected\r\n          && this.suggestionsControl.currentSuggestion) {\r\n          (this.props.onRemoveSuggestion as ((item: T) => void))(\r\n            this.suggestionsControl.currentSuggestion!.item\r\n          );\r\n\r\n          this.suggestionsControl.removeSuggestion();\r\n          this.forceUpdate();\r\n        }\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (this.suggestionsControl && this.suggestionsControl.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (this.suggestionsControl && this.suggestionsControl.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onResolveSuggestions(updatedValue: string): void {\r\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\r\n\r\n    if (suggestions !== null) {\r\n      this.updateSuggestionsList(suggestions, updatedValue);\r\n    }\r\n  }\r\n\r\n  private _onValidateInput = (): void => {\r\n    if (\r\n      this.state.queryString &&\r\n      this.props.onValidateInput &&\r\n      this.props.createGenericItem\r\n    ) {\r\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as ((\r\n        input: string,\r\n        isValid: boolean\r\n      ) => ISuggestionModel<T>))(\r\n        this.state.queryString,\r\n        (this.props.onValidateInput as ((input: string) => boolean))(this.state.queryString)\r\n      );\r\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\r\n      this.onChange(convertedItems[0].item);\r\n    }\r\n  }\r\n\r\n  private _getTextFromItem(item: T, currentValue?: string): string {\r\n    if (this.props.getTextFromItem) {\r\n      return (this.props.getTextFromItem as ((item: T, currentValue?: string) => string))(item, currentValue);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\r\n    if (shouldShow) {\r\n      this.showPicker();\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  private _bindToInputElement(): void {\r\n    if (this.props.inputElement && !this.state.didBind) {\r\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: true });\r\n    }\r\n  }\r\n\r\n  private _unbindFromInputElement(): void {\r\n    if (this.props.inputElement && this.state.didBind) {\r\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: false });\r\n    }\r\n  }\r\n}"]}